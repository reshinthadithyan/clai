[{"invocation": "Return the files that are newer than file `myfile'", "cmd": "find / -newer myfile"}, {"invocation": "Find *log files/directories within a maximum of 3 levels of directories", "cmd": "find / -maxdepth 3  -name \"*log\""}, {"invocation": "find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.", "cmd": "find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}, {"invocation": "Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2", "cmd": "find Folder1 \\( ! -name 'Image*-70x70*' -a ! -name 'Image*-100x100*' \\) | xargs -i% cp -p % Folder2"}, {"invocation": "Create a symbolic link to \"$file\" named \"/tmp/allfiles\"", "cmd": "ln $file /tmp/allfiles"}, {"invocation": "Calculate the md5 sum of the tar archive of \"dir\"", "cmd": "tar c dir | md5sum"}, {"invocation": "Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names", "cmd": "find . -path ./.git -prune -o -not -name '*git*' -print |grep git"}, {"invocation": "Find out all hard links in the /home directory to file1", "cmd": "find /home -xdev -samefile file1"}, {"invocation": "Split \"hugefile.txt\" into files with 100000 lines each starting with \"part.\" and using numeric suffixes", "cmd": "split -a4 -d -l100000 hugefile.txt part."}, {"invocation": "Wrap each line in \"file.txt\" to fit in 80 characters", "cmd": "fold -w 80 file.txt"}, {"invocation": "find all the configuration or text files in current directory", "cmd": "find . -type f \\( -name \"*.conf\" -or -name \"*.txt\" \\) -print"}, {"invocation": "display all normal/regular files in current folder", "cmd": "find . -type f"}, {"invocation": "List any line in \"f1\" or \"f2\" which does not appear in the other and delete all tab characters in the output", "cmd": "comm -3 <(sort -un f1) <(sort -un f2) | tr -d '\\t'"}, {"invocation": "Print content of all files found regarding seach options '[whatever]'", "cmd": "find [whatever] -print0 | xargs -0 cat"}, {"invocation": "Remove all files that were older than 3 days", "cmd": "find . -type f -mtime +3 \u2013exec rm \u2013f {} \\;"}, {"invocation": "Remount \"/dev/sda7\" partition as executable", "cmd": "sudo mount -o remount -o exec /dev/sda7"}, {"invocation": "Find all files in your home directory and below that are exactly 100M.", "cmd": "find ~ -size 100M"}, {"invocation": "find all the file which name (name can contains space) end with c or h and content contain 'thing'", "cmd": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}, {"invocation": "Fix permissions for a group of files with given extension", "cmd": "find /usr/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}, {"invocation": "Print all files with a '-' after their name if they are regular files, and a '+' otherwise", "cmd": "find / -type f -exec echo {} - ';' -o -exec echo {} + ';'"}, {"invocation": "find all the files which start with the name \"Metallica\" in the folder \"/mp3-collection\" and which are bigger than 10MB", "cmd": "find /mp3-collection -name 'Metallica*' -and -size +10000k"}, {"invocation": "Archive directory \".\" to \"server2::sharename/B\"", "cmd": "rsync -av . server2::sharename/B"}, {"invocation": "Prints all child processes of a process with id 20238.", "cmd": "pstree -p 20238 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/'"}, {"invocation": "Find all regular files in the current directory and its subdirectories.", "cmd": "find . -type f"}, {"invocation": "delete all text files in the entire file system", "cmd": "find / -type f -name \"*.txt\" -print | xargs rm"}, {"invocation": "display all files in current folder with NULL separating each file", "cmd": "find . -print0"}, {"invocation": "Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'", "cmd": "find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;"}, {"invocation": "Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago", "cmd": "find /data1/realtime -mmin -60 -mmin +5 -type d"}, {"invocation": "Search for Subscription.java under current directory, and go to directory containing it.", "cmd": "cd \"$(find . -name Subscription.java -printf '%h\\n')\""}, {"invocation": "List directories under current directory", "cmd": "find . -type d"}, {"invocation": "Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2", "cmd": "find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2"}, {"invocation": "Removes empty folder 'edi' and 'edw'.", "cmd": "rmdir edi edw"}, {"invocation": "Delete all files beneath the current directory that begin with the letters 'Foo'.", "cmd": "find . -type f -name \"Foo*\" -exec rm {} \\;"}, {"invocation": "Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago", "cmd": "find /home/u20806/public_html -name \"robots.txt\" -o -maxdepth 1 -mmin +5 -type f -name \"*.txt\" -delete"}, {"invocation": "find StringBuffer in all *.java files, ignoring case", "cmd": "find . -type f -name \"*.java\" -exec grep -il string {} \\;"}, {"invocation": "List and remove all regular files named \"core\" that are larger than 500KB", "cmd": "find /prog -type f -size +1000 -print -name core -exec rm {} \\;"}, {"invocation": "display all normal/regular files in current folder in sorted order", "cmd": "find . -type f print0 | sort -r"}, {"invocation": "Recursively change \"/usr/local\" owner to the current user and group to admin", "cmd": "sudo chown -R $(whoami):admin /usr/local"}, {"invocation": "Find and list all regular files", "cmd": "find . -type f -ls"}, {"invocation": "Read a line from standard input with prompt \"Continue (y/n)?\" and save response in variable \"CONT\"", "cmd": "read -p \"Continue (y/n)?\" CONT"}, {"invocation": "Find all files/directories named 'photo.jpg' under current directory tree", "cmd": "find -name photo.jpg"}, {"invocation": "Print file names of all files ending with '*.csv' in  '/home/ABC/files/' directory", "cmd": "ls /home/ABC/files/*.csv | rev | cut -d/ -f1 | rev"}, {"invocation": "dispaly a long listig of all the files in the current folder which are bigger than 100KB", "cmd": "find . -size +100000 -ls"}, {"invocation": "display all the html files in the current folder that have been modified in the last 7*24 hours", "cmd": "find . -mtime -7 -name \"*.html\" -print"}, {"invocation": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'", "cmd": "diff -x '*.foo' -x '*.bar' -x '*.baz' /destination/dir/1 /destination/dir/2"}, {"invocation": "Prints the first N bytes of file.txt", "cmd": "head -c N file.txt"}, {"invocation": "Search the current directory up to depth level 2 for files and directories", "cmd": "find . -maxdepth 2"}, {"invocation": "Find every file/directory under the directory /home owned by the user joe", "cmd": "find /home -user joe"}, {"invocation": "Find all files/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem", "cmd": "find / -user root -name FindCommandExamples.txt"}, {"invocation": "Find all directories under /home/me", "cmd": "find /home/me -type d"}, {"invocation": "Find files starting with the word \"file\" in the current directory tree", "cmd": "find . -name \"file*\""}, {"invocation": "Wrap standard input to fit in 10 characters per line", "cmd": "fold -w 10"}, {"invocation": "Checks compressed file integrity.", "cmd": "bzip2 -t file.bz2"}, {"invocation": "Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html'", "cmd": "find . -type f -inum 31467125 -exec mv {} new_name.html \\;"}, {"invocation": "Print the list of all regular files residing in the current directory and below", "cmd": "find ./ -type f -print"}, {"invocation": "Treat each line of \"list-of-entries.txt\" as a value to be put in one cell of the table that \"column\" outputs", "cmd": "column list-of-entries.txt"}, {"invocation": "find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names)", "cmd": "find \"somedir\" -type l -print0"}, {"invocation": "Delete all hidden files under $some_directory", "cmd": "find \"$some_directory\" -type f -name '.*' -exec rm '{}' \\;"}, {"invocation": "Find all files and directories in the current directory tree except those whose name is \"dirname\", case insensitive", "cmd": "find ./ -iname ! -iname dirname"}, {"invocation": "Run \"./configure\" with a new environment variable CC set to the full path of the command 'gcc'", "cmd": "CC=$(which gcc) ./configure"}, {"invocation": "Locate all *.txt files in the current directory tree", "cmd": "find . -name \"*.txt\""}, {"invocation": "Delete all lines matching \"pattern to match\" in \"./infile\" and make a backup with suffix \".bak\"", "cmd": "sed -i.bak '/pattern to match/d' ./infile"}, {"invocation": "Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o'", "cmd": "find `ls -d /[ubso]*` -name sar"}, {"invocation": "Find all *.plist files/directories under current directory", "cmd": "find -name \\*.plist"}, {"invocation": "Find files under /usr that are the same age or older than file `FirstFile'", "cmd": "find /usr ! -newer /FirstFile -print"}, {"invocation": "display all directories in the current folder", "cmd": "find -type d"}, {"invocation": "Find all catalina* files/directories under current directory", "cmd": "find -name 'catalina*'"}, {"invocation": "Print the names of the subdirectories of /usr/local/svn/repos/ prepending \"/usr/local/backup\" to them", "cmd": "find /usr/local/svn/repos/ -maxdepth 1 -mindepth 1 -type d -exec echo /usr/local/backup{} \\;"}, {"invocation": "Find all *.py files under and below the current directory and search them for \"xrange\"", "cmd": "find . -name '*.py' -exec grep --color 'xrange' {} +"}, {"invocation": "Print the list of directories that are present in the /mnt/raid directory tree", "cmd": "find /mnt/raid -type d"}, {"invocation": "Find all files starting from the current directory which are larger than 100MB", "cmd": "find . -size +100M"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -depth -name .svn -exec rm -fr {} \\;"}, {"invocation": "Find all directories under /path/to/base/dir and change their permission to 755", "cmd": "find /path/to/base/dir -type d -print0 | xargs -0 chmod 755"}, {"invocation": "Recursively finds all folders in a current folder that contain files like '.git'.", "cmd": "find . -name '.git' | xargs dirname"}, {"invocation": "Prints newline, word, and byte count for each *.py in a current folder.", "cmd": "wc *.py"}, {"invocation": "Compress from standard input and print the byte count preceded with 'gzip.'", "cmd": "echo gzip. $( gzip | wc -c )"}, {"invocation": "Save the latest modification time (in format \"%T@ %t\" of any file under \"./$dir\" to variable \"timestamp\"", "cmd": "timestamp=$(find ./$dir -type f -printf \"%T@ %t\\\\n\" | sort -nr -k 1,2 | head -n 1)"}, {"invocation": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"", "cmd": "find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "Recursively changes group ownership of the $PATH_TO_OUTPUT_FOLDER directory to $GROUP group.", "cmd": "chgrp -R $GROUP $PATH_TO_OUTPUT_FOLDER"}, {"invocation": "Recursively finds all *.dbf files from the root folder and prints list of folders with such files.", "cmd": "find / -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq"}, {"invocation": "search for the directory \"ora10\" in the entire file system", "cmd": "find / -type d -name \"ora10\""}, {"invocation": "Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8", "cmd": "find sort_test/ -type f | env -i LC_COLLATE=en_US.utf8 sort"}, {"invocation": "Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2", "cmd": "join -t, <(sort file1) <(sort file2)"}, {"invocation": "find all the directories in current folder and do not search in sub directories", "cmd": "find . -maxdepth 1 -type d -print0"}, {"invocation": "find all the files in the folder .home/calvin which have been modified in th last 45 minutes", "cmd": "find /home/calvin/ -mmin -45"}, {"invocation": "Print numbered list of all top-level files in the current directory, with name containing 'android'", "cmd": "ls | grep \"android\" | cat -n"}, {"invocation": "List all *.txt files/directories under current directory", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "Find all directories under current directory having DIRNAME in their name", "cmd": "find . -type d | grep DIRNAME"}, {"invocation": "prints absolute file paths for files in current directory", "cmd": "find `pwd` -maxdepth 1"}, {"invocation": "Append all regular files modified in the last 24 hours to the \"$archive.tar\" tar archive", "cmd": "find . -mtime -1 -type f -print0 | xargs -0 tar rvf \"$archive.tar\""}, {"invocation": "Find all SUID files in entire file system", "cmd": "find / -perm +u=s"}, {"invocation": "search for the file \"file1\" in the entire file system", "cmd": "find / -name file1"}, {"invocation": "Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20", "cmd": "fold -b -w 20 | cut --output-delimiter $'\\t' -b 1-3,4-10,11-20"}, {"invocation": "Find all files in the home directory with open permissions", "cmd": "find ~ -perm 777"}, {"invocation": "Open \"charm\" executable file in vim", "cmd": "sudo vim `which charm`"}, {"invocation": "Set permissions to 2770 for all directories in the current directory tree", "cmd": "find . -type d -exec chmod 2770 {} +"}, {"invocation": "Find all *.log files under path/ that do not contain \"string that should not occur\"", "cmd": "find path/ -name '*.log' -print0 | xargs -r0 grep -L \"string that should not occur\""}, {"invocation": "Recursively finds all bzip2 compressed files in a current folder and decompresses them.", "cmd": "find ./ -iname \"*.bz2\" -exec bzip2 -d {} \\;"}, {"invocation": "Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories", "cmd": "find . -name \"*.png\" -prune -o -name \"*.gif\" -prune -o -name \"*.svn\" -prune -o -print0 | xargs -0 -I FILES grep -IR \"foo=\" FILES"}, {"invocation": "Opens new tmux session.", "cmd": "tmux"}, {"invocation": "Copy file 'src' to 'dest', except if 'dest' already exists.", "cmd": "cp -n src dest"}, {"invocation": "display a long listing of all files in the entire file system which are bigger than 1MB", "cmd": "find / -size +1000k -exec ls -l {} \\; -print"}, {"invocation": "find Texinfo source files in /usr/local/doc", "cmd": "find /usr/local/doc -name '*.texi'"}, {"invocation": "Find all files that are less than 50 bytes", "cmd": "find / -size -50c"}, {"invocation": "find all the php files in the current folder", "cmd": "find . -name \u201c*.[php|PHP]\u201d -print"}, {"invocation": "Print the empty files/directories among empty1, empty2 and not_empty", "cmd": "find empty1 empty2 not_empty -prune -empty"}, {"invocation": "kill all background jobs", "cmd": "jobs -p | xargs kill"}, {"invocation": "search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end", "cmd": "find /data/images -type f -newer /tmp/start -not -newer /tmp/end"}, {"invocation": "find all the zip files in the current folder", "cmd": "find . -type f -name '*.zip'"}, {"invocation": "Find all files/directories with '.err' extension under '/home/username' directory tree", "cmd": "find /home/username/ -name \"*.err\""}, {"invocation": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers", "cmd": "find . -name '*js' | grep -n  'some string'"}, {"invocation": "Count total number of lines in all files below current directory.", "cmd": "find . -type f -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}, {"invocation": "Find directory \"/some/dir\" if it is empty", "cmd": "find /some/dir/ -maxdepth 0 -empty"}, {"invocation": "Modify and rewrite 'file' replacing all instances of \"foo\" with \"bar\"", "cmd": "sed -i 's/foo/bar/g' file"}, {"invocation": "find all the files in current folder ending with \"ini\" and search for a word in all these files", "cmd": "find . -name *.ini -exec grep -w PROJECT_A {} \\; -print | grep ini"}, {"invocation": "Execute command \"$cmd_str\" on host \"$SERVER\" as user \"$USER\"", "cmd": "ssh \"$USER@$SERVER\" \"$cmd_str\""}, {"invocation": "Search the current directory tree for regular .mkv files", "cmd": "find . -type f -name \"*.mkv\""}, {"invocation": "Creates temporary folder in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in 'mydir' variable.", "cmd": "mydir=$(mktemp -d \"${TMPDIR:-/tmp/}$(basename $0).XXXXXXXXXXXX\")"}, {"invocation": "change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file", "cmd": "find -gid 1000 -exec chown -h :username {} \\;"}, {"invocation": "Display the contents of variable \"a\" converted to lowercase.", "cmd": "echo \"$a\" | awk '{print tolower($0)}'"}, {"invocation": "Find all the files that were modified more than one day ago", "cmd": "find . -mtime +1"}, {"invocation": "search for all the \".c\" files in the folder \"/home/david\" which have been modified in the last 10 minutes", "cmd": "find /home/david -mmin -10 -name '*.c'"}, {"invocation": "Rename uppercase file or folder name $1 to lower case name", "cmd": "mv $1 `echo $1 | tr '[:upper:]' '[:lower:]'`"}, {"invocation": "Make directory \"foo\"", "cmd": "mkdir foo"}, {"invocation": "Change permissions to 755 for all directories in the /path/to/dir directory tree", "cmd": "find /path/to/dir -type d -exec chmod 755 {} \\;"}, {"invocation": "List files in directory \"one\" that exist in directory \"two\"", "cmd": "sort <(ls one) <(ls two) | uniq -d"}, {"invocation": "Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time", "cmd": "find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}, {"invocation": "find all the files in the current folder with the name \"test-a\" and move them to the folder test-10", "cmd": "find ~ -type f -name test-a -exec mv {} test-10 \\;"}, {"invocation": "Find all the files in file system which are modified 50 days back", "cmd": "find / -mtime 50"}, {"invocation": "Remove all *bak files under current directory with confirmation prompt", "cmd": "find . -name '*bak' -exec rm -i {} \\;"}, {"invocation": "Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.", "cmd": "cat text.txt | tr -s ' ' | cut -d ' ' -f4"}, {"invocation": "Gets IP address of first listed active network interface in system.", "cmd": "ifconfig  | grep 'inet addr:' | grep -v '127.0.0.1' | awk -F: '{print $2}' | awk '{print $1}' | head -1"}, {"invocation": "Find all .php files starting from the root directory /", "cmd": "find / -name \"*.php\""}, {"invocation": "List all unique parent directories of .class files found under the current directory", "cmd": "find -name '*.class' -printf '%h\\n' | sort -u"}, {"invocation": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)", "cmd": "find . -name '*.log' -mtime +3 -print0 | xargs -0 -P 4 bzip2"}, {"invocation": "Print the last mounted drive", "cmd": "mount | tail -1 | sed 's/ on .* ([^)]*)$//'"}, {"invocation": "List all files in entire file system that belong to the user wnj or modified later than the ttt file", "cmd": "find / \\( -newer ttt -or -user wnj \\) -print"}, {"invocation": "Prints process tree for each process owned by user 'username'.", "cmd": "ps -aux |  awk '/^username/{print $2}' | xargs pstree"}, {"invocation": "Print only strings from file 'file2' that not found in 'file1'", "cmd": "comm -1 -3 file1 file2"}, {"invocation": "Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago", "cmd": "find -daystart -mtime +0"}, {"invocation": "Changes group ownership of '/home/www-user/php_user.sh'  to 'www-data'.", "cmd": "chgrp www-data /home/www-user/php_user.sh"}, {"invocation": "Interpret /etc/bashrc in the current shell, ignoring lines that contain \"mesg\".", "cmd": "source <(grep -v \"mesg\" /etc/bashrc)"}, {"invocation": "Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them", "cmd": "find . -type f -exec grep \"/usr/bin/perl\" {} \\; -ls"}, {"invocation": "Search the entire file hierarchy for files ending in '.old' and delete them.", "cmd": "find / -name \"*.old\" -exec /bin/rm {} \\"}, {"invocation": "Print line number \"${linenum}\" in file \"$filename\"", "cmd": "cat $filename | sed \"${linenum}p;d\";"}, {"invocation": "find all teh script files in a directory", "cmd": "find /home/john -name \"*.sh\" -type f -print"}, {"invocation": "Recursively change the ownership of all directories in the current directory excluding \"foo\" to \"Camsoft\"", "cmd": "ls -d * | grep -v foo | xargs -d \"\\n\" chown -R Camsoft"}, {"invocation": "find files which have all permissions to all the users in the current directory", "cmd": "find . -type f -perm 0777 -print"}, {"invocation": "Count the number of directories in the current directory and below", "cmd": "find . -type f -exec basename {} \\; | wc -l"}, {"invocation": "Move all files excluding hidden files in \"/path/subfolder/\" to \"/path/\"", "cmd": "mv /path/subfolder/* /path/"}, {"invocation": "Saves location of file $1 in 'dir_context' variable.", "cmd": "dir_context=$(dirname -- \"$1\")"}, {"invocation": "Find all files named 'new' under current directory tree and display their contents", "cmd": "find . -name new -print -exec cat {} \\;"}, {"invocation": "Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.", "cmd": "find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"}, {"invocation": "display list of all the hidden files in the home folder", "cmd": "find $HOME -name \".*\" -ls"}, {"invocation": "View history using \"vim\"", "cmd": "history | vim -"}, {"invocation": "Replace all colons (':') with newlines in $list and search for the first match to the regex \"^$removepat\\$\" where $removepat is a variable and save the result to variable 'removestr'", "cmd": "removestr=$(echo \"$list\" | tr \":\" \"\\n\" | grep -m 1 \"^$removepat\\$\")"}, {"invocation": "Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output", "cmd": "find .  -type f -name \"CDC*\" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \\ | wc -l"}, {"invocation": "Remove files in the current directory tree modified more than 31 days ago recursively", "cmd": "find . -type f -mtime +31 -print0 | xargs -0 -r rm -f"}, {"invocation": "Find all files under current directory excluding hidden files", "cmd": "find . -depth -path './.*' -prune -o -print"}, {"invocation": "Resolve symbolic link of file \"FILE\" even if the file does not exist", "cmd": "readlink -m FILE"}, {"invocation": "Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries", "cmd": "find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | cut -d ' ' -f 2"}, {"invocation": "Print line number of each line in /etc/passwd file, where current user name is found", "cmd": "cat /etc/passwd -n | grep `whoami` | cut -f1"}, {"invocation": "Print the path names of all .png files in the /home/kibab directory tree", "cmd": "find /home/kibab -name '*.png' -exec echo '{}' ';'"}, {"invocation": "Recursively change the user and group of all files in \"/var/log/jenkins\" to \"root\"", "cmd": "chown -R root:root /var/log/jenkins"}, {"invocation": "Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.", "cmd": "source <(wget -q -O - \"http://www.modulesgarden.com/manage/dl.php?type=d&id=676\")"}, {"invocation": "Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file", "cmd": "find /path/to/files -type f -name \\*.cfg  -print -exec cat {} \\; -exec sleep 2 \\;"}, {"invocation": "Recursively finds all '*.png' files older than 50 days in a current folder and removes them.", "cmd": "find . -name \"*.png\" -mtime +50 -exec rm {} \\;"}, {"invocation": "Show the number of lines for each .php and .phtml file in the current directory tree", "cmd": "find . -type f \\( -name \"*.php\" -o -name \"*.phtml\" \\) -exec wc -l {} +;"}, {"invocation": "Add content of \"filename\" to the existing cron jobs of user \"user\", without removing the previously existing cron jobs.", "cmd": "crontab -l -u user | cat - filename | crontab -u user -"}, {"invocation": "Prints all Saturday days of a current month.", "cmd": "cal -h | cut -c19-20"}, {"invocation": "Print line, word and byte counts for each .php files in current directory tree and also show the total counts", "cmd": "wc `find | grep .php$`"}, {"invocation": "find all the files that have been modified in the last 60 minutes", "cmd": "find -mmin -60"}, {"invocation": "find all the hidden files in the temp folder", "cmd": "find /tmp -type f -name \".*\""}, {"invocation": "display all files in the current folder expect text files", "cmd": "find . -name \"*.txt\" -prune -o -print"}, {"invocation": "Find all files in current directory and search for 'searchName' in those files", "cmd": "find ./ -name \"*\" | xargs grep \"searchName\""}, {"invocation": "Find all /path/to/check/* regular files without descending into any directory", "cmd": "find /path/to/check/* -maxdepth 0 -type f"}, {"invocation": "search for directories in the folder \"test\" which end have 5 digits as their name", "cmd": "find ./test -type d -name '[0-9][0-9][0-9][0-9][0-9]'"}, {"invocation": "find files under the current directory containing a space in the filename and delete them", "cmd": "find . -name \"* *\" -exec rm -f {} \\;"}, {"invocation": "Make directory \"mybuild\"", "cmd": "mkdir mybuild"}, {"invocation": "Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output", "cmd": "find . -type f -ctime -3 | tail -n 5"}, {"invocation": "Print a single line of numbers from \"001\" to \"100\"", "cmd": "yes | head -n 100 | awk '{printf( \"%03d \", NR )}'   ##for 001...100"}, {"invocation": "find all directory list which have empty list in /tmp directory", "cmd": "find /tmp -type d -empty"}, {"invocation": "Locate all files \"needle.txt\"", "cmd": "find . -name \"needle.txt\""}, {"invocation": "Find all *.m4a files under /home/family/Music directory", "cmd": "find  /home/family/Music -type f -name '*.m4a' -print0"}, {"invocation": "Print the unique lines from standard input preserving the order they appear", "cmd": "nl -n ln | sort -u -k 2| sort -k 1n | cut -f 2-"}, {"invocation": "Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames", "cmd": "find . |sed 's,\\(.*\\)/\\(.*\\)$,\\1/\\2\\t\\1/\\L\\2,'|sort|uniq -D -f 1|cut -f 1"}, {"invocation": "Recursively change the owner and group of all files in the current directory to \"andrewr\"", "cmd": "chown -R andrewr:andrewr *"}, {"invocation": "Find all your text files and page through them", "cmd": "find . -name \"*.txt\" -print | less"}, {"invocation": "Find all *shp* files/directories under current directory", "cmd": "find . -name '*shp*'"}, {"invocation": "Append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable 'KEY'", "cmd": "KEY+=`date -r \"$arg\" +\\ %s`"}, {"invocation": "Read standard input and replace any repeated characters except spaces with a single instance", "cmd": "tr -cs '[:space:]'"}, {"invocation": "Get domain names from file '1.txt' and request TXT DNS record for each one", "cmd": "cat 1.txt | xargs dig TXT"}, {"invocation": "change the permissions of all regular/normal files in the current directory", "cmd": "find . -type f | xargs chmod 664"}, {"invocation": "Force create a hard link in \"/usr/local/bin\" to \"findpdftext\"", "cmd": "sudo ln -f \"findpdftext\" /usr/local/bin"}, {"invocation": "Remove `core' files whose status was changed more than 4 days ago", "cmd": "find `pwd` -name core -ctime +4 -execdir /bin/rm -f {} \\;"}, {"invocation": "Find all files in the current directory \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 and its sub-directories with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and/or \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.", "cmd": "find \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435]"}, {"invocation": "Find all directories under var/ directory and change their permission to 700", "cmd": "find var/ -type d -exec chmod 700 {} \\;"}, {"invocation": "Change the permission to 0644 for all files under current directory", "cmd": "find . -type f -exec chmod 0644 {} \\;"}, {"invocation": "find suffix tcl files under all directories started with 'n'", "cmd": "find ./n* -name \"*.tcl\""}, {"invocation": "Md5sum the last 5 files in /directory1/directory2/", "cmd": "find /directory1/directory2/ -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum"}, {"invocation": "List all files in /var/www and below that have changed in the last 10 minutes", "cmd": "find /var/www -cmin -10 -printf \"%c %pn\""}, {"invocation": "Find all files under /path and below executable by `group' or `other'", "cmd": "find /path -perm /011"}, {"invocation": "Saves listing of a current folder in 'OUTPUT' variable.", "cmd": "OUTPUT=\"$(ls -1)\""}, {"invocation": "Run the find command with all shell positional arguments", "cmd": "`which find` \"$@\" -print0;"}, {"invocation": "Find all files/directories named 'Desktop' under current directory", "cmd": "find ./ -name Desktop"}, {"invocation": "Find all files/directories named modules under current directory and list them twice", "cmd": "find . -name modules \\! -exec sh -c 'find -name modules' \\;"}, {"invocation": "display all soft links in current folder", "cmd": "find . -type l"}, {"invocation": "Search the regular files of the current directory tree for string \"whatever\"", "cmd": "find . -type f -exec grep -H whatever {} \\;"}, {"invocation": "find all the files in the file system which have been accessed in the last 1 day", "cmd": "find / -atime -1"}, {"invocation": "Force create a symbolic link to \"$f\" in \"~/my-existing-links/\" with name the basename of \"$f\"", "cmd": "ln -sf \"$f\" \"~/my-existing-links/$(basename $f)\""}, {"invocation": "Save the user name of the current user to variable \"me\"", "cmd": "me=\"$(whoami)\""}, {"invocation": "Output the specified path removing all containing directories and the .txt suffix, in this case \"filename\".", "cmd": "basename /path/to/dir/filename.txt .txt"}, {"invocation": "find all the files in the current folder which are bigger than 1MB", "cmd": "find . \u2014 size +1000k -print"}, {"invocation": "Invoke a trusted X11 forwarding SSH connection with the server $ssh_server as user $ssh_user", "cmd": "ssh -Y $ssh_user@$ssh_server"}, {"invocation": "search for files in the current folder which start with \"myfile\" ( case insensitive search )", "cmd": "find . -iname 'MyFile*'"}, {"invocation": "find all files in the a direcotry which have been modified in exactly 1 day back", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Print variable \"$OPTARG\" \"$opt\" times", "cmd": "yes \"$OPTARG\" | head -$opt"}, {"invocation": "Find all regular files in /usr/bin modified less than within the last 10 days", "cmd": "find /usr/bin -type f -mtime -10"}, {"invocation": "Find all files/directories named 'FindCommandExamples.txt' under '/root' directory tree", "cmd": "find /root -name FindCommandExamples.txt"}, {"invocation": "Find all directories under /path whose names are 33 characters long", "cmd": "find /path -type d -printf \"%f\\n\" | awk 'length==33'"}, {"invocation": "find all the files in the entire file system that have been modified exactly  50 days ago", "cmd": "find / -mtime 50"}, {"invocation": "Attempt to connect as root via ssh to host \"IP\" and copy /root/K to local machine, passing option \"StrictHostKeyChecking=no\" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.", "cmd": "scp -o StrictHostKeyChecking=no root@IP:/root/K"}, {"invocation": "Overwirte file '/path/to/your/file' with random content, showing progress while execution.", "cmd": "shred -v -n 1 /path/to/your/file #overwriting with random data"}, {"invocation": "Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.", "cmd": "grep -rnw \"pattern\""}, {"invocation": "Print the list of regular files from the current directory tree that were modified less than 2 days ago", "cmd": "find . -type f -mtime -2 -exec echo {} +"}, {"invocation": "find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files", "cmd": "find . -mindepth 1 -mmin -60 | xargs -r ls -ld"}, {"invocation": "Searches for 'something' in a large file and prints the matching line", "cmd": "grep -n 'something' HUGEFILE | head -n 1"}, {"invocation": "Find files that were modified more than 7 days ago and archive them", "cmd": "find . -type f -mtime +7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}, {"invocation": "Recursively finds and compresses all files in a current folder with 4 parallel processes.", "cmd": "find . -type f -print0 | xargs -0 -n1 -P4 bzip2"}, {"invocation": "change owner and group of the file uid_demo to user and group root", "cmd": "sudo chown root:root uid_demo"}, {"invocation": "display a long listing of all the files that begin with the name \"Metallica\" in the entire file system", "cmd": "find / -name 'Metallica*' -exec ls -l {} \\;"}, {"invocation": "Find all *.txt files/directories under current directory", "cmd": "find -name '*.txt'"}, {"invocation": "display all the directories in the current folder excluding those that are present in the folder secret", "cmd": "find . -name secret -type d -prune -o -print"}, {"invocation": "List the commands in /usr/bin, pausing for user input after each page.", "cmd": "more <( ls /usr/bin )"}, {"invocation": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"", "cmd": "find . -iname .svn -print0 | xargs -0 rm -rf"}, {"invocation": "find all text files in the current folder which have been modified after the file /tmp/newerthan", "cmd": "find . -name \"*.txt\" -newer /tmp/newerthan"}, {"invocation": "Create tar.gz files older than one day logs", "cmd": "find /home/testuser/log/ -mtime +1 | xargs  tar -czvPf  /opt/older_log_$(date +%F).tar.gz"}, {"invocation": "Find files/directories writable by group or others under the /path directory", "cmd": "find /path -perm /g+w,o+w"}, {"invocation": "display all the hidden files in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search/ -name \".*\" -print"}, {"invocation": "Write standard input to standard output and to \"foobar.txt\"", "cmd": "tee foobar.txt"}, {"invocation": "Find all target files outside the current working directory with symbolic links in the current working directory", "cmd": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\""}, {"invocation": "Find all executable files under {} and reverse sort them", "cmd": "find {} -type f -depth 1 -perm +0111 | sort -r"}, {"invocation": "search files in current folder using name patterns", "cmd": "find . -name \"$pattern\""}, {"invocation": "search the entire file system for the file \"jan92.rpt\"", "cmd": "find / -name jan92.rpt -print"}, {"invocation": "Prints calendar for a current month.", "cmd": "cal"}, {"invocation": "Replace all newlines from standard input except the last with spaces", "cmd": "sed 'x;G;1!h;s/\\n/ /g;$!d'"}, {"invocation": "Recursively move all files in \"/path/to/srcdir\" to \"dest/\"", "cmd": "find /path/to/srcdir -type f -print0 | xargs -0 -i% mv % dest/"}, {"invocation": "change owner of the file file.sh to user root", "cmd": "$sudo chown root file.sh"}, {"invocation": "search in the current folder for the file with the name \"test\"", "cmd": "find . -name test"}, {"invocation": "Print numbers from 1 to 5 without separating spaces", "cmd": "seq 5 | awk '{printf \"%s\", $0} END {print \"\"}'"}, {"invocation": "Search for files greater than 20MB in the entire file system and display the path and file size", "cmd": "find / -type f -size +20M -exec ls -lh {} \\; | awk '{ print $NF \": \" $5 }'"}, {"invocation": "Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago", "cmd": "find -mtime +0"}, {"invocation": "Recursively copy all directories in \"/path/to/source\" to \"/path/to/dest/\" preserving directory hierarchy", "cmd": "find /path/to/source -type d | cpio -pd /path/to/dest/"}, {"invocation": "Add \"prefix\" to every non-blank line in \"file.txt\"", "cmd": "nl -s prefix file.txt | cut -c7-"}, {"invocation": "Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.", "cmd": "find $homeDirData -type d -mmin +10 -print0 | xargs -0 rmdir"}, {"invocation": "List all empty files in the current directory tree", "cmd": "find . -empty -exec ls {} \\;"}, {"invocation": "Search all files in the current directory tree that are named \"whatever\" for \"you_search_for_it\"", "cmd": "find -name whatever -exec grep --with-filename you_search_for_it {} \\;"}, {"invocation": "use find -exec with multiple commands regardless of their success or failure", "cmd": "find . -name \"*.txt\" \\( -exec echo {} \\; -o -exec true \\; \\) -exec grep banana {} \\;"}, {"invocation": "Find files modified between 6 and 9 minutes ago", "cmd": "find . -mmin +5 -mmin -10"}, {"invocation": "recursively change owner and group of the directory /your/directory/to/fuel/ and all files into it to user and group nginx", "cmd": "chown nginx:nginx /your/directory/to/fuel/ -R"}, {"invocation": "Make DNS lookup requests for domain list in file '/path/to/host-list.txt'", "cmd": "dig -f /path/to/host-list.txt"}, {"invocation": "Search for all jpg images on the system and archive them", "cmd": "find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}, {"invocation": "returns a list of  files create time is 1 minute ago under the root directory.", "cmd": "find / -newerct '1 minute ago' -print"}, {"invocation": "Find all .mp3 files starting from the current directory", "cmd": "find . -type f -iname *.mp3"}, {"invocation": "Print absolute path of \"YOUR_PATH\"", "cmd": "readlink -f YOUR_PATH"}, {"invocation": "Find files/directories named 'aaa.txt' under current directory tree", "cmd": "find . -name aaa.txt"}, {"invocation": "Print file type of the executable file of command \"foo\"", "cmd": "file $(which foo)"}, {"invocation": "Counts lines in each *.php file.", "cmd": "wc -l `find . -name \"*.php\"`"}, {"invocation": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"", "cmd": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`"}, {"invocation": "search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders", "cmd": "find . -path ./proc -prune -or -path ./sys -prune -or -path ./run -prune  -or -iname '*start*' -print"}, {"invocation": "Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??'", "cmd": "find xargstest/ -name 'file??' | sort | xargs wc -l"}, {"invocation": "Change the ownership of all files in the current directory tree to myuser:a-common-group-name", "cmd": "find . -exec chown myuser:a-common-group-name {} +"}, {"invocation": "Find all .core files on the system starting from / and delete them", "cmd": "find / -name \"*.core\" | xargs rm"}, {"invocation": "Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.", "cmd": "find . -name '*.js' -exec grep -i 'string to search for' {} \\; -print"}, {"invocation": "find files which modification time is  7 days ago", "cmd": "find . -mtime -7"}, {"invocation": "Print only first line of 'file' content, formatted as 29-symbol wide column, regarding space symbol as a word separator", "cmd": "cat file | fold -s -w29 | head -1"}, {"invocation": "Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths", "cmd": "find $1 -name \"$2\" | grep -v '/proc' | xargs grep -Hn \"$3\" {} \\;"}, {"invocation": "Change all directories under \"./storage/\" to owner \"apache\" and group \"laravel\"", "cmd": "sudo find ./storage/ -type d -exec chown apache:laravel {} \\;"}, {"invocation": "Count and show the number of lines for each PHP files in the current directory tree", "cmd": "find . -name '*.php' | xargs wc -l"}, {"invocation": "Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree", "cmd": "find /home/backups -type f \\( -name \\*.tgz -o -name \\*.gz \\) -print0 | xargs -0 ls -t | tail -1 | xargs rm"}, {"invocation": "Move all files and directories in the current directory to \"$TARGET\" excluding files matching \"$EXCLUDE\"", "cmd": "ls -1 | grep -v ^$EXCLUDE | xargs -I{} mv {} $TARGET"}, {"invocation": "change permissions for directories in the entire file system", "cmd": "chmod 751 `find ./ -type d -print`"}, {"invocation": "Find all directories recursively starting from / and count them", "cmd": "find / -type d | wc -l"}, {"invocation": "Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths", "cmd": "find . -type f -name \\* | grep \"tgt/etc/*\""}, {"invocation": "Print the path names of all files and directories in the current directory tree", "cmd": "find -printf '\"%h/%f\" '"}, {"invocation": "find all the regular/normal files in the current folder which belong to the user \"sedlav\"", "cmd": "find . -user sedlav -type f"}, {"invocation": "List all regular files in and below the home directory that have been modified in the last 90 minutes", "cmd": "find ~ -type f -mmin -90 | xargs ls -l"}, {"invocation": "Find all Perl source code files", "cmd": "find . -name \"*.pl\""}, {"invocation": "Print lines in the sorted contents of \"file2\" that are not in the sorted contents of \"file1\"", "cmd": "comm -13 <(sort file1) <(sort file2)"}, {"invocation": "display the number of lines in all the php files in the current folder", "cmd": "find -name '*php' | xargs cat | wc -l"}, {"invocation": "Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable", "cmd": "timestamp=`date --rfc-3339=seconds`"}, {"invocation": "Rename recursively all files in the current directory tree that are called \"article.xml\" to \"001_article.xml\"", "cmd": "find . -name \"article.xml\" -exec rename 's/article/001_article/;' '{}' \\;"}, {"invocation": "Prefix all files and folders in the current directory with \"PRE_\"", "cmd": "ls | xargs -I {} mv {} PRE_{}"}, {"invocation": "display all the files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime -1"}, {"invocation": "Connect to \"$USER_AT_HOST\" using connection sharing on \"$SSHSOCKET\" and request the master to exit", "cmd": "ssh -S \"$SSHSOCKET\" -O exit \"$USER_AT_HOST\""}, {"invocation": "Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.", "cmd": "find /tmp -name core -type f -print | xargs /bin/rm -f"}, {"invocation": "Locate all `readme.txt' files under the home directory", "cmd": "find ~ -name readme.txt"}, {"invocation": "Find all files under current directory whose file type description contains \"image\", display the paths to files and file type descriptions.", "cmd": "find . -name '*' -exec file {} \\; | grep -o -P '^.+: \\w+ image'"}, {"invocation": "Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case", "cmd": "find . -iregex \".*packet.*\""}, {"invocation": "Find all files in your home directory and below that are larger than 100M.", "cmd": "find ~ -size +100M"}, {"invocation": "find all regular/normal files which have execute permission in current folder and copy them to another folder", "cmd": "cp `find -perm -111 -type f` /usr/local/bin"}, {"invocation": "Find all files/directories named 'vimrc' in the entire filesystem", "cmd": "find / -name vimrc"}, {"invocation": "Find all regular .mp3 files larger than 10M and delete them", "cmd": "find / -type f -name *.mp3 -size +10M -exec rm {} \\;"}, {"invocation": "display all normal / regular files in current folder in reverse order", "cmd": "find . -type f | tac"}, {"invocation": "Find and remove multiple files such as *.mp3 or *.txt under current directory", "cmd": "find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}, {"invocation": "Find all *.cpp files in the current directory tree that contain \"sub\" in their names", "cmd": "find . -name \"*sub*.cpp\""}, {"invocation": "ssh into \"hostname\" as user \"buck\"", "cmd": "ssh buck@hostname"}, {"invocation": "split the file \"/path/to/large/file\" into pieces per 50000 lines named as /path/to/output/file/prefixNNN", "cmd": "split --lines=50000 /path/to/large/file /path/to/output/file/prefix"}, {"invocation": "List all *.c, *.h and *.cpp files under current directory", "cmd": "find . -type f \\( -name '*.c' -or -name '*.h' -or -name '*.cpp' \\) -exec ls {} \\;"}, {"invocation": "display all the html files in the current folder that have not been modified in the last 7*24 horus", "cmd": "find . -mtime +7 -name \"*.html\" -print"}, {"invocation": "Recursively search through all files in all directories for any lines containing \"pattern\" and whose second word is not \"Binary\".", "cmd": "grep -Ri \"pattern\" * | awk '{if($1 != \"Binary\") print $0}'"}, {"invocation": "Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/", "cmd": "find $DIR/tmp/daily/ -type f -printf \"%p\\n\" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR/tmp/weekly/"}, {"invocation": "Saves space separated content of $RAW_LOG_DIR in FILES variable", "cmd": "FILES=`cat $RAW_LOG_DIR | xargs -r`"}, {"invocation": "search for a word in all the php files in the current folder and display the count of all matching lines.", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+ | wc -l"}, {"invocation": "Search the home directory for files whose names begin with \"test\"", "cmd": "find ~ -name \"test*\" -print"}, {"invocation": "Copies all files with \"FooBar\" in the path under the current directory to the '~/foo/bar' directory.", "cmd": "find . | grep FooBar | xargs -I{} cp {} ~/foo/bar"}, {"invocation": "search for a regular/normal file myfile in the folder \"/home/weedly\"", "cmd": "find /home/weedly -name myfile -type f -print"}, {"invocation": "Prints sequentially listing of a current folder and calendar of a current month.", "cmd": "echo `ls` \"`cal`\""}, {"invocation": "Update timestamps of all files (not directories) under current directory. Also works on older Unix systems with obsolete 'find' command.", "cmd": "find . -print -exec touch {} \\;"}, {"invocation": "Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames", "cmd": "find sources -type f -exec grep -H foo {} +"}, {"invocation": "Search the .sh files in the current directory tree for string \"ksh\"", "cmd": "find . -name \"*.sh\" | xargs grep \"ksh\""}, {"invocation": "create a md5sum for all the instances of the file MyCProgram.c in current folder", "cmd": "find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn |xargs rm -rf"}, {"invocation": "find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them", "cmd": "find . -type f -mtime -1 -exec ls -l {} \\;"}, {"invocation": "Count the *.html files residing in the /usr/src directory tree and containing string \"foo\"", "cmd": "find /usr/src -name \"*.html\" -exec grep -l foo '{}' ';' | wc -l"}, {"invocation": "Prints list of folders containing '.git', searching recursively from a current folder.", "cmd": "find . -name '.git' | xargs -n 1 dirname"}, {"invocation": "Delete characters in columns 36 through 40 from the output of \"finger\"", "cmd": "finger |  cut --complement -c36-40"}, {"invocation": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.", "cmd": "echo 'ls -hal /root/ > /root/test.out' | sudo bash"}, {"invocation": "Saves byte size of $myvar variable value in the 'var2' variable.", "cmd": "var2=$(echo $myvar | wc -c)"}, {"invocation": "Finds all folders that contain 'ssh' file and have 'bin' in path.", "cmd": "dirname `find / -name ssh | grep bin`"}, {"invocation": "Remove trailing whitespaces from all regular non-hidden files in the current directory tree", "cmd": "find . -type f -name '*' -exec sed --in-place 's/[[:space:]]\\+$//' {} \\+"}, {"invocation": "delete all the empty directories in the current folder", "cmd": "find . -type d -empty -exec rmdir {} \\;"}, {"invocation": "show the disk use of all the regular/normal files in the current folder which are bigger than 50MB", "cmd": "find . -type f -size +50000k | xargs du -sh"}, {"invocation": "Rename all files matching \"access.log.<number>.gz\" incrementing <number>.", "cmd": "find -name 'access.log.*.gz' | sort -Vr | rename 's/(\\d+)/$1+1/ge'"}, {"invocation": "Find all *.css files under $DIR and print the lines matching the regex '\\.ExampleClass.{/,/}' from those files", "cmd": "find ${DIR} -type f -name \"*.css\" -exec sed -n '/\\.ExampleClass.{/,/}/p' \\{\\} \\+"}, {"invocation": "Recursively print all directories in the current directory tree", "cmd": "tree -d"}, {"invocation": "Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place", "cmd": "find /home/www -type f -name '*.cpp'  -exec sed -i 's/previousword/newword/g' '{}' \\;"}, {"invocation": "find the file with the name \"file\" in the entire file system", "cmd": "find / -name file"}, {"invocation": "Check the environment variables generated by switching to the root account.", "cmd": "sudo env"}, {"invocation": "Remove all *.mp3 files in tmp directory but not in it's subdirectories", "cmd": "find tmp -maxdepth 1 -name *.mp3 -print0 | xargs    -0 rm"}, {"invocation": "Change to folder where the oracle binary is.", "cmd": "cd $(which oracle | xargs dirname)"}, {"invocation": "Print continuous characters '/' and '\\' randomly from /dev/urandom", "cmd": "grep -ao \"[/\\\\]\" /dev/urandom|tr -d \\\\n"}, {"invocation": "Change all cron jobs running \"anm.sh\" to be run every 10 minutes instead of 5 minutes.", "cmd": "crontab -l | sed '/anm\\.sh/s,^\\*/5,*/10,' | crontab -"}, {"invocation": "Copy an entire file structure, creating empty files in the copy instead of copying the actual files.", "cmd": "find src/ -type d -exec mkdir -p dest/{} \\; -o -type f -exec touch dest/{} \\;"}, {"invocation": "Print whether the sorted contents of \"set1\" and \"set2\" differ", "cmd": "diff -q <(sort set1) <(sort set2)"}, {"invocation": "Print the list of all regular files in the current directory and below", "cmd": "find . -type f"}, {"invocation": "display all the files in the current folder which are present in the path \"./sr*sc\"", "cmd": "find . -path './sr*sc'"}, {"invocation": "Find the largest original \".gz\" file in the current directory tree", "cmd": "find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1"}, {"invocation": "Find files/directories under current directory and force xargs to print them one by one", "cmd": "find . | xargs -n 1 echo"}, {"invocation": "Find all regular files starting from the current directory", "cmd": "find . -type f"}, {"invocation": "Search the system for *.rpm files ignoring removable media", "cmd": "find / -xdev -name \\*.rpm"}, {"invocation": "On host \"server_b\", connect as ssh user \"user\" and copy \"/my_folder/my_file.xml\" to directory \"/my_new_folder/\", with all transfer data relayed through local host.", "cmd": "scp -3 user@server_b:/my_folder/my_file.xml user@server_b:/my_new_folder/"}, {"invocation": "Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.name' file", "cmd": "cat ${TMP}/${SCRIPT_NAME}.name|sort -r;"}, {"invocation": "create a tar.gz compress file with all the jpg files in the entire file system", "cmd": "find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}, {"invocation": "find all log files larger then 100MB  in /home directory and delete them .", "cmd": "find /home -type f -name *.log -size +100M -exec rm -f {} \\;"}, {"invocation": "search for mp3 files in the folder /mp3collection which are smaller than 5MB", "cmd": "find /mp3collection -name '*.mp3' -size -5000k"}, {"invocation": "Display differences between /destination/dir/1 and /destination/dir/2 excluding XML files.", "cmd": "diff /destination/dir/1 /destination/dir/2 -r -x *.xml"}, {"invocation": "Read a line from standard input into variable \"REPLY\" with prompt \"Press [Enter] key to release lock...\"", "cmd": "read -p \"Press [Enter] key to release lock...\""}, {"invocation": "Search the current directory tree for files named \"somename\", case insensitive", "cmd": "find -iname 'somename'"}, {"invocation": "Print the first 32 hexadecimal characters from \"/dev/urandom\"", "cmd": "cat /dev/urandom | tr -cd 'a-f0-9' | head -c 32"}, {"invocation": "Find and delete all .zip files in the current directory tree", "cmd": "find . -depth -name '*.zip' -exec rm {} \\;"}, {"invocation": "List level 2 subdirectories of the current directory", "cmd": "find . -mindepth 2 -maxdepth 2 -type d -ls"}, {"invocation": "copy all the mp3 files from current folder to another folder", "cmd": "find . -name '*.mp3' -exec cp -a {} /path/to/copy/stuff/to \\;"}, {"invocation": "Find *.java files in the current directory and replace foo with bar in those files", "cmd": "find . -name \"*.java\" -exec sed -i '' s/foo/bar/g \\;"}, {"invocation": "Locating large files (> 100 MB) in /home/ for 'cleaning'", "cmd": "find /home -type f -size +100M -delete"}, {"invocation": "display all files in current folder which are bigger than 1 MB", "cmd": "find . -size +1M"}, {"invocation": "Search for the regex '^ERROR' in all *.log files under current directory", "cmd": "find . -name \"*.log\" -exec egrep -l '^ERROR' {} \\;"}, {"invocation": "Search the ~ and `Music' directory trees for .mp3 files", "cmd": "find ~ Music -name '*.mp3'"}, {"invocation": "Send Output From Find The Find Command To A File", "cmd": "find / -name *.mp3 -fprint nameoffiletoprintto"}, {"invocation": "List all environment variables whose name or value contains current user's login name.", "cmd": "env | sed -n /\"$USERNAME\"/p"}, {"invocation": "Find all files/directories with spaces in their names under ~/Library directory", "cmd": "find ~/Library -name '* *'"}, {"invocation": "Delete all regular files with inode number 314167125 under current directory tree", "cmd": "find . -type f -inum 314167125 -delete"}, {"invocation": "Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune -o -name CVS -prune \\) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d \":\" -f1"}, {"invocation": "Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.", "cmd": "find . -type f -name \"*.java\" -exec grep -il string {} \\;"}, {"invocation": "Creates temporary file and saves path to it in 'content_dir1' variable.", "cmd": "content_dir1=$(mktemp)"}, {"invocation": "Exclude directory from find . command", "cmd": "find . -name '*.js' -and -not -path directory"}, {"invocation": "search for all the regular files that have been changed in the last 48 hours and sync these to another folder", "cmd": "find /my/source/directory -ctime -2 -type f -printf \"%P\\n\" | xargs -IFILE rsync -avR /my/./source/directory/FILE /my/dest/directory/"}, {"invocation": "Decompress and extract '/usr/src/redhat/SOURCES/source-one.tar.gz'", "cmd": "gzip -dc /usr/src/redhat/SOURCES/source-one.tar.gz | tar -xvvf -"}, {"invocation": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"", "cmd": "find . -name '*bills*' -exec grep put {} \\;"}, {"invocation": "Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command", "cmd": "cat <(fgrep -i -v \"$command\" <(crontab -u test -l)) <(echo \"$job\") | crontab -u test -"}, {"invocation": "Lists content of all subfolder (without recursion) in a current folder.", "cmd": "ls -d -1 $PWD/**/*"}, {"invocation": "Look for all files whose names match pattern 'my*'", "cmd": "find / -name 'my*'"}, {"invocation": "Search for 'js' in all files under current directory that match 'some string' in their names", "cmd": "find . | grep 'some string' | grep js"}, {"invocation": "create directory aaa/bbb", "cmd": "mkdir aaa/bbb"}, {"invocation": "Search the current directory tree for regular files that contain \"string\"", "cmd": "find . -type f -print0 | xargs -0 grep string"}, {"invocation": "find all the directories in the current folder which begin with the words \"kt\" and end with a digit", "cmd": "find . -regex './kt[0-9] '"}, {"invocation": "Create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named 'folder9991000' inside the last 'folder998' directory", "cmd": "mkdir -p folder$( seq -s \"/folder\" 999 )1000"}, {"invocation": "search for the file \"process.txt\" in the current folder (case insensitive search)", "cmd": "find . -iname 'process.txt' -print"}, {"invocation": "Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a'", "cmd": "find A \\! -path \"A/a/*\""}, {"invocation": "Get A record for domain $domain", "cmd": "dig $domain"}, {"invocation": "Find files/directories named 'photo.jpg' in the entire filesystem", "cmd": "find / -name photo.jpg"}, {"invocation": "Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions", "cmd": "find / -maxdepth 1 -xdev -type f -exec grep -Zli \"stringtofind\" {} +"}, {"invocation": "Find all regular files in the current directory and search them for \"example\"", "cmd": "find -maxdepth 1 -type f | xargs grep -F 'example'"}, {"invocation": "Print common lines in \"file1\" and \"file2\"", "cmd": "comm -12 file1 file2"}, {"invocation": "Silently read exactly 1 character ignoring any delimiters  into variable \"SELECT\"", "cmd": "read -s -N 1 SELECT"}, {"invocation": "Add executable permission to \"java_ee_sdk-6u2-jdk-linux-x64.sh\"", "cmd": "sudo chmod +x java_ee_sdk-6u2-jdk-linux-x64.sh"}, {"invocation": "find all the files in the current folder which have been changed in the last 60 minutes", "cmd": "find . -cmin -60"}, {"invocation": "Print the list of directories residing in the current directory tree", "cmd": "find . -type d -exec ls -ld {} \\;"}, {"invocation": "View contents of files matching \"/usr/share/doc/mysql-server-5.0/changelog*.gz\" in \"less\"", "cmd": "zcat /usr/share/doc/mysql-server-5.0/changelog*.gz | less"}, {"invocation": "Remove all *.swp files under current directory ensuring white space safety", "cmd": "find . -name \"*.swp\" -print0|xargs -0 rm"}, {"invocation": "this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _", "cmd": "find . -type f -iname '*.mp3' -exec rename '/ /_/'  {} \\;"}, {"invocation": "Change the owner of all files in the directory tree \"dir_to_start\" excluding file \"file_to_exclude\" to \"owner\"", "cmd": "find dir_to_start -not -name \"file_to_exclude\"  -print0 | xargs -0 chown owner"}, {"invocation": "Find all files/directories named modules under current directory", "cmd": "find . -name modules"}, {"invocation": "show the list of all the files in the current folder which have been modified within the 24 hours", "cmd": "find . -mtime 0 -print"}, {"invocation": "Read a single character from standard input with prompt \"Are you sure? (y/n) \"", "cmd": "read -p \"Are you sure? (y/n) \" -n 1"}, {"invocation": "Find all the files in file system which are accessed 50 days back", "cmd": "find / -atime 50"}, {"invocation": "Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory", "cmd": "find . -type f -exec grep -n -i STRING_TO_SEARCH_FOR /dev/null {} \\;"}, {"invocation": "Find all directories that have been modified in the last seven days.", "cmd": "find . -mtime -7 -type d"}, {"invocation": "Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results", "cmd": "od | cut -b 8- | xargs -n 1 | sort | uniq | wc -l"}, {"invocation": "Discard the first letter from every line in $line and calculate the md5 sum of the remaining", "cmd": "echo $line | cut -c2- | md5sum"}, {"invocation": "display all the normal/regular files in the directory FOLDER1", "cmd": "find FOLDER1 -type f -print0"}, {"invocation": "Split \"date.csv\" into files with at most 100 lines each", "cmd": "split -l 100 date.csv"}, {"invocation": "display all the files in the current folder except those whose name is \"PERSONAL\"", "cmd": "find . -name PERSONAL -prune -o -print"}, {"invocation": "Search for occurrences of string \"main(\" in the .c files from the current directory tree", "cmd": "find . -type f -name \"*.c\" -print -exec grep -s \"main(\" {} \\;"}, {"invocation": "Find all files owned by user vivek", "cmd": "find / -user vivek"}, {"invocation": "find all  files that match \"[a-f0-9\\-]{36}\\.jpg\" of grep", "cmd": "find . * | grep -P \"[a-f0-9\\-]{36}\\.jpg\""}, {"invocation": "search for the word \"redeem reward\" in all the regular/normal files in the current folder", "cmd": "find . -type f -exec grep -i \u201credeem reward\u201d {} \\; -print"}, {"invocation": "Removes all files from current folder but 5 newest ones, filtering out directories from initial search.", "cmd": "ls -tp | grep -v '/$' | tail -n +6 | xargs -d '\\n' rm --"}, {"invocation": "Prints full process tree with id number of each process.", "cmd": "pstree -p"}, {"invocation": "Source \"lib/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.", "cmd": "source \"$( dirname \"$( which \"$0\" )\" )/lib/B\""}, {"invocation": "Find all files under $YOUR_DIR", "cmd": "find $YOUR_DIR -type f"}, {"invocation": "Delete all files under /path/to/files that are not newer than dummyfile", "cmd": "find /path/to/files -type f ! -newer dummyfile -delete"}, {"invocation": "Print the content of file", "cmd": "sed 's/\\n//' file"}, {"invocation": "Save the absolute path of the current script to variable \"SELF\"", "cmd": "SELF=`readlink /proc/$$/fd/255`"}, {"invocation": "Print file system disk space usage in posix and human readable format, format as a table", "cmd": "df -Ph | column -t"}, {"invocation": "prints a line 19 lines from the line containing PATTERN", "cmd": "tac | sed -n '/PATTERN/,+19{h;d};x;/^$/!{p;s/.*//};x' | tac"}, {"invocation": "Archive all *.xml files under current directory tree to xml.tar excluding the files that match '/workspace/' in their paths", "cmd": "find . -name \\*.xml | grep -v /workspace/ | tr '\\n' '\\0' | xargs -0 tar -cf xml.tar"}, {"invocation": "Split \"${fspec}\" into 6 files with about equal number of lines each and use prefix \"xyzzy.\"", "cmd": "split --number=l/6 ${fspec} xyzzy."}, {"invocation": "Search for line 111 in file \"active_record.rb\" with 2 lines of context", "cmd": "nl -ba  -nln  active_record.rb  | grep -C 2 '^111 '"}, {"invocation": "Recursively removes all files like any-cased '*.pyc' in a current folder.", "cmd": "find . -iname '*.pyc' -print0 | xargs -0 --no-run-if-empty  rm"}, {"invocation": "Move all hidden files in \"/path/subfolder/\" to \"/path/\"", "cmd": "mv /path/subfolder/.* /path/"}, {"invocation": "find all hidden files in the current folder which have been modified after profile file", "cmd": "find . -type f -name \".*\" -newer .cshrc -print"}, {"invocation": "Recursively search for all files not ending in \".xml\" under the current directory, append \".xml\" to the end of each file name", "cmd": "find . -type f \\! -name '*.xml' -print0 | xargs -0 rename 's/$/.xml/'"}, {"invocation": "Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths", "cmd": "find /home/jul/here -type f -iname \"*.php\" ! -path \"/home/jul/here/exclude/*\" -o -iname \"*.js\" ! -path \"/home/jul/here/exclude/*\""}, {"invocation": "Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to \"proxyhost\" port 8888 and a reverse connection from \"officefirewall\" port 22222 to \"localhost\" port 22", "cmd": "ssh -fNT -L8888:proxyhost:8888 -R22222:localhost:22 officefirewall"}, {"invocation": "Find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf", "cmd": "find /etc/apache-perl -newer /etc/apache-perl/httpd.conf"}, {"invocation": "Print the list of files in the current directory tree skipping Git files", "cmd": "find . -path './.git' -prune -o -type f"}, {"invocation": "Prints \"$NEWFILE\" to the terminal and file '/etc/timezone' as a root user.", "cmd": "echo \"$NEWFILE\" | sudo tee /etc/apt/sources.list"}, {"invocation": "Search the system for files and directories owned by user `admin'", "cmd": "find / -user admin -print"}, {"invocation": "Display current system's kernel name, kernel release and version, and machine architecture", "cmd": "uname -srvm"}, {"invocation": "Prefix all files and folders in the current directory with \"PRE_\"", "cmd": "find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \\;"}, {"invocation": "find all files in /usr/bin and run the \"file\" command on them.", "cmd": "find /usr/bin | xargs file"}, {"invocation": "Perform a white space safe search for all files/directories under current directory", "cmd": "find . -print0 | xargs -0"}, {"invocation": "find all the cpp files in the current folder", "cmd": "find . -iname '*.cpp' -print"}, {"invocation": "Receive input and print it to terminal", "cmd": "cat"}, {"invocation": "find all text files which have extra extensions in the current folder", "cmd": "find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print"}, {"invocation": "Removes all top-level empty folders within the current folder.", "cmd": "ls | xargs rmdir"}, {"invocation": "Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR", "cmd": "find /usr/ports/ -name Makefile -exec grep ^USE_RC_SUBR '{}' '+' | wc -l"}, {"invocation": "Print host name followed by \":\" and the contents of \"/sys/block/sda/size\"", "cmd": "echo \"$(hostname):$(cat /sys/block/sda/size)\""}, {"invocation": "Prints all NS servers of domain google.com.", "cmd": "dig google.com ns | awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'"}, {"invocation": "Print file type of the executable file of command \"python\"", "cmd": "file `which python`"}, {"invocation": "display all regular/normal files in current folder", "cmd": "find . -type f"}, {"invocation": "Count the number of unique duplicate lines in \"file1\" and \"file2\" combined", "cmd": "sort file1 file2 | uniq -d | wc -l"}, {"invocation": "Executes 'sleep 10' in a subshell created by a pipeline of built-in function 'true'.", "cmd": "true | sleep 10"}, {"invocation": "Copies all files like '*.txt' under the current directory to the './tmp/' directory.", "cmd": "find . -type f -name '*.txt' | sed 's/'\"'\"'/\\'\"'\"'/g' | sed 's/.*/\"&\"/'  | xargs -I{} cp -v {} ./tmp/"}, {"invocation": "Print the 5th space separated fields in \"file\" as a comma separated list", "cmd": "cut -d' ' -f5 file | paste -d',' -s"}, {"invocation": "Display the sizes and filepaths of all files/directories sorted in descending order of size", "cmd": "du -a -h --max-depth=1 | sort -hr"}, {"invocation": "Delimit standard input with \":\" and display as a table", "cmd": "column -s: -t"}, {"invocation": "Find all files under current directory whose file type description contains \"image\", display only path to each file.", "cmd": "find . -type f -exec file {} \\; | awk -F: '{if ($2 ~/image/) print $1}'"}, {"invocation": "Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively", "cmd": "find . -maxdepth 1 -type d -exec chmod -R 700 {} \\;"}, {"invocation": "Print 'bla.txt' if at least one file with such name is present below the current directory.", "cmd": "ls -alFt `find . -name \"bla.txt\"` | rev | cut -d\" \" -f1 | rev | head -1"}, {"invocation": "Count the number of files/directories named file1 under current directory", "cmd": "find -name file1 | wc -l"}, {"invocation": "Find all regular files under $dir", "cmd": "find $dir -type f"}, {"invocation": "find all files not ending in \".html\"", "cmd": "find . -type f -not -name \"*.html\""}, {"invocation": "Find the largest files in a particular location", "cmd": "find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5"}, {"invocation": "Show a long listing of the latest file or directory under current directory", "cmd": "ls -lrt | tail -n1"}, {"invocation": "Read a line from standard input into variable \"REPLY\" with prompt \"$1 ([y]es or [N]o): \"", "cmd": "read -p \"$1 ([y]es or [N]o): \""}, {"invocation": "Show the list of user wnj's files that are newer than file `ttt'", "cmd": "find / -newer ttt -user wnj -print"}, {"invocation": "find any files in the current directory that begin with a number", "cmd": "find . -regex './[0-9].*' -print"}, {"invocation": "Print lines 10000 to 10010 from input \"seq 1 100000\"", "cmd": "seq 1 100000 | sed -n '10000,10010p'"}, {"invocation": "display all the java, xml and action scripts (.as) files in a directory", "cmd": "find dir1 -type f -a \\( -name \"*.java\" -o -name \"*.as\" -o -name \"*.xml\" \\)"}, {"invocation": "Lists all directories in a current folder.", "cmd": "ls -d */"}, {"invocation": "display all the \".c\" files in the folder \"/home/david\" which have been accessed in the last 48 hours", "cmd": "find /home/david -atime -2 -name '*.c'"}, {"invocation": "Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page.", "cmd": "tail -1000 file-with-line-too-long.txt | more"}, {"invocation": "Decompress and sort \"$part0\" and \"$part1\" of files in different processes", "cmd": "sort -m <(zcat $part0 | sort) <(zcat $part1 | sort)"}, {"invocation": "find all files in the current folder whose size is less than 50KB", "cmd": "find . -size -50k"}, {"invocation": "Add variable 'v' with value '5' to a temporary environment, list this environment using 'less' to interactively view it.", "cmd": "v=5 env|less"}, {"invocation": "print all PIDs of stopped processes", "cmd": "jobs -sl | awk '{print $2}'"}, {"invocation": "Find all *.txt files/directories under your home directory", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "Find all files/directories named 'file' and print them with null character as the delimiter instead of newline", "cmd": "find -name file -print0"}, {"invocation": "search for a word in all the .C files( those having the extension \"c\") in current directory", "cmd": "find . -type f \\( -iname \u201c*.c\u201d \\) |grep -i -r \u201ckeyword\u201d"}, {"invocation": "Look for `regexp' in binary files", "cmd": "find .  -type f -print|xargs file|grep -i text|cut -fl -d:    | xargs grep regexp"}, {"invocation": "List files larger than 10MB in the /var directory recursively", "cmd": "find /var/ -size +10M -ls"}, {"invocation": "Print summary of new/missing files, and which files differ between dir1 and dir2.", "cmd": "diff -q dir1 dir2"}, {"invocation": "Replace all URLs in \"MyHTMLFile.html\" with \"$pub_url\" and create a backup with suffix \".bak\"", "cmd": "sed -i.bak \"s#https.*\\.com#$pub_url#g\" MyHTMLFile.html"}, {"invocation": "Search the current directory tree for files executable by at least someone", "cmd": "find . -type f -perm +111 -print"}, {"invocation": "Greps domain $domain IP name from long dig listing.", "cmd": "dig $domain | grep $domain | grep -v ';' | awk '{ print $5 }'"}, {"invocation": "Read a single character from standard input with delimeter '' and no echo", "cmd": "read -d'' -s -n1"}, {"invocation": "The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.", "cmd": "find . | cpio -pdumv /path/to/destination/dirrectory"}, {"invocation": "List all variables (names and values) whose name or value contains X.", "cmd": "env | grep \".*X.*\""}, {"invocation": "Search the .java files from the /Applications/ directory tree for TODO lines", "cmd": "find /Applications/ -name \"*.java\" -exec grep -i TODO {} +"}, {"invocation": "Print amount of space available on the file system containg path to the current working directory.", "cmd": "df . | awk '$3 ~ /[0-9]+/ { print $4 }'"}, {"invocation": "Print a count of all unique entries in \"ips.txt\" with the most frequent results at the top", "cmd": "sort ips.txt | uniq -c | sort -bgr"}, {"invocation": "Set variable OS to the name of the operating system, ie. \"Linux\"", "cmd": "OS=`uname -s`"}, {"invocation": "find all the zip files in the current folder and create a tar ball of these zip files", "cmd": "find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf"}, {"invocation": "Find all files under $root_dir", "cmd": "find $root_dir -type f"}, {"invocation": "keep only read access to all the files in a directory.", "cmd": "find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \\;"}, {"invocation": "find all the files in the entire file system whose size is greater than 20MB", "cmd": "find / -type f -size +20000k"}, {"invocation": "Find all directories under /myfiles directory", "cmd": "find /myfiles -type d"}, {"invocation": "display the files along with the size of all the files in the current which are bigger than 100MB", "cmd": "find . -size +100M -exec ls -s {} \\;"}, {"invocation": "update the permission of all the files in the folder /u/netinst to 500", "cmd": "find /u/netinst -print | xargs chmod 500"}, {"invocation": "Perform a default Plesk configuration", "cmd": "find /var/www/vhosts/*/httpdocs -type f -iwholename \u201c*/wp-includes/version.php\u201d -exec grep -H \u201c\\$wp_version =\u201d {} \\;"}, {"invocation": "Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.", "cmd": "find /usr/ports/ -name Makefile\\* -mindepth 3 -maxdepth 3 -exec egrep \"NOPORTDOCS|NOPORTEXAMPLES\" '{}' '+' | wc -l"}, {"invocation": "Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: '", "cmd": "find . -maxdepth 1 -type d -print | xargs  -I \"^\" echo Directory: \"^\""}, {"invocation": "Remove blank lines and replace \" \" with \"/\" in \"struct.txt\" as input to make directories with parents as needed", "cmd": "sed '/^$/d;s/ /\\//g' struct.txt | xargs mkdir -p"}, {"invocation": "Recursively change owner to \"$1\" and group to \"httpd\" of all files in the current directory", "cmd": "chown -R $1:httpd *"}, {"invocation": "delete all the text files starting with the name \"oldStuff\" in the file system", "cmd": "find / -name \"oldStuff*.txt\" -delete"}, {"invocation": "Removes all files like '*.bak' in a current folder, and prints messages about what is being done.", "cmd": "rm -v *.bak"}, {"invocation": "show all the \".flac\" files in the current folder and do not search in the sub directories", "cmd": "find . -maxdepth 1 -type f -name '*.flac'"}, {"invocation": "Find all files/directories named file1 under current directory", "cmd": "find -name file1"}, {"invocation": "Create an empty file (or update timestamp of file) specified by variable \"correctFilePathAndName\"", "cmd": "touch \"$correctFilePathAndName\""}, {"invocation": "remove all the files in the present directory which have space in their name.", "cmd": "find . -name \"* *\" -exec rm -f {} \\;"}, {"invocation": "Set 444 permission to all regular files under current directory", "cmd": "find . -type f -print | xargs chmod 444"}, {"invocation": "find all the files in the folder ~/Music which begin with \"Automatically Add\"", "cmd": "find ~/Music/ -name \"Automatically Add*\""}, {"invocation": "Synchronize \"/home/user1/\" to \"wobgalaxy02:/home/user1/\" including hidden files", "cmd": "rsync -av /home/user1/ wobgalaxy02:/home/user1/"}, {"invocation": "Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each", "cmd": "find . -name \"*.java\" -exec cp {} {}.bk \\;"}, {"invocation": "Search for files specifying the maximum depth of the search", "cmd": "find -maxdepth num -name query"}, {"invocation": "Copy all files matching \"file_name.extension\" to \"/path/to/receiving/folder\" preserving directory hierarchy", "cmd": "find . -name 'file_name.extension' -print | cpio -pavd /path/to/receiving/folder"}, {"invocation": "Filnd all files in root directory with 777 permission and change permision 644  with chmod commad .", "cmd": "find / -type f -perm 777 -print -exec chmod 644 {} \\;"}, {"invocation": "find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )", "cmd": "find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\\{1,\\}$//' {} \\+"}, {"invocation": "change the permissions of all the directories  to 775 in the current folder", "cmd": "find . -type d -exec chmod 775 {} \\;"}, {"invocation": "Find the 5 largest regular files in the current directory and below.", "cmd": "find -type f -exec du -Sh {} + | sort -rh | head -n 5"}, {"invocation": "display all files ending with \"ini\" in current folder", "cmd": "find . -type f -name '*.ini'"}, {"invocation": "Read standard input until a null character is found and save the result in variable \"f2\"", "cmd": "read -r -d $'\\0' f2"}, {"invocation": "Report file system disk space usage in human readable format", "cmd": "df -h"}, {"invocation": "Prints path location of $BASH_SOURCE file.", "cmd": "echo this dir: `dirname $BASH_SOURCE`"}, {"invocation": "search for \"flac\" files in current folder using regular expressions", "cmd": "find ./ -regex \"./cmn-.\\.flac\""}, {"invocation": "bind \"\\C-i\" to \"complete\" function", "cmd": "bind '\"\\C-i\":complete'"}, {"invocation": "Copy \"fileName.txt\" to all directories listed in \"allFolders.txt\" - names may not contain spaces.", "cmd": "cat allFolders.txt | xargs -n 1 cp fileName.txt"}, {"invocation": "find all the normal/regular files in the current directory and search for the word mail and display the file names", "cmd": "find . -type f -exec grep -il mail"}, {"invocation": "Print all logins formatted as \"The user USER is on TTY\" where USER is the user name and TTY is the login terminal", "cmd": "who | awk '{print \"The user \" $1 \" is on \" $2}'"}, {"invocation": "Split the contents of all \".txt\" excluding the first 1000 lines into files of at most 1000 lines each", "cmd": "cat *.txt | tail -n +1001 | split --lines=1000"}, {"invocation": "Search the /path directory tree for files missing g+w and o+w bits", "cmd": "find /path ! -perm /022"}, {"invocation": "Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.", "cmd": "set | more"}, {"invocation": "Create intermediate directories as required", "cmd": "mkdir -p $2"}, {"invocation": "Find all the files called FindCommandExamples.txt of owner root", "cmd": "find / -user root -name FindCommandExamples.txt"}, {"invocation": "Search for files bigger than 10M", "cmd": "find ~ -size +10M"}, {"invocation": "Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node' with superuser privilege", "cmd": "sudo rm -rf bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node"}, {"invocation": "Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*'", "cmd": "find /tmp/test/* -daystart -mtime -0"}, {"invocation": "show all the regular/normal files in the folder /home/user/demo", "cmd": "find /home/user/demo -type f -print"}, {"invocation": "Search for aaa in all files under current directory and count the number of matches", "cmd": "find . -type f -exec grep -o aaa {} \\; | wc -l"}, {"invocation": "Write \"fifo forever\" infinitely using the named pipe \"fifo\" by writing its contents to standard output and to \"fifo\"", "cmd": "echo \"fifo forever\" | cat - fifo | tee fifo"}, {"invocation": "Compress every file in the current directory tree that matches \"*cache.html\" and keep the original file", "cmd": "find . -type f -name \"*cache.html\" -exec gzip -k {} \\;"}, {"invocation": "Find recursively all Python files in the current directory and search them for the word \u2018import\u2019", "cmd": "find . -name '*.py' | xargs grep 'import'"}, {"invocation": "Print all matching commands in $PATH for command \"python\"", "cmd": "which -a python"}, {"invocation": "display all jpg files in the current folder", "cmd": "find -iname \"*.jpg\""}, {"invocation": "Gets IP address of 'en0' selected network interface.", "cmd": "ifconfig en0 | awk '/inet addr/ {gsub(\"addr:\", \"\", $2); print $2}'"}, {"invocation": "Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option", "cmd": "find ./ -daystart -mtime -3 -type f  ! -mtime -1 -exec ls -ld {} \\;"}, {"invocation": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them", "cmd": "find ~/code -name '.*' -prune -o -type d -printf ':%p'"}, {"invocation": "Search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days", "cmd": "find /mnt/raid/upload -mtime -7 -print"}, {"invocation": "display all the files in the entire file system which have set uid bit set.", "cmd": "find / -perm -u+s -print"}, {"invocation": "Set up a local SSH tunnel from port 80 to port 3000", "cmd": "sudo ssh $USERNAME@localhost -L 80:localhost:3000 -N"}, {"invocation": "find all the files with the name test in the current folder ( case insensitive )", "cmd": "find . -iname test"}, {"invocation": "Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree", "cmd": "find . -iname \"photo.jpg\""}, {"invocation": "Print a line of 10 '#' characters", "cmd": "seq  -f \"#\" -s '' 10"}, {"invocation": "Save the absolute path of the directory of the current script to variable \"DIR\"", "cmd": "DIR=$(dirname \"$(readlink -f \\\"$0\\\")\")"}, {"invocation": "Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically", "cmd": "find \"$FOLDER\" -type d -printf \"%T@\\n\" | cut -f 1 -d . | sort -nr"}, {"invocation": "Find all files under current directory and show their file information", "cmd": "find . -type f -print0 | xargs -0 file"}, {"invocation": "Display the count of regular files under 'home/magie/d2' directory tree which have execute permission to all the users", "cmd": "find home/magie/d2 -type f -perm +111 | wc -l"}, {"invocation": "Prints long recursive listing of all content of a root folder, saving output to 'output.file'.", "cmd": "ls -lR / | tee output.file"}, {"invocation": "Read a line from standard input into variable \"a\" without backslash escapes", "cmd": "read -r a"}, {"invocation": "Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir", "cmd": "find /your/dir -type f -exec touch {} +"}, {"invocation": "Change permissions to 600 for all regular .rb files in the current directory tree", "cmd": "find . -name \"*.rb\" -type f -exec chmod 600 {} \\;"}, {"invocation": "display all the files in the current folder which have been modified in the last 2 days", "cmd": "find . -mtime -2"}, {"invocation": "Find all directories in the current one with \"linkin park\" in their names and copy them to /Users/tommye/Desktop/LP", "cmd": "find . -maxdepth 1 -type d -iname \"*linkin park*\" -exec cp -r {} /Users/tommye/Desktop/LP \\;"}, {"invocation": "Append \"& Bytes\" to the end of every line in \"$TEMPFILE\" and format the result as a table", "cmd": "sed 's/.*/& Bytes/' \"$TEMPFILE\" | column -t"}, {"invocation": "Show manual of the find command", "cmd": "man find"}, {"invocation": "Search the current directory tree for regular files whose names begin with \"orapw\"", "cmd": "find . -name \"orapw*\" -type f"}, {"invocation": "Find all files in the current directory tree whose pathnames match pattern \"./sr*sc\"", "cmd": "find . -path \"./sr*sc\""}, {"invocation": "SSH into $1 with login name 'pete'", "cmd": "ssh \"$1\" -l pete"}, {"invocation": "Get the total sizes of all files under current directory", "cmd": "find . -type f -printf '%p %s\\n' | awk '{ sum+=$2}; END { print sum}'"}, {"invocation": "Recursively copies '../include/gtest' directory to '~/usr/gtest/include/'.", "cmd": "cp -r ../include/gtest ~/usr/gtest/include/"}, {"invocation": "Infinitely write \"1\" with line numbers to the console and \"/tmp/to\"", "cmd": "yes 1 | nl | tee /tmp/to"}, {"invocation": "Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames", "cmd": "find . -name \\*.html -exec grep -H string-to-find {} \\;"}, {"invocation": "Lists all subdirectories in the current directory", "cmd": "ls -d -- */                    ### more reliable GNU ls"}, {"invocation": "List .log files from the current directory tree", "cmd": "find . -name \"*.log\" -exec echo {} \\;"}, {"invocation": "Returns unsuccessful exit code on each found file like '*tests*' within current directory.", "cmd": "find . -name '*tests*' -print -exec false \\;"}, {"invocation": "display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names", "cmd": "find /var -size +10000k -print0 | xargs -0 ls -lSh"}, {"invocation": "Find all files/directories under current directory that were accessed less than 1 day ago", "cmd": "find . -atime -1 -print"}, {"invocation": "force delete all the regular files with the name \"test.txt\"", "cmd": "find /home -type f -name test.txt -exec rm -f {} \\"}, {"invocation": "Find files in the current directory tree whose size is greater than 24000 bytes", "cmd": "find . -size +24000c"}, {"invocation": "Check all .txt files whether they contain \"needle\"", "cmd": "find . -type f -iname \"*.txt\" -print | xargs grep \"needle\""}, {"invocation": "Print \"yes\" 4 times followed by 1 \"no\"", "cmd": "yes yes | sed -e 5s/yes/no/ -e 5q"}, {"invocation": "Find all directories named \"nasa\"", "cmd": "find . -name nasa -type d"}, {"invocation": "Saves value '1' in the $PIPESTATUS variable and returns 0.", "cmd": "false | tee /dev/null"}, {"invocation": "Forcibly create symlink named as '/cygdrive/c/Users/Mic/mypics' to the directory '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/'", "cmd": "ln -sf '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/' '/cygdrive/c/Users/Mic/mypics'"}, {"invocation": "Find all files matching the pattern \"${pattern}\" in their name and execute ${my_command} for each of them with the file path as argument", "cmd": "find ${directory} -name \"${pattern}\" -print0 | xargs -0 ${my_command}"}, {"invocation": "Get the actual find exectuable path", "cmd": "which find"}, {"invocation": "forcible create a symbolic link named \"/etc/file.conf\" to file \"/etc/configuration/file.conf\"", "cmd": "ln -fs /etc/configuration/file.conf /etc/file.conf"}, {"invocation": "Print which files differ between \"folder1\" and \"folder2\" treating all files as text", "cmd": "diff -arq folder1 folder2"}, {"invocation": "Combine every two lines of standard input", "cmd": "paste -d \"\" - -"}, {"invocation": "Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files", "cmd": "find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's/toreplace/replaced/g'"}, {"invocation": "search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB", "cmd": "find ~/tmp -type f -mtime 0 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"}, {"invocation": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names excluding the paths */generated/* and */deploy/*", "cmd": "find . -regextype posix-egrep -regex '.+\\.(c|cpp|h)$' -not -path '*/generated/*' -not -path '*/deploy/*' -print0 | xargs -0 ls -L1d"}, {"invocation": "Print command line of process with pid 17709", "cmd": "cat /proc/17709/cmdline | xargs -0 echo"}, {"invocation": "display long listing of all the files in the root folder which are bigger than 3KB", "cmd": "find / -dev -size +3000 -exec ls -l {} ;"}, {"invocation": "change the permission of all the rpm files in the entire file system to 755", "cmd": "find / -name *.rpm -exec chmod 755 '{}' \\;"}, {"invocation": "Find & calculate total number of caractor  in all .txt file from current directory", "cmd": "find .  -type f  -name '*.txt' -exec wc -c {} \\; | awk '{total += $1} END{print total}'"}, {"invocation": "Move all files not matching \"Tux.png\" in \"~/Linux/Old\" to \"~/Linux/New/\" using zsh with \"EXTENDED_GLOB\"", "cmd": "mv ~/Linux/Old/^Tux.png ~/Linux/New/"}, {"invocation": "Find and print the names of all files found in the current directory and all of its sub-directories.", "cmd": "find ."}, {"invocation": "Search the `images' directory tree for regular files", "cmd": "find images/ -type f"}, {"invocation": "Print the list of .txt files under and below the current directory", "cmd": "find . -name '*.txt' -print0|xargs -0 -n 1 echo"}, {"invocation": "find directories in the folder /usr/spool/uucp", "cmd": "find /usr/spool/uucp -type d -print"}, {"invocation": "search for all regular/normal files in the current folder and display the number of lines in the file", "cmd": "find . -type f -print0 | xargs -0L1 wc -l"}, {"invocation": "Search current directory for any directory named \"config\" and go to first match found.", "cmd": "cd \"$(find . -name config -type d | sed 1q)\""}, {"invocation": "Print unique lines of sorted file \"a\" compared with sorted file \"b\"", "cmd": "comm -23 a b"}, {"invocation": "Remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago", "cmd": "find ~/backups/mydatabasename/* -mtime +30 -exec rm {} \\;"}, {"invocation": "Split \"$file\" into files with at most 1000 lines each and use a prefix length of 5", "cmd": "split -a 5 $file"}, {"invocation": "Remove files in the current directory tree whose names match pattern \"file?\"", "cmd": "find . -name \"file?\" -exec rm -vf {} \\;"}, {"invocation": "Output a CSV file as a formatted table", "cmd": "sed 's/^,/ ,/' test2.csv | tr -d \\\" | column -s, -t"}, {"invocation": "find all the files which have the write permission to the group and remove the write permission.", "cmd": "find . -perm -20 -exec chmod g-w {} ;"}, {"invocation": "Find all files under directory tree /path/to/dir whose permissions are not 644", "cmd": "find /path/to/dir ! -perm 0644"}, {"invocation": "Copy all files (not directories) in \"/path/to/local/storage\" to \"/path/to/copy\" on host \"remote.host\" authenticating as user \"user\"", "cmd": "rsync /path/to/local/storage user@remote.host:/path/to/copy"}, {"invocation": "Recursively print all files and directories in the current directory tree", "cmd": "tree ."}, {"invocation": "Add execute permission to \"ComputeDate\", \"col\", and \"printdirections\" for all users", "cmd": "chmod a+x ComputeDate col printdirections"}, {"invocation": "Print lines unique and common to sorted files \"file1\" and  \"file2\"", "cmd": "comm file1 file2"}, {"invocation": "find all normal/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and move them to  temp folder", "cmd": "find . -maxdepth 1 -type f  -name '*~' -exec mv {} /tmp/ \\;  -or  -name '#*#' -exec mv {} /tmp/ \\;"}, {"invocation": "Force create a symbolic link without dereferencing named \"mylink\" to \"dir2\"", "cmd": "ln -nsf dir2 mylink"}, {"invocation": "Add group write permission to all files in the current directory", "cmd": "find . -maxdepth 0 -type f -exec chmod g+w {} ';'"}, {"invocation": "Find all files/directories named 'Waldo' under 'Books' directory tree that is located in user's home directory", "cmd": "find ~/Books -name Waldo"}, {"invocation": "Display only first and second dot-separated numbers of kernel version, ie. 4.4", "cmd": "uname -r | sed 's/\\([0-9]\\+\\.[0-9]\\+\\)\\..*/\\1/'"}, {"invocation": "Extract 8 bytes as an unsigned integer that is \"$o\" offset into \"$pkg\"", "cmd": "set `od -j $o -N 8 -t u1 $pkg`"}, {"invocation": "Show all values (without the names) of variables whose name or value contains \"VARIABLE_NAME\"", "cmd": "set | grep VARIABLE_NAME | sed 's/^.*=//'"}, {"invocation": "Print epoch seconds for given time string \"Oct 21 1973\"", "cmd": "date -d \"Oct 21 1973\" +%s"}, {"invocation": "Find all directories under mydir", "cmd": "find mydir -type d"}, {"invocation": "Print unique lines of sorted file \"A.txt\" compared to sorted file \"B.txt\"", "cmd": "comm -2 -3 <(sort A.txt) <(sort B.txt)"}, {"invocation": "Find and print detailed information about all regular files in your home directory and below that have only the group permission set", "cmd": "find . -perm g=r -type f -exec ls -l {} \\;"}, {"invocation": "find all jpg files in current folder", "cmd": "find . -type f -name \"*.JPG\""}, {"invocation": "find all files in the current folder that are modified exactly 2 minutes ago", "cmd": "find -mmin 2 -print"}, {"invocation": "List all files/directories under current directory", "cmd": "find . -ls"}, {"invocation": "Force create a symbolic link named \"id_rsa\" to \"$keyname\"", "cmd": "ln -sf $keyname     id_rsa"}, {"invocation": "find all the perl files in /var/www", "cmd": "find /var/www/ -type f -name \"*.pl\" -print"}, {"invocation": "Archive \"somedir/./foo/bar/baz.c\" to \"remote:/tmp/\" preserving the relative path of \"foo/bar/baz.c\"", "cmd": "rsync -avR somedir/./foo/bar/baz.c remote:/tmp/"}, {"invocation": "Find all files/directories under ./var/log directory", "cmd": "find ./var/log"}, {"invocation": "List all nfs mounts", "cmd": "mount -l -t nfs4"}, {"invocation": "Print the list of the subdirectories of /path/to/dir", "cmd": "find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.", "cmd": "find ~/ -name *.tar.gz -newer filename"}, {"invocation": "display all the files in the current folder that end with \".ksh\"", "cmd": "find . -name \"*.ksh\" -prune"}, {"invocation": "List all existing environment variables in the current shell.", "cmd": "env | awk -F= '/[a-zA-Z_][a-zA-Z_0-9]*=/ { if (!system(\"[ -n \\\"${\" $1 \"+y}\\\" ]\")) print $1 }' | sort | uniq"}, {"invocation": "Print a sorted list of directories from the ~/Music tree containing files whose names begin with \"cover.\"", "cmd": "find ~/Music/ -iname 'cover.*' -printf '%h\\n' | sort -u"}, {"invocation": "Copy a file xyz.c to all the directories below the current one whose names begin with \"temp\"", "cmd": "find . -type d -name \"temp*\" | xargs -n1 cp xyz.c"}, {"invocation": "Print the user name of the current user", "cmd": "echo `whoami`"}, {"invocation": "display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours", "cmd": "find /home/you -iname \"*.txt\" -mtime -60 | wc -l"}, {"invocation": "Search for the files/directories that were modified more than an hour ago", "cmd": "find . -mtime +1"}, {"invocation": "find all the files that have been changed today", "cmd": "find . -ctime 0 -type f"}, {"invocation": "find all js files under the build direcotry except build/external directory.", "cmd": "find build -not \\( -path build/external -prune \\) -name \\*.js"}, {"invocation": "Prints random line from file $FILE.", "cmd": "sort --random-sort $FILE | head -n 1"}, {"invocation": "Search for 'mystring' in all *.txt files under current directory", "cmd": "find . -name \"*.txt\" -print0 | xargs -0 egrep mystring"}, {"invocation": "List all files under current directory", "cmd": "find . -type f | xargs ls"}, {"invocation": "Extract number from $filename of the form \"something_12345_else\" and set the variable \"number\" to this number.", "cmd": "number=$(echo $filename | awk -F _ '{ print $2 }')"}, {"invocation": "Save a list of all the files/directories under current directory tree to a file named 'foo'", "cmd": "find . -fprint foo"}, {"invocation": "Copy the entire directory tree under t1 to t2, do not create a containing t1 directory in t2.", "cmd": "cp -R t1/ t2"}, {"invocation": "display all the regular/normal files ending with \".mod\" in a folder", "cmd": "find \"$dir\" -name \"*.mod\" -type f -print0"}, {"invocation": "Find files that match the executable bit for owner or group", "cmd": "find -type f -perm /110"}, {"invocation": "Extracts a bz2 file.", "cmd": "bunzip2 file.bz2"}, {"invocation": "Hash hostnames in user's known hosts file.", "cmd": "ssh-keygen -Hf ~/.ssh/known_hosts"}, {"invocation": "Print the full real path of \"/dev/disk/by-uuid/$1\" followed by \"is mounted\"", "cmd": "echo $(readlink -f /dev/disk/by-uuid/$1) is mounted"}, {"invocation": "Make directory \"tata\"", "cmd": "mkdir tata"}, {"invocation": "Find all files/directories that were modified after February 1st under '/usr' directory tree", "cmd": "find /usr -newermt \"Feb 1\""}, {"invocation": "List all environment variables whose name starts with PATH, showing the name and value of each one.", "cmd": "env | grep ^PATH"}, {"invocation": "search for all the files in the folder /data/images which are modified after /tmp/foo", "cmd": "find /data/images -newer /tmp/foo"}, {"invocation": "display all the files  in the current folder which have colon in their name", "cmd": "find . -name \"*:*\""}, {"invocation": "Change permssions of *.cgi files under directories htdocs and cgi-bin to 755", "cmd": "find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}, {"invocation": "Set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree", "cmd": "sudo find foldername -exec chmod a+rwx {} \";\""}, {"invocation": "Find all files under current directory", "cmd": "find . -type f"}, {"invocation": "Rename \"blah1\" to \"blah1-new\"", "cmd": "mv blah1 blah1-new"}, {"invocation": "Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path", "cmd": "find /foo/bar -name '*.mp4' -exec mv -t /some/path {} +"}, {"invocation": "check if myfile has 0644 permissions", "cmd": "find myfile -perm 0644 -print"}, {"invocation": "Finds file 'Subscription.java' and changes to containing folder.", "cmd": "cd `find . -name Subscription.java | xargs dirname`"}, {"invocation": "read all history lines not already read from the history file", "cmd": "history -n"}, {"invocation": "display all files in the current folder after pruning those in the current folder ( dot is the output of this command )", "cmd": "find . -prune -print"}, {"invocation": "Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.", "cmd": "grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e \"pattern\""}, {"invocation": "Search \"whatyousearchfor\" in history and print 3 lines before and 4 lines after", "cmd": "history | grep -A 4 -B 3 whatyousearchfor"}, {"invocation": "Use 'less' to nicely display control characters from the outupt of 'grep'.", "cmd": "grep -b -o $'\\x0c' filename | less"}, {"invocation": "Immediately exit the shell if a command fails", "cmd": "set -e"}, {"invocation": "Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.", "cmd": "find ~/ -mtime -2 -o -newer filename"}, {"invocation": "Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory", "cmd": "find -L -maxdepth 1 -name 'upvoter-*' -type f -perm /111"}, {"invocation": "Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.", "cmd": "find . -name '*.pdf' -print"}, {"invocation": "find all the directories in current folder and delete them", "cmd": "find . -type d -delete"}, {"invocation": "Extract any line in sorted file \"A\" that does not appear in \"B\", \"C\", or \"D\"", "cmd": "cat B C D | sort | comm -2 -3 A -"}, {"invocation": "search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the \"work\" directory", "cmd": "find /root/ -name 'work' -prune -o -name myfile -type f -print"}, {"invocation": "Find all files/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others", "cmd": "find / -perm /a+w"}, {"invocation": "Print the column count of compressed file \"$file\"", "cmd": "zcat \"$file\" | awk '{print NF}' | head"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified at least 1 day ago", "cmd": "find . -type f -mtime +0"}, {"invocation": "find all the \".JPG\" files in current folder and display their count", "cmd": "find ./ -name '*.JPG' -type f | wc -l"}, {"invocation": "Find files in the current directory tree that were accessed within the last 60 minutes", "cmd": "find . -amin -60"}, {"invocation": "find all the normal/regular files in the folder main-directory", "cmd": "find main-directory -type f"}, {"invocation": "Print a 2 byte hexadecimal value, printable character, and octal value of \"$1\"", "cmd": "echo \"$1\" | od -xcb"}, {"invocation": "Login in 'whatever.com' as user 'whoever' with X11 forwarding to enable GUI programs on remote to be run", "cmd": "ssh -X whoever@whatever.com"}, {"invocation": "Save the md5 sum hash of \"${my_iso_file}\" to variable \"md5\"", "cmd": "md5=`md5sum ${my_iso_file} | awk '{ print $1 }'`"}, {"invocation": "search for the file \"myletter.doc\" in the home folder", "cmd": "find ~ -name myletter.doc -print"}, {"invocation": "Split \"list.txt\" into files with at most 600 lines each", "cmd": "split -l 600 list.txt"}, {"invocation": "Send 4 ping requests to host \"google.comz\", displaying only the summary info after the last request completed.", "cmd": "ping -c 4 -q google.comz"}, {"invocation": "Remove sess_* files that were modified more than 2 days ago", "cmd": "find sess_* -mtime +2 -exec rm {} \\;"}, {"invocation": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"", "cmd": "`sudo chown -R mongodb:mongodb /data/*`"}, {"invocation": "Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"", "cmd": "echo -e \"$correctFilePathAndName\" | xargs touch"}, {"invocation": "search all files in the current folder which match the regular expression", "cmd": "find . -regex \".*/my.*p.$\" -a -not -regex \".*test.*\""}, {"invocation": "Write the current date and time followed by \" 1\" to the console and append to \"log.csv\"", "cmd": "echo $(date) \"1\" | tee -a log.csv"}, {"invocation": "Print a sorted list of the extensions of the regular files from the current directory tree", "cmd": "find . -type f | sed -e 's/.*\\.//' | sed -e 's/.*\\///' | sort -u"}, {"invocation": "Split \"/etc/gconf/schemas/gnome-terminal.schemas\" into 1000000 files of about equal size", "cmd": "split -n 1000000 /etc/gconf/schemas/gnome-terminal.schemas"}, {"invocation": "Removes only lowest level subfolders from current directory tree (folders without files and another folders within).", "cmd": "find . -type d | xargs rmdir"}, {"invocation": "Print the directory name of the real full path of \"relative/path/to/file\" where each symbolic link component must exist", "cmd": "dirname `readlink -e relative/path/to/file`"}, {"invocation": "Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names", "cmd": "find \"$STORAGEFOLDER\" -name .todo  -exec dirname {} \\;"}, {"invocation": "Change file owner and group of \"/path/to/yourapp\" to root and print a diagnostic", "cmd": "chown -v root:root /path/to/yourapp"}, {"invocation": "Write \"error\" to standard output", "cmd": "echo \"error\" | tee"}, {"invocation": "Remove all libEGL* files from the current directory tree", "cmd": "find . -name libEGL* | xargs rm -f"}, {"invocation": "Find files/directories named 'file.txt' in the path '/usr/lib/important/'", "cmd": "find / -path /usr/lib/important/*/file.txt"}, {"invocation": "Find all regular files under /home/www and replace every occurrences of 'subdomainA' with 'subdomainB' in those files (may produce 'agument too long' error)", "cmd": "sed -i '' -e 's/subdomainA/subdomainB/g' $(find /home/www/ -type f)"}, {"invocation": "Copy all files below the current directory whose names contain \"foobar\" (case-insensitive) to directory foo/bar/ in user's home directory.", "cmd": "find . -iname \"*foobar*\" -exec cp \"{}\" ~/foo/bar \\;"}, {"invocation": "Search the system for files whose names begin with letters 'a', 'b', or 'c'", "cmd": "find  / -name '[a-c]*'"}, {"invocation": "Format the time string @133986838 according to the default time format and save it to variable 'VARIABLENAME'", "cmd": "VARIABLENAME=$(date -d @133986838)"}, {"invocation": "Find all files/directories with name pattern $nombre that are at most 2 levels down the $DIR_TEMPORAL and $DIR_DESCARGA directories and show only the file names (without parent path) appended with '.torrent'", "cmd": "find \"$DIR_TEMPORAL\" \"$DIR_DESCARGA\" -maxdepth 2 -name \"$nombre\" -printf '%f.torrent\\n'"}, {"invocation": "Find all files in the current directory recursively that were last modified more than 5 days ago", "cmd": "find ./* -mtime +5"}, {"invocation": "display all the files in the current folder excluding search in the paths containing the folder having the word \"mmm\"", "cmd": "find . ! -path *mmm*"}, {"invocation": "Find all files/directories under current directory and sort them", "cmd": "find | sort"}, {"invocation": "Print the grand total disk usage of all files listed in \"files.txt\"", "cmd": "cat files.txt | xargs du -c | tail -1"}, {"invocation": "Print second section of space-separated data coming from stdin.", "cmd": "cut -d ' ' -f 2"}, {"invocation": "Print first word of lines unique for 'file1' file", "cmd": "grep -o '^\\S\\+' <(comm file1 file2)"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder.", "cmd": "rm **/*.pyc"}, {"invocation": "Search the /myfiles directory tree for files last modified 2 days ago", "cmd": "find /myfiles -mtime 2"}, {"invocation": "Find all directories named $1 under $HOME directory tree and remove them", "cmd": "find $HOME -type d -name $1 -exec echo {} ';'  -exec rm -rf {} ';'"}, {"invocation": "Create a symbolic link relative to link location named \"$dest_dir/$orig_name\" to \"$orig_dest\"", "cmd": "ln -r -s \"$orig_dest\" \"$dest_dir/$orig_name\""}, {"invocation": "Print unique lines in \"file_a\" and \"file_b\"", "cmd": "sort file_a file_b|uniq -u"}, {"invocation": "Search /tmp/ for files smaller than 100 bytes", "cmd": "find /tmp -size -100c"}, {"invocation": "Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'", "cmd": "find ~/dir_data -type d -exec chmod a+xr,u+w {} \\;"}, {"invocation": "Print the full path of command \"rails\"", "cmd": "which rails"}, {"invocation": "Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass'", "cmd": "pass=$(LC_CTYPE=C < /dev/urandom tr -cd [:graph:] | tr -d '\\n' | fold -w 32 | head -n 1)"}, {"invocation": "Runs `file' on every file in or below the current directory.", "cmd": "find . -type f -exec file '{}' \\;"}, {"invocation": "Report file system containing path to /dir/inner_dir/ disk usage in kilobytes.", "cmd": "df -k /dir/inner_dir/"}, {"invocation": "Find all regular .html files in the /var/www directory tree", "cmd": "find /var/www -type f -name \"*.html\""}, {"invocation": "Enables shell option 'failglob'.", "cmd": "shopt -s failglob"}, {"invocation": "Search the current directory tree for symbolic links to files matching pattern '*/test*'", "cmd": "find -P . -lname '*/test*'"}, {"invocation": "Prints total count of lines of all *.php files in a current folder and subfolders.", "cmd": "find . -name '*.php' -type f -exec cat -- {} + | wc -l"}, {"invocation": "Display the entire contents of 'file', replacing only the very first instance of \"old\" with \"new\".", "cmd": "grep -E -m 1 -n 'old' file | sed 's/:.*$//' - | sed 's/$/s\\/old\\/new\\//' - | sed -f - file"}, {"invocation": "Split \"randn20M.csv\" into files of at most 5000000 lines each with prefix \"_tmp\"", "cmd": "split -l5000000 randn20M.csv '_tmp';"}, {"invocation": "display all the files in the current folder that are at least one week old (7 days) but less then 30 days old", "cmd": "find . -mtime +30 -a -mtime -7 -print0"}, {"invocation": "Remove trailing white spaces from all files under current directory ignoring .git and .svn directories", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\""}, {"invocation": "Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file", "cmd": "find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt"}, {"invocation": "Print the full name of \"$USER\"", "cmd": "finger $USER |head -n1 |cut -d : -f3"}, {"invocation": "Mount \"cpuset\" filesystem on \"/cpuset/\"", "cmd": "mount -t cpuset none /cpuset/"}, {"invocation": "Find *.js UTF-8 files with BOM and correct them", "cmd": "find . -iname *.js -type f -exec sed 's/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;"}, {"invocation": "Get second line from text contained in variable $data.", "cmd": "echo \"$data\" | cut -f2 -d$'\\n'"}, {"invocation": "Find *.html files in the current directory tree that were modified less than 7 days ago", "cmd": "find . -mtime -7 -name \"*.html\" -print"}, {"invocation": "Send SIGTERM (signal 15) signal to all process whose username is \"username\" and whose command is \"your_command\".", "cmd": "ps -o uid,pid,cmd|awk '{if($1==\"username\" && $3==\"your_command\") print $2}'|xargs kill -15"}, {"invocation": "find all files in etc which have been changed in the last 1 day", "cmd": "find /etc -daystart -ctime -1"}, {"invocation": "search for the file in the entire file system which has the words \"filename\" in its name", "cmd": "find / -name \u201d*filename*\u201d"}, {"invocation": "Enables shell options 'nullglob' and 'dotglob'.", "cmd": "shopt -s nullglob dotglob"}, {"invocation": "Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\", using at most 1000000 characters per command.", "cmd": "find . -name \"*_test.rb\" | xargs -s 1000000 rename s/_test/_spec/"}, {"invocation": "Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.", "cmd": "find $LOCATION -print -exec shred $TIMES -u '{}' \\;"}, {"invocation": "Prefix all files and directories in the current directory with \"Unix_\"", "cmd": "ls | xargs -I {} mv {} Unix_{}"}, {"invocation": "Find all empty files (zero byte files) in your home directory and its sub-directories.", "cmd": "find ~ -empty"}, {"invocation": "display all the directories in the folder /path/to/dest except tmp and cache directories", "cmd": "find /path/to/dest -type d \\( ! -name tmp \\) -o \\( ! -name cache \\) -print"}, {"invocation": "Recursively copy directories \"A\" and \"D\" to directory \"/path/to/target/directory\" on host \"anotherhost\", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).", "cmd": "scp -r A D anotherhost:/path/to/target/directory"}, {"invocation": "Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set", "cmd": "find /path/to/dir/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644"}, {"invocation": "Search the current directory tree for files whose name is \".note\", case insensitive", "cmd": "find . -iname '.note' | sort"}, {"invocation": "Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed", "cmd": "file_changed=$(find . -depth \\( -wholename \\./\\.\\* \\) -prune -o -mtime -1 -print | cpio -oav)"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found", "cmd": "find var/log/ -iname \"anaconda.*\" -exec tar -rvf file.tar {} \\;"}, {"invocation": "Copy all files ending in \".a\" in directory trees matching \"folder*\" to \"/path/to/dest\" preserving directory hierarchy", "cmd": "find folder* -name '*.a' -print | cpio -pvd /path/to/dest"}, {"invocation": "display all the files ending with \".user\" or beginning with \"admin\" or ending with \".user.gz\" in /var/adm/logs/morelogs/ and excluding  all regular files", "cmd": "find /var/adm/logs/morelogs/* -type f -prune \\( -name \"admin.*\" -o -name \"*.user\" -o -name \"*.user.gz\" \\) -print"}, {"invocation": "Allow all users to execute '$pathToShell\"myShell.sh\"'", "cmd": "chmod a+x $pathToShell\"myShell.sh\""}, {"invocation": "Delete all files in the \"${S}/bundled-libs\" folder except \"libbass.so\"", "cmd": "find \"${S}/bundled-libs\" \\! -name 'libbass.so' -delete"}, {"invocation": "Recursively change the owner group of \"/var/www\" of to \"www-data\"", "cmd": "sudo chown -R www-data:www-data /var/www"}, {"invocation": "print all readline bindings", "cmd": "bind -P"}, {"invocation": "Read a line from standard input with prompt \"Enter your choice: \", arrow keys enabled, and \"yes\" as the default input, and save the response to variable \"choice\"", "cmd": "read -e -i \"yes\" -p \"Enter your choice: \" choice"}, {"invocation": "Show the number of lines for each PHP file in the current directory tree", "cmd": "find . -type f -name \"*.php\" -exec wc -l {} +;"}, {"invocation": "Find files modified more recently than file poop", "cmd": "find . -newer poop"}, {"invocation": "Find all files/directories in level $i down the current directory with all positional parameters appended with the find command", "cmd": "find -mindepth $i -maxdepth $i \"$@\""}, {"invocation": "find all the html, javascript and text files in the current folder", "cmd": "find . -type f -name \"*.htm*\" -o -name \"*.js*\" -o -name \"*.txt\""}, {"invocation": "Search the current directory tree for regular files that were accessed $FTIME days ago", "cmd": "find . -type f -atime $FTIME"}, {"invocation": "list all CSS files (and directories ending with \u201c.css\u201d) under the current directory", "cmd": "find . -name \"*.css\""}, {"invocation": "all the files that end with .mp3 and end with .jpg", "cmd": "find . -name '*.mp3' -name '*.jpg' -print"}, {"invocation": "Creates temporary folder and saves path to it in 'other' variable.", "cmd": "other=\"$(mktemp --directory)\""}, {"invocation": "Filters unique lines by matching against the first column of a .csv file", "cmd": "tac a.csv | sort -u -t, -r -k1,1 |tac"}, {"invocation": "sort each file in the bills directory, leaving the output in that file name with .sorted appended", "cmd": "find bills -type f -execdir sort -o '{}.sorted' '{}' ';'"}, {"invocation": "List all symlinks under current directory and search for targetfile.txt in this list", "cmd": "find . -type l | xargs -I % ls -l % | grep targetfile.txt"}, {"invocation": "search for all the text files in the folder /foo and delete them", "cmd": "find /foo/ -name \"*.txt\" -exec rm -v {} \\;"}, {"invocation": "Print the file system \"file/goes/here\" is on", "cmd": "df -P file/goes/here | tail -1 | cut -d' ' -f 1"}, {"invocation": "Recursively change the owner and group of all files in \"public_html\" to \"owner\"", "cmd": "chown -R owner:owner public_html"}, {"invocation": "Search the src/ directory recursively for .c and .h files", "cmd": "find src/ -name '*.[ch]'"}, {"invocation": "Find a directory named 'project.images' in the entire filesystem and show it in long listing format", "cmd": "find  / -type d -name \"project.images\" -ls"}, {"invocation": "Calculate the md5 sum of the output of \"du -csxb /path\" and compare it against the md5 sum saved in \"file\"", "cmd": "du -csxb /path | md5sum -c file"}, {"invocation": "display all the files in current folder which have write permission to all the users", "cmd": "find . -perm /222"}, {"invocation": "find all the files in the current folder and display adding quotations to each file and replace spaces with new line", "cmd": "find $PWD -exec echo -n '\"{}\" ' \\; | tr '\\n' ' '"}, {"invocation": "Remove recursively Emacs backup files in the current directory", "cmd": "find . -name '*~' -print0 | xargs -0 rm"}, {"invocation": "find all files named `linux' on the system", "cmd": "find / -name linux"}, {"invocation": "display a long listing of all fles in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 -ls"}, {"invocation": "Show manual page of find utility", "cmd": "man find"}, {"invocation": "Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time", "cmd": "find /dir -newer yesterday.ref -a \\! -newer today.ref -print"}, {"invocation": "Search the current directory and its sub-directories for any file that has \"bsd\" somewhere in its name.", "cmd": "find . -name \"*bsd*\" -print"}, {"invocation": "Recursively finds strings with\"text string to search\u201d in files under 'directory-path', regarding provided options '[option]'.", "cmd": "grep [option] \"text string to search\u201d directory-path"}, {"invocation": "Find all symlinks in the /myfiles directory tree", "cmd": "find /myfiles -type l"}, {"invocation": "Recursively removes all files in a current folder but '*txt' files.", "cmd": "find . -type f -not -name '*txt' | xargs rm"}, {"invocation": "Find all files/directories with space in their names under current directory", "cmd": "find . -name '* *'"}, {"invocation": "find all the files within your home folder accessed more than 100 days ago", "cmd": "find ~ -atime 100"}, {"invocation": "find all the files which have been modified in the last 15 minutes excluding hidden files.", "cmd": "find . -mmin -15 \\( ! -regex \".*/\\..*\" \\)"}, {"invocation": "Find all broken symlinks under /path/to/search directory", "cmd": "find /path/to/search -xtype l"}, {"invocation": "Find all files with the name \"MyProgram.c\" in the current directory and its sub-directories while ignoring the case of the file name.", "cmd": "find -iname \"MyCProgram.c\""}, {"invocation": "Find all files under the current directory and copy their permissions to the same file in \"../version1\"", "cmd": "find . -type f | xargs -I {} chmod --reference {} ../version1/{}"}, {"invocation": "Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'", "cmd": "find -not -name \"query_to_avoid\""}, {"invocation": "Send one ping request to host whose name or IP address is specified by variable \"ip\", using network interface eth9.", "cmd": "ping ${ip} -I eth9 -c 1"}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*", "cmd": "find . -mtime 0 | grep -v '^\\./en' | grep -v '^\\./es' | grep -v .swp"}, {"invocation": "Find files under current directory that are not newer than $date_time in regards of modification time", "cmd": "find . -type f -not -newermt \"$date_time\""}, {"invocation": "display all instances of \"foo.cpp\" file in the current folder which are not in the sub directory tree \".svn\"", "cmd": "find . -name 'foo.cpp' '!' -path '.svn'"}, {"invocation": "Move all files from the `sourceDir' directory to the `destDir' directory", "cmd": "find sourceDir -mindepth 1 -maxdepth 1 -print0 | xargs -0 mv --target-directory=destDir"}, {"invocation": "find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago", "cmd": "find /usr/local -mtime 1"}, {"invocation": "Recursively find the latest modified file in the current directory", "cmd": "find . -type f -print0|xargs -0 ls -drt|tail -n 1"}, {"invocation": "display all the files in the file system which belong to the user \"user1\"", "cmd": "find / -user user1"}, {"invocation": "Print whether the unique contents of \"set1\" and \"set2\" differ", "cmd": "diff -q <(sort set1 | uniq) <(sort set2 | uniq)"}, {"invocation": "Find all .java files starting from the current folder", "cmd": "find * -name \"*.java\""}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours", "cmd": "find . -mtime 0"}, {"invocation": "Find files that are 0 bytes in size in the current directory tree and remove them", "cmd": "find . -size 0 -exec rm {} \\;"}, {"invocation": "Find all files under current directory", "cmd": "find . -type f -print"}, {"invocation": "find the file \"MyCProgram.c\" in the current folder", "cmd": "find -iname \"MyCProgram.c\""}, {"invocation": "Find regular files named \"expression -and expression\" under and below /dir/to/search/", "cmd": "find /dir/to/search/ -type f -name 'expression -and expression' -print"}, {"invocation": "Mount \"ntfs-3g\" filesystem \"/dev/mapper/myvolume\" on \"/media/volume\"", "cmd": "mount -t ntfs-3g /dev/mapper/myvolume /media/volume"}, {"invocation": "replaces the last occurrence of 'a' with 'c' in file", "cmd": "tac file | sed '/a/ {s//c/; :loop; n; b loop}' | tac"}, {"invocation": "find all the html files in the current folder and delete a line", "cmd": "find ./ -type f -name '*.html' | xargs sed -i '1,/sblmtitle/d'"}, {"invocation": "Print numbers from 1 to 30 with 0 padding to a width of 2", "cmd": "seq -f \"%02g\" 30"}, {"invocation": "Search for 'mystring' in all *.txt files under current directory", "cmd": "find . -name \"*.txt\" -exec egrep mystring {} \\;"}, {"invocation": "List all of the subdirectories in the current directory with no trailing slash.", "cmd": "ls -d */ | cut -f1 -d'/'"}, {"invocation": "find & Substitute Only When the Line Matches with the Pattern Using sed", "cmd": "find . -type f -name \"*.txt\" -exec sed '/\\-/s /\\-.*//g'  {} \\;"}, {"invocation": "Save small letter short day name of the week to variable 'DayOfWeek'", "cmd": "DayOfWeek=`date +%a |tr A-Z a-z`"}, {"invocation": "List the unique tab delimited field number \"$FIELD\" in all files, prefix with the number of occurrences, sort from most frequent to least frequent", "cmd": "cut -f $FIELD * | sort| uniq -c |sort -nr"}, {"invocation": "Counts lines in file $file and prints number only.", "cmd": "wc -l $file | awk '{print $1}';"}, {"invocation": "display all the file in the folder /home/david/ which start with the word \"index\"", "cmd": "find /home/david -name 'index*'"}, {"invocation": "Search for files which are writable by somebody", "cmd": "find . -perm /222"}, {"invocation": "Search the current directory for regular files whose names start with my", "cmd": "find . -name 'my*' -type f"}, {"invocation": "display all the files in the file system which are changed a minute ago", "cmd": "find / -newerct '1 minute ago' -print"}, {"invocation": "Format the time string $timestamp according to the format string \"%Y-%m-%d %H:%M:%S\" and save the output to variable 'CDATE'", "cmd": "CDATE=$( date -d @\"$timestamp\" +\"%Y-%m-%d %H:%M:%S\" )"}, {"invocation": "Print current UTC date in ISO format with precision to seconds", "cmd": "date -u -Iseconds"}, {"invocation": "Search for \"search term\" in a sorted list of all files under current directory", "cmd": "find . | awk '{FS = \"/\" ; print \"\", NF, $F}' | sort -n  | awk '{print $2}' | xargs grep -d skip \"search term\""}, {"invocation": "Compress \"archive.tar\"", "cmd": "gzip archive.tar"}, {"invocation": "Report available space on the file system containing /tmp in kilobytes.", "cmd": "df -k /tmp | tail -1 | tr -s ' ' | cut -d' ' -f4"}, {"invocation": "list all files in the current directory recursively", "cmd": "find ."}, {"invocation": "Archive \"path/subfolder\" to \"path\", skipping files that are newer at the destination.", "cmd": "rsync -vuar --delete-after path/subfolder/ path/"}, {"invocation": "display all normal/regular files in current  folder", "cmd": "find . -type f"}, {"invocation": "List level 2 subdirectories of the current directory", "cmd": "find . -mindepth 2 -maxdepth 2 -type d -printf '%M %u %g %p\\n'"}, {"invocation": "display all the files in the user folder which have been modified after the files /tmp/stamp$$", "cmd": "find /usr -newer /tmp/stamp$$"}, {"invocation": "Search the files under and below /directory/containing/files for \"text to search\"", "cmd": "find /directory/containing/files -type f -print0 | xargs -0 grep \"text to search\""}, {"invocation": "Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory", "cmd": "find {} -name 'upvoter-*' \\( -type f -or -type l \\) -maxdepth 1 -perm +111"}, {"invocation": "Remount \"rfs\" filesystem \"/dev/stl12\" on \"/system\" with read and write permission", "cmd": "mount -o rw,remount -t rfs /dev/stl12 /system"}, {"invocation": "Find all files owned by the user daniel in the current directory and below.", "cmd": "find . -user daniel"}, {"invocation": "Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths", "cmd": "find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'"}, {"invocation": "Find all .txt files in the /home/user directory tree and copy them to /home/backup", "cmd": "find /home/user -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents"}, {"invocation": "Move all hidden files in \"wordpress\" to the current directory", "cmd": "mv wordpress/.* ."}, {"invocation": "Find all empty directories in the current one and delete them", "cmd": "find . -type d -maxdepth 1 -empty -delete"}, {"invocation": "Find all *.txt files/directories under current directory", "cmd": "find . -name *.txt -print"}, {"invocation": "Find all files under media/ directory and change their permission to 600", "cmd": "find media/ -type f -exec chmod 600 {} \\;"}, {"invocation": "List the current directory recursively ignoring the \"dir1\" subdirectory", "cmd": "find . -path ./dir1  -prune -o -print"}, {"invocation": "display all the files in the current folder", "cmd": "find . | awk '{ print \"FILE:\" $0 }'"}, {"invocation": "Gets MAC address of en0 network interface.", "cmd": "ifconfig en0 | grep -Eo ..\\(\\:..\\){5}"}, {"invocation": "Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries", "cmd": "find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4"}, {"invocation": "find files which full path name is /tmp/foo/bar under /tmp/foo directory and print", "cmd": "find /tmp/foo -path /tmp/foo/bar -print"}, {"invocation": "Find all the files in file system which are changed in last 1 hour", "cmd": "find / -cmin -60"}, {"invocation": "Find all files newer than httpd.conf under and below the current directory", "cmd": "find . -newer httpd.conf"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}, {"invocation": "Continuously print the seconds since Unix epoch and the ping time to \"google.com\"", "cmd": "ping google.com | awk -F'[ =]' 'NR>1{print system(\"echo -n $(date +%s)\"), $11}'"}, {"invocation": "Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories", "cmd": "find \"$1\" -perm -u+r -print0 | xargs chmod g+r"}, {"invocation": "Find all 755 permission regular files under current directory tree", "cmd": "find . -type f -perm 755"}, {"invocation": "Find the directories whose names contain \"New Parts\" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views", "cmd": "find -mindepth 3 -maxdepth 3 -type d -name \"*New Parts*\" -exec ln -s -t /cygdrive/c/Views {} \\;"}, {"invocation": "Print the sorted unique column of usernames of users who are currently logged in", "cmd": "finger | cut -d ' ' -f1 | sort -u"}, {"invocation": "Change all cron jobs running \"anm.sh\" to be run every 10 minutes instead of 5 minutes.", "cmd": "crontab -l | sed '/anm\\.sh/s#\\/5#\\/10#' | crontab -"}, {"invocation": "Check md5sum of directory /path against the checksum saved in file 'file'", "cmd": "du -csxb /path | md5sum -c file"}, {"invocation": "Force create a symbolc link named \"/usr/local/bin/fpdf\" to \"/usr/local/bin/findpdftext\"", "cmd": "sudo ln -s -f \"/usr/local/bin/findpdftext\" \"/usr/local/bin/fpdf\""}, {"invocation": "Print the contents of \"xx.sh\"", "cmd": "cat xx.sh"}, {"invocation": "Find all SUID set files under current directory and show a few lines of output from the beginning", "cmd": "find . -perm /u=s | head"}, {"invocation": "find all the text files in current folder and force delete them", "cmd": "find . -name \"*.txt\" | xargs rm -rf"}, {"invocation": "Search the current directory recursively for .m4a files", "cmd": "find . -type f -iname *.m4a -print"}, {"invocation": "Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain \"libstdc++\"", "cmd": "find  /usr/lib/ /usr/lib64/ -lname \"*libstdc++*\""}, {"invocation": "Find all files/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem", "cmd": "find / -user username -group groupname -name filename"}, {"invocation": "search all undo files(ending with .undo) in the current folder and calculate the total size of them", "cmd": "find -name '*.undo' -exec wc -c {} + | tail -n 1"}, {"invocation": "Split \"bigfile\" into files of at most 1000 lines each with prefix \"/lots/of/little/files/here\"", "cmd": "split bigfile /lots/of/little/files/here"}, {"invocation": "Revert $string value and print first 20 space-separated fields", "cmd": "echo $string | rev | cut -d ' ' -f -20"}, {"invocation": "Save the logical current working directory to variable \"basedir\"", "cmd": "basedir=$(pwd -L)"}, {"invocation": "search all jpg images in current folder and rename them", "cmd": "find . -type f -name \"*.jpg\" -print0 | xargs -0 rename \"s/Image_200x200_(\\d{3})/img/\""}, {"invocation": "Convert the first 16 characters in \"/dev/random\" to a single hexadecimal value", "cmd": "head /dev/random -c16 | od -tx1 -w16 | head -n1 | cut -d' ' -f2- | tr -d ' '"}, {"invocation": "Change directory to the directory containing the current script", "cmd": "cd $(dirname $(which $0) )"}, {"invocation": "Create master SSH control socket \"my-ctrl-socket\" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via \"jm@sampledomani.com\"", "cmd": "ssh -M -S my-ctrl-socket -fnNT -L 50000:localhost:3306 jm@sampledomain.com"}, {"invocation": "Save the physical current working directory to variable \"END_ABS\"", "cmd": "END_ABS=`pwd -P`"}, {"invocation": "remove all the files with the name \"Trash\" in the folder /home", "cmd": "find /home -name Trash -exec rm {} \\;"}, {"invocation": "display list of all the files in the current directory", "cmd": "find | xargs ls"}, {"invocation": "search for all the rpm files in the file system which reside in the same partition as that of the root", "cmd": "find / -xdev -name \"*.rpm\""}, {"invocation": "Look in the current directory and below for all files whose names begin with either \"my\" or \"qu\"", "cmd": "find . \\( -name \"my*\" -o -name \"qu*\" \\) -print"}, {"invocation": "find not case sensitive all directories that names are 'project.images'", "cmd": "find  / -type d -iname \"project.images\" -ls"}, {"invocation": "Search the current directory tree for regular files that contain \"string\"", "cmd": "find . -type f | xargs grep string"}, {"invocation": "Remove the \"^M\" characters from all *.ext files under /home directory", "cmd": "find /home -type f -name \"*.ext\" -exec sed -i -e \"s/\\r$//g\" {} \\;"}, {"invocation": "Find all regular files in the current directory tree that match pattern 'btree*.c'", "cmd": "find . -type f -name 'btree*.c'"}, {"invocation": "change group of the file /tmp/php_session to group daemon", "cmd": "chown -R :daemon /tmp/php_session"}, {"invocation": "Search directory trees foo and bar for .java files", "cmd": "find foo bar -name \"*.java\""}, {"invocation": "set MyVariable to the value of VARIABLE_NAME", "cmd": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');"}, {"invocation": "Searches through the /usr/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).", "cmd": "find /usr/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}, {"invocation": "Search \"file1\" for lines matching regex patterns listed in \"file2\" and list the unique results (sorted alphabetically)", "cmd": "grep -f file2 file1 | sort | uniq"}, {"invocation": "Print process tree, adjusting output width with a screen size.", "cmd": "pstree | cat"}, {"invocation": "Find all files/directories named 'javac' under current directory", "cmd": "find . -name 'javac'"}, {"invocation": "Run 'otherscript.sh' script with all environment variables specified in the file 'xxxx'", "cmd": "env `cat xxxx` otherscript.sh"}, {"invocation": "Delete all empty directories under test directory", "cmd": "find test -depth -type d -empty -delete"}, {"invocation": "find all directories with the name test in a directory", "cmd": "find /home/john -type d -name test -print"}, {"invocation": "Find all files under current directory and append a null character at the end of each of their paths", "cmd": "find -type f -print0"}, {"invocation": "search for the word bananas in the all the regular/normal files in the entire file system", "cmd": "find / -type f -exec grep bananas {} \\; -print"}, {"invocation": "Find all empty folders in the current directory and below", "cmd": "find . -type d -empty"}, {"invocation": "Find broken links", "cmd": "find / -type l -print0 | xargs -0 file | grep broken"}, {"invocation": "Find regular files in the current directory that are writable by their owner", "cmd": "find -maxdepth 1 -type f -perm /200"}, {"invocation": "Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically", "cmd": "find \"$dir\" -maxdepth 1 -type f -iname '*.txt' | sort -n"}, {"invocation": "Delete all empty directories under current directory", "cmd": "find -type d -empty"}, {"invocation": "Delete all .pyc files in the current directory tree", "cmd": "find . -name \"*.pyc\" | xargs -0 rm -rf"}, {"invocation": "Use \"$BYTES\" amount of RAM with no output", "cmd": "yes | tr \\\\n x | head -c $BYTES | grep n"}, {"invocation": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"", "cmd": "find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir"}, {"invocation": "search for the files with the name \"temp\" and which have not been accessed in the last 7*24 hours in the /usr folder", "cmd": "find /usr -name temp -atime +7 -print"}, {"invocation": "Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/'", "cmd": "find /usr/ports/ -name pkg-plist\\* -exec grep -l etc/rc.d/ '{}' '+' | wc -l"}, {"invocation": "Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640", "cmd": "find /home/mywebsite/public_html/sites/all/modules -type f -exec chmod 640 {} +"}, {"invocation": "Create a symbolic link named \"wh\" to \"$wh\"", "cmd": "ln -s \"$wh\" wh"}, {"invocation": "Print the help message of command \"split\"", "cmd": "split --help"}, {"invocation": "find all files without 777 permision", "cmd": "find / -type f ! perm 777"}, {"invocation": "find all the text files in the temp folder and search for the word hello in all these files and display the matched files", "cmd": "find /tmp -type f -name \u2018*.txt*\u2019 | sed -e \u2018s/.*/\\\u201d&\\\u201d/\u2019 |xargs -n 1 grep -l hello|sed -e \u2018s/.*/\\\u201d&\\\u201d/\u2019"}, {"invocation": "Search for files only that end with .php and look for the string $test inside those files", "cmd": "find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'"}, {"invocation": "Search /some/directory for files that are owned by the user \"joebob\"", "cmd": "find /some/directory -user joebob -print"}, {"invocation": "find all the files in the current folder which have executable permission to all the users and display the ten files", "cmd": "find . -perm /a=x | head"}, {"invocation": "get the count of all the files that have been accessed in the last 30 days", "cmd": "find . -atime +30 -exec ls \\; | wc -l"}, {"invocation": "Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: \"length(FOO_NO_TRAIL_SPACE)==<counted number of characters>\"", "cmd": "echo -e \"length(FOO_NO_TRAIL_SPACE)==$(echo -ne \"${FOO_NO_TRAIL_SPACE}\" | wc -m)\""}, {"invocation": "Find files changed in the last 1 day", "cmd": "find . -mtime -1 -type f"}, {"invocation": "Locate all files in the current directory and below that have \"testfile\" in their names regardless of the case", "cmd": "find -iname \"*TESTFILE*\""}, {"invocation": "Display the current directory tree except files or directories starting with \"3rd\"", "cmd": "tree -I '3rd*'"}, {"invocation": "Search all .py files in the current directory tree for \"some_function\"", "cmd": "find . -name \\*.py | xargs grep some_function"}, {"invocation": "Print full path of command \"python\"", "cmd": "which python"}, {"invocation": "Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size", "cmd": "find . -iregex \".*packet.*\" ! -type d -size +1500c"}, {"invocation": "bind word \"pwd\\n\" to key code \"\\e[24~\"", "cmd": "bind '\"\\e[24~\":\"pwd\\n\"'"}, {"invocation": "Add executable permission to \"rr.sh\"", "cmd": "chmod +x rr.sh"}, {"invocation": "Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep", "cmd": "find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \\;"}, {"invocation": "Find all directories in /path/to/dir/ without going into sub-directories and append a null character at the end of each paths", "cmd": "find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d -print0"}, {"invocation": "Recursively copies everything under the 'current' folder to the '.hiddendir' folder.", "cmd": "cp * .hiddendir -R"}, {"invocation": "Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username", "cmd": "find $dir -maxdepth 1 -type d -user $username -perm -100"}, {"invocation": "Gets IP addresses of all active network interfaces on host.", "cmd": "ifconfig | grep 'inet' | grep -v '127.0.0.1' | awk '{print $2}' | sed 's/addr://'"}, {"invocation": "Find all the SGID files in the current directory tree", "cmd": "find . -perm /g+s"}, {"invocation": "Search for symlinks pointing to anywhere within /mnt/oldname/", "cmd": "find / -type l -lname '/mnt/oldname*'"}, {"invocation": "Prints folder where current script is located", "cmd": "echo \"dirname: `dirname $0`\""}, {"invocation": "Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories", "cmd": "find ~/bin/FilesDvorak/.* -maxdepth 0 | awk -F\"/\" '{ print $6 }'"}, {"invocation": "Create a symbolic link named \"$HOME/bin/\" to \"$HOME/downloads/fnord\"", "cmd": "ln -s $HOME/downloads/fnord $HOME/bin/"}, {"invocation": "remove all the regular/normal files in the temp folder and do not delete in the sub folders", "cmd": "find /tmp -maxdepth 1 -type f -delete"}, {"invocation": "search for al cpp files in current folder and display unique parent directory of these files in sorted order", "cmd": "find . -name \"*.cpp\" -exec dirname {} \\; | sort -u"}, {"invocation": "Search for 'Processed Files' in all $srch* (case insensitive) files under current directory run the sed script 'N;s/(.*)\\n(.*)/\\2 \\1/' on the output", "cmd": "find . -iname \"$srch*\" -exec grep \"Processed Files\" {} \\; -print| sed -r 'N;s/(.*)\\n(.*)/\\2 \\1/'"}, {"invocation": "Copies file 'index.html' to each top-level directory in the current directory.", "cmd": "find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html"}, {"invocation": "Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree", "cmd": "find /usr/share/doc -iname readme\\*"}, {"invocation": "Split the sorted and unique lines in files \"emails_*.txt\" into files with at most 200 lines each with numeric suffixes of length 4", "cmd": "sort --unique emails_*.txt | split --numeric-suffixes --lines=200 --suffix-length=4 --verbose"}, {"invocation": "search for all the files having spaces in the current folder and save the output to the variable founddata", "cmd": "founddata=`find . -name \"filename including space\" -print0`"}, {"invocation": "search for all the files in the current folder which have spaces and force delete them", "cmd": "find . -name \"filename including space\" -print0 | xargs -0 rm -rdf"}, {"invocation": "change the group of all the files in the folder /u/netinst/ to staff", "cmd": "find /u/netinst -print | xargs chgrp staff"}, {"invocation": "Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree", "cmd": "find \"$DIR\" -type f -exec grep -q \"$SEARCH\" {} + ;"}, {"invocation": "Remove ESC key bind", "cmd": "bind -r '\\e'"}, {"invocation": "Remount \"/dev/shm\" with a maximum size of \"40G\"", "cmd": "mount -o remount,size=40G /dev/shm"}, {"invocation": "Save the full path of command \"oracle\" to variable \"path\"", "cmd": "path=`which oracle`"}, {"invocation": "Recursively copies everything from '/source/path/*' to the '/destination/path/', preserving from overwriting existing files, and printing info message on each operation.", "cmd": "cp -Rvn /source/path/* /destination/path/"}, {"invocation": "Execute the file utility for each file found under /etc and below", "cmd": "find /etc -print0 | xargs -0 file"}, {"invocation": "display all the files and directories with the name \"CVS\"  from /usr/src folder that are at least seven levels deep and do not descend onto the folders", "cmd": "find /usr/src -name CVS -prune -o -depth +6 -print"}, {"invocation": "Run 'somecommand' in an environment without the FOO variable.", "cmd": "env -u FOO somecommand"}, {"invocation": "find all CSS files that do something with your HTML ID #content", "cmd": "find . -name \"*.css\" -exec grep -l \"#content\" {} \\;"}, {"invocation": "Set the timestamp of B to the same one as A", "cmd": "touch -r A B"}, {"invocation": "Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership", "cmd": "find . -depth -print | cpio -o -O /target/directory"}, {"invocation": "find all the files in the file system which have been changed 1 minute ago.", "cmd": "find / -newerct '1\tminute ago' -print"}, {"invocation": "Print IP addresses of the host name", "cmd": "hostname -I"}, {"invocation": "Find all files and directories containing \"disc\" in their names", "cmd": "find . -name *disc*"}, {"invocation": "Find files owned by nonexistent groups", "cmd": "find / -nogroup -print"}, {"invocation": "Find all *.txt and *.json files", "cmd": "find . -type f \\( -name \"*.txt\" -o -name \"*.json\" \\)"}, {"invocation": "List all broken symlinks excluding cyclic links under current directory", "cmd": "find . -type l -printf \"%Y %p\\n\" | grep -w '^N'"}, {"invocation": "Print the current directory", "cmd": "find -mindepth 0 -maxdepth 0"}, {"invocation": "Counts number of *.php files in a current folder and subfolders.", "cmd": "find . -name '*.php' | wc -l"}, {"invocation": "Save standard input to variable \"myVar\"", "cmd": "myVar=$(tee)"}, {"invocation": "remove all the \".core\" files in the file system", "cmd": "find / -name \"*.core\" -print -exec rm {} \\;"}, {"invocation": "Find all directories under current directory excluding those which match the regex /\\. in their names", "cmd": "find . -type d | grep -v '/\\.'"}, {"invocation": "display all the files  in the current folder excluding those which are present in \"./src/emacs\" folder", "cmd": "find  .  -path  './src/emacs'  -prune  -o -print"}, {"invocation": "search in the home folder for all the files with the name \"monfichier\"", "cmd": "find /home/ -name monfichier"}, {"invocation": "Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them", "cmd": "find \"$DIR\" -type f \\! -newer \"$a\" \\! -samefile \"$a\" -exec rm {} +"}, {"invocation": "On host \"server_b\", connect as ssh user \"user\" and copy \"/my_folder/my_file.xml\" to directory \"/my_new_folder/\".", "cmd": "scp user@server_b:/my_folder/my_file.xml user@server_b:/my_new_folder/"}, {"invocation": "Find all regular files under '/directory_path' directory tree that have been modified within the last day", "cmd": "find /directory_path -type f -mtime -1 -print"}, {"invocation": "Finds more than 5 days old files in two directories  and compresses them.", "cmd": "find /home/folder1 /home/folder2 -type f -mtime +5 -exec compress {} \\;"}, {"invocation": "Find files ending in \"f\"", "cmd": "find .  -path '*f'"}, {"invocation": "Print the current date in '%H:%M:%S' format followed by the string ': done waiting. both jobs terminated on their own or via timeout; resuming script'", "cmd": "echo \"$(date +%H:%M:%S): done waiting. both jobs terminated on their own or via timeout; resuming script\""}, {"invocation": "Copy all files and directories in \"/home/\" to \"/newhome\" preserving directory hierarchy and modification time", "cmd": "find /home/ -maxdepth 1 -print | sudo cpio -pamVd /newhome"}, {"invocation": "Print numbers from 1 to 10 using up to 4 processes", "cmd": "seq 10 | xargs -P4 -I'{}' echo '{}'"}, {"invocation": "Print 1000 astarisk ('*')", "cmd": "head -c 1000 /dev/zero | tr '\\0' '*'"}, {"invocation": "Print sorted list of unique users logged in followed by a total count", "cmd": "who | awk '{ print $1; }' | sort -u | awk '{print $1; u++} END{ print \"users: \" u}'"}, {"invocation": "Save the full path of command \"f\" to variable \"full_f\"", "cmd": "full_f=\"$(which f)\""}, {"invocation": "Search the /etc directory tree for symbolic links", "cmd": "find /etc -type l -print"}, {"invocation": "Dump \"filename\" as 2 byte wide hexadecimal and printable characters", "cmd": "od -xc filename"}, {"invocation": "list all the \".ksh\" files in the current directory", "cmd": "find . -ls -name \"*.ksh\""}, {"invocation": "Move all files in the current directory tree that match \"some_pattern\" to \"target_location\"", "cmd": "find . -name some_pattern -print0 | xargs -0 -I % mv % target_location"}, {"invocation": "Creates temporary folder like '/tmp/tardir-XXXXXX' with 6-letter suffix and saves its path in 'tmpdir' variable.", "cmd": "tmpdir=$(mktemp -d /tmp/tardir-XXXXXX)"}, {"invocation": "Make sure the file \".bash_profile\" exists in current directory, update its timestamp to current date/time.", "cmd": "touch .bash_profile"}, {"invocation": "Move \"file.txt\" to docker container \"$CONTAINER_ID\" in path \"/var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt\"", "cmd": "mv -f file.txt /var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt"}, {"invocation": "Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory", "cmd": "find . \\( -name *.rb -or -name *.html -or -name *.js -or -name *.coffee -or -name *.css -or -name *.scss -or -name *.erb -or -name *.yml -or -name *.ru \\) -print0 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\""}, {"invocation": "Look for *log files in directories at most three levels down the directory tree", "cmd": "find / -maxdepth 3  -name \"*log\""}, {"invocation": "Find symlinks under and below the \"test\" directory and replace them with the content of the linked files", "cmd": "find test -type l -exec cp {} {}.tmp$$ \\; -exec mv {}.tmp$$ {} \\;"}, {"invocation": "Find all the files named 'vimrc' anywhere on the system", "cmd": "find / -name vimrc"}, {"invocation": "Count the number of equal lines in sorted files \"ignore.txt\" and \"input.txt\"", "cmd": "comm -12 ignore.txt input.txt | wc -l"}, {"invocation": "Find files on the system accessed during the last 24 hours but not within the last hour", "cmd": "find / -atime -1 -amin +60"}, {"invocation": "Creates temporary file with name formatted like expression in variable ${PROG}, and saves path to it in 'mytemp' variable.", "cmd": "mytemp=\"$(mktemp -t \"${PROG}\")\""}, {"invocation": "Create an empty file with a carriage return character in its name.", "cmd": "touch $'Icon\\r'"}, {"invocation": "Delete all files/directories with inode number 117672808 under current directory tree", "cmd": "find -inum 117672808 -exec rm {} \\;"}, {"invocation": "Print last 10 commands in history", "cmd": "history 10"}, {"invocation": "Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir'", "cmd": "find . -inum 211028 -exec mv {} newname.dir \\;"}, {"invocation": "display all the directories in the current folder", "cmd": "find . -type d"}, {"invocation": "search normal files called ' banckup '  from /usr directory downward and print them.", "cmd": "find /usr -type f -name backup -print"}, {"invocation": "Read a line from standard input into variable \"YESNO\" ignoring backslash escapes and using the prompt \"$(echo $@) ? [y/N] \"", "cmd": "read -r -p \"$(echo $@) ? [y/N] \" YESNO"}, {"invocation": "Find all *.txt files/directories under current directory", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "Enables shell option 'promptvars'.", "cmd": "shopt -s promptvars"}, {"invocation": "Print content of /etc/passwd and /etc/group files", "cmd": "cat /etc/passwd /etc/group"}, {"invocation": "delete all the mp3 files in the current folder.", "cmd": "find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}, {"invocation": "Find all files/directories under minimum 2 level down the current directory and set their permission to 700", "cmd": "find . -mindepth 2 | xargs chmod 700"}, {"invocation": "display all the files in the entire file system", "cmd": "find / -name \"*\" \u2014 print"}, {"invocation": "display the count of number of files in the current folder", "cmd": "find | wc -l"}, {"invocation": "Copy all files matching \"*.sh\" in \"$from/*\" to \"root@$host:/home/tmp/\" compressing data during transmission", "cmd": "rsync -zvr --include=\"*.sh\" --exclude=\"*\" $from/*  root@$host:/home/tmp/"}, {"invocation": "Move all files and directories in the current directory to \"/tmp/blah/\"", "cmd": "mv * /tmp/blah/"}, {"invocation": "Rename all .jpg files to .jpeg under the current directory and below", "cmd": "find  | rename 's/\\.jpg$/.jpeg/'"}, {"invocation": "Delete all files in the TBD directory that were modified more than 1 day ago", "cmd": "find /TBD/* -mtime +1 | xargs rm -rf"}, {"invocation": "List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'", "cmd": "find . -type f -print | xargs grep -il '^Subject:.*unique subject'"}, {"invocation": "Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them", "cmd": "find MyApp.app -name Headers -type d -exec rm -rf \"{}\" \\;"}, {"invocation": "Locate all *.csv files under the current directory tree", "cmd": "find . -name \"*.csv\""}, {"invocation": "Search for lines that have zero or more whitespace characters before \"http://\" and number the uniquely sorted output", "cmd": "grep '^[[:space:]]*http://' | sort -u | nl"}, {"invocation": "Remove all files in the current directory tree that have the name \"abc.xxx\"", "cmd": "find . -name abc.xxx -exec rm {} \\;"}, {"invocation": "Print three lines of \"some line \" followed by a random number", "cmd": "seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3"}, {"invocation": "Print all unique file paths under \"dir1\" compared to \"dir2\"", "cmd": "comm -23 <(find dir1 | sed 's/dir1/\\//'| sort) <(find dir2 | sed 's/dir2/\\//'| sort) | sed 's/^\\//dir1/'"}, {"invocation": "Save the current working directory with resolved symbolic links to variable \"real1\"", "cmd": "real1=$(pwd -P)"}, {"invocation": "split the first 100 lines of the file \"datafile\" per lines with size 1700 bytes", "cmd": "sed 100q datafile | split -C 1700 -"}, {"invocation": "Print the first 2 lines of tree's help message by redirecting it from standard error to standard output", "cmd": "tree --help |& head -n2"}, {"invocation": "Print space separated list of numbers from \"$start\" to \"$end\"", "cmd": "seq -s' ' $start $end"}, {"invocation": "Print numbers from 1 to the number in variable \"$1\"", "cmd": "seq $1"}, {"invocation": "create directory /tmp/new", "cmd": "mkdir /tmp/new"}, {"invocation": "Locate and rename unprintable directories using inode numbers", "cmd": "find . -inum 211028 -exec mv {} newname.dir \\;"}, {"invocation": "Find all the .mp3 files in the music folder recursively and pass them to the ls command", "cmd": "find ./music -name \"*.mp3\" -print0 | xargs -0 ls"}, {"invocation": "Store content of uncompressed file \"$file.fastq\" in variable \"reads\"", "cmd": "reads=$(zcat $file.fastq)"}, {"invocation": "Create symbolic links in the current directory for all files located in directory \"/path/with/files\" with a name containing \"txt\"", "cmd": "find /path/with/files -type f -name \"*txt*\" -exec ln -s {} . ';'"}, {"invocation": "display all normal/regular files in the folder \"$ORIG_DIR\"", "cmd": "find \"$ORIG_DIR\" -name \"*\" -type f"}, {"invocation": "Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last", "cmd": "echo $(find / -type f -perm -002) has world write permissions"}, {"invocation": "Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755", "cmd": "find . -iname '*.cgi' | xargs chmod 755"}, {"invocation": "Concatenate all files under the current directory and below that contain \"test\" in their names", "cmd": "find . -iname '*test*' -exec cat {} \\;"}, {"invocation": "Uncompress \"archive.tar.gz\" and extract the archive to \"/destination\"", "cmd": "gzip -dc archive.tar.gz | tar -xf - -C /destination"}, {"invocation": "Read a line from standard input in an interactive shell into variable \"input\" with prompt \"Do that? [Y,n]\" and suggestion \"Y\"", "cmd": "read -e -p \"Do that? [Y,n]\" -i Y input"}, {"invocation": "delete all the empty in the current folder do not search in sub directories", "cmd": "find . -maxdepth 1 -type d -empty -exec rm {} \\;"}, {"invocation": "Create an empty file \"foo\" in each directory under the current directory containing a file named \"bar\".", "cmd": "find -name \"bar\" -execdir touch foo \\;"}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find ./ -type l -exec file {} \\; |grep broken"}, {"invocation": "Print directories in the the current directory as a list with no report information", "cmd": "tree -d -L 1 -i --noreport"}, {"invocation": "search all jpg files in current folder", "cmd": "find . -type f -name \"*.jpg\""}, {"invocation": "find all the files ending with \"mkv\" in current folder", "cmd": "find -name \"*.mkv\""}, {"invocation": "Print \"huge-file.log\" starting at line 1000001", "cmd": "tail -n +1000001 huge-file.log"}, {"invocation": "Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files", "cmd": "find /srv/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \\;"}, {"invocation": "Find all *.foo files under current directory and search for 'bar' in those files", "cmd": "find . -name '*.foo' -exec grep bar {} \\;"}, {"invocation": "find all files that were modified between 90 to 100 days ago in home directory and delete then .", "cmd": "find /home -type f -mtime +90 -mtime -100  -exec rm  {} \\;"}, {"invocation": "Print position number of day '9' in fourth line of calendar output for September, 2009.", "cmd": "cal 09 2009 | awk '{day=\"9\"; if (NR==4) {col=index($0,day); print col } }'"}, {"invocation": "Prints process tree, showing only strings with 'MDSImporte', and chopping output after ${WIDTH} characters.", "cmd": "pstree | grep MDSImporte | cut -c 1-${WIDTH}"}, {"invocation": "list all js files under currect directory exculde the directory which path contain \"/path/to/search/exclude_me\" or name isexclude_me_too_anywhere", "cmd": "find /path/to/search                    \\   -type d                               \\     \\( -path /path/to/search/exclude_me \\        -o                               \\        -name exclude_me_too_anywhere    \\      \\)                                 \\     -prune                              \\   -o                                    \\   -type f -name '*\\.js' -print"}, {"invocation": "Rename \"new\" to \"old\" and backup to \"old.old\" if \"old\" exists", "cmd": "mv new old -b -S .old"}, {"invocation": "Set up a remote port forward from port 10022 on host \"server\" to port 22 on localhost", "cmd": "ssh -R 10022:localhost:22 device@server"}, {"invocation": "Find deb packages in the current directory recursively", "cmd": "find . -type f -and -iname \"*.deb\""}, {"invocation": "Find all files/directories that belong to the group 'staff' under '/usr' directory tree", "cmd": "find /usr -group staff"}, {"invocation": "Print a randomly sorted list of numbers from 1 to 10 to file \"/tmp/lst\" and the screen followed by \" -------\"", "cmd": "seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo '-------')"}, {"invocation": "Print numbers from 1 to 30 with a leading 0", "cmd": "seq -w 30"}, {"invocation": "Recursively counts non-blank lines in all files in a current folder, that match regex '\\.php|\\.as|\\.sql|\\.css|\\.js', but skip folders './pma', './blog', './punbb', './js/3rdparty' and files like '*.svn'.", "cmd": "find . -path './pma' -prune -o -path './blog' -prune -o -path './punbb' -prune -o -path './js/3rdparty' -prune -o -print | egrep '\\.php|\\.as|\\.sql|\\.css|\\.js' | grep -v '\\.svn' | xargs cat | sed '/^\\s*$/d' | wc -l"}, {"invocation": "find files in the current directory and sub-directories, that were accessed within last hour", "cmd": "find -amin -60"}, {"invocation": "Find all * * regular files under current directory", "cmd": "find .  -type f -name \"* *\""}, {"invocation": "display all the text files in current folder", "cmd": "find . -name \"*.txt\""}, {"invocation": "Search decompressed \"filename.gz\" for case-insensitive \"user-user\"", "cmd": "zcat filename.gz | grep -i user-user"}, {"invocation": "Prints current directory name", "cmd": "pwd | awk -F/ '{print $NF}'"}, {"invocation": "Save absolute path of \"$path\" that must exist along with all parents to variable \"abspath\"", "cmd": "abspath=$(readlink -e $path)"}, {"invocation": "Create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2", "cmd": "mkdir -p directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"}, {"invocation": "Print the list of regular files in the current directory and all subdirectories", "cmd": "find . -type f"}, {"invocation": "Print reverse lookup for adress 127.0.0.1", "cmd": "dig -x 127.0.0.1"}, {"invocation": "Find all *.ogg files under the home directory ignoring the case", "cmd": "find $HOME -iname '*.ogg'"}, {"invocation": "Remove all tmp/*.mp3 files", "cmd": "find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs -n1 rm"}, {"invocation": "Search directory /tmp/foo for files containing \"/tmp/foo/bar\" in their full names", "cmd": "find /tmp/foo -path /tmp/foo/bar -print"}, {"invocation": "Print all files/directories under ... directory by terminating their paths with a null character", "cmd": "find ... -print0"}, {"invocation": "Find all or single file called tecmint.txt under the / directory of owner root", "cmd": "find / -user root -name tecmint.txt"}, {"invocation": "Find files/directories writable by group and others under the /path directory", "cmd": "find /path -perm -g+w,o+w"}, {"invocation": "Split all files in the directory tree \"/dev/shm/split/\" into files of at most 1000 lines each and use the filename as the prefix", "cmd": "find /dev/shm/split/ -type f -exec split -l 1000 {} {} \\;"}, {"invocation": "Remove all files whose names end with \"~\" in the /home/peter directory tree", "cmd": "find /home/peter -name *~ -print0 |xargs -0 rm"}, {"invocation": "Find all directories under path_to_dir directory", "cmd": "find path_to_dir -type d"}, {"invocation": "List all files and directories residing in the current directory and below", "cmd": "find | xargs ls"}, {"invocation": "Read a line from standard input with prompt \"Enter your choice: \" and save response to variable \"choice\"", "cmd": "read -p \"Enter your choice: \" choice"}, {"invocation": "Find all files that have additional permissions", "cmd": "find / -perm -644"}, {"invocation": "Search the current directory tree for regular files modified within the past 24 hours whose names do not end with \".DS_Store\"", "cmd": "find . -mtime -1 ! -name '.DS_Store' -type f -printf '%f\\n'"}, {"invocation": "Find all files/directories starting with 'readme' (case insensitive) under '/usr/share/doc' directory tree", "cmd": "find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'"}, {"invocation": "Find all directories named \"0\" in the current directory tree and create a tar archive of their RS* subdirectories", "cmd": "find . -type d -name \"0\" -execdir tar -cvf filename.tar RS* \\;"}, {"invocation": "Find *.java files under current directory and compress them to myfile.tar", "cmd": "find . -type f -name \"*.java\" | xargs    tar rvf myfile.tar"}, {"invocation": "Search the *.cc files in the current directory tree for string \"xxx\"", "cmd": "find . -name \"*.cc\" | xargs grep \"xxx\""}, {"invocation": "Make directories for each unique file path in \"file1\"", "cmd": "cat file1 |xargs -I {} dirname \"{}\"| sort -u | xargs -I{} mkdir -p \"{}\""}, {"invocation": "Recursively change the group of all files in \"/tmp/php_session\" to \"daemon\"", "cmd": "chown -R :daemon /tmp/php_session"}, {"invocation": "Forward all connections to client localhost 3309 via the SSH tunnel to \"mysql_access_server\" and then connect to host \"sqlmaster.example.com\" on port 3306", "cmd": "ssh -f mysql_access_server -L 3309:sqlmaster.example.com:3306 -N"}, {"invocation": "Find regular non-hidden files containing 'some text' in their names", "cmd": "find . -not -path '*/\\.*' -type f -name '*some text*'"}, {"invocation": "Find all files/directories under .. directory and copy them to ~/foo/bar", "cmd": "find .. -exec cp -t ~/foo/bar -- {} +"}, {"invocation": "compare each C header file in or below the current directory with the file /tmp/master", "cmd": "find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'"}, {"invocation": "Find regular files readable by the world", "cmd": "find . -perm -g=r -type f -exec ls -l {} \\;"}, {"invocation": "Print environment variable \"IFS\" and its value", "cmd": "set | grep ^IFS="}, {"invocation": "Read one character from standard input into variable 'c'", "cmd": "read -n 1 c"}, {"invocation": "find all the files ending with \".sh\" in the folder /dir excluding those wth the names foo and bar.", "cmd": "find /dir \\( -name foo -prune \\) -o \\( -name bar -prune \\) -o -name \"*.sh\" -print"}, {"invocation": "Get the total size of all files under dir1 directory", "cmd": "find dir1 ! -type d -printf \"%s\\n\" | awk '{sum += $1} END{printf \"%f\\n\", sum}'"}, {"invocation": "Split standard input into files of at most 3400000 lines each", "cmd": "split -l 3400000"}, {"invocation": "Archive files in \"/mnt/source-tmp\" to \"/media/destination\"", "cmd": "rsync -a /mnt/source-tmp /media/destination/"}, {"invocation": "Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days", "cmd": "find /mnt/raid/upload -mtime +5 -print"}, {"invocation": "display all the files in the home folder which are smaller than 500 bytes", "cmd": "find $HOME -size -500b"}, {"invocation": "Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.", "cmd": "find /etc/ -mtime -30 | xargs -0 cp /a/path"}, {"invocation": "find all the links in the current folder and following it to the pointed path", "cmd": "find -L /target -type l"}, {"invocation": "Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files", "cmd": "find $1 -path /proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;"}, {"invocation": "Execute \"cat /tmp/iostat.running\" every 10 seconds", "cmd": "watch -n10 cat /tmp/iostat.running"}, {"invocation": "display all the files in the current folder which have been modified in one hour ago", "cmd": "find .  -newermt \"1 hour ago\""}, {"invocation": "Search for all *.conf files in entire file system", "cmd": "find / -type f -name \"*.conf\""}, {"invocation": "List files in the current directory and below that are exactly 1234 bytes in size", "cmd": "find . -size 1234c"}, {"invocation": "grep from bottom of file", "cmd": "tac your.log | grep stuff"}, {"invocation": "Remove all files whose names end with \"~\" in the /home/peter directory tree", "cmd": "find /home/peter -name *~ |xargs rm"}, {"invocation": "Removes all empty folders under current folder.", "cmd": "find . -type d -empty -exec rmdir \"{}\" \\;"}, {"invocation": "Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir", "cmd": "full_backup_dir=\"$(find . -depth \\( -wholename \\./\\.\\* \\) -prune -o -print | cpio -oav)\""}, {"invocation": "Make directories \"a\", \"b\", \"c\", \"d\", and \"e\"", "cmd": "mkdir a b c d e"}, {"invocation": "Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.", "cmd": "kill -9 18581 18582 18583"}, {"invocation": "List all files in the current directory tree except for those in the ./src/emacs directory", "cmd": "find . -path './src/emacs' -prune -o -print"}, {"invocation": "Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed", "cmd": "find . -name \"*.php\" -exec chmod 755 {} + -printf '.' | wc -c"}, {"invocation": "Clear the in-memory history", "cmd": "history -c"}, {"invocation": "Set permissions to 755 for every subdirectory of the current directory", "cmd": "find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \\;"}, {"invocation": "Find all *.ps files under $STARTDIR", "cmd": "find $STARTDIR -name '*.ps' -print"}, {"invocation": "Find all Executable files", "cmd": "find / -perm /a=x"}, {"invocation": "create directory /var/svn as user root", "cmd": "sudo mkdir /var/svn"}, {"invocation": "Change the owner of \"process\" to \"root\"", "cmd": "sudo chown root process"}, {"invocation": "Prompt the user with a question \"This is the question I want to ask?\" and save \"y\" or \"n\" in variable \"REPLY\" in zsh", "cmd": "read REPLY\\?\"This is the question I want to ask?\""}, {"invocation": "Read a line from standard input into variable \"message\" with the prompt \"Please Enter a Message: $cr\"", "cmd": "read -p \"Please Enter a Message: $cr\" message"}, {"invocation": "Print amount of space available on the file system containg path to the current working directory human-readable.", "cmd": "df -Ph $PWD | tail -1 | awk '{ print $3}'"}, {"invocation": "Find files in the /var/log folder which were modified an hour or more ago", "cmd": "find /var/log/ -mmin +60"}, {"invocation": "Mount partition with label \"WHITE\" on \"/mnt/WHITE\" with read and write permission", "cmd": "mount -L WHITE /mnt/WHITE -o rw"}, {"invocation": "Report file systems disk usage using POSIX output format.", "cmd": "df -P"}, {"invocation": "Copy the directory hierarchy of the current directory to \"destdir\"", "cmd": "find . -type d | cpio -pdvm destdir"}, {"invocation": "find all the files in the file system which have not been modified in the last 100*24 hours", "cmd": "find / -mtime +100 -print"}, {"invocation": "Print each line in \"f1\" and \"f2\" separated by a space and \"f3\" separated by a tab", "cmd": "paste <(paste -d\" \" f1 f2) f3"}, {"invocation": "Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space", "cmd": "diff -bur folder1/ folder2/"}, {"invocation": "Search the current directory tree for regular files omitting directory `omit-directory'", "cmd": "find . \\( -name omit-directory -prune -o -type f \\) -print"}, {"invocation": "Find all files in entire file system which are larger than 20000KB and show file name/path followed by its size", "cmd": "find / -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}, {"invocation": "Create a new directory \"existing-dir/new-dir/\" on host \"node\"", "cmd": "rsync /dev/null node:existing-dir/new-dir/"}, {"invocation": "Find files and directories with the name RAID but don't traverse a particular directory", "cmd": "find . -name RAID -prune -o -print"}, {"invocation": "Prints long listing of ${0} file.", "cmd": "ls -l ${0}"}, {"invocation": "Recursively lists all files in a current folder in long format.", "cmd": "ls -ld $(find .)"}, {"invocation": "login as user root", "cmd": "su -l"}, {"invocation": "Print the list of files and directories of the current directory including \".\"", "cmd": "find . \\( -name . -o -prune \\)"}, {"invocation": "Print the second line of output of \"ls -l\"", "cmd": "ls -l | head -2 | tail -1"}, {"invocation": "display all the text files in the current folder  and do not search in the bin directory", "cmd": "find . -name bin -prune -o -name \"*.txt\" -print"}, {"invocation": "For each .def file under the current directory, create an empty .def.out file with current timestamp.", "cmd": "find . -name '*.def' | sed 's/\\(.*\\)/\\1.out/' | xargs touch"}, {"invocation": "Delete all \".DS_Store\" files/directories under test directory", "cmd": "find test -name \".DS_Store\" -delete"}, {"invocation": "display the help of find command", "cmd": "find --help"}, {"invocation": "Find all .zip files in the current directory tree", "cmd": "find . -depth -name *.zip"}, {"invocation": "find all the \".c\" files in the folder \"/home/you\" which have been accessed in the last 30*24 hours", "cmd": "find /home/you -iname \"*.c\" -atime -30 -type -f"}, {"invocation": "Calculate the md5 sum of all \".py\" files in \"/your/dir\" including content and filenames", "cmd": "grep -ar -e . --include=\"*.py\" /your/dir | md5sum | cut -c-32"}, {"invocation": "Search the /home/test directory tree for directories and files called '.ssh'", "cmd": "find /home/test -name '.ssh'"}, {"invocation": "Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/", "cmd": "mv $(find $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq) -type f) ../shp_all/"}, {"invocation": "search for all the php files in the folder \"/home/mywebsite\" which have been changed in the last 30*24 hours", "cmd": "find /home/mywebsite -type f -name \"*.php\" -ctime -30"}, {"invocation": "search for all the files in current folder and display all the file names separated by space", "cmd": "find . | awk '{printf \"%s \", $0}'"}, {"invocation": "List every symbolic link in every home directory's subdirectory owned by group `staff'", "cmd": "find `pwd` -group staff -exec find {} -type l -print ;"}, {"invocation": "find all the text files in  the current folder and do not search in somedir, bin directories", "cmd": "find . -name somedir -prune , -name bin -prune -o -name \"*.txt\" -print"}, {"invocation": "bind key \"\\x61\" to insert itself", "cmd": "bind $'\"\\x61\"':self-insert"}, {"invocation": "Returns exit status 0 and prints exit status of previous command.", "cmd": "false | echo \"${PIPESTATUS[0]}\""}, {"invocation": "Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path", "cmd": "find /path -perm ugo+rwx"}, {"invocation": "Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory", "cmd": "find . -name \\*.txt -exec chmod 666 {} \\; -exec cp {} /dst/ \\;"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn -exec rm -v {} \\;"}, {"invocation": "Find all xml files under current directory", "cmd": "find . -name '*.xml'"}, {"invocation": "Save the md5 sum hash of \"$my_iso_file\" to variable \"md5\"", "cmd": "md5=$(md5sum \"$my_iso_file\" | cut -d ' ' -f 1)"}, {"invocation": "display all the symbolic links in the current folder", "cmd": "find . -type l"}, {"invocation": "Find files in two different directories (esofthub and esoft) having the \"test\" string and list them", "cmd": "find esofthub esoft -name \"*test*\" -type f -ls"}, {"invocation": "Find all files/directories with 755 permission under current directory tree", "cmd": "find ./ -perm 755"}, {"invocation": "Change directory to the real path of the directory containing the current script", "cmd": "cd $(readlink -f $(dirname $0))"}, {"invocation": "Search the /dir directory tree for files whose names match regular expression '.*2015.*\\(album.*\\|picture.*\\)'", "cmd": "find /dir -regex '.*2015.*\\(album.*\\|picture.*\\)'"}, {"invocation": "Find all the files which are greater than 50MB but less than 100MB in size", "cmd": "find / -size +50M -size -100M"}, {"invocation": "Delete empty files and print their names", "cmd": "find . -empty -delete -print"}, {"invocation": "display all the files in the file system which belong to no group", "cmd": "find / -nogroup staff -print"}, {"invocation": "List the largest file prefixed by its size in bytes of all files under the current directory", "cmd": "find . -type f -name '*.gz' -printf '%s %p\\n'|sort -nr|head -n 1"}, {"invocation": "find all the files in current directory of size exactly 6MB.", "cmd": "find . -size 6M"}, {"invocation": "Read a single character from standard input into variable \"key\" without backslash escapes and using the prompt \"Press any key to continue...\"", "cmd": "read -n1 -r -p \"Press any key to continue...\" key"}, {"invocation": "Return a list of files newer than file poop", "cmd": "find . -mnewer poop"}, {"invocation": "Find all regular files in /usr/bin accessed more than 20 days ago", "cmd": "find /usr/bin -type f -atime +20"}, {"invocation": "Search for \"#define\" in all files in the current directory, excluding backup files *~, *.orig, *.bak", "cmd": "find . -maxdepth 1 ! -regex '.*~$' ! -regex '.*\\.orig$' \\     ! -regex '.*\\.bak$' -exec grep --color \"#define\" {} +"}, {"invocation": "extract /path/to/my_archive.tar.xz to /path/to/extract and preserve permissions.", "cmd": "tar xpvf /path/to/my_archive.tar.xz -C /path/to/extract"}, {"invocation": "Request NS record for com. domain, receiving only authoritative answers", "cmd": "dig NS +aaonly com."}, {"invocation": "Recursively find the latest modified file in the current directory", "cmd": "find . -type f | xargs ls -ltr | tail -n 1"}, {"invocation": "Find all files owned by group `group2'", "cmd": "find / -group group2"}, {"invocation": "Find all 777 permission files/directories under current directory tree", "cmd": "find -perm 777"}, {"invocation": "Delete all files/directories taken by the glob pattern * except the ones with the name 'b'", "cmd": "find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf {} \\;"}, {"invocation": "Verbosely compresses all files on fourth and fifth depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*/*/*"}, {"invocation": "display all files  expect directories in the current folder", "cmd": "find . ! \u2014 type d -print"}, {"invocation": "find all the directories starting with the name \"someNamePrefix\" which have not been modified in the last 10 days and force delete them", "cmd": "find /somePath -type d -name \u2018someNamePrefix*\u2019 -mtime +10 -print | xargs rm -rf ;"}, {"invocation": "create a symbolic link named \"$ORACLE_HOME/include\" to file \"/usr/include/oracle/11.2/client\"", "cmd": "sudo ln -s /usr/include/oracle/11.2/client $ORACLE_HOME/include"}, {"invocation": "Recursively copies 'include/gtest' to '/usr/include', preserving all attributes, and copying symlinks as symlinks, without following in source files.", "cmd": "sudo cp -a include/gtest /usr/include"}, {"invocation": "list all files under the current directory called cookies.txt", "cmd": "find -name cookies.txt"}, {"invocation": "search for the regular/normal file \"myfile\" in the current folder excluding search in the paths of \"work\" and \"home\" sub directories", "cmd": "find .  \\( -name work -o -name home \\)  -prune -o -name myfile -type f -print"}, {"invocation": "Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.", "cmd": "cat BIG_FILE.txt | less"}, {"invocation": "Print a sorted list of the extensions of the regular files from the current directory tree", "cmd": "find . -type f | grep -o -E '\\.[^\\.]+$' | sort -u"}, {"invocation": "find all the files in the entire file system that have been changed exactly  60 days  and display ten files", "cmd": "find / -cmin -60 | head"}, {"invocation": "display all files in a folder", "cmd": "find \"/proc/$pid/fd\""}, {"invocation": "Find all files larger than 100M and delete them", "cmd": "find / -size +100M -exec rm -rf {} \\;"}, {"invocation": "change cgi files to mode 755", "cmd": "find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}, {"invocation": "Save hexadecimal bytes 7 and 8 in binary file \"file.moi\" to variable \"year\"", "cmd": "year=$(od -t x2 --skip-bytes=6 --read-bytes=2 file.moi | head -1 | awk '{print $2}')"}, {"invocation": "find all the xml files in current folder and which are present in the pattern list file \"/tmp/a\"", "cmd": "find . -name \"*.xml\" -exec grep -HFf /tmp/a {} \\;"}, {"invocation": "Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip", "cmd": "find . -maxdepth 1 -type f ! -name '*.gz' -exec gzip \"{}\" \\;"}, {"invocation": "Recursively change the group ownership to \"laravel\" in \"./bootstrap/cache\"", "cmd": "sudo chown -R :laravel ./bootstrap/cache"}, {"invocation": "Unzip \"file.gz\" to stdout", "cmd": "zcat file.gz"}, {"invocation": "display all text files in current folder", "cmd": "find . -name \".txt\""}, {"invocation": "Pushes directory path that saved in $line variable to the dirs stack, expanding symbol '~', if present, as home folder path.", "cmd": "pushd \"${line/#\\~/$HOME}\";"}, {"invocation": "list files in /usr modified after February 1 of the current year", "cmd": "find /usr -newermt \"Feb 1\""}, {"invocation": "Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '/new_directory'", "cmd": "find / -iname \"*.what_to_find\" -type f -exec mv {} /new_directory \\;"}, {"invocation": "display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00", "cmd": "find . -daystart -ctime 4 -ls -type f"}, {"invocation": "Rename all files in the current directory to the md5 sum followed by the extension and print the conversions", "cmd": "md5sum * | sed -e 's/\\([^ ]*\\) \\(.*\\(\\..*\\)\\)$/mv -v \\2 \\1\\3/e'"}, {"invocation": "copy the file header.shtml to those dirs", "cmd": "find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}, {"invocation": "Find all directories in entire file system which are larger than 50KB", "cmd": "find / -type d -size +50k"}, {"invocation": "Show the files or directories in the current directory whose names are not \"MyCProgram.c\"", "cmd": "find -maxdepth 1 -not -iname \"MyCProgram.c\""}, {"invocation": "Print file system disk space usage of the current directory's file system", "cmd": "df ."}, {"invocation": "Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure", "cmd": "find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \\;"}, {"invocation": "Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'", "cmd": "find /home/u20806/public_html -daystart -maxdepth 1 -mmin +25 -type f -name \"*.txt\" \\ -exec rm -f {} \\;"}, {"invocation": "Find all files under /path/to/base/dir and change their permission to 644", "cmd": "find /path/to/base/dir -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Read standard input until a null character is found and save the result in variable \"line\"", "cmd": "read -d '' line"}, {"invocation": "find all the files that are not modified in the last 7 days", "cmd": "find -daystart -mtime +7"}, {"invocation": "search for all the files ending with \"fits\" in the folder \"/store/01\"", "cmd": "find /store/01 -name \"*.fits\""}, {"invocation": "Delete all files with 128128 inode number under current directory tree", "cmd": "find . -inum 128128 | xargs rm"}, {"invocation": "change owner of the file destination_dir to user \"user:", "cmd": "chown user destination_dir"}, {"invocation": "Compresses all '*.xml' files under current directory with 'bzip2' utility.", "cmd": "find -name \\*.xml -print0 | xargs -0 -n 1 -P 3 bzip2"}, {"invocation": "Find all files that are set user ID to root", "cmd": "find . -user root -perm -4000 -print"}, {"invocation": "Print the names of all hidden regular files from the current directory", "cmd": "find . -maxdepth 1 -type f -name '.*' -exec basename {} \\;"}, {"invocation": "Find all the files without permission 777", "cmd": "find / -type f ! -perm 777"}, {"invocation": "Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago", "cmd": "find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}, {"invocation": "Print \"test=hello world\"", "cmd": "echo \"hello world\" | echo test=$(cat)"}, {"invocation": "Find users whose names begin with \"ab\" and ends with \"1\"", "cmd": "who | cut -d ' ' -f 1 | grep -e '^ab' -e '1$'"}, {"invocation": "Get domain name from dig reverse lookup.", "cmd": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*"}, {"invocation": "Archive \"source\" to \"destination\" via ssh on port \"PORT_NUMBER\"", "cmd": "rsync -azP -e \"ssh -p PORT_NUMBER\" source destination"}, {"invocation": "Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play", "cmd": "find /tmp/ -ctime -1 -name \"x*\" | xargs -I '{}' mv '{}' ~/play/"}, {"invocation": "Print a count of all unique lines in \"ports.txt\" sorted from most frequent to least frequent", "cmd": "sort ports.txt | uniq -c | sort -r"}, {"invocation": "Search the specified user for the given \"filename\"", "cmd": "find / -user pat -iname \"filename\""}, {"invocation": "Find all executables under /path directory", "cmd": "find /path -perm /ugo+x"}, {"invocation": "Overwirte file '/path/to/your/file' with random content, then overwrite with zeroes, and remove, showing progress while execution.", "cmd": "shred -v -n 1 -z -u /path/to/your/file"}, {"invocation": "Find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system", "cmd": "find / -name httpd.conf -newer /etc/apache-perl/httpd.conf"}, {"invocation": "display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB", "cmd": "find /var/log -type f -size +100000k -exec ls -lh {} \\; | awk '{ print $9 \": \" $5 }'"}, {"invocation": "Find files/directories under current directory that matches the regex /path/to/something[^/]*$  in their paths", "cmd": "find . | grep -qi /path/to/something[^/]*$"}, {"invocation": "Print a count of case insensitive duplicate filenames in the current directory", "cmd": "ls -1 | tr '[A-Z]' '[a-z]' | sort | uniq -c | grep -v \" 1 \""}, {"invocation": "Print input \"your, text, here\" formatted to fit 70 characters per line breaking at spaces", "cmd": "echo 'your, text, here' | fold -sw 70"}, {"invocation": "Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission", "cmd": "find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \\;"}, {"invocation": "use regex with find command", "cmd": "find . -regextype posix-egrep -regex '\\./[a-f0-9\\-]{36}\\.jpg'"}, {"invocation": "display all the files in the current directory and do not search in the sub directories", "cmd": "find . -maxdepth 0 -print"}, {"invocation": "display all text files in current folder", "cmd": "find . -name \"*.txt\""}, {"invocation": "Exclude directory from find . command", "cmd": "find -iname example.com | grep -v beta"}, {"invocation": "Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days", "cmd": "find \"$DIR_TO_CLEAN\" -type -f -mtime \"+$DAYS_TO_SAVE\" -exec rm {} \\; -printf '.' | wc -c"}, {"invocation": "List all files 2 levels deep in the current directory tree", "cmd": "tree -L 2 -fi"}, {"invocation": "find all the files in the current folder which have been accessed in the last 60 minutes", "cmd": "find . -amin -60"}, {"invocation": "Mount \"tmpfs\" filesystem to \"/path/to/dir\"", "cmd": "mount none -t tmpfs /path/to/dir"}, {"invocation": "List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time", "cmd": "find / -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\"  -printf '%T@ %p\\n' | sort -k 1 -n | sed 's/^[^ ]* //'"}, {"invocation": "Count the number of lines in every regular .rb file in the current directory tree", "cmd": "find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"}, {"invocation": "search for a word in all the files in the current directory (case insensitive search)", "cmd": "find . -type f -exec grep 'needle' {} \\;"}, {"invocation": "Find & replace broken symbolic links", "cmd": "find -L . -type l -delete -exec ln -s new_target {} \\;"}, {"invocation": "Find files modified in the last 5 minutes starting from the current directory", "cmd": "find . -mmin -5"}, {"invocation": "list jobs including its PIDs", "cmd": "jobs -l"}, {"invocation": "Find files modified within the past 24 hours", "cmd": "find . -mtime 0"}, {"invocation": "Show long listing of current directory by deleting all digits from the output", "cmd": "ls -lt | tr -d 0-9"}, {"invocation": "Search all .c files from the current directory tree for \"keyword\", ignoring the case", "cmd": "find . -name \"*.c\" -exec grep -i \"keyword\" {} \";\""}, {"invocation": "Search for the query \"filename\" in the current directory and any subdirectories", "cmd": "find -iname \"filename\""}, {"invocation": "Change owner to \"$1\" and group to \"httpd\" of \".htaccess\"", "cmd": "chown $1:httpd .htaccess"}, {"invocation": "Read a line from standard input with a timeout of 10 seconds", "cmd": "read -t 10"}, {"invocation": "Replace \"  \" with \" $UID \" in the output of \"history\"", "cmd": "history | sed \"s/  / $UID /\""}, {"invocation": "Search the /tmp directory tree for files owned by user `ian'", "cmd": "find /tmp -user ian"}, {"invocation": "Remove spaces from output of \"echo aa | wc -l\"", "cmd": "echo aa | wc -l | tr -d ' '"}, {"invocation": "Find files matching regular expression regexp", "cmd": "find . | xargs grep regexp"}, {"invocation": "display all the files in the current folder excluding those that are present in the folder \"secret\"", "cmd": "find . \\( -name 'secret' -a -prune \\) -o -print"}, {"invocation": "Search for $GROUP at the beginning of each line in /etc/group and print the last colon (':') separated entry with comma replaced with newlines", "cmd": "grep ^$GROUP /etc/group | grep -o '[^:]*$' | tr ',' '\\n'"}, {"invocation": "remove all the files in the current working directory which have a specifc inode number", "cmd": "find . -inum $inum -exec rm {} \\;"}, {"invocation": "Search for a pattern \"can't\" in all the files with the name \"file-containing-can't\" in the current directory tree", "cmd": "find . -name \"file-containing-can't\" -exec grep \"can't\" '{}' \\; -print"}, {"invocation": "Remove all files with the .c extension in the current directory tree", "cmd": "find . -name \"*.c\" | xargs rm -rf"}, {"invocation": "delete all the log files in the current folder", "cmd": "find ./ -name '*.log' -print0 | xargs -0 rm"}, {"invocation": "Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".", "cmd": "rename 's/(.*)$/new.$1/' original.filename"}, {"invocation": "Move \"caniwrite\" without clobbering into \"/usr/local/bin\"", "cmd": "mv -nv caniwrite /usr/local/bin"}, {"invocation": "display all normal/regular files or directories in the folder \"$ORIG_DIR\"", "cmd": "find \"$ORIG_DIR\" -name \"*\" -type d -o -name \"*\" -type f"}, {"invocation": "display a long listing of all the empty files in the entire file system which are empty", "cmd": "find / -type f -size 0 -exec ls -l {} \\;"}, {"invocation": "split file \"${fspec} into pieces named as \"xyzzyNNN\" with numeric prefix from 1 to 6", "cmd": "split --number=l/6 ${fspec} xyzzy."}, {"invocation": "Mount the \"vboxsf\" filesystem \"D:\\share_folder_vm\" on \"\\share_folder\"", "cmd": "sudo mount -t vboxsf D:\\share_folder_vm \\share_folder"}, {"invocation": "Delete all files in the $DIR directory that have not been accessed in 5 or more days.", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "returns a list of  files modification newer than poop", "cmd": "find . -mnewer poop"}, {"invocation": "find the path of a specfic video file in the current directory", "cmd": "find . -name foo.mp4 | sed 's|/[^/]*$||'"}, {"invocation": "Search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir", "cmd": "find local /tmp -name mydir -type d -print"}, {"invocation": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3", "cmd": "find / -iname \"*.mp3\" -type f -exec /bin/mv {} /mnt/mp3 \\;"}, {"invocation": "List all files under current directory with their paths and sizes", "cmd": "find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'"}, {"invocation": "force remove all the text files that have not been modified in the last 89 days", "cmd": "find .  -name \"*.txt\" -type f -daystart -mtime +89 | xargs rm -f"}, {"invocation": "find all the symbolic links in the current folder and follow to the pointing file", "cmd": "find -L"}, {"invocation": "Find all files/directories that start with 'readme' (case insensitive) in their names under '/usr/share/doc' directory tree", "cmd": "find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'"}, {"invocation": "Create 5 empty .txt files", "cmd": "echo \"a.txt b.txt c.txt d.txt z.txt\" | xargs touch"}, {"invocation": "Create an empty file in each directory named \"mydir\" under current directory.", "cmd": "find . -type d -name \"mydir\" -print |  sed 's/$/\\/abc.txt/g' | xargs touch"}, {"invocation": "find all the png files in the current folder which begin with the word image", "cmd": "find . -name \"image*.png\""}, {"invocation": "find all the files in the current directory that have the extension \"bar\" and donot search in the subdirecotries directories.", "cmd": "find . -name *.bar -maxdepth 2 -print"}, {"invocation": "Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.", "cmd": "find . -perm 664"}, {"invocation": "Print a list of differing files", "cmd": "diff -q /dir1 /dir2|cut -f2 -d' '"}, {"invocation": "Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=", "cmd": "find . -type f -exec echo chmod u=rw,g=r,o= '{}' \\;"}, {"invocation": "Returns exit status 0.", "cmd": "foo=$(false)$(true)"}, {"invocation": "Make directory \"~/public_html\"", "cmd": "mkdir ~/public_html"}, {"invocation": "change the group to \"new_group\" and permissions to 770 for all the files in the current folder", "cmd": "find . -name \"*\" \\( -exec chgrp -v new_group {} \\; -o -exec chmod -v 770 {} \\; \\)"}, {"invocation": "Print the IP addresses for the current host name", "cmd": "hostname  -I | cut -f1 -d' '"}, {"invocation": "Print the /proc directory tree, ignoring the PID-process things", "cmd": "find /proc -type d | egrep -v '/proc/[0-9]*($|/)' | less"}, {"invocation": "Get the path of running Apache", "cmd": "ps -ef | grep apache"}, {"invocation": "search for a regular/normal file \"myfile\" in the entire file system excluding the folder in excluded_path", "cmd": "find / -path excluded_path -prune -o -type f -name myfile -print"}, {"invocation": "search the pattern ^PyErr in all the \".c\" files in the folder Lib/", "cmd": "find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr"}, {"invocation": "Find files/directories named 'document' in 'ext2' partitions in entire filesystem", "cmd": "find / -fstype ext2 -name document -print"}, {"invocation": "Find *.c files under $HOME and search for the string 'sprintf' in those files", "cmd": "find $HOME -name '*.c' -print | xargs    grep -l sprintf"}, {"invocation": "Perform a dry run replacing \"special\" with \"regular\" in all file names in the current directory", "cmd": "rename -n 's/special/regular/' **"}, {"invocation": "extract \"backup.tar.gz\" with verbose output", "cmd": "tar -xzvf backup.tar.gz"}, {"invocation": "Append \"foo\" and \"bar\" column in file \"file\" with values dependent on the current table contents", "cmd": "awk 'NR==1 {print $0, \"foo\", \"bar\"; next} {print $0, ($2==\"x\"?\"-\":\"x\"), ($4==\"x\"?\"-\":\"x\")}' file | column -t"}, {"invocation": "find all files starting with capital letter in the current folder", "cmd": "find . \u2014 name \"[A\u2011Z]*\" \u2014 print"}, {"invocation": "Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video", "cmd": "find /some/directory -type f -exec file -N -i -- {} + | sed -n 's!: video/[^:]*$!!p'"}, {"invocation": "Read a line from standard input into variable \"message\" with prompt \"Please Enter a Message: \" followed by a newline", "cmd": "read -p \"Please Enter a Message: `echo $'\\n> '`\" message"}, {"invocation": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.", "cmd": "find -type f -name \"STATUS.txt\" -exec grep -q \"OPEN\" {} \\; -exec dirname {} \\;"}, {"invocation": "force delete all the files in the current folder expect xml files", "cmd": "find . | grep -v xml | xargs rm -rf {}"}, {"invocation": "find all \".flac\" files starting with \"cmn-\" and search for files having CJK characters using unicodes", "cmd": "find . -name 'cmn-*\\.flac' -print | grep -P './cmn-[\\x4e00-\\x9fa5]\\.flac'"}, {"invocation": "Make directory \"/tmp/googleTestMock\"", "cmd": "mkdir /tmp/googleTestMock"}, {"invocation": "Search the current directory tree for all .java files that were last modified at least 7 days ago", "cmd": "find . -name '*.java' -mtime +7 -print"}, {"invocation": "print all files in the current directory and all subdirectories", "cmd": "find . -print"}, {"invocation": "display all the regular/normal files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime 0 -type f"}, {"invocation": "Convert relative path \"/x/y/../../a/b/z/../c/d\" into absolute path with resolved symbolic links", "cmd": "readlink -f /x/y/../../a/b/z/../c/d"}, {"invocation": "display all the files in current folder which start with \"file2015-0\"", "cmd": "find . -name \"file2015-0*\""}, {"invocation": "Force create a symbolc link named \"new_dir\" to \"/other/dir\" without dereferencing \"new_dir\"", "cmd": "ln -sfn /other/dir new_dir"}, {"invocation": "Search directory tree $DIR for *.txt files", "cmd": "find $DIR -name \"*.txt\" -print"}, {"invocation": "display a long listing of all the \"Trash\" files in the folder /home", "cmd": "find /home -name Trash -exec ls -al {} \\;"}, {"invocation": "Find text files modified less than 5 days ago", "cmd": "find . \u2013name \"*.txt\" \u2013mtime 5"}, {"invocation": "Copy \"src\" to \"dest\" if \"src\" is newer than \"dest\"", "cmd": "rsync -u src dest"}, {"invocation": "find all the files in the current folder which are modified after /bin/sh.", "cmd": "find . -newer /bin/sh"}, {"invocation": "Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning", "cmd": "find / -group root | head"}, {"invocation": "Displays status of currently active network interfaces.", "cmd": "ifconfig"}, {"invocation": "change the permissions of all the directories in the current folder", "cmd": "find . -type d | xargs chmod 2775"}, {"invocation": "List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest", "cmd": "du -smc * | sort -n"}, {"invocation": "Print content of all files ending with '*.foo' under the current directory", "cmd": "cat $(find . -name '*.foo')"}, {"invocation": "create directory /path/to/destination", "cmd": "mkdir /path/to/destination"}, {"invocation": "Move all files and directories in the current directory to \"/foo\"", "cmd": "mv `ls` /foo"}, {"invocation": "Remove all vmware-*.log files under current directory", "cmd": "find . -name vmware-*.log | xargs rm"}, {"invocation": "Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago", "cmd": "find . -mmin -60 -mmin +5"}, {"invocation": "Delete all files named 'Waldo' under ~/Books directory tree where '~' expands to user's home directory", "cmd": "find ~/Books -type f -name Waldo -exec rm {} \\;"}, {"invocation": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"Are you sure? [y/N] \"", "cmd": "read -r -p \"Are you sure? [y/N] \" response"}, {"invocation": "Force delete all files in the temp folder which have not been accesses in the last 240 hours", "cmd": "find /tmp/* -atime +10 -exec rm -f {} \\;"}, {"invocation": "Find all files/directories named 'test' under current directory tree", "cmd": "find . -name test"}, {"invocation": "Find all .rb and .yml files in the /some/path directory tree and replace \"some_phrase\" with \"replacement_phrase\" in them", "cmd": "find /some/path -name \"*rb\" -o -name \"*yml\" | xargs grep -sl \"some_phrase\" | xargs sed -i -e 's/some_phrase/replacement_phrase/g'"}, {"invocation": "Prints total count of lines of all *.py files in a current folder and subfolders.", "cmd": "find . -name \"*.py\" -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}, {"invocation": "Find all read only files in  /home directory", "cmd": "find /home -type f -perm /u=r"}, {"invocation": "Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory", "cmd": "find /path/to/folders/* -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox/Messages \\;"}, {"invocation": "Find all files files under the current directory except *.txt", "cmd": "find . -maxdepth 1 -type f -not -regex '.*\\.txt'"}, {"invocation": "Search the current working directory tree for files whose names start with \"fileA_\" or \"fileB_\"", "cmd": "find . -name 'fileA_*' -o -name 'fileB_*'"}, {"invocation": "searches through the /usr/local directory for files that end with the extension .html", "cmd": "find /usr/local -name \"*.html\" -type f"}, {"invocation": "Find all files/directories that are newer than 'backup.tar.gz' by modification time", "cmd": "find . -newer  backup.tar.gz"}, {"invocation": "display all the directories in the current folder and create a skeleton of make directory commands with all these folders", "cmd": "find -type d|sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\\./mkdir -p &/}'"}, {"invocation": "recursively change owner and group of the directory and all files into it to user \"user\" and group \"www-data\"", "cmd": "chown -R user:www-data yourprojectfoldername"}, {"invocation": "Display the host's ECDSA fingerprint using the md5 hasing algorithm.", "cmd": "ssh-keygen -l -E md5 -f /etc/ssh/ssh_host_ecdsa_key.pub"}, {"invocation": "Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago", "cmd": "find /usr -mmin 5"}, {"invocation": "Enable history in a script", "cmd": "set -o history"}, {"invocation": "Search for all .html files in directory \"www\" and output only the basename (without containing path) of each.", "cmd": "find www -name \\*.html -type f -exec basename {} \\;"}, {"invocation": "find all the files in the entire file system that have been accessed exactly  50 days ago", "cmd": "find / -atime 50"}, {"invocation": "Display hostname.", "cmd": "uname -n"}, {"invocation": "Serach  in root directory all files which  have more than 2 links.", "cmd": "find / -links +2 -print"}, {"invocation": "Search the \"test1\" directory recursively for regular files named \"textfile.txt\"", "cmd": "find test1 -type f -name 'textfile.txt' -print"}, {"invocation": "find files which full path name is /tmp/foo/bar under foo directory and print", "cmd": "find /tmp/foo -path /tmp/foo/bar -print"}, {"invocation": "Search the current directory tree for hidden files", "cmd": "find .*"}, {"invocation": "Sort \":\" delimited lines in \"test.txt\" by the first and third field preserving only unique lines", "cmd": "sort -u -t : -k 1,1 -k 3,3 test.txt"}, {"invocation": "Print a single line of numbers from \"001\" to \"010\"", "cmd": "yes | head -n 10 | awk '{printf( \"%03d \", NR )}'"}, {"invocation": "List all files in the current directory tree that were last modified more than 60 minutes ago", "cmd": "find -mmin +60"}, {"invocation": "find all files beneath the current directory that begin with the letters 'Foo' and delete them.", "cmd": "find . -type f -name \"Foo*\" -exec rm {} \\;"}, {"invocation": "Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago", "cmd": "find $HOME \\( -name a.out -o -name '*.o' \\) -atime +7 -exec rm {} \\;"}, {"invocation": "Search the current directory recursively for MOV files", "cmd": "find . -iname *.mov"}, {"invocation": "sort each file in the bills directory, leaving the output in that file name with .sorted appended", "cmd": "find bills -type f | xargs -I XX sort -o XX.sorted XX"}, {"invocation": "Find directories that have \"755\" permissions and modify them to have \"700\" permissions", "cmd": "find . -type d -perm 755 -exec chmod 700 {} \\;"}, {"invocation": "Remount \"/home/evgeny\" with the \"suid\" flag set", "cmd": "sudo mount -i -o remount,suid /home/evgeny"}, {"invocation": "Remove files named \"core\" from the /work directory tree and write their names to /dev/stderr (the standard error", "cmd": "find /work \\( -fprint /dev/stderr \\) , \\( -name 'core' -exec rm {} \\; \\)"}, {"invocation": "Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago", "cmd": "find . -name \"R*VER\" -mtime +1"}, {"invocation": "Recursively removes all empty folders under current folder.", "cmd": "find -depth -type d -empty -exec rmdir {} \\;"}, {"invocation": "Remove all regular files from the current directory tree that were modified between August 10th and August 17th", "cmd": "find . -type f -newermt \"Aug 10\" ! -newermt \"Aug 17\" -exec rm {} \\;"}, {"invocation": "Find all files named \"file.ext\" under the current working directory tree and print its filename", "cmd": "find `pwd` -name \"file.ext\" -printf \"%f\\n\""}, {"invocation": "Show all lines as they are executed and stop at the first command returning nonzero", "cmd": "set -ex"}, {"invocation": "find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.)", "cmd": "find ~/ -daystart -type f -mtime 1"}, {"invocation": "Search all *.txt files under ~/documents for the word \"DOGS\"", "cmd": "find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \\; -print"}, {"invocation": "Search all files in the current directory tree whose names contain \".\" for \"SearchString\"", "cmd": "find . -name '*.*' -exec grep 'SearchString' {} /dev/null \\;"}, {"invocation": "Unzip all files that match \"*.gz\" in the current directory and subdirectories to stdout and search for \"test\"", "cmd": "find . -name \"*.gz\" -exec zcat \"{}\" + |grep \"test\""}, {"invocation": "Find all directories under /home/username/public_html/sites/all/themes and set their permission to 750", "cmd": "find /home/username/public_html/sites/all/themes -type d -exec chmod 750 {} +"}, {"invocation": "Finds recursively all files not having extension .o in '/path/' that contain 'pattern', and prints matched strings with string number and file name.", "cmd": "grep --exclude=*.o -rnw '/path/to/somewhere/' -e \"pattern\""}, {"invocation": "Search the regular files from directory tree 'directory_name' for \"word\" and print the names of the matched files", "cmd": "find directory_name -type f -print0 | xargs -0 grep -li word"}, {"invocation": "Forcibly create symbolic links in target directory \"~/staging\" for all files located in directory \"~/mirror\"", "cmd": "ln --force --target-directory=~/staging ~/mirror/*"}, {"invocation": "Find all regular files under current directory", "cmd": "find . -type f"}, {"invocation": "display all the regular/normal files in the current directory", "cmd": "find . -type f"}, {"invocation": "Find all .sh files in or below the current directory and move them to folder ~/back.scripts", "cmd": "find . -name \"*.sh\" -print0 | xargs -0 -I {} mv {} ~/back.scripts"}, {"invocation": "Find files named \"needle\" ignoring the case", "cmd": "find . -iname \"needle\""}, {"invocation": "Run sed command \"s#\\(export\\ PATH=\\\"\\)\\(.*\\)#\\1/home/$(whoami)/bin:~/\\.local/bin:\\2#\" on \"~/.zshrc\" where \"$(whoami)\" is replaced with the current user name", "cmd": "sed -i \"s#\\(export\\ PATH=\\\"\\)\\(.*\\)#\\1/home/$(whoami)/bin:~/\\.local/bin:\\2#\" ~/.zshrc"}, {"invocation": "Execute 'echo -e \"\\033[31mHello World\\033[0m\"' every without color support 2 seconds", "cmd": "watch 'echo -e \"\\033[31mHello World\\033[0m\"'"}, {"invocation": "Copy the standard output of a \"bash\" session to \"/var/log/bash.out.log\"", "cmd": "bash | tee /var/log/bash.out.log"}, {"invocation": "Find all empty files in the current directory and delete them", "cmd": "find . -type f -maxdepth 1 -empty -print0 | xargs -0 /bin/rm"}, {"invocation": "List all regular files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 -type f | xargs ls -l"}, {"invocation": "Search the home directory tree for files last modified more than a year ago", "cmd": "find $HOME -mtime +365"}, {"invocation": "search for all regular/normal files in the current folder and display the number of lines in the file", "cmd": "find . -type f -print | xargs -L1 wc -l"}, {"invocation": "Find all files/directories named orm.properties under current directory", "cmd": "find . -name \"orm.properties\""}, {"invocation": "Find all files in the /home/ directory tree that were last accessed more than 7 days ago", "cmd": "find /home -atime +7"}, {"invocation": "Remove all files last modified more than 10 days ago from the current directory tree", "cmd": "find . -mtime +10 | xargs rm"}, {"invocation": "Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.", "cmd": "find . -perm 040 -type f -exec ls -l {} \\;"}, {"invocation": "List all regular files in the current directory tree", "cmd": "find . -type f | xargs ls -l"}, {"invocation": "Find all files named 'test' in the current directory tree, not descending into \"test\" directories", "cmd": "find . -name test -prune"}, {"invocation": "list complete path name to process associated with pid \"$1\"", "cmd": "find /proc/$1/exe -printf '%l\\n'"}, {"invocation": "find all the regular/normal files in the folder \"myfiles\" which have the permission 647.", "cmd": "find /myfiles -type f -perm -647"}, {"invocation": "Find all files that are set group ID to staff", "cmd": "find . -group staff -perm -2000 -print"}, {"invocation": "Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :", "cmd": "find ~/code -type d -name '[^\\.]*' | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "find all files and directories under the current directory and display the inode of each one, using printf", "cmd": "find . -printf \"%i \\n\""}, {"invocation": "Search the .VER files from the current directory tree for Perl regular expression \"Model-Manufacturer:.\\n.\"", "cmd": "find . -name \"*.VER\" -exec grep -P 'Model-Manufacturer:.\\n.' '{}' ';' -print"}, {"invocation": "Append \"\\r\" on each line of file \"input\" and display the printable characters", "cmd": "sed 's/$/\\r/g' input |od -c"}, {"invocation": "Instantly kill all processes whose command is 'myprocess'.", "cmd": "kill -9 \\`pgrep myprocess\\`"}, {"invocation": "Search for the Perl regex \"[\\x80-\\xFF]\" in *.xml files under current directory tree", "cmd": "find . -name *.xml | xargs grep -P \"[\\x80-\\xFF]\""}, {"invocation": "display all the files in the current folder", "cmd": "find . -print"}, {"invocation": "Find files/directories writable by group and others under the /path directory", "cmd": "find /path -perm -go+w"}, {"invocation": "sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )", "cmd": "find / -type f -printf \"\\n%AD %AT %p\" | head -n 11 | sort -k1.8n -k1.1nr -k1"}, {"invocation": "Get the disk space used by all *.txt (case insensitive) files/directories under current directory", "cmd": "find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1"}, {"invocation": "find all the log files in the file system which are present in the current partition", "cmd": "find / -xdev -name \"*.log\""}, {"invocation": "Read a line from standard input into variable \"PASSWORD\"", "cmd": "read PASSWORD"}, {"invocation": "SSH in server 'server' as user 'user' with X11 forwarding disabled", "cmd": "ssh -x user@server"}, {"invocation": "Prints Kb size of all top-level files and folders in a current folder in descending order.", "cmd": "du -ks * | sort -n -r"}, {"invocation": "change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories", "cmd": "find /the/path -depth -name \"*.abc\" -exec rename 's/\\.abc$/.edefg/' {} +"}, {"invocation": "Delete current cron job list, and use those in yourFile.text", "cmd": "crontab yourFile.text"}, {"invocation": "Print file system disk space usage", "cmd": "df"}, {"invocation": "Search for files that are at least 100MB", "cmd": "find / -size +100M"}, {"invocation": "Print the IP addresses for the current host name", "cmd": "hostname -i"}, {"invocation": "Print the last 10 commands in history", "cmd": "history | tail -10"}, {"invocation": "Find files associated with an inode", "cmd": "find . -inum 968746 -exec ls -l {} \\;"}, {"invocation": "List all files from the current directory tree that were modified less than 60 minutes ago, omitting \".\"", "cmd": "find . -mindepth 1 -mmin -60 | xargs -r ls -ld"}, {"invocation": "Print a list of all *.code files from the current directory tree", "cmd": "find . -name *.code"}, {"invocation": "List all *.jar files/directories under /usr, /home and /tmp directory", "cmd": "find /usr /home  /tmp -name \"*.jar\""}, {"invocation": "search  in current directory downwards all files which were accessed exactly 7 days back", "cmd": "find . -atime 7 -print"}, {"invocation": "Find all directories named CVS, and deletes them and their contents.", "cmd": "find . -type d -name CVS -exec rm -r {} \\;"}, {"invocation": "display all the files in the file system excluding all the \".c\" files", "cmd": "find / \\! -name \"*.c\" -print"}, {"invocation": "Copy all files in the current directory except those containing 'Music' to '/target_directory'.", "cmd": "cp `ls | grep -v Music` /target_directory"}, {"invocation": "Print which files differ in \"dir_one\" and \"dir_two\" recursively and sort the output", "cmd": "diff -qr dir_one dir_two | sort"}, {"invocation": "Find all MP3 files in the home directory tree that were modified in the last 24 hours", "cmd": "find ~ -type f -mtime 0 -iname '*.mp3'"}, {"invocation": "Search for non-empty files", "cmd": "find . ! -size 0k"}, {"invocation": "Print URL \"http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr=\" followed by a number ranging from 1 to 786", "cmd": "yes 'http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr=' | nl -ba | sed 786q | grep . | awk '{print $2$1}'"}, {"invocation": "Compare each file in \"repos1/\" and \"repos2/\", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context", "cmd": "diff -ENwbur repos1/ repos2/"}, {"invocation": "Split \"ADDRESSS_FILE\" into files containing at most 20 lines and prefix \"temp_file_\"", "cmd": "split -l20 ADDRESSS_FILE temp_file_"}, {"invocation": "Set the variable \"me\" to the name of the running script.", "cmd": "me=`basename \"$0\"`"}, {"invocation": "Find all files/directories that start with 'test' in their names under current directory tree", "cmd": "find . -name 'test*'"}, {"invocation": "Execute commands from \"$file\" in the current shell.", "cmd": "source \"$file\""}, {"invocation": "Recursively copy all files and directories in \"demo\" excluding \".git\" to \"demo_bkp\"", "cmd": "find demo -depth -name .git -prune -o -print0 | cpio -0pdv --quiet demo_bkp"}, {"invocation": "Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories", "cmd": "find . -type f -not -path '*/\\.*'"}, {"invocation": "Find all files/directories named file1 in maximum 2 levels down the current directory", "cmd": "find -maxdepth 2 -name file1"}, {"invocation": "find al the tmp directories in the current directory and create a dump of it", "cmd": "find . -type d -name tmp -prune -o -print | cpio -dump /backup"}, {"invocation": "Find files that are orphaned", "cmd": "find -nouser"}, {"invocation": "List all regular files residing in the current directory tree and containing string \"/bin/ksh\"", "cmd": "find . -type f -print | xargs grep -li 'bin/ksh'"}, {"invocation": "Unzip all \".gz\" files in the current directory tree excluding files containing \"dvportgroups\", \"nsanity\", \"vcsupport\", \"viclient\", and \"vsantraces\"", "cmd": "find . -name '*.gz' ! -name '*dvportgroups*' ! -name '*nsanity*' ! -name '*vcsupport*' ! -name '*viclient*' ! -name 'vsantraces*' -exec gunzip -vf {} \\;"}, {"invocation": "Show the last 10 .conf files found by `find' in the /etc directory and 1 level below", "cmd": "find /etc -maxdepth 2 -name \"*.conf\" | tail"}, {"invocation": "extract \"filename.tar.xz\" with verbose output", "cmd": "$ tar xvfJ filename.tar.xz"}, {"invocation": "Remove files whose names start with `Foo'", "cmd": "find . -type f -name \"Foo*\" -exec rm {} \\;"}, {"invocation": "Recursively print all files and directories in the current directory tree including hidden files", "cmd": "tree -a ."}, {"invocation": "search for the file job.hostory in the folder \"/data/Spoolln\"", "cmd": "find /data/SpoolIn -name job.history"}, {"invocation": "Find all files/directories in level 2 down the current directory", "cmd": "find -mindepth 2 -maxdepth 2"}, {"invocation": "Connect via ssh to \"your.server.example.com\" and recursively copy directory \"/path/to/foo\" on this host to direcotry \"/home/user/Desktop\" on local host, using \"blowfish\" cipher algorithm.", "cmd": "scp -c blowfish -r user@your.server.example.com:/path/to/foo /home/user/Desktop/"}, {"invocation": "change the permissions of all the directories in the folder root_dir to 555", "cmd": "find root_dir -type d -exec chmod 555 {} \\;"}, {"invocation": "Creates temporary file by template provided in option '-t'.", "cmd": "mktemp -t identifier.XXXXXXXXXX"}, {"invocation": "Print source of the file system containing current working directory.", "cmd": "df . | tail -1 | awk '{print $1}'"}, {"invocation": "Recursively find all files in the directory \"posns\" and split each one into files of at most 10000 lines each", "cmd": "find posns -type f -exec split -l 10000 {} \\;"}, {"invocation": "Find all files under current directory that are larger than 10KB in size", "cmd": "find . -type f -size +10k"}, {"invocation": "Find all broken symlinks in maximum 1 level down the $path directory", "cmd": "find -L $path -maxdepth 1 -type l"}, {"invocation": "find all text files in current folder and delete them", "cmd": "find . -name \".txt\" -exec rm \"{}\" \\;"}, {"invocation": "Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'", "cmd": "find test -type d -regex '.*/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'"}, {"invocation": "list all zero-length files under the current directory", "cmd": "find . -empty -exec ls {} \\;"}, {"invocation": "Extract any line in \"fileA\" which does not appear as the first word of any line in \"fileB\"", "cmd": "comm -23 <(sort fileA) <(cut -d' ' -f1 fileB | sort -u)"}, {"invocation": "Remove files under current directory with inode number $inum", "cmd": "find . -inum $inum -exec rm {} \\;"}, {"invocation": "Find all regular files in the current directory tree and count them", "cmd": "find -type f -printf '.' | wc -c"}, {"invocation": "Find the passwd file under root and one level down.", "cmd": "find -maxdepth 2 -name passwd"}, {"invocation": "delete all the empty in the current folder and all its sub directories", "cmd": "find . -depth -type d -empty -exec rmdir {} \\;"}, {"invocation": "Print the list of all regular files from the current directory tree that contain \"confirm\", case insensitive", "cmd": "find . -type f -exec grep -il confirm {} \\;"}, {"invocation": "Gets string with IP4 address of en0 network interface.", "cmd": "ifconfig en0 | grep inet | grep -v inet6"}, {"invocation": "Copy permissions from \"version2/somefile\" to \"version1/somefile\"", "cmd": "chmod --reference version2/somefile version1/somefile"}, {"invocation": "Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.", "cmd": "fn=$(mktemp -u -t 'XXXXXX')"}, {"invocation": "Find all file which have more the 2 hard link", "cmd": "find .  -type f -links +2 -exec ls -lrt {} \\;"}, {"invocation": "Print lines 347340107 through 347340206 in \"filename\"", "cmd": "tail -n +347340107 filename | head -n 100"}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*", "cmd": "find \"$(pwd -P)\" -mtime 0 -not \\( -name '*.swp' -o -regex './es.*' -o -regex './en.*' \\)"}, {"invocation": "Find \"file.xml\" under the current directory and change directory to its parent", "cmd": "cd `find . -name file.xml -printf %h`"}, {"invocation": "Send each byte in \"/home/cscape/Desktop/table.sql\" to awk", "cmd": "fold -1 /home/cscape/Desktop/table.sql  | awk '{print $0}'"}, {"invocation": "Mount all filesystems in /etc/fstab", "cmd": "sudo mount -a"}, {"invocation": "Removes all top-level *.pdf files in a current folder.", "cmd": "rm -f *.pdf"}, {"invocation": "Check if a drive is mounted to nfs", "cmd": "mount |grep nfs"}, {"invocation": "search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+"}, {"invocation": "Display differences between files dir1.txt and dir2.txt.", "cmd": "diff dir1.txt dir2.txt"}, {"invocation": "Prints full path to files with dot in name in a current folder.", "cmd": "ls -d -1 $PWD/*.*"}, {"invocation": "change the permissions of all regular/normal files in the file system", "cmd": "chmod 640 `find ./ -type f -print`"}, {"invocation": "Remount root filesystem \"/\"", "cmd": "mount -oremount /"}, {"invocation": "Delete all non digits from index \"$i\" in bash array \"depsAlastmodified\" and print the hex dump as characters", "cmd": "echo \"${depsAlastmodified[$i]}\" | tr -cd '[[:digit:]]' | od -c"}, {"invocation": "Find all files/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree", "cmd": "find . -iname '*blah*' -mtime -2"}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep inet | cut -d: -f2 | cut -d' ' -f1"}, {"invocation": "Lists long format information about file '/bin/echo'.", "cmd": "ls -l /bin/echo"}, {"invocation": "Build an \"svn hotcopy\" command for each subdirectory of /usr/local/svn/repos/", "cmd": "find /usr/local/svn/repos/ -maxdepth 1 -mindepth 1 -type d -printf \"%f\\0\" | xargs -0 -I{} echo svnadmin hotcopy /usr/local/svn/repos/\\{\\} /usr/local/backup/\\{\\}"}, {"invocation": "Find all symbolic links in the current directory tree", "cmd": "find -type l"}, {"invocation": "Print full path of command \"gradle\"", "cmd": "which gradle"}, {"invocation": "Split \"$in_file\" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file\"_\"", "cmd": "awk '{if (NR!=1) {print}}' $in_file | split -d -a 5 -l 100000 - $in_file\"_\""}, {"invocation": "Print the absolute path of \"$path\"", "cmd": "readlink -f \"$path\""}, {"invocation": "Get the sizes (and total size) of all files under dir1 directory", "cmd": "find dir1 ! -type d |xargs wc -c"}, {"invocation": "Send ping requests to hostname specified by variable \"c\" for 1 second.", "cmd": "ping -w 1 $c"}, {"invocation": "Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output", "cmd": "find . -type f -print | sed 's|^.*/S|S|'"}, {"invocation": "Print all file/directory names without white space safety under the /proc directory", "cmd": "find /proc | xargs"}, {"invocation": "Replace \"-\" with \"0\" in columns 4 and 5 of file \"test.in\" and format as a table", "cmd": "awk '{gsub(/-/,\"0\",$4);gsub(/-/,\"0\",$5)}1' test.in | column -t"}, {"invocation": "Remove all empty regular files under the current directory and below", "cmd": "find ./ -type f -size 0c -print | xargs rm"}, {"invocation": "Print list of all user names who are logged in", "cmd": "who | sed -e 's/[ \\t].*//g'"}, {"invocation": "Reverse the order of lines in \"myfile.txt\" using BSD \"tail\" command", "cmd": "tail -r myfile.txt"}, {"invocation": "Make directories to \"$2\" as needed", "cmd": "mkdir -p $2"}, {"invocation": "Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor", "cmd": "find . | grep -v \"\\.png$\" | grep -v \"\\.class$\" | vim -"}, {"invocation": "find the oldest normal file in the current directory and display its contents", "cmd": "find -type f -printf \"%T+ %p\\0\" | sort -z | grep -zom 1 \".*\" | cat"}, {"invocation": "Remove all *.tmp files from the /tmp directory tree", "cmd": "find /tmp -name \"*.tmp\" | xargs rm"}, {"invocation": "Convert all characters in \"$a\" to lower case and save to variable \"b\"", "cmd": "b=`echo \"$a\" | sed 's/./\\L&/g'`"}, {"invocation": "Find grub.conf files in entire file system", "cmd": "find / -name grub.conf"}, {"invocation": "Search directory /home/ABCD recursively, starting from one level below, for regular files", "cmd": "find /home/ABCD/ -mindepth 1 -type f -print"}, {"invocation": "Search for file names with \"bad\" characters in the current directory and delete the files.", "cmd": "find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}, {"invocation": "Sources script incl.sh in the folder where current running script is located", "cmd": "source \"$( dirname \"${BASH_SOURCE[0]}\" )/incl.sh\""}, {"invocation": "Find all files which belong to user lal and change their ownership to ravi", "cmd": "find / -user lal -exec chown ravi {} \\;"}, {"invocation": "Find all SUID files .", "cmd": "find /  -perm /u=s"}, {"invocation": "display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder", "cmd": "find . -name test -prune"}, {"invocation": "Sets shell option 'dotglob'.", "cmd": "shopt -s dotglob"}, {"invocation": "Get the total sizes of all files under current directory", "cmd": "find . -type f -printf '%p %s\\n'  | awk '{sum+=$NF}END{print sum}'"}, {"invocation": "find all jpg files in the current folder", "cmd": "find . -name \"*.jpg\""}, {"invocation": "search for all \"tif\" images in current folder", "cmd": "find . -name '*.tif ' -print"}, {"invocation": "Save number of lines with any-cased 'merge' from $COMMIT_EDITMSG file in 'MERGE' variable", "cmd": "MERGE=$(cat $COMMIT_EDITMSG|grep -i 'merge'|wc -l)"}, {"invocation": "Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.", "cmd": "find ~/ -atime +100 -exec rm -i {} \\;"}, {"invocation": "Remove all files under $DIR that were accessed more than 5 days ago", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "Find all files under current directory", "cmd": "find -type f"}, {"invocation": "Stores date of last month day in the 'lastdaymonth' variable.", "cmd": "set lastdaymonth=`cal $month $year  |tr -s \" \" \"\\n\"|tail -1`"}, {"invocation": "Find all files/directories named file in 2 and 3 levels down the current directory", "cmd": "find -mindepth 2 -maxdepth 3 -name file"}, {"invocation": "List the current directory recursively ignoring ./src/emacs/ and all its contents", "cmd": "find . -path ./src/emacs -prune -o -print"}, {"invocation": "search all the files in the current folder using regex", "cmd": "find . -regex \".*/my.*p.$\""}, {"invocation": "Prints calendar for a current month without first day of a week.", "cmd": "cal | sed -e 's/^.\\{3\\}//' -e 's/^\\(.\\{15\\}\\).\\{3\\}$/\\1/'"}, {"invocation": "Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in \"*/systemctl\"", "cmd": "find /usr/sbin /usr/bin -lname \"*/systemctl\""}, {"invocation": "Search the current directory recursively for files writable for `others'", "cmd": "find . -perm -o+w"}, {"invocation": "Find all files in the home directory tree that are owned by another user", "cmd": "find ~ ! -user ${USER}"}, {"invocation": "Recursively search through directory \"test\" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.", "cmd": "find ~/test -type d -exec basename {} \\;"}, {"invocation": "Compare column 3 with column 2 of the next line in \"file\" and format output as a table", "cmd": "awk 'NR==1 { print; next } { print $0, ($1 == a && $2 == b) ? \"equal\" : \"not_equal\"; a = $1; b = $3 }' file | column -t"}, {"invocation": "Find all the files in the current directory", "cmd": "find * -type f -print -o -type d -prune"}, {"invocation": "Print percents of the space used on the file system containing path to the current working directory.", "cmd": "df . -B MB | tail -1 | awk {'print substr($5, 1, length($5)-1)'}"}, {"invocation": "find symbolic links with pattern` '*sysdep.c'", "cmd": "find . -lname '*sysdep.c'"}, {"invocation": "Print true directory name of the current directory", "cmd": "readlink `pwd`"}, {"invocation": "Print summary of new/missing files, and which files differ between dir1 and dir2.", "cmd": "diff  --brief --recursive dir1/ dir2/"}, {"invocation": "Replace all commas with tab characters in 'filename.csv' and page interactively through the result.", "cmd": "sed \"s/,/\\t/g\" filename.csv | less"}, {"invocation": "change the permissions of all the regular/normal files in the current folder", "cmd": "chmod 640 `find ./ -type f -print`"}, {"invocation": "display list of all the files in the /tmp folder", "cmd": "find /tmp/ -exec ls \"{}\" +"}, {"invocation": "gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt", "cmd": "head -5 tst.txt | tail -1 |cut -c 5-8"}, {"invocation": "search the file \"myfile.txt\" in home folder", "cmd": "find \"$HOME/\" -name myfile.txt -print"}, {"invocation": "View line 500 to line 500 + 501 in gzipped file \"bigfile.z\"", "cmd": "zcat bigfile.z | tail -n +500 | head -501"}, {"invocation": "Find all files called wp-config.php in the /var/www directory and below", "cmd": "find /var/www/ -name wp-config.php"}, {"invocation": "search for the file foo.txt in the entire file system", "cmd": "find / -name foo.txt"}, {"invocation": "Find all *.jpg files under current directory and print only unique names", "cmd": "find . -name *.jpg | uniq -u"}, {"invocation": "List the unique parent directories of all .class files found under \"/root_path\"", "cmd": "find /root_path -type f -iname \"*.class\" -printf \"%h\\n\" | sort -u"}, {"invocation": "Remove all files/directories in the current directory without '.git' and '.gitignore'", "cmd": "find -mindepth 1 -depth -print0 | grep -vEzZ '(\\.git(/|$)|/\\.gitignore$)' | xargs -0 rm -rvf"}, {"invocation": "Change directory to the directory containing the \"oracle\" executable", "cmd": "cd $(dirname $(which oracle))"}, {"invocation": "Find all *.rb files/directories under current directory", "cmd": "find . -name '*.rb'"}, {"invocation": "find all '*.c' files under $HOME directory which context contains sprintf", "cmd": "find $HOME -name '*.c' -print | xargs grep -l sprintf"}, {"invocation": "Find all the files which are modified in last 1 hour in entire file system", "cmd": "find / -mmin -60"}, {"invocation": "Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation", "cmd": "find ~/ -atime +100 -exec rm -i {} ;"}, {"invocation": "Find all files under $source_dir that match the regex .*\\.\\(avi\\|wmv\\|flv\\|mp4\\) in their paths and print them with null character as the delimiter", "cmd": "find \"$source_dir\" -type f -regex \".*\\.\\(avi\\|wmv\\|flv\\|mp4\\)\" -print0"}, {"invocation": "Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'", "cmd": "bgxjobs=\" $(jobs -pr | tr '\\n' ' ')\""}, {"invocation": "create and list filenames in the archive", "cmd": "tar cf - $PWD|tar tvf -|awk '{print $6}'|grep -v \"/$\""}, {"invocation": "Search everywhere for directories named `root'", "cmd": "find / -type d -name root"}, {"invocation": "Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.", "cmd": "basedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\\\,/,g')\")"}, {"invocation": "Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories", "cmd": "find $1 -perm -u+r -exec chmod g+r {} \\;"}, {"invocation": "List all .gif files in the current directory tree", "cmd": "find . -name *.gif -exec ls {} \\;"}, {"invocation": "display all files in the current folder", "cmd": "find ."}, {"invocation": "Set 644 permission to all regular files under /home/my/special/folder directory", "cmd": "chmod 644 `find /home/my/special/folder -type f`"}, {"invocation": "Search file aaa from current direcoty downwards and print it .", "cmd": "find . -name aaa -print"}, {"invocation": "Move all files and directories not starting with \"l\" in \"/mnt/usbdisk\" to \"/home/user/stuff/.\"", "cmd": "mv /mnt/usbdisk/[^l]* /home/user/stuff/."}, {"invocation": "Save the user name in upper case of the current user in variable \"v\"", "cmd": "v=$(whoami | tr 'a-z' 'A-Z')"}, {"invocation": "Search all the .c and .h files in the current directory tree for \"expr\"", "cmd": "find -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 3 days ago", "cmd": "find . -type f -mtime +3"}, {"invocation": "Save the absolute path of \"$path\" to variable \"full_path\"", "cmd": "full_path=`readlink -fn -- $path`"}, {"invocation": "Create intermediate directories \"b and \"c\" as required and directory \"c\"", "cmd": "mkdir -p a/b/c"}, {"invocation": "Counts total lines in PHP and JS files.", "cmd": "find . -name '*.js' -or -name '*.php' | xargs wc -l | grep 'total'  | awk '{ SUM += $1; print $1} END { print \"Total text lines in PHP and JS\",SUM }'"}, {"invocation": "Print each logged in user's full name", "cmd": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq"}, {"invocation": "Print only lines from 'file1.txt' that not present in 'file2.txt' and beginning with 'Q'", "cmd": "cat file1.txt | grep -Fvf file2.txt | grep '^Q'"}, {"invocation": "Expands `whoami` as current user name, and adds resulted path to the directory stack.", "cmd": "pushd /home/`whoami`/Pictures"}, {"invocation": "List files larger than 10MB under /var/log /tmp that haven't changed in a month", "cmd": "find /tmp /var/tmp -size +30M -mtime 31 -ls"}, {"invocation": "Search the current directory tree for files and directories with permissions 775", "cmd": "find .  -perm 775 -print"}, {"invocation": "Find all files/directories in entire file system less than 50 bytes", "cmd": "find / -size -50c"}, {"invocation": "display all the regular/normal files in current folder", "cmd": "find . -type f -name \\*"}, {"invocation": "display all files in current folder in sorted order of depth", "cmd": "find folder1/ -type f -printf \"%d\\t%p\\n\" | sort -n | sed -e \"s|[0-9]*\\t||\""}, {"invocation": "Print the names of all files and directories in the current directory tree", "cmd": "find ."}, {"invocation": "Print name of the file system containing $path.", "cmd": "df -h $path | cut -f 1 -d \" \" | tail -1"}, {"invocation": "Set the value of \"to_sort\" to \"$1\" in a subshell which no longer exists after the pipeline completes", "cmd": "echo \"$1\"| read -a to_sort"}, {"invocation": "Find all TXT files that belong to user root", "cmd": "find / -user root -iname \"*.txt\""}, {"invocation": "Find strings with 'Features' in /var/run/dmesg.boot' file", "cmd": "cat /var/run/dmesg.boot | grep Features"}, {"invocation": "Find files matching `.ssh*' and append their anmes to file `ssh-stuff'", "cmd": "find / -name .ssh* -print | tee -a ssh-stuff"}, {"invocation": "Find all files/directories named 'document' in the root filesystem partition", "cmd": "find / -xdev -name document -print"}, {"invocation": "Write the current date and time followed by \" 0\" to the console and append to \"log.csv\"", "cmd": "echo $(date) \"0\" | tee -a log.csv"}, {"invocation": "Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago", "cmd": "find $LOCATION -name $REQUIRED_FILES -type f -mtime +1 -delete"}, {"invocation": "Creates full path with parents, that matches to folder path extracted from $f variable.", "cmd": "mkdir -p -- \"$(dirname -- \"$f\")\""}, {"invocation": "List files with C-style escape sequences for non-alphanumeric characters", "cmd": "ls -b"}, {"invocation": "Find all hidden files starting from the directory given as variable $FOLDER", "cmd": "find $FOLDER -name \".*\""}, {"invocation": "Delete all __temp__* directories under maximum 1 level down the current directory tree", "cmd": "find . -maxdepth 1 -type d -name '__temp__*' -print0 | xargs -0 rm -rf"}, {"invocation": "Find all *text files/directories under current directory", "cmd": "find -name \"*text\""}, {"invocation": "Find and print the full pathname of all PDF files in the current directory and its sub-directories.", "cmd": "find . -name \"*.pdf\" -print"}, {"invocation": "Prints latest modified file in a directory", "cmd": "ls -1t | head -1"}, {"invocation": "Delete all regular files named 'IMAG1806.jpg' under current directory tree", "cmd": "find . -type f -name \"IMAG1806.jpg\" -exec rm -f {} \\;"}, {"invocation": "Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644", "cmd": "find . -name \"articles.jpg\" -exec chmod 644 {} \\;"}, {"invocation": "Save the \"Pictures\" directory in the current user's home directory on the directory stack", "cmd": "pushd /home/`whoami`/Pictures"}, {"invocation": "Ping the broadcast address \"10.10.0.255\"", "cmd": "ping -b 10.10.0.255"}, {"invocation": "Delete all files/directories taken by the glob pattern * except the ones with the name 'b'", "cmd": "find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf '{}' ';'"}, {"invocation": "Search the system for the file \u201ctestfile.txt\u201d", "cmd": "find / -name \"testfile.txt\""}, {"invocation": "find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir", "cmd": "find . -type d -mtime 0 -exec mv {} /path/to/target-dir \\;"}, {"invocation": "Search the /home/user1 directory tree for files whose names end in \".bin\"", "cmd": "find /home/user1 -name \"*.bin\""}, {"invocation": "Lists '/tmp/hashmap.$1' file or folder '/tmp/hashmap.$1' content one file per line.", "cmd": "ls -1 /tmp/hashmap.$1"}, {"invocation": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.", "cmd": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev"}, {"invocation": "Find all files in the current directory tree whose names are \".DS_STORE\" and delete them", "cmd": "find . -name \".DS_STORE\" -delete"}, {"invocation": "Create an empty file 'last.check' in directory pointed by variable \"log_dir\", with specified timestamp.", "cmd": "touch -m 201111301200.00 $log_dir/last.check"}, {"invocation": "show all the files in the folder /etc which have been modified in the last 24 hours", "cmd": "find /etc -mtime -1"}, {"invocation": "List all files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 | xargs -r ls -ld"}, {"invocation": "Search in current directory downwards all files whose owner is aa1 and grop is grp .", "cmd": "find .  \\( -user aa1 - group grp \\) -print"}, {"invocation": "Print a list of case insensitive duplicate filenames in the current directory", "cmd": "ls | sort -f | uniq -i -d"}, {"invocation": "Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'", "cmd": "find /usr/src -not \\( -name \"*,v\" -o -name \".*,v\" \\) '{}' \\; -print"}, {"invocation": "Locate files with user permissions rwx owned by my_user", "cmd": "find . -user my_user -perm -u+rwx"}, {"invocation": "Find all files in the `work' directory tree, pass them to grep and search for \"profit\"", "cmd": "find ./work -print | xargs grep \"profit\""}, {"invocation": "display all empty files in the current folder", "cmd": "find . -size 0k"}, {"invocation": "Places current job to background.", "cmd": "bg %  so it wont die when you logoff"}, {"invocation": "Prints calendar of April of 2012, and redirects output to 't' file and 'more' pager tool.", "cmd": "cal April 2012 | tee t | more"}, {"invocation": "Delete all filename* files under /dir directory", "cmd": "find /dir -name \"filename*\" -type f -delete"}, {"invocation": "Format time string @1267619929 according to default time format", "cmd": "date -d @1267619929"}, {"invocation": "Show the number of regular files in the current directory tree", "cmd": "find . -type f | wc -l"}, {"invocation": "Change all files in the current directory tree to owner \"xx\"", "cmd": "find . \\( \\! -user xx -exec chown -- xx '{}' + -false \\)"}, {"invocation": "Print info about all mounted file systems, and grand total statistic about available and used space", "cmd": "df --total"}, {"invocation": "Print a count of each unique line in \"ip_addresses.txt\" sorted numerically", "cmd": "sort -n ip_addresses.txt | uniq -c"}, {"invocation": "Merge already sorted files \"file*.txt\" and split the result into files of at most 100000 lines each with a prefix \"sorted_file\"", "cmd": "sort --merge file*.txt | split -l 100000 - sorted_file"}, {"invocation": "Find all .java files starting from the current folder", "cmd": "find . -name \"*.java\""}, {"invocation": "Print full path of command \"c++\"", "cmd": "which c++"}, {"invocation": "delete all the regular files in the temp folder which have not been modified in the last 24 hours", "cmd": "find /tmp/ -type f -mtime +1 -exec rm {} \\;"}, {"invocation": "Make directories to \"$TARGET_PATH\" as needed without causing an error if it exists", "cmd": "mkdir -p \"$TARGET_PATH\""}, {"invocation": "Find .txt files on the system whose size is greater than 12000 bytes", "cmd": "find / -name \"*.txt\" -size +12000c"}, {"invocation": "Sort all directories under current directory placing the file with least modification time at first", "cmd": "find -type d -printf '%T+ %p\\n' | sort"}, {"invocation": "display all text files in the folder /tmp/1", "cmd": "find \"/tmp/1\" -iname \"*.txt\""}, {"invocation": "Write the shell's input to standard error as it is read", "cmd": "set -v"}, {"invocation": "Find all the files which were accessed 50 days ago", "cmd": "find / -atime 50"}, {"invocation": "Print numbers from 1 to 10 with 2 values per line", "cmd": "seq 10 | awk 'NR%2{printf(\"%s \", $0); next}1'"}, {"invocation": "Mount \"/dev/shm\" using /etc/fstab entry", "cmd": "mount /dev/shm"}, {"invocation": "Find \"*prefs copy\" files in the /mnt/zip directory tree and remove them", "cmd": "find /mnt/zip -name \"*prefs copy\" -print0 | xargs rm"}, {"invocation": "display all the regular files in the current folder excluding those that are present in the path \"git\"", "cmd": "find . -path \"*.git\" -prune -o -type f -print"}, {"invocation": "search for regular files in the current folder which path is not  \"./.*\" and not \"./*/.*\"", "cmd": "find ./ -type f -name \"*\" ! -path \"./.*\" ! -path \"./*/.*\""}, {"invocation": "display all the files in the current folder excluding the directory aa", "cmd": "find . -type d ! -name aa"}, {"invocation": "Search the *.c files residing in the current directory tree for string \"blash\"", "cmd": "find . -name *.c -exec grep -n -e blash {} \\;"}, {"invocation": "Print the contents of \"order.txt\"", "cmd": "cat order.txt"}, {"invocation": "Count the number of lines in all \".php\" files in the current directory tree", "cmd": "find . -name '*.php' -type f | xargs cat | wc -l"}, {"invocation": "Print file name without the last two extensions assuming the file name doesn't contain any other dots.", "cmd": "echo \"$FILE\"|rev|cut -d\".\" -f3-|rev"}, {"invocation": "Print \"$line\" in hexadecimal 2-byte units", "cmd": "echo -n $line | od -x"}, {"invocation": "Find all files/directories under 'my key phrase' directory", "cmd": "find 'my key phrase'"}, {"invocation": "Print common files of directory \"1\" and \"2\"", "cmd": "comm -12  <(ls 1) <(ls 2)"}, {"invocation": "display all the files in current folder", "cmd": "find ."}, {"invocation": "find all the perl files in the current folder and search for a pattern", "cmd": "find . -name '*.pl' | xargs grep -L '^use strict'"}, {"invocation": "Find all httpd.conf files in entire file system", "cmd": "find / -name httpd.conf"}, {"invocation": "find all files in home folder which have been modified after a timestamp", "cmd": "find ~ -newer /tmp/timestamp"}, {"invocation": "List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists", "cmd": "comm -12 <(find ~/bin/FilesDvorak/.* -maxdepth 0) <(find ~/.PAST_RC_files/.*)"}, {"invocation": "List the current directory recursively ignoring the \"dir1\" subdirectory", "cmd": "find . -path ./dir1\\*  -o -print"}, {"invocation": "Print the difference between line 2 and 3 in file \"$f\"", "cmd": "diff <(fold -w1 <(sed '2q;d' $f)) <(fold -w1 <(sed '3q;d' $f)) | awk '/[<>]/{printf $2}'"}, {"invocation": "Report file systems disk space usage pretty formatted.", "cmd": "df -Ph | column -t"}, {"invocation": "Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines", "cmd": "find \"$searchpath\" -name \"$filepat.[ch]\" -exec grep --color -aHn \"$greppattern\" {} \\;"}, {"invocation": "unsafed rm all file which name start with '#'", "cmd": "find / -name '#*' -atime +7 -print | xargs rm"}, {"invocation": "Print a list of all duplicate case insensitive filenames in the current directory tree", "cmd": "find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d"}, {"invocation": "create directory backup", "cmd": "mkdir backup"}, {"invocation": "Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C", "cmd": "find sort_test/ -type f | env -i LC_COLLATE=C sort"}, {"invocation": "Find and remove multiple *.mp3 files", "cmd": "find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}, {"invocation": "Gets domain name from dig reverse lookup.", "cmd": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}, {"invocation": "Set the setgid bit on all directories in the repository \"/git/our_repos\"", "cmd": "find /git/our_repos -type d -exec chmod g+s {} +"}, {"invocation": "Prints long listing of directories '/tmp', '/tnt' themselves bordered with '<--' and '--->'.", "cmd": "ls -ld /tmp /tnt | sed 's/^.*$/<-- & --->/'"}, {"invocation": "Search the current directory recursively for regular files last changed more than 2 days ago", "cmd": "find . type -f -ctime +2"}, {"invocation": "Search for the string \"ERROR\" in all XML files in the current working directory tree", "cmd": "find . -name \"*.xml\" -exec grep \"ERROR\" /dev/null '{}' \\+"}, {"invocation": "display all normal/regular files in current directory", "cmd": "find . -type f -print0"}, {"invocation": "display all the files in the home folder excluding directories which have been modified in the last 24 hours", "cmd": "find /home/ -mtime -1 \\! -type d"}, {"invocation": "Remove all regular files under $DIR directory tree that were accessed more than 5 days ago", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "Print 7 spaces in a row", "cmd": "yes ' ' | head -7 | tr -d '\\n'"}, {"invocation": "find all files that names are game", "cmd": "find / -name game"}, {"invocation": "Split standard input into files of at most 1000 lines each", "cmd": "split"}, {"invocation": "Copies newest file under the current folder to the '/tmp/'", "cmd": "cp $(ls -1tr * | tail -1) /tmp/"}, {"invocation": "Find all regular files under current directory tree that were accessed $FTIME days ago", "cmd": "find . -type f -atime $FTIME"}, {"invocation": "Count files in the current path by modification month", "cmd": "find . -maxdepth 1 -type f -printf '%TY-%Tm\\n' | sort | uniq -c"}, {"invocation": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.", "cmd": "echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3"}, {"invocation": "display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)", "cmd": "find . -type f \\( -name \"*.htm*\" -o -name \"*.js*\" -o -name \"*.txt\" \\) -print0 | xargs -0 -n1 echo"}, {"invocation": "Make a POST request to \"http://dweet.io/dweet/for/cycy42\" with data \"PiIP\" set to the IP address of the system", "cmd": "wget --post-data=\"PiIP=$(hostname -I)\" http://dweet.io/dweet/for/cycy42"}, {"invocation": "display all regular/normal files in the current folder that were accessed exactly 7*24 hours back", "cmd": "find . -type f -atime 7"}, {"invocation": "Print last 10 commands in history with the first 7 characters removed", "cmd": "history 10 | cut -c 8-"}, {"invocation": "Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories", "cmd": "find $d -type d -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "Filters only directories from long file listing of the current directory.", "cmd": "ls -l | grep \"^d\""}, {"invocation": "Make directory \"/var/svn\"", "cmd": "sudo mkdir /var/svn"}, {"invocation": "Find all files in the level 6 subdirecotries of /usr/src and below, ignoring CVS files", "cmd": "find /usr/src -name CVS -prune -o -mindepth +6 -print"}, {"invocation": "Copy all files in current directory that do not match */not-from-here/* in their names to /dest", "cmd": "find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'"}, {"invocation": "Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*", "cmd": "find . -iname \"{EA,FS}_*\""}, {"invocation": "search for all the files in the current folder which start with \"my\"", "cmd": "find . -name 'my*'"}, {"invocation": "Display \"infile\" as printable characters or backslash escapes", "cmd": "cat infile | od -c"}, {"invocation": "Find files under current directory without descending into other file systems and append a null character at the end of each paths", "cmd": "find -x . -type f -print0"}, {"invocation": "Remove all files with names like \"vmware-*.log\" from the current directory tree", "cmd": "find . -name vmware-*.log | xargs rm"}, {"invocation": "Search all *.c files from the current directory tree for \"hogehoge\"", "cmd": "find . -name \\*.c -print | xargs grep hogehoge"}, {"invocation": "Copy all .pdf files in the ./work/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the ./backup/ directory", "cmd": "find ./work/ -type f -name \"*.pdf\" -mtime +5 -size +2M  | xargs -r cp -t ./backup/"}, {"invocation": "Find all empty directories recursively starting from the current one and delete them", "cmd": "find . -type d -empty -print0 | xargs -0 /bin/rmdir"}, {"invocation": "Set permissions to 600 for regular files under var/", "cmd": "find var/ -type f -exec chmod 600 {} \\;"}, {"invocation": "Search for files only that end with .php and look for the string $test inside those files", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+"}, {"invocation": "Delete all files in the current directory.", "cmd": "find . -exec /bin/rm {} \\;"}, {"invocation": "Sort strings of 'test.txt' file by second from the end field", "cmd": "rev   test.txt | sort  -k2 | rev"}, {"invocation": "Move all *.data files/directories in $S directory to $S/data/ directory", "cmd": "find \"${S}\" -name '*.data' -exec mv '{}' \"${S}/data/\" \\;"}, {"invocation": "delete all the log files which have not been modified in the last 5 days after user confirmation", "cmd": "find . \u2014 name \"*.LOG\" \u2014 mtime +5 -ok rm {} \\;"}, {"invocation": "Print the last line of \"$file1\" to the console and append to \"$file2\"", "cmd": "tail -1 $file1 | tee -a $file2"}, {"invocation": "Find and show all files on the system that are larger than 900 MB", "cmd": "find / -size +900M"}, {"invocation": "Make directory and parents as needed to \"~/temp/bluecove/target/\"", "cmd": "mkdir -p ~/temp/bluecove/target/"}, {"invocation": "recursively change owner of the directory /usr/local/lib to the current user", "cmd": "sudo chown -R `whoami` /usr/local/lib"}, {"invocation": "Find all directories on the system whose size is greater than 50k", "cmd": "find / -type d -size +50k"}, {"invocation": "Search the current directory tree for *bash* files printing them on a single line", "cmd": "find . -name \"*bash*\" | xargs"}, {"invocation": "change the permissions of all the files ending with \"fits\" in the folder \"/store/01\"", "cmd": "find /store/01 -name \"*.fits\" -exec chmod -x+r {} \\; \\"}, {"invocation": "Shows state of 'globstar' shell option.", "cmd": "shopt globstar"}, {"invocation": "Run 'join' with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files.", "cmd": "join <(sort -n file1) <(sort -n file2)"}, {"invocation": "display a long listing of all images with the name \"articles\" in the current folder", "cmd": "find . -iname \"Articles.jpg\" -exec ls -l {} \\;"}, {"invocation": "Find files that do not have a listing in the /etc/passwd or /etc/group in the file system", "cmd": "find / -nouser -o  -nogroup"}, {"invocation": "change the group of all directories in the current folder", "cmd": "find . -type d -exec chgrp usergroup {} \\;"}, {"invocation": "Find all *.mov files under current directory", "cmd": "find . -name \"*.mov\""}, {"invocation": "display all symbolic links in the folder \"myfiles\"", "cmd": "find /myfiles -type l"}, {"invocation": "find all the files in the current folder (handles files which contain newlines or only spaces in their names)", "cmd": "find . -print0 | xargs -0 -l -i echo \"{}\";"}, {"invocation": "Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents.", "cmd": "mkdir -p `dirname /path/to/copy/file/to/is/very/deep/there` \\"}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find -path \"*/test\" -type d -delete"}, {"invocation": "Recursively add \".jpg\" to all files in the current directory tree", "cmd": "find . -type f -exec mv '{}' '{}'.jpg \\;"}, {"invocation": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time", "cmd": "find ~ -iname \"screen*\" | more"}, {"invocation": "Counts lines in each *.php file sorted by file path.", "cmd": "find . -name '*.php' -type f | sort | xargs wc -l"}, {"invocation": "Find all duplicate \".jar\" files in the current directory tree", "cmd": "find . -type f -printf \"%f\\n\" -name \"*.jar\" | sort -f | uniq -i -d"}, {"invocation": "Find all files, folders, symlinks, etc matching pattern \"*.php\" in the current directory recursively", "cmd": "find . -name \\*.php"}, {"invocation": "Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'", "cmd": "tac file | sed '/pattern/q' | tac"}, {"invocation": "Search the current directory tree for executable files and searchable directories", "cmd": "find -executable"}, {"invocation": "Save the short DNS lookup output of $WORKSTATION to 'WORKSTATION_IP' variable", "cmd": "WORKSTATION_IP=`dig +short $WORKSTATION`"}, {"invocation": "Print the first 32 hexadecimal characters from \"/dev/urandom\", determining C locale for character handling functions", "cmd": "cat /dev/urandom | env LC_CTYPE=C tr -cd 'a-f0-9' | head -c 32"}, {"invocation": "Delete all the .c files present in the current directory and below", "cmd": "find . -name \"*.c\" | xargs rm -f"}, {"invocation": "Change the permission to 0755 for all directories under current directory", "cmd": "find . -type d -exec chmod 0755 {} \\;"}, {"invocation": "Set variable OS to the name of the operating system, ie. \"Linux\"", "cmd": "OS=$(uname -s)"}, {"invocation": "sort based on size and display top ten largest normal/regular files in the current folder", "cmd": "find . -type f -exec ls -s {} \\; | sort -n -r | head -10"}, {"invocation": "find all the cpp(C++ source files), java, header files in the current directory", "cmd": "find . -name *.cpp -o -name *.h -o -name *.java"}, {"invocation": "Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.", "cmd": "ifconfig eth0 hw ether 00:80:48:BA:d1:30"}, {"invocation": "Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents", "cmd": "find /data/SpoolIn -name job.history -exec grep -l FAIL {} \\+ | wc -l"}, {"invocation": "Prints groups list that user 'el' belongs to.", "cmd": "groups el                                     //see that el is part of www-data"}, {"invocation": "Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size", "cmd": "find $dir -type f -size +\"$size\"M -printf '%s %p\\n' | sort -rn"}, {"invocation": "Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names", "cmd": "find . -type f -name \"*.java\" -exec grep -il 'foo' {} \\;"}, {"invocation": "Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .", "cmd": "find .  -maxdepth 2 -name '*.tmp'"}, {"invocation": "Archive \"/path/to/sfolder\" to \"name@remote.server:/path/to/remote/dfolder\" preserving hard links and compressing the data during transmission", "cmd": "rsync -aHvz /path/to/sfolder name@remote.server:/path/to/remote/dfolder"}, {"invocation": "Make directories to \"directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}\" as needed", "cmd": "mkdir -p directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}"}, {"invocation": "Change directory to the real path of the current working directory of process \"$PID\"", "cmd": "cd $(readlink /proc/$PID/cwd)"}, {"invocation": "display all shell scripts in current folder", "cmd": "find . -name \"*.sh\""}, {"invocation": "Search /var/tmp for files larger than 30 MB modified 31 days ago", "cmd": "find /tmp /var/tmp -size +30M -mtime 31 -ls"}, {"invocation": "Search the /myfiles directory tree for regular files with read and write permissions set for `others'", "cmd": "find /myfiles -type f -perm -o+rw"}, {"invocation": "Add \"Line of text here\" on top of each *.py files under current directory", "cmd": "find . -name \\*.py -print0 | xargs -0 sed -i '1a Line of text here'"}, {"invocation": "Print the current directory", "cmd": "find -prune"}, {"invocation": "Search /usr/bin for regular files that were last accessed more than 100 days ago", "cmd": "find /usr/bin -type f -atime +100"}, {"invocation": "Delete all empty directories under root", "cmd": "find root -type -d -empty -delete"}, {"invocation": "find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes", "cmd": "find /etc/sysconfig -amin -30 -type f"}, {"invocation": "Print unique lines in \"set1\" and \"set2\" when compared to each other and remove any tabs", "cmd": "comm -3 <(sort set1) <(sort set2) | sed 's/\\t//g'"}, {"invocation": "Move server.log to 'logs' directory with new name as the current date formatted as \"%Y%m%d%H%M\" and with '.log' extension", "cmd": "mv server.log logs/$(date -d \"today\" +\"%Y%m%d%H%M\").log"}, {"invocation": "Print a list of symbolic links reachable from the current directory that do not resolve to accessible files", "cmd": "find -L. -type l"}, {"invocation": "Find files in the current directory tree whose names begin with \"file\" and whose size is 0, and remove them", "cmd": "find . -name 'file*' -size 0 -print0 | xargs -0 rm"}, {"invocation": "List files larger than 10MB under /var/log /tmp that haven't changed in a month", "cmd": "find /tmp /var/tmp -size +30M -mtime 31 -print0 | xargs -0 ls -l"}, {"invocation": "List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj", "cmd": "find / \\! \\( -newer ttt -user wnj \\) -print"}, {"invocation": "Find files/directories in entire file system with at least 644 permission", "cmd": "find / -perm -644"}, {"invocation": "Search for first match of the regex 're' in all *.coffee files under current directory", "cmd": "find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \\;"}, {"invocation": "Mount remote \"cifs\" filesystem \"//192.168.0.111/serv_share\" on \"/mnt/my_share\" with username \"me\" and password \"mine\"", "cmd": "sudo mount -t cifs -o username=me,password=mine //192.168.0.111/serv_share /mnt/my_share"}, {"invocation": "Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.", "cmd": "path=$(basename $(pwd) | awk '{print tolower($0)}')"}, {"invocation": "Search the current directory tree for regular files owned by user \"www\"", "cmd": "find -type f -user www"}, {"invocation": "Read a line from standard input into variable \"prompt\" with the prompt \"Are you sure you want to continue? <y/N> \"", "cmd": "read -p \"Are you sure you want to continue? <y/N> \" prompt"}, {"invocation": "Prints lines count of each *.php file in a current folder and subfolders, and prints total count.", "cmd": "find . -name '*.php' -print0 | xargs -0 wc -l"}, {"invocation": "Rename all .html files to .txt", "cmd": "rename 's/\\.html$/\\.txt/' *.html"}, {"invocation": "recursively look for files ending in either .py or .py.server", "cmd": "find . \\( -name \"*.py\" -o -name \"*.py.server\" \\)"}, {"invocation": "Counts all files in a DIR_NAME folder and subfolders.", "cmd": "find DIR_NAME -type f | wc -l"}, {"invocation": "Write \"hello world\" to the console and print number of bytes, symbols and strings in provided input.", "cmd": "echo \"hello world\" | tee >(wc)"}, {"invocation": "find all the files that are modified in the last 1 day", "cmd": "find  -mtime -1"}, {"invocation": "Find all files/directories with 664 permission under current directory tree", "cmd": "find -perm 664"}, {"invocation": "remove all core dump files from user's home directory", "cmd": "find ~/ -name 'core*' -exec rm {} \\;"}, {"invocation": "Display a long listing of all files/directories that are bigger than 10MB under '/var/' directory tree", "cmd": "find /var/ -size +10M -ls"}, {"invocation": "find all files in the current directory which are bigger than 2MB", "cmd": "find -size +2M"}, {"invocation": "Remove all files named `junk' and `dummy'", "cmd": "find . \\( -name junk -o -name dummy \\) -exec rm '{}' \\;"}, {"invocation": "Delete empty directories", "cmd": "find . -type d -empty -delete"}, {"invocation": "Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths", "cmd": "find test -type d -regex '.*/course[0-9.]*'"}, {"invocation": "search for the pattern in all the regular/normal files in the entire file system", "cmd": "find / -type f -print0 | xargs -0 grep -i pattern"}, {"invocation": "Find file `hosts'", "cmd": "find /etc -name hosts"}, {"invocation": "create symbolic links in current directory to all files located in directory \"/original\" and have filename extension \".processname\"", "cmd": "ln -s $(echo /original/*.processme) ."}, {"invocation": "find all  *.csv files which  modify within last 2 days in /home directory then zip ( archive )-", "cmd": "find /home/archive -type f -name \"*.csv\"  -mtime -2 -exec gzip -9f {} \\;"}, {"invocation": "Make a list of regular files from the current directory tree that have more than 1 link and view it with the \"less\" pager", "cmd": "find . -type f -noleaf -links +1 -printf \"%n %i %f\\t%h\\n\" | sort | less"}, {"invocation": "Extract any line in \"set1\" which does not appear in \"set2\"", "cmd": "comm -23 <(sort set1) <(sort set2)"}, {"invocation": "display all the tex files in the current folder", "cmd": "find . -name \"*.tex\""}, {"invocation": "Recursively finds all files and prints only names of files that contain \"word\" and suppressing error messages .", "cmd": "find . | xargs grep 'word' -sl"}, {"invocation": "Recursively find the latest modified file in the current directory and print the modification time and filename", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's/.*/\"&\"/' | xargs ls -l"}, {"invocation": "Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries", "cmd": "find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | awk \"{print $2}\""}, {"invocation": "find the count of all the charcters of the list of regular files present in the current folder", "cmd": "find . -type f | xargs | wc -c"}, {"invocation": "Search the current directory tree for the files with extension \"trc\" and remove them if they are more than three days old", "cmd": "find . -name \"*.trc\" -ctime +3 -exec rm -f {} \\;"}, {"invocation": "Find all *.xml files under current directory", "cmd": "find -name *.xml"}, {"invocation": "Find all files/directories under '/home/user/' directory tree whose status were changed 10 minutes ago", "cmd": "find /home/user/ -cmin 10 -print"}, {"invocation": "Find all files under current directory and show their file information", "cmd": "find . -type f -exec file {} \\;"}, {"invocation": "Print a list of JPG files residing in the current directory tree", "cmd": "find . -name \u201c*.jpg\u201d"}, {"invocation": "Change every file under \"/var/www/html/\" to have permissions 664", "cmd": "sudo  find /var/www/html/ -type f -exec chmod 664 {} \\;"}, {"invocation": "Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz", "cmd": "tar tf nginx-1.0.0.tar.gz | xargs dirname | sort | uniq"}, {"invocation": "Save full path of command \"rm\" to variable \"RM\"", "cmd": "RM=`which rm`"}, {"invocation": "count all the regular files that are present in a directory", "cmd": "find . -type f | wc -l"}, {"invocation": "Counts total number of only lines with alphanumeric symbols in all *.php files in a current folder and subfolders.", "cmd": "find . -name '*.php' | xargs cat | awk '/[a-zA-Z0-9]/ {i++} END{print i}'"}, {"invocation": "Print \"RDBMS exit code : $RC  \" to the console and append to \"${LOG_FILE}\"", "cmd": "echo \" RDBMS exit code : $RC  \"     | tee -a ${LOG_FILE}"}, {"invocation": "Find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26", "cmd": "find ./ -newermt 2014-08-25 ! -newermt 2014-08-26 -print"}, {"invocation": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them", "cmd": "find /Users/Me/Desktop -readable"}, {"invocation": "Search the current directory for files whose names start with my", "cmd": "find . -name 'my*'"}, {"invocation": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.", "cmd": "which -a rename | xargs file -L"}, {"invocation": "Create directory dir2", "cmd": "mkdir dir2"}, {"invocation": "Compose filepath as folder path where file $SRC is located, and lowercase filename of $SRC file, and save it in 'DST' variable", "cmd": "DST=`dirname \"${SRC}\"`/`basename \"${SRC}\" | tr '[A-Z]' '[a-z]'`"}, {"invocation": "search for the word \"slrn\" in all the files in the folder $HOME/html/andrews-corner", "cmd": "find $HOME/html/andrews-corner -exec grep -q 'slrn' '{}' \\; -print"}, {"invocation": "find all the text files which are present in the current directory excludinghidden files.", "cmd": "find . -type f \\( -iname \"*.txt\" ! -iname \".*\" \\)"}, {"invocation": "Delete all files (files, directories, links, pipes...) named 'core' under current directory", "cmd": "find . -name \"core\" -exec rm -f {} \\;"}, {"invocation": "Print local SRV record of domain '_etcd-client._tcp.'", "cmd": "dig @\"127.0.0.1\"  _etcd-client._tcp. SRV"}, {"invocation": "List all files in entire file system owned by the user wnj and are newer than the file ttt", "cmd": "find / -newer ttt -user wnj -print"}, {"invocation": "Recursively lists all *.py and *.html files in a current folder.", "cmd": "ls **/*.py **/*.html"}, {"invocation": "Remove all *.txt files in the home directory tree with confirmation", "cmd": "find $HOME/. -name *.txt -ok rm {} \\;"}, {"invocation": "list *.bmp and *.txt files under the /home/user/Desktop directory.", "cmd": "find /home/user/Desktop -name '*.bmp' -o -name '*.txt'"}, {"invocation": "change the word \"GHBAG\" to \"stream-agg\" in all the file names in current folder which have the word \"-GHBAG-\" in their name", "cmd": "find . -name '*-GHBAG-*' -exec rename 's/GHBAG/stream-agg/' {} +"}, {"invocation": "Find all files/directories with '.bar' extension in maximum 2 levels down the current directory", "cmd": "find . -name *.bar -maxdepth 2 -print"}, {"invocation": "print top 10 largest files and directories", "cmd": "du -a . | sort -nr | head"}, {"invocation": "find all the files in the current folder which have not been modified in the last 90 days and force delete them", "cmd": "find . -mtime +90 -type f -exec rm -f {} \\;"}, {"invocation": "Find all files and directories in the current directory tree with \"linkin park\" in their names and copy them to /Users/tommye/Desktop/LP", "cmd": "find . -iname \"*linkin park*\" -exec cp -r {} /Users/tommye/Desktop/LP \\;"}, {"invocation": "set a crontab to create or update the timestamp of \"washere2\" in the current directory every 30 minutes.", "cmd": "echo \"30 * * * * touch $(pwd)/washere2\" | crontab"}, {"invocation": "display all the files in the current directory excluding those that are in the 'secret' directory", "cmd": "find . -name 'secret' -prune -o -print"}, {"invocation": "Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days", "cmd": "find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -printf \"\\t- It seems that %p wasn't modified during last 30 day\\n\""}, {"invocation": "Print the directories that are taken by the glob pattern $SrvDir*", "cmd": "find $SrvDir* -maxdepth 0 -type d"}, {"invocation": "find al the files that are modified exactly 2 days ago", "cmd": "find -daystart -mtime 2"}, {"invocation": "Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar", "cmd": "find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"}, {"invocation": "List all hidden regular files from the current directory separating them with zeroes", "cmd": "find . -maxdepth 1 -type f -name '.*' -printf '%f\\0'"}, {"invocation": "Print continuous lines of 100 random characters either \".\" or \" \"", "cmd": "cat /dev/urandom | tr -dc '. ' | fold -w 100"}, {"invocation": "display ten files in the current directory", "cmd": "find | head"}, {"invocation": "Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them", "cmd": "find ${userdir}/${i}/incoming -mtime +2 -type f -exec rm {} \\;"}, {"invocation": "Find all .gif and .jpg files in the /var/www directory tree", "cmd": "find /var/www -name *.gif -o -name *.jpg"}, {"invocation": "Find all PHP files in the current directory recursively and search them for string \"$test\" with 8 simultaneous processes", "cmd": "find . -name \\*.php -type f -print0 | xargs -0 -n1 -P8 grep -Hn '$test'"}, {"invocation": "Find all files/directories not with the name 'query_to_avoid' under current directory", "cmd": "find \\! -name \"query_to_avoid\""}, {"invocation": "Find all *.err files under current directory that are larger than 5120 bytes in size", "cmd": "find . -type f -size +10 -name \"*.err\""}, {"invocation": "Prints ten latest modified files within the current directory.", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n -r | head -${numl} |  cut -f2- -d\" \" | sed -e 's,^\\./,,' | xargs ls -U -l"}, {"invocation": "Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen", "cmd": "bzip2 -c file | tee -a logfile"}, {"invocation": "Find files/directories writable by group and others under the /path directory", "cmd": "find /path -perm -022"}, {"invocation": "Make all directories in the current directory tree accessible to anybody", "cmd": "find . -type d -print0 | xargs -0 chmod go+rx"}, {"invocation": "Print \"/tmp/myfile\" starting at line 11", "cmd": "tail -n +11 /tmp/myfile"}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -execdir /bin/rm {} \\+"}, {"invocation": "Copies file 'file1' to each of directories 'dir1', 'dir2', 'dir3'.", "cmd": "echo dir1 dir2 dir3 | xargs -n 1 cp file1"}, {"invocation": "List file information of the full path of command \"c++\"", "cmd": "ls -ald `which c++`"}, {"invocation": "find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes", "cmd": "find /etc/sysconfig -amin -30"}, {"invocation": "Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx", "cmd": "find . -perm a=rwx,g-w,o-w"}, {"invocation": "Search the /dir directory tree for files whose names match regular expression '2015.*(album|picture)'", "cmd": "find /dir|egrep '2015.*(album|picture)'"}, {"invocation": "Change permissions of \".git/hooks/pre-commit\" to 777", "cmd": "sudo chmod 755 .git/hooks/pre-commit"}, {"invocation": "search for the word \"search-pattern\" in all the regular/normal files in the current folder and display the matched file name", "cmd": "find . -type f | xargs grep -l \"search-pattern\""}, {"invocation": "List the MD5 digest of all files under \"teste1\" and \"teste2\" sorted alphabetically", "cmd": "find teste1 teste2 -type f -exec md5 -r {} \\; | sort"}, {"invocation": "Count the number of all directories under current directory non-recursively", "cmd": "find . -mindepth 1 -maxdepth 1 -type d | wc -l"}, {"invocation": "Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.", "cmd": "sed -f commandfile file"}, {"invocation": "display all the html files in the current folder", "cmd": "find . -name \\*.html"}, {"invocation": "Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety", "cmd": "find /mnt/zip -name \"*prefs copy\" -print0 | xargs    -0 -p /bin/rm"}, {"invocation": "Calculate the md5 sum of the sorted list of md5 sums of all \".py\" files under \"/path/to/dir/\"", "cmd": "find /path/to/dir/ -type f -name *.py -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}, {"invocation": "Find regular files under and below /path that match pattern \"???-???_[a-zA-Z]*_[0-9]*_*.???\"", "cmd": "find /path -type f -name \"???-???_[a-zA-Z]*_[0-9]*_*.???\""}, {"invocation": "display a long listing of all regular files  in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 -type f -exec ls -l {} \\;"}, {"invocation": "Display the contents of \"sample_0001.gz\" with \"lk=1&\" removed", "cmd": "zcat sample_0001.gz | sed -e 's/lk=1&//g'"}, {"invocation": "Read a single character from standard input with prompt \"Are you sure? \"", "cmd": "read -p \"Are you sure? \" -n 1 -r"}, {"invocation": "Copy all \".php\" files in \"projects/\" directory tree to \"copy/\" preserving directory hierarchy", "cmd": "find projects/ -name '*.php' -print | cpio -pdm copy/"}, {"invocation": "Find *.c and *.h files under the current directory tree skipping hidden directories and files", "cmd": "find . \\( -path '*/.*' -prune -o ! -name '.*' \\) -a -name '*.[ch]'"}, {"invocation": "find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir", "cmd": "find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "Find the empty directories and files under current directory", "cmd": "find -empty"}, {"invocation": "find regular which case-insensitive name is foo in current directory", "cmd": "find . -iname foo -type f"}, {"invocation": "Rename all \"thumbs\" directories to \"thumb\" in the current directory and 1 level below", "cmd": "find . -maxdepth 2 -type d | sed 'p;s/thumbs/thumb/' | xargs -n2 mv"}, {"invocation": "List files named \"accepted_hits.bam\" in the current directory tree prefixing their names with \"somecommand\"", "cmd": "find `pwd` -name \"accepted_hits.bam\" | xargs -i echo somecommand {}"}, {"invocation": "List all regular files in the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 -type f -exec ls -l {} +"}, {"invocation": "Run an awk program on every TXT file found in the current directory tree", "cmd": "find . -name '*txt' -print -exec awk 'BEGIN {nl=1 ;print FILENAME} $9 !=\"\" {if (nl<11) { print $0 ; nl = nl + 1 }}' {}  \\;"}, {"invocation": "Find all orm.* files/directories under current directory", "cmd": "find . -name \"orm.*\""}, {"invocation": "Unsets shell option 'extglob'.", "cmd": "shopt -u extglob"}, {"invocation": "List all regular files under current directory (not white space sage)", "cmd": "find . -type f -print | xargs -n 1"}, {"invocation": "Find all /home/folder1/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names", "cmd": "find /home/folder1/*.txt -type f | awk -F '.txt' '{printf \"ln -s %s %s_CUSTOM_TEXT.txt\\n\", $0, $1}' | sh"}, {"invocation": "Change permissions of all files ending \".php\" under the current directory to 755 and print a count of modified files", "cmd": "find . -name \"*.php\" -exec chmod 755 {} + -printf '.' | wc -c"}, {"invocation": "Run commands \"df -k;uname -a\" on server \"192.168.79.134\"", "cmd": "echo \"df -k;uname -a\" | ssh 192.168.79.134"}, {"invocation": "Find all symlinks under current directory", "cmd": "find . -type l"}, {"invocation": "find all regular/normal files in the current folder", "cmd": "find -type f"}, {"invocation": "find all the files in current directory of size greater than 10MB and less than 20 MB.", "cmd": "find . -size +10M -size -20M"}, {"invocation": "Read the raw input of \"/dev/input/mice\" as hexadecimal bytes with 3 bytes per line", "cmd": "cat /dev/input/mice | od -t x1 -w3"}, {"invocation": "Print type of the file system containing path $dir.", "cmd": "df -T $dir | tail -1 | awk '{print $2;}'"}, {"invocation": "Send an audible ping to \"10.100.3.104\"", "cmd": "ping -a 10.100.3.104"}, {"invocation": "Remove all files under /home/user/Maildir/.SPAM/cur", "cmd": "find /home/user/Maildir/.SPAM/cur -type f -exec rm '{}' +"}, {"invocation": "Rename file extension '.andnav' (case insensitive) to '.tile' for all files/directories under current directory tree", "cmd": "find . -name \"*.andnav\" -exec rename -v 's/\\.andnav$/\\.tile/i' {} \\;"}, {"invocation": "search for files which are writable by both their owner and their group", "cmd": "find . -perm -g+w,u+w"}, {"invocation": "Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree", "cmd": "find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0 | xargs -0 sed -i '' 's/2013 Magento Inc./2012 Magento Inc./g'"}, {"invocation": "find all the files in the file system which have been changed in the last 24 hours.", "cmd": "find / -ctime -1"}, {"invocation": "Send one ping request to host whose name or IP address is specified by variable \"remote_machine\".", "cmd": "ping -c 1 $remote_machine"}, {"invocation": "List the drive of each \"/dev/\" disk mount point", "cmd": "mount | grep '^/dev/' | sed -E 's/([^ ]*) on ([^ ]*) .*/\"\\2\" is located on \"\\1\"/'"}, {"invocation": "Report total file systems disk usage estimated in terabytes", "cmd": "df --total -BT | tail -n 1"}, {"invocation": "Force delete all files in the current folder", "cmd": "find . | xargs -i rm -f \"{}\""}, {"invocation": "Enables shell option 'autocd'.", "cmd": "shopt -s autocd"}, {"invocation": "find files having the extension \"bam\" in current directory", "cmd": "find . -name \"*.bam\""}, {"invocation": "Saves byte size of all content of $1 folder in 'uiTotalSize' variable.", "cmd": "uiTotalSize=$(ls -l -R $1 | grep -v ^d | awk '{total+=$5;} END {print total;}')"}, {"invocation": "List files in the current directory and below except for GIT files", "cmd": "find . -not -iwholename '*/.git/*'"}, {"invocation": "Find all files/directories newer than ttt or owned by user 'wn' in entire file system", "cmd": "find / \\( -newer ttt -or -user wnj \\) -print"}, {"invocation": "display the count of regular/normal files in the current folder do not search in sub directories", "cmd": "find . -maxdepth 1 -type f |wc -l"}, {"invocation": "Search the home directory for filenames starting with \"xx\" except for \"xxx\" files", "cmd": "find ~ -name 'xx*' -and -not -name 'xxx'"}, {"invocation": "change user of the direct public_html to user owner and group nobody", "cmd": "chown owner:nobody public_html"}, {"invocation": "Find all files/directories named 'query' under current directory", "cmd": "find -name \"query\""}, {"invocation": "Search the current directory and two levels below for file `teste.tex'", "cmd": "find ~/ -maxdepth 3 -name teste.tex"}, {"invocation": "Clean the current directory from all subversion directories recursively", "cmd": "find . -type d -name \".svn\" -print | xargs rm -rf"}, {"invocation": "Find and show all files in the current directory tree that are smaller than 500 kB", "cmd": "find . -size -500k"}, {"invocation": "Find files with group write permission and remove the permission", "cmd": "find . -perm -20 -exec chmod g-w {} ;"}, {"invocation": "Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/", "cmd": "find /old/WordPress/ -type f -regex \".*\\.\\(php\\|css\\|ini\\|txt\\)\" -exec rm {} \\;"}, {"invocation": "Adjust the timestamp of 'filename' by subtracting 2 hours from it.", "cmd": "touch -d \"$(date -r filename) - 2 hours\" filename"}, {"invocation": "Print file information of the executable file of command \"gcc\"", "cmd": "ls `which gcc` -al"}, {"invocation": "Find recursively regular files in the current directory tree", "cmd": "find -type f -print0"}, {"invocation": "find  files which full path name is /tmpfoo/bar under /tmp/foo directory and print", "cmd": "find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar"}, {"invocation": "search for a word in all the files in the current directory", "cmd": "find . -exec grep chrome {} \\;"}, {"invocation": "find all the files in the current folder which are bigger than 9MB", "cmd": "find . -size +9M"}, {"invocation": "Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'", "cmd": "find . -okdir diff {} /some/other/path/{} \";\""}, {"invocation": "change the permissions of all the directories in the current folder", "cmd": "find . -type d -exec chmod 2775 {} \\;"}, {"invocation": "Prints out all the logged-in users along with their group information.", "cmd": "groups $(who | cut -d' ' -f 1)"}, {"invocation": "find all files in home folder which have been modified exactly 1 day before", "cmd": "find ~ -mtime 1 -daystart"}, {"invocation": "Print the current working directory prepended by \"pwd: \"", "cmd": "echo pwd: `pwd`"}, {"invocation": "find all text files in the folder \"FFF\" and find the md5sum for them", "cmd": "find FFF -name \"*.txt\" -exec md5sum '{}' \\;"}, {"invocation": "find all text files in the current folder excluding those that are presenti n the folder \"/svn\" and search for a pattern.", "cmd": "find . -name '*.txt' \\! -wholename '*/.svn/*' -exec grep 'sometext' '{}' \\; -print"}, {"invocation": "Create an empty file called \"emptyfile.c\"", "cmd": "cp /dev/null emptyfile.c"}, {"invocation": "Append all PNG and JPG files to tar archive 'images.tar'", "cmd": "find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}, {"invocation": "Identify CMS version/releases accross all your Drupal websites", "cmd": "find /home/*/public_html/ -type f -iwholename \"*/modules/system/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}, {"invocation": "file all the Sticky Bit set files whose permission are 551", "cmd": "find / -perm 1551"}, {"invocation": "find all the files which are of size 0 bytes.", "cmd": "find . -type f -empty"}, {"invocation": "Get the base filename from variable 'path', similar to using the basename command.", "cmd": "echo \"$path\" | rev | cut -d\"/\" -f1 | rev"}, {"invocation": "find all the files in the home folder which are bigger than 2MB and zip them", "cmd": "find ~ -size +2000000c -regex '.*[^gz]' -exec gzip '{}' ';'"}, {"invocation": "Gunzip all files matching \"file*.gz\" and answer \"n\" to any prompts", "cmd": "yes n | gunzip file*.gz"}, {"invocation": "Print a welcome message with the current user's user name", "cmd": "echo -ne \"Welcome `whoami`!\\n\""}, {"invocation": "Find all .core files on the system starting from / and delete them", "cmd": "find / -name \"*.core\" -print -exec rm {} \\;"}, {"invocation": "Find all regular files in minimum 1 level down the $dir directory", "cmd": "find \"$dir\" -mindepth 1 -type f"}, {"invocation": "Find all files under maximum 1 level down the ./subfolder and ./subfolder/*/  paths", "cmd": "find ./subfolder ./subfolder/*/ -maxdepth 1 -type f"}, {"invocation": "Print IP addresses of the host name", "cmd": "hostname --ip-address"}, {"invocation": "Save first one of space separated parts of each line in $LOCKFILE file to the 'CURRENT_PID_FROM_LOCKFILE' variable", "cmd": "CURRENT_PID_FROM_LOCKFILE=`cat $LOCKFILE | cut -f 1 -d \" \"`"}, {"invocation": "Recursively find the latest modified file in the current directory and print the modification time and filename", "cmd": "find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}, {"invocation": "find all the files in the current directory and search for the word \"pw0\" in them.", "cmd": "find . -exec grep -i \"pw0\" {} \\;"}, {"invocation": "Display only first and second dot-separated numbers of kernel version, ie. 4.4", "cmd": "uname -r | cut -d. -f1-2"}, {"invocation": "Find all directories containing 'linux' in their names under '/root' directory tree", "cmd": "find  /root -type d -iname \"*linux*\""}, {"invocation": "Print \"a\\nb\\ncccccccccccc\\nd\" as two columns and neatly format into a table", "cmd": "echo -e \"a\\nb\\ncccccccccccc\\nd\" | paste - - | column -t"}, {"invocation": "Execute zcat on every file matching \"*20120805.gz\" in the current directory and subdirectories", "cmd": "find . -name *20120805.gz -exec zcat {} \\;"}, {"invocation": "Split \"input.txt\" into files with 1 line each and use a prefix \"output.\" and a suffix length of 5", "cmd": "split --lines=1 --suffix-length=5 input.txt output."}, {"invocation": "recursively change user of the direct public_html and all files into it to user owner", "cmd": "chown -R owner:owner public_html"}, {"invocation": "Search the file system for regular files whose names are shorter than 25 characters", "cmd": "find / -type f -regextype posix-extended -regex '.*/.{1,24}$'"}, {"invocation": "find all the html files in the current folder which have been modified in the last 7 days", "cmd": "find . -mtime -7 -name \"*.html\" -print"}, {"invocation": "Calculate the md5sum of the executable file of command 'c++'", "cmd": "md5sum `which c++`"}, {"invocation": "List all files in the current directory tree that were last modified between \"mar 03, 2010 09:00\" and \"mar 11, 2010\"", "cmd": "find -newermt \"mar 03, 2010 09:00\" -not -newermt \"mar 11, 2010\" -ls"}, {"invocation": "Create a symolic link in \"/usr/local/bin/\" to \"/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl\"", "cmd": "ln -s /Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl /usr/local/bin/"}, {"invocation": "Remove all *.bak and *.backup files that were accessed last time more than 30 days ago", "cmd": "find . \\( -name '*.bak' -o -name *.backup \\) -type f -atime +30 -exec rm '{}' ';'"}, {"invocation": "List all variables (names only) with names containing X.", "cmd": "env | awk -F= '{if($1 ~ /X/) print $1}'"}, {"invocation": "Forcefully delete all files in the current directory that begin with spam-", "cmd": "find . -name 'spam-*' | xargs rm"}, {"invocation": "Archive \"/path/to/copy\" on host \"remote.host\" as user \"user\" to \"/path/to/local/storage\" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission", "cmd": "rsync -chavzP --stats user@remote.host:/path/to/copy /path/to/local/storage"}, {"invocation": "Display file type description of 'file-name' based on contents.", "cmd": "file file-name"}, {"invocation": "Check that the master SSH control socket \"my-ctrl-socket\" to \"jm@sampledomain.com\" is running", "cmd": "ssh -S my-ctrl-socket -O check jm@sampledomain.com"}, {"invocation": "find all the files in current folder which end with a speicifc regular expression and display their count", "cmd": "find ./ -type f -regex \".*\\.[JPGjpg]$\" | wc -l"}, {"invocation": "Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.", "cmd": "find *-name hi.dat"}, {"invocation": "Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.", "cmd": "grep -insr \"pattern\" *"}, {"invocation": "create a soft link of the files in the folder /media/movies which have been modified in the last 30 days", "cmd": "find /media/Movies -type f -mtime -30 -exec ln -s {} /media/Movies/New/ \\;"}, {"invocation": "Find regular files named 'findme.txt' under '/usr' and '/home' directory tree", "cmd": "find /usr /home -name findme.txt -type f -print"}, {"invocation": "Remove all files under /home/user/Maildir/.SPAM/cur", "cmd": "find /home/user/Maildir/.SPAM/cur -type f | xargs rm"}, {"invocation": "Print timestamp as HH:MM:SS", "cmd": "date +\"%T\""}, {"invocation": "find  file which case-insensitive name is too in currect directory", "cmd": "find . -iname foo"}, {"invocation": "Search the current directory tree for .rb files ignoring the \"./vendor\" subdirectory", "cmd": "find . -name '*.rb' ! -wholename \"./vendor/*\" -print"}, {"invocation": "List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest", "cmd": "du -s * | sort -n"}, {"invocation": "Trim leading and trailing whitespace from variable 'var'.", "cmd": "var=`echo $var | awk '{gsub(/^ +| +$/,\"\")}1'`"}, {"invocation": "split file \"$file into pieces named with 5 character suffix", "cmd": "split -a 5 $file"}, {"invocation": "Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder with confirmation", "cmd": "find . -size +1M -ok mv {} files \\+"}, {"invocation": "Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.", "cmd": "mktemp"}, {"invocation": "Save the user name of the current user to variable \"me\"", "cmd": "me=$(whoami)"}, {"invocation": "delete all the regular files in the temp folder which have not been modified in the last 24 hours", "cmd": "find /tmp/ -type f -mtime +1 -delete"}, {"invocation": "Split \"input.txt\" into files of at most 10 bytes each with prefix \"/tmp/split-file\"", "cmd": "split -b 10 input.txt /tmp/split-file"}, {"invocation": "Compresses all files listed in array $*, executing in background.", "cmd": "compress $* &"}, {"invocation": "find all the .jpg files in / and copy them to the current folder.", "cmd": "find / -type f -name *.jpg  -exec cp {} . \\;"}, {"invocation": "display all files in the current folder which are not empty", "cmd": "find . ! -size 0k"}, {"invocation": "list regular files under the current directory", "cmd": "find . -type f"}, {"invocation": "find the file with inode $inum under the current directory and delete it", "cmd": "find . -inum $inum -exec rm {} \\;"}, {"invocation": "Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories", "cmd": "find . \\( \\( -name .svn -o -name pdv \\) -type d -prune \\) -o \\( -name '*.[pwi]' -type f -exec grep -i -l \"search for me\" {} + \\)"}, {"invocation": "Find all files on your system that are world writable", "cmd": "find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \\;"}, {"invocation": "Find all *.rb files/directories under current directory", "cmd": "find . -name *.rb"}, {"invocation": "Find all files with name \"file.ext\" under the current working directory tree and print each full path directory name", "cmd": "find `pwd` -name file.ext |xargs -l1 dirname"}, {"invocation": "Find all pdf files under /dir/containing/unsigned with null character as the delimiter", "cmd": "find /dir/containing/unsigned -name '*.pdf' -print0"}, {"invocation": "Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths", "cmd": "find / -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq"}, {"invocation": "Show the last 10 .conf files found by `find' in the /etc directory", "cmd": "find /etc -maxdepth 1 -name \"*.conf\" | tail"}, {"invocation": "Find all directories under /home/username/public_html/sites/default/files and set their permission to 770", "cmd": "find /home/username/public_html/sites/default/files -type d -exec chmod 770 {} +"}, {"invocation": "Find recursively all files in the \".\" directory tree whose names end with \".class\" and delete them", "cmd": "find . -type f -name \"*.class\" -exec rm -vf {} \\;"}, {"invocation": "Gets IP address of 'en0' network interface.", "cmd": "ifconfig en0 | awk '/inet addr/{print substr($2,6)}'"}, {"invocation": "list all files", "cmd": "find ."}, {"invocation": "Find all files in the current directory tree whose path names match pattern './sr*sc'", "cmd": "find . -path './sr*sc'"}, {"invocation": "Handles shell option 'nullglob' according with flags stored in $NGV variable.", "cmd": "shopt \"$NGV\" nullglob"}, {"invocation": "Search all files called \"abc\" that reside in the current directory tree for string \"xyz\"", "cmd": "find . -name \"abc\" -exec grep \"xyz\" {} \\;"}, {"invocation": "Remove files from the file system that are owned by nobody, asking the user before each removal", "cmd": "find / -nouser -ok rm {} \\;"}, {"invocation": "Send SIGKILL signal to process ID 16085, killing it instantly.", "cmd": "kill -9 16085"}, {"invocation": "Change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree", "cmd": "find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}, {"invocation": "display all the files in the home folder except text files", "cmd": "find /home ! -name \"*.txt\""}, {"invocation": "Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files", "cmd": "find dir1 dir2 dir3 -type f -name \"*.java\" -exec grep -il 'foo' {} \\;"}, {"invocation": "Find all 777 permission directories and use chmod command to set permissions to 755", "cmd": "find / -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "display all the files in the current folder.", "cmd": "find ."}, {"invocation": "find all gif files in the file system", "cmd": "find / -name \"*gif\" -print"}, {"invocation": "display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )", "cmd": "find /path/ -type f -daystart -mtime +0"}, {"invocation": "display a long listing of all the regular/normal files in the current folder", "cmd": "find . -type f -ls"}, {"invocation": "find md5sum of content from \"www.google.com\"", "cmd": "curl -s www.google.com | md5"}, {"invocation": "remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.", "cmd": "find * -perm 777 -exec chmod 770 {} \\;"}, {"invocation": "Find all files/directories under test directory", "cmd": "find test"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in /var/log", "cmd": "find /var/log/ -iname anaconda.*"}, {"invocation": "Find files/directories that isn't owned by the user 'apache' under /var/www", "cmd": "find /var/www ! -user apache -print0 | xargs -0"}, {"invocation": "Make DNS lookup for hostname stackoverflow.com", "cmd": "dig stackoverflow.com"}, {"invocation": "Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension", "cmd": "find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sudo tar -zcpvf {}.tar.gz {} \\;"}, {"invocation": "List all files and directories from the current directory tree", "cmd": "find . -print | xargs ls"}, {"invocation": "Find recursively all files in /path that end in \"txt\" and copy them to /tmp/", "cmd": "find /path -type f -name \"*txt\" -printf \"cp '%p' '/tmp/test_%f'\\n\" | bash"}, {"invocation": "Search the current directory tree for *.conf and *.txt files", "cmd": "find . -type f \\( -name \"*.conf\" -or -name \"*.txt\" \\) -print"}, {"invocation": "Find files in the current directory tree whose names match regular expression \"^.*~$\\|^.*#$\"", "cmd": "find -regex \"^.*~$\\|^.*#$\""}, {"invocation": "Find all files and directories in the current directory recursively that contain spaces in their names", "cmd": "find . -name '* *'"}, {"invocation": "Find files with name `aaa.txt' under the current directory", "cmd": "find . -name aaa.txt"}, {"invocation": "display all the regular/normal files in a folder", "cmd": "find $FILES_PATH -type f"}, {"invocation": "List all the .c files under the current directory and below in a 3 column format", "cmd": "find . -name \"*.c\" | xargs -n3 echo"}, {"invocation": "Search for all files that end in \".conf\"", "cmd": "find / -type f -name \"*.conf\""}, {"invocation": "Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error", "cmd": "set -eu"}, {"invocation": "Copy a file xyz.c to all the .c files present in the C directory and below", "cmd": "find ./C -name \"*.c\" | xargs -n1  cp xyz.c"}, {"invocation": "find all the normal/regular files in the current directory", "cmd": "find -type f"}, {"invocation": "Recursively set all permissions under \"/folder\" to 755", "cmd": "chmod 755 /folder -R"}, {"invocation": "find all text files in the current directory and compress them to a cpio file", "cmd": "find . -name '*.txt' | cpio -pdm /path/to/destdir"}, {"invocation": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.", "cmd": "egrep -w -R \"word-1|word-2\u201d directory-path"}, {"invocation": "Find regular files named core under /tmp and delete them", "cmd": "find /tmp -name core -type f -print | xargs /bin/rm -f"}, {"invocation": "Remove all regular files found in and below /path", "cmd": "find /path -type f -exec rm '{}' +"}, {"invocation": "recursively change owner of the directory and all files into it to user  nobody", "cmd": "chown -R nobody upload_directory"}, {"invocation": "Find all directories whose name is root in / directory", "cmd": "find / -type d -name root"}, {"invocation": "change the owner of all the files in folder /u/netinst to netinst", "cmd": "find /u/netinst -print | xargs chown netinst"}, {"invocation": "Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree", "cmd": "find . -user my_user -perm -u+rwx"}, {"invocation": "Remove everything in a current folder without prompting.", "cmd": "find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf"}, {"invocation": "display all files in current folder and follow the symbolic links and display the pointed file", "cmd": "find -L ."}, {"invocation": "find all *.java files/directories under current directory", "cmd": "find . -name  \"*.java\""}, {"invocation": "Search for \"ifconfig\" in the output of \"history\" and print 5 lines that precede and follow", "cmd": "history | grep ifconfig -A5 -B5"}, {"invocation": "Recursively remove all \"*.txt\" files and answer \"n\" to any prompt", "cmd": "yes n | rm -r *.txt"}, {"invocation": "Print the current directory tree with file permissions", "cmd": "tree -p"}, {"invocation": "Copy all *.mp3 files under the current directory to /tmp/MusicFiles/", "cmd": "find . -type f -name \"*.mp3\" -exec cp {} /tmp/MusicFiles \\;"}, {"invocation": "Infinitely ping every host listed in \"file-of-ips\" with at most 50 processes at once", "cmd": "cat file-of-ips | xargs -n 1 -I ^ -P 50 ping ^"}, {"invocation": "replace the word apple with orange in all the files in the current folder", "cmd": "find ./ -exec sed -i 's/apple/orange/g' {} \\;"}, {"invocation": "Find *.jpg screenshots that are bigger than 500k", "cmd": "find ~/Images/Screenshots -size +500k -iname '*.jpg'"}, {"invocation": "Find all directories named postgis-2.0.0 under / directory", "cmd": "sudo find / -type d -name \"postgis-2.0.0\""}, {"invocation": "find all the files in the current folder that are modified after the modification date of a file", "cmd": "find . -newer document -print"}, {"invocation": "Find the largest 10 files (regular files) under current directory", "cmd": "find . -type f -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}"}, {"invocation": "Find all *.txt files under the current directory whose names are not \"File.txt\"", "cmd": "find . -maxdepth 1 -type f -regex '.*\\.txt' -not -name File.txt"}, {"invocation": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"", "cmd": "find . -name \\*.c -print0 | xargs -0 grep wait_event_interruptible /dev/null"}, {"invocation": "Find mysong.ogg anywhere under the home directory", "cmd": "find $HOME -name 'mysong.ogg'"}, {"invocation": "find all the files in the folder \"myfiles\" which have been modified exactly 48 hours back.", "cmd": "find /myfiles -mtime 2"}, {"invocation": "Find all .js files in the $d directory tree whose pathnames do not contain whitespaces", "cmd": "find $d -name '*.js' | grep -v \" \""}, {"invocation": "Print position number of day '9' in fourth line of calendar output for September, 2009.", "cmd": "cal 09 2009 | awk 'BEGIN{day=\"9\"}; NR==4 {col=index($0,day); print col }'"}, {"invocation": "Saves printed calendar of February,1900 in positional variables.", "cmd": "set -- $(cal 2 1900)"}, {"invocation": "Remove all .txt files with spaces in names in and below the current directory", "cmd": "find -name \"*\\ *.txt\" | xargs rm"}, {"invocation": "find all the foo.txt files in the current folder and move them to another directory", "cmd": "find . -name \"foo.txt\" | awk '{ print \"mv \"$0\" ~/bar/\" | \"sh\" }'"}, {"invocation": "Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories", "cmd": "find . -type d -exec chmod u=rwx,g=rx,o=rx {} \\;"}, {"invocation": "Print numbers from 1 to 10 with 2 values per line", "cmd": "seq 10 | sed '2~2G' | awk -v RS='' '{$1=$1; print}'"}, {"invocation": "Identify files that do not have a listing in the /etc/passwd or /etc/group file", "cmd": "find / -nouser -o  -nogroup"}, {"invocation": "Make directory expanded by $dir variable", "cmd": "mkdir $dir"}, {"invocation": "Filters only directories including hidden ones from long file listing of a current directory, and prints their names.", "cmd": "ls -Al | grep \"^d\" | awk -F\" \" '{print $9}'"}, {"invocation": "Find all PHP files under current directory that contain only one non-blank line", "cmd": "find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} + | sed -n '/:1$/{s///;p}'"}, {"invocation": "Display environment variable \"_\" of the current shell", "cmd": "set | grep \"^_=\""}, {"invocation": "Remove all 'a.out', '*.o', and 'core' files in the current directory tree", "cmd": "find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}, {"invocation": "Display unique names of logged in users", "cmd": "finger | sed 's/\\t/ /' | sed 's/pts\\/[0-9]* *[0-9]*//' | awk '{print $2\"\\t(\"$1\")\\t\"$3\" \"$4\" \"$5}' | sort | uniq"}, {"invocation": "Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell.", "cmd": "pushd $(dirname $0)"}, {"invocation": "find all 'js' suffix files  exclue the path *exclude/this/dir*' under current dirctory", "cmd": "find . -name '*.js' -not -path '*exclude/this/dir*'"}, {"invocation": "Print the hexadecimal bytes and printable characters of \"Hello world\"", "cmd": "echo Hello world | od -t x1 -t c"}, {"invocation": "find not case sensitive all directories that names are 'apt' and display details", "cmd": "find  / -type d -iname \"apt\" -ls"}, {"invocation": "Search for 'example' in all regular files under current directory tree", "cmd": "find . -type f -print | xargs grep \"example\""}, {"invocation": "find all \".flac\" files starting with \"cmn-\" and search for files having CJK characters using unicodes", "cmd": "find . -name 'cmn-*.flac' -print | grep -P '[\\x4e00-\\x9fa5]'"}, {"invocation": "Search for the literal string 'v$process' in all files under current directory", "cmd": "find . -print|xargs grep v\\$process"}, {"invocation": "Find all files/directores under '/usr/local' directory tree that case insensitively contain the word 'blast' in their names", "cmd": "find /usr/local -iname \"*blast*\""}, {"invocation": "Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output", "cmd": "find $DIR -type f -exec grep $SEARCH /dev/null {} \\; | wc --bytes"}, {"invocation": "start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found", "cmd": "find . -wholename './src/emacs' -prune , -print"}, {"invocation": "Check that the master ssh connection \"officefirewall\" is running", "cmd": "ssh -O check officefirewall"}, {"invocation": "Compress all files under /source directory tree using gzip with best compression method", "cmd": "find /source -type f -print0 | xargs -0 -n 1 -P $CORES gzip -9"}, {"invocation": "Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory", "cmd": "find {} -name 'upvoter-*' -type f -or \\( -type l \\) -maxdepth 1 -perm +111"}, {"invocation": "Find all regular files with '.r' and '.c' in their names under current directory tree", "cmd": "find ./ -type f \\( -name '*.r*' -o -name '*.c*' \\) -print"}, {"invocation": "Put the absolute directory path to the current script to MY_DIR variable", "cmd": "MY_DIR=$(dirname $(readlink -f $0))"}, {"invocation": "Find all *.c files under and below the current directory that contain \"hogehoge\"", "cmd": "find . -name \\*.c | xargs grep hogehoge"}, {"invocation": "Print the base name of the current working directory", "cmd": "echo \"$(basename $(pwd))\""}, {"invocation": "get all files in a current directory modified in the last 7 days", "cmd": "find . -mtime -7 -print0 | xargs -0 tar -cjf /foo/archive.tar.bz2"}, {"invocation": "Remove the first 7 characters of every line in the output of \"history\"", "cmd": "history | cut -c 8-"}, {"invocation": "Prints the absolute directory path of the current script preceded by the string \"dirname/readlink: \"", "cmd": "echo \"dirname/readlink: $(dirname $(readlink -f $0))\""}, {"invocation": "Decompress 'file.gz'", "cmd": "gzip -d file.gz"}, {"invocation": "Rename file file.txt.123456 to file.txt", "cmd": "mv file.txt.123456 $(ls file.txt.123456 | rev | cut -c8- | rev)"}, {"invocation": "create a gzip of all the files in the current folder excluding the already gzipped files.", "cmd": "find . \\! -name \"*.gz\" -exec gzip {} \\;"}, {"invocation": "Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.", "cmd": "big_lines=`cat foo.txt | grep -c \"$expression\"`"}, {"invocation": "Print '111 22 3\\n4 555 66\\n' by replacing the spaces with tabs and '\\n' with newlines", "cmd": "echo -en '111 22 3\\n4 555 66\\n' | tr ' ' '\\t'"}, {"invocation": "change html files to mode 644", "cmd": "find /usr/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}, {"invocation": "Find all *foo files/directories under current directory (error prone)", "cmd": "find . name *foo"}, {"invocation": "Find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission", "cmd": "find / -perm /u+rw,g+r,o+r"}, {"invocation": "Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and saves location of such files to 'directories' variable.", "cmd": "directories=$(diff -qr directory directory.original | cut -d' ' -f2 | xargs dirname | uniq)"}, {"invocation": "Split \"file.txt\" into files of at most 1 MiB in size with a numeric suffix and prefix \"file\"", "cmd": "split -b 1M -d  file.txt file"}, {"invocation": "Unzip every \".gz\" file in the current directory tree", "cmd": "find . -name '*.gz' -exec gunzip '{}' \\;"}, {"invocation": "Remove all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\" | xargs rm"}, {"invocation": "Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted", "cmd": "grep -o \"_foo_\" <(paste -sd_ file) | tr -d '_'"}, {"invocation": "Prints number of files with extension \"${EXTENSION}\" in the \"${SEARCHPATH}\" directory.", "cmd": "echo \"Number files in SEARCH PATH with EXTENSION:\" $(ls -1 \"${SEARCHPATH}\"/*.\"${EXTENSION}\" | wc -l)"}, {"invocation": "Find all *.jpg files under current directory and print only duplicate names", "cmd": "find . -name \\*.jpg -exec basename {} \\; | uniq -d"}, {"invocation": "Merge the first \"$lc\" lines of \"current.txt\" and the last \"$lc\" lines of \"current.txt\" and display the result as a comma separated table", "cmd": "paste <(head -\"$lc\" current.txt) <(tail -\"$lc\" current.txt) | column -t -o,"}, {"invocation": "Exclude directory from find . command", "cmd": "find . -type d -name proc -prune -o -name '*.js'"}, {"invocation": "Find all files and directories and count them", "cmd": "find ./ | wc -l"}, {"invocation": "search for *.log files starting from / (root) and only in the current file system", "cmd": "find / -xdev -name \"*.log\""}, {"invocation": "Find all *.mp3 files in entire file system greater than 10MB and delete them", "cmd": "find / -type f -name *.mp3 -size +10M -exec rm {} \\;"}, {"invocation": "List *.pl directories in the current directory tree", "cmd": "find . -name \"*.pl\" -exec ls -ld {} \\;"}, {"invocation": "delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command", "cmd": "find /tmp/ -type f -mtime +1 -exec rm {} +"}, {"invocation": "Execute \"script.awk\" on \"file\" and format the output as a table", "cmd": "awk -f script.awk file{,} | column -t"}, {"invocation": "Print numbers from 1 to 10 with 2 values per line", "cmd": "seq 10 | sed 'N;s/\\n/ /'"}, {"invocation": "Print second section of data coming from stdin where sections are separated by one or more whitespace.", "cmd": "tr -s ' ' | cut -d ' ' -f 2"}, {"invocation": "Print the top 10 commands with their use count", "cmd": "history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}, {"invocation": "Find all files/directories under /path directory that were modified more than 30 minutes ago", "cmd": "find /path -mtime +30m"}, {"invocation": "find all normal/regular files in current folder and display the total lines in them", "cmd": "find . -type f -exec wc -l {} +"}, {"invocation": "Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\\n'", "cmd": "find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\\n'"}, {"invocation": "Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days", "cmd": "find \"$DIR_TO_CLEAN\" -type f -mtime +$DAYS_TO_SAVE -print0 | awk -v RS='\\0' -v ORS='\\0' '{ print } END { print NR }' | xargs -0 rm"}, {"invocation": "Unzip \"path/to/test/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 limit", "cmd": "gzip -cd path/to/test/file.gz | awk 'BEGIN{global=1}/my regex/{count+=1;print $0 >\"part\"global\".txt\";if (count==1000000){count=0;global+=1}}'"}, {"invocation": "Find all files in $dir directory without going into sub-directories", "cmd": "find \"$dir\" -maxdepth 1 -type f"}, {"invocation": "Find all *.txt files that reside under and below /home/wsuNID/", "cmd": "find /home/wsuNID/ -name \"*.txt\""}, {"invocation": "Search the files from directory tree \"dirname\" for string \"foo\"", "cmd": "find dirname -exec grep foo {} +"}, {"invocation": "concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents", "cmd": "head -n99999999 file1.txt file2.txt file3.txt"}, {"invocation": "Finds strings having text \"searched-string\" in all files recursively in a current folder.", "cmd": "find . | xargs grep \"searched-string\""}, {"invocation": "Find the top 5 big files", "cmd": "find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}, {"invocation": "List all files in the current directory tree including those that may contain spaces in their names", "cmd": "find . -print0 | xargs -0 -l -i echo \"{}\";"}, {"invocation": "Print the average time of 4 ping requests to \"www.stackoverflow.com\"", "cmd": "ping -c 4 www.stackoverflow.com | tail -1| awk '{print $4}' | cut -d '/' -f 2"}, {"invocation": "List all files in the current directory tree that were modified 60 minutes ago", "cmd": "find . -mmin 60 | xargs '-rd\\n' ls -l"}, {"invocation": "Find files that were accessed in less than a day ago", "cmd": "find / -atime -1"}, {"invocation": "Find all PHP files under current directory that contain only one line", "cmd": "find -name *.php -print | xargs -L1 awk 'NR>1{exit} END{if(NR==1) print FILENAME}'"}, {"invocation": "Get only the latest version of the file 'filename' under current directory", "cmd": "find . -name 'filename' | xargs -r ls -tc | head -n1"}, {"invocation": "Silently read a single character from standard input into variable \"key\" without backslash escapes and using the prompt $'Press any key to continue...\\n'", "cmd": "read -rsp $'Press any key to continue...\\n' -n 1 key"}, {"invocation": "Find and uncompress all files in the current directory tree ending in \".csv.gz\"", "cmd": "find . -name '*.csv.gz' -print0 | xargs -0 -n1 gzip -d"}, {"invocation": "Remove all files whose names begin with \"no-such-thing\" in the /home/peter directory tree", "cmd": "find /home/peter -name no-such-thing* |xargs rm"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f -print0 | xargs -0 ls -ltr | tail -n 1"}, {"invocation": "Prints $m latest modified files within the $d folder, using $f format for printing timestamp.", "cmd": "find \"$d\" -type f -printf \"%T@ :$f %p\\n\" | sort -nr | cut -d: -f2- | head -n\"$m\""}, {"invocation": "Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \\\".*/$now.*\\\" (where $now is a variable) and save the output in file $FILE_LIST", "cmd": "find $TARGET_DIR -regextype posix-extended -regex \\\".*/$now.*\\\" -fprint $FILE_LIST"}, {"invocation": "Show the list of directories in the /mnt/raid directory tree", "cmd": "find /mnt/raid -type d -print"}, {"invocation": "Check if a drive with UUID \"$UUID\" is mounted", "cmd": "mount | grep $(readlink -f /dev/disk/by-uuid/$UUID )"}, {"invocation": "show all the files  in current directory", "cmd": "find ."}, {"invocation": "Print current date as epoch seconds", "cmd": "date +%s"}, {"invocation": "Find all files under \"/path\" that do not contain a \".\" and append \".jpg\" to their file name", "cmd": "find /path -type f -not -name \"*.*\" -print0 | xargs -0 rename 's/(.)$/$1.jpg/'"}, {"invocation": "search for all the files with the name \"dummy\" in the current folder", "cmd": "find -type f -name dummy"}, {"invocation": "Print the list of all subdirectories of the current directory", "cmd": "find . -maxdepth 1 -mindepth 1 -type d"}, {"invocation": "Find all Read Only files in the file system", "cmd": "find / -perm /u=r"}, {"invocation": "Prints week day of a 31 day in a current month.", "cmd": "cal | awk -v date=31 'NR == 2 { split($0, header) } NR > 2 { for (i = 1; i <= NF; ++i) if ($i == date) { print header[NR == 3 ? i + 7 - NF : i]; exit } }'"}, {"invocation": "Sort \"$file\" and output the result to \"$file\"", "cmd": "sort -o $file $file"}, {"invocation": "Print the names of any differing files in directories \"dir1/\" and \"dir2/\"", "cmd": "diff  --brief --recursive dir1/ dir2/"}, {"invocation": "Find all directories named \"D\" in the current directory tree", "cmd": "find ./ -type d -name 'D'"}, {"invocation": "display all the files in current folder which are bigger than 10KB", "cmd": "find . -size +10k"}, {"invocation": "Print the last space separated word from \"a b c d e\"", "cmd": "echo \"a b c d e\" | tr ' ' '\\n' | tail -1"}, {"invocation": "Print file information of command \"passwd\"", "cmd": "ls -l `which passwd`"}, {"invocation": "find all the files in the file system which belong to the user \"pat\" and with the name \"dateiname\"", "cmd": "find / -user pat -iname \"Dateiname\""}, {"invocation": "Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.", "cmd": "kill -HUP $( cat /var/run/nginx.pid )"}, {"invocation": "Go to directory /cygdrive/c/Program Files (x86)/$dollarsign using single quotes to escape special characters, including dollar signs", "cmd": "cd '/cygdrive/c/Program Files (x86)/$dollarsign'"}, {"invocation": "Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'", "cmd": "find /usr/local/fonts -user warwick"}, {"invocation": "Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names", "cmd": "find /tmp -type f -exec grep 'search string' '{}' /dev/null \\+"}, {"invocation": "List all regular files modified more than 61 days", "cmd": "find -type f -mtime 61 -exec ls -ltr {} \\;"}, {"invocation": "Count the number of .gz files in the current directory tree", "cmd": "find -name \"*.gz\" | wc -l"}, {"invocation": "create archive \"backup.tar.gz\" from /path/to/catalog", "cmd": "tar czfP backup.tar.gz /path/to/catalog"}, {"invocation": "Removes all files but 5 newest ones from current folder.", "cmd": "ls -tp | grep -v '/$' | tail -n +6 | tr '\\n' '\\0' | xargs -0 rm --"}, {"invocation": "Gets IP addresses of all active network interfaces and saves to 'ip' variable.", "cmd": "ip=$(ifconfig | grep -oP \"(?<=inet addr:).*?(?=Bcast)\")"}, {"invocation": "delete all the core files in the folder /prog which are bigger than 1KB", "cmd": "find /prog -type f -size +1000 -print -name core -exec rm {} \\;"}, {"invocation": "Find all files larger than 20000k", "cmd": "find / -type f -size +20000k"}, {"invocation": "Find files whose content was modified at least 1 minute ago", "cmd": "find ./ -mmin +1"}, {"invocation": "If variable \"c\" is a syntactically correct cron job, erase user's cron jobs and add \"c\" as the only cron job for user.", "cmd": "echo $c | crontab"}, {"invocation": "Save absolute path of the script filename in variable \"MY_PATH\"", "cmd": "MY_PATH=$(readlink -f \"$0\")"}, {"invocation": "Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".", "cmd": "rename 's/^/new./' original.filename"}, {"invocation": "Search level 3 of the current directory tree for the directories whose pathnames contain \"New Parts\"", "cmd": "find -mindepth 3 -maxdepth 3 -type d | grep \"New Parts\""}, {"invocation": "Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/", "cmd": "find . -name \"*.csv\" -exec diff {} /some/other/path/{} \";\" -print"}, {"invocation": "Search core files in current direcory and delete .", "cmd": "find . -name core -exec rm {} \\;"}, {"invocation": "Find all *foo* files/directories under current directory and copy them to /your/dest", "cmd": "find . -name \"*foo*\" | sed -e \"s/'/\\\\\\'/g\" -e 's/\"/\\\\\"/g' -e 's/ /\\\\ /g' | xargs cp /your/dest"}, {"invocation": "Recursively change owner and group to \"$JBOSS_AS_USER\" of \"$JBOSS_AS_DIR\"", "cmd": "chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR"}, {"invocation": "Display inputfile all on one line (replace newlines by spaces)", "cmd": "awk '{printf \"%s \", $0} END {printf \"\\n\"}' inputfile"}, {"invocation": "Force remove all files and folders in the physical current working directory", "cmd": "rm -rf \"$(pwd -P)\"/*"}, {"invocation": "Display all lines containing PROBES in the current kernel's compile-time config file.", "cmd": "grep PROBES /boot/config-$(uname -r)"}, {"invocation": "Prints groups list that current user belongs to.", "cmd": "groups                                        //take a look at the groups and see"}, {"invocation": "display a long listing of the files in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 |xargs ls -l"}, {"invocation": "Find all files that belong to user root", "cmd": "find / -user root"}, {"invocation": "Set permissions to 400 for regular files under the current directory", "cmd": "find . -type f -exec chmod 400 {} \\;"}, {"invocation": "Search the current directory for all regular files executable by 'user', 'group', and 'others'", "cmd": "find . -maxdepth 1 -type f -perm -ugo=x"}, {"invocation": "Change onwer of \"file\" to \"user_name\"", "cmd": "chown user_name file"}, {"invocation": "Search the /root directory recursively for files named \"FindCommandExamples.txt\"", "cmd": "find /root -name FindCommandExamples.txt"}, {"invocation": "Kills all child process and process itself having id 24901.", "cmd": "kill `pstree -p 24901 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/' | tr \"\\n\" \" \"`"}, {"invocation": "Limits the number of results from grep to 2 lines", "cmd": "grep -o '1.' yourfile | head -n2"}, {"invocation": "Remove all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\" -delete"}, {"invocation": "Search for 'some string' in all *js files under current directory and show the matched lines with line numbers", "cmd": "find . -name '*js' -exec grep -n 'some string' {} \\;"}, {"invocation": "find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )", "cmd": "find ./ -daystart -mtime -3"}, {"invocation": "change the directory to the last found folder in the directory 'a'", "cmd": "cd `find a |sed '$!d'`"}, {"invocation": "The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.", "cmd": "find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}, {"invocation": "Write output and error of \"bash myscript.sh\" to standard output and to \"output.log\"", "cmd": "bash myscript.sh 2>&1 | tee output.log"}, {"invocation": "Change the owner and group of \"it\" to \"root\"", "cmd": "chown root:root it"}, {"invocation": "display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)", "cmd": "find bar -path /foo/bar/myfile -print"}, {"invocation": "Delete the oldest file with '.tgz' or '.gz' extension under '/home/backups' directory tree", "cmd": "ls -tr $(find /home/backups -name '*.gz' -o -name '*.tgz')|head -1|xargs rm -f"}, {"invocation": "Find all *.axvw files/directories under current directory", "cmd": "find . -name '*.axvw'"}, {"invocation": "Print the total disk usage in bytes of all files listed in \"files.txt\"", "cmd": "cat files.txt | xargs du -c | tail -1 | awk '{print $1}'"}, {"invocation": "Forcibly removes ${temp} file.", "cmd": "rm --force \"${temp}\""}, {"invocation": "Find all .zip files starting from the current directory which are owned by user tommye", "cmd": "find . -type f -user tommye -iname \"*.zip\""}, {"invocation": "Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files", "cmd": "find . -type d -path '*/\\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print"}, {"invocation": "Extracts single file 'filename' from bzip2-compressed tarball archive.tbz.", "cmd": "bzip2 -dc archive.tbz | tar xvf - filename"}, {"invocation": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treat absent files as empty and all files as text, and print 3 lines of unified context", "cmd": "diff -Naur dir1/ dir2"}, {"invocation": "Print a sorted list of the subdirectories of ~/Music", "cmd": "find ~/Music/ -maxdepth 2 -mindepth 2 -type d | sort"}, {"invocation": "search for text files in the current folder which do not have write access to others", "cmd": "find . -type f \\( -iname \"*.txt\" -not -perm -o=w \\)"}, {"invocation": "Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*", "cmd": "find  /path/to/directory/* -maxdepth 0 -type d -exec basename {} \\;"}, {"invocation": "Search directories /opt, /usr, /var for regular file foo", "cmd": "find /opt /usr /var -name foo -type f"}, {"invocation": "Report only total size of file systems in 1T blocks.", "cmd": "df --total -BT | tail -n 1 | sed -E 's/total *([^ ]*).*/\\1/'"}, {"invocation": "Print the sorted unique column of usernames of users who are currently logged in without the header", "cmd": "finger | tail -n +2 | awk '{ print $1 }' | sort | uniq"}, {"invocation": "Delete all MP3 files under /tmp", "cmd": "find /tmp -iname '*.mp3' -print0 | xargs -0 rm"}, {"invocation": "Find all regular files in the the user's home/mail directory and search for the word \"Linux\".", "cmd": "find ~/mail -type f | xargs grep \"Linux\""}, {"invocation": "search for MP3 files in the current folder and subfolders exclude dir1 AND dir2", "cmd": "find ! -path \"dir1\" ! -path \"dir2\" -iname \"*.mp3\""}, {"invocation": "Perform a dry run to recursively copy \"test/a\" to \"test/dest\" excluding \"test/a/b/c/d\"", "cmd": "rsync -nvraL test/a test/dest --exclude=a/b/c/d"}, {"invocation": "display all the files in the current folder along with the modification time and display file names of the last 10 modified files", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \""}, {"invocation": "find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB", "cmd": "find . -atime +7 -size +20480 -print"}, {"invocation": "Read a single character from standard input into variable \"ans\"", "cmd": "read -n1 ans"}, {"invocation": "Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files", "cmd": "find . -print | xargs grep -l -i \"PATTERN\""}, {"invocation": "Find file names *blast* in specfied directory, case insensitive", "cmd": "find /usr/local -iname \"*blast*\""}, {"invocation": "Find all directories under minimum 1 level down the current directory and set their permission to 755", "cmd": "find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \\;"}, {"invocation": "Search the /home/www directory tree for regular files", "cmd": "find /home/www -type f"}, {"invocation": "Assign permissions 644 to files in the current directory tree", "cmd": "find . -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder.", "cmd": "find . -name '*.pyc' -print0 | xargs -0 rm"}, {"invocation": "Set the 'xtrace' shell option", "cmd": "set -o xtrace"}, {"invocation": "Find all files/directories under current directory", "cmd": "find -print"}, {"invocation": "Numerically sort file \"file.dat\" by the second word of each line and output from greatest value to least value", "cmd": "sort -nk 2,2 file.dat | tac"}, {"invocation": "Find files/directories modified within the last hour under current directory", "cmd": "find . -mtime -1"}, {"invocation": "Delete all but the most recent 5 files", "cmd": "ls -tr | head -n -5 | xargs rm"}, {"invocation": "find all the files in the current folder which have been modified in the 10 minutes ago", "cmd": "find -mmin +15 -mmin -25"}, {"invocation": "Find all files under images directory", "cmd": "find images -type f"}, {"invocation": "Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.", "cmd": "env - `cat ~/cronenv` /bin/sh"}, {"invocation": "Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\", using at most 4 concurrent processes.", "cmd": "find . -name \"*_test.rb\" | xargs -P 4 rename s/_test/_spec/"}, {"invocation": "Find all symbolic links under '/some/directory' tree", "cmd": "find /some/directory -type l -print"}, {"invocation": "Find all files in /home/user/ that were created or changed 10 minutes ago", "cmd": "find /home/user/ -cmin 10 -print"}, {"invocation": "find the top 25 files in the current directory and its subdirectories", "cmd": "find . -type f -exec ls -al {} \\; | sort -nr -k5 | head -n 25"}, {"invocation": "Search  in current directory downwards all files whose size is greater than 10 bytes .", "cmd": "find . -size +10c -print"}, {"invocation": "find  directory which case-insensitive name is too in currect directory", "cmd": "find . -iname foo -type d"}, {"invocation": "Find all the *.txt files in the current directory older than 48 hours", "cmd": "find . -maxdepth 1 -name '*.txt' -mtime +2"}, {"invocation": "Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time", "cmd": "find . -type f -printf \"%C@ %p\\n\" | sort -r | head -n 10"}, {"invocation": "Inserts \"new line\" after last occurrence of ScriptAlias in a file", "cmd": "tac file | awk '/ScriptAlias/ && ! seen {print \"new line\"; seen=1} {print}' | tac"}, {"invocation": "Find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories", "cmd": "find \"$1\" -path \"*/.*\" -prune -o \\( -type f -print0 \\)"}, {"invocation": "Find all files/directories under current directory and print them twice in each line", "cmd": "find | xargs -i sh -c \"echo {} {}\""}, {"invocation": "Find all *.mp4 files under directory named 'working' and show the first one found", "cmd": "find working -type f -name \"*.mp4\" | head -1"}, {"invocation": "Calculate the md5 sum of the file \"filename\" and print only the hash", "cmd": "md5sum filename |cut -f 1 -d \" \""}, {"invocation": "Join data in file1 containing one number per line with data in file2 containing a number and other information per line, keeping the same order as it is found in file1.", "cmd": "join -1 2 -2 1 -a1 <(cat -n file1.txt | sort -k2,2) <(sort file2.txt) | sort -k2 | cut --complement -d\" \" -f2"}, {"invocation": "Find all files named \"filename\" in the current directory tree, not descending into \"FOLDER1\" directories", "cmd": "find . '(' -name FOLDER1 -prune -o -name filename ')' -print"}, {"invocation": "Make directories \"foo\" and \"bar\"", "cmd": "mkdir foo bar"}, {"invocation": "Create a symolic link in \"/usr/local/bin/\" to \"/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\"", "cmd": "ln -s /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/"}, {"invocation": "search for a word in all the files with the extension \"ch\" in the current folder", "cmd": "find -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Print a welcome message with the current user's user name", "cmd": "echo \"Welcome $(whoami)!\""}, {"invocation": "Split the output of \"tar [your params]\" into files of at most 500 MiB in size and use prefix \"output_prefix\"", "cmd": "tar [your params] |split -b 500m - output_prefix"}, {"invocation": "find all the files that have been modified in exactly 7*24 hours ago", "cmd": "find . -mtime 7"}, {"invocation": "Sort and print each unique line in \"myfile.txt\"", "cmd": "cat myfile.txt| sort| uniq"}, {"invocation": "Find all .mp3 files with more than 10MB and delete them", "cmd": "find / -type f -name *.mp3 -size +10M -exec rm {} \\;"}, {"invocation": "Join lines in file \"aa\" with lines in file \"bb\" if the lines share a common first word and sort the result numerically", "cmd": "join <(sort aa) <(sort bb) | sort -k1,1n"}, {"invocation": "Find all regular files in the current directory tree and search them for \"example\"", "cmd": "find -type f -print0 | xargs -r0 grep -F 'example'"}, {"invocation": "Copy the directory hierarchy from \"original\" to \"new\"", "cmd": "find original -type d -exec mkdir new/{} \\;"}, {"invocation": "find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB", "cmd": "find . -type f -mtime +356 -printf '%s\\n'  | awk '{a+=$1;} END {printf \"%.1f GB\\n\", a/2**30;}'"}, {"invocation": "Print disk of mount point \"/pa/th\"", "cmd": "mount | awk '$3 == \"/pa/th\" {print $1}'"}, {"invocation": "Change the owner of all files in \"/empty_dir/\" to \"root\" using at most 10 files at a time", "cmd": "ls /empty_dir/ | xargs -n10 chown root"}, {"invocation": "Find all CSS files that do something with HTML ID #content", "cmd": "find . -name \"*.css\" -exec grep -l \"#content\" {} \\;"}, {"invocation": "List all files under current directory that are greater than 10000000x512 bytes in size", "cmd": "find . -type f -size +10000000 -print|xargs ls -ld|more"}, {"invocation": "update the permission of all the php files in current directory and save the output to a file", "cmd": "find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt"}, {"invocation": "Remove the file with inode number 752010", "cmd": "find -inum 752010 -exec rm {} \\;"}, {"invocation": "Find all .java files  under current directory", "cmd": "find . -print | grep '\\.java'"}, {"invocation": "Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths", "cmd": "find /home/jul/here -type f -iname \"*.php\" ! -path \"$EXCLUDE/*\" -o -iname \"*.js\" ! -path \"$EXCLUDE/*\""}, {"invocation": "Find all *.py files/directories under current directory", "cmd": "find . -name \\*.py -print"}, {"invocation": "Show current date in \"%Y-%m-%d\" format", "cmd": "date \"+%Y-%m-%d\""}, {"invocation": "Find all or single file called FindCommandExamples.txt under / directory of owner root", "cmd": "find / -user root -name FindCommandExamples.txt"}, {"invocation": "find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.", "cmd": "find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}, {"invocation": "Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them", "cmd": "find . -type f -mtime +31 -print0 | xargs -0 -r rm -f"}, {"invocation": "Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories", "cmd": "find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\\n' | sort | uniq | tr -d '\\n'"}, {"invocation": "Set timestamp of B to the timestamp in stat format specified by variable \"old_time\"", "cmd": "touch -d\"$(date --date=\"@$old_time\")\" B"}, {"invocation": "display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )", "cmd": "find . -mmin 0.5"}, {"invocation": "Find all *.txt files under /foo and delete them", "cmd": "find /foo -name \"*.txt\" -delete"}, {"invocation": "find all the php files", "cmd": "find -name '*.php'"}, {"invocation": "Decompresses file 'xac.bz2', redirecting output to standard out.", "cmd": "bzip2 -dc xac.bz2"}, {"invocation": "Find all regular files under test directory", "cmd": "find test -type f"}, {"invocation": "Print the paths of all files in the current directory tree that contain \"abc\" replacing \"abc\" with \"xyz\"", "cmd": "find . |xargs grep abc | sed 's/abc/xyz/g'"}, {"invocation": "display all the regular/ normal files in a folder", "cmd": "find src/js -type f"}, {"invocation": "Remount the root file system with read and write permission", "cmd": "mount -o rw,remount -t rootfs /"}, {"invocation": "Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files", "cmd": "find $dir -type f -name $1 -exec sed $num'q;d' {} \\;"}, {"invocation": "display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files", "cmd": "find -exec grep -q fuddel {} \";\" -exec grep -q fiddel {} \";\" -ls"}, {"invocation": "find all foo.bar files in the entire file system", "cmd": "find / -name foo.bar -print"}, {"invocation": "Find all files/directories named 'testfile.txt' under current directory tree", "cmd": "find . -name testfile.txt"}, {"invocation": "Archive directory \"/mnt/data\" to \"/media/WD_Disk_1/current_working_data/\", deleting any extraneous files in destination, compress data during copy.", "cmd": "rsync -az --delete /mnt/data/ /media/WD_Disk_1/current_working_data/;"}, {"invocation": "long list al the files in the current directory which have only read permission to the group", "cmd": "find . -perm 040 -type f -exec ls -l {} \\;"}, {"invocation": "Recursively copy directory \"/path/to/data/myappdata\" to \"user@host:/remote/path/to/data/myappdata\"", "cmd": "rsync -rvv /path/to/data/myappdata user@host:/remote/path/to/data/myappdata"}, {"invocation": "Print symlink resolved script file name", "cmd": "echo $(basename $(readlink -nf $0))"}, {"invocation": "display all regular/normal files in the folder /Users/david/Desktop/", "cmd": "find /Users/david/Desktop/-type f"}, {"invocation": "Recursively copy \"emptydir\" to \"destination/newdir\"", "cmd": "rsync --recursive emptydir/ destination/newdir"}, {"invocation": "Find all files/directories under current directory", "cmd": "find | xargs"}, {"invocation": "Find all files in /home/kos and below whose names end in \".tmp\"", "cmd": "find /home/kos -name *.tmp -print"}, {"invocation": "Count the *.html files residing in the /usr/src directory tree and containing string \"foo\"", "cmd": "find /usr/src -name \"*.html\" | xargs grep -l foo | wc -l"}, {"invocation": "Find regular files which have 644 permission", "cmd": "find . -perm 644 -type f -exec ls -l {} \\;"}, {"invocation": "Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands", "cmd": "set -o pipefail"}, {"invocation": "Prints long listing of a last modified file in a current folder.", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's/.*/\"&\"/' | xargs ls -l"}, {"invocation": "Show manual for the find command", "cmd": "man find"}, {"invocation": "Change symbolic link \"$f\" into a file", "cmd": "cp --remove-destination $(readlink $f) $f"}, {"invocation": "Turns on network interface eth0.", "cmd": "ifconfig eth0 up"}, {"invocation": "Print \"file1.txt\" \"file2.txt\" and \"file3.txt\" with filename headers", "cmd": "tail -n +1 file1.txt file2.txt file3.txt"}, {"invocation": "Force create a symbolic link named \"$*\" to the canonical absolute path of \"$1\"", "cmd": "ln -sf \"$(readlink -f \"$1\")\" \"$*\""}, {"invocation": "Find directories with permissions 777 and change them to 755 recursively", "cmd": "find /home -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "search for the file \"process.txt\" in the entire file system", "cmd": "find / -name \"process.txt\""}, {"invocation": "Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path", "cmd": "find /foo/bar -name '*.mp4' -print0 | xargs -0 mv -t /some/path {}"}, {"invocation": "Show all variables whose name or value contains \"PATH\", sorted in reverse alphabetical order.", "cmd": "env | uniq | sort -r | grep PATH"}, {"invocation": "Find all directories under /var/www/some/subset and set their SGID bit", "cmd": "sudo find /var/www/some/subset -type d -print0 | xargs -0 chmod g+s"}, {"invocation": "Ping hostname, grep for 192.168.11 and print the IP from the output", "cmd": "ping -c 1 hostname | grep 192.168.11 | grep 'bytes from' | awk '{print $4}' | sed 's/://g'"}, {"invocation": "Output two lines of \"-tcp\"", "cmd": "yes -- -tcp | head -n 2"}, {"invocation": "Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.", "cmd": "df $path_in_question | grep \" $path_in_question$\""}, {"invocation": "Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names", "cmd": "find /usr/local/games -name \"*xpilot*\""}, {"invocation": "Creates temporary file in a current folder and saves path to it in 'f' variable.", "cmd": "f=`mktemp -p .`"}, {"invocation": "find all the directories in the home folder do not search in sub directories", "cmd": "find /home -maxdepth 1 -type d"}, {"invocation": "Remount \"/dev/block/mtdblock3\" on \"/system\" with read and write permission", "cmd": "mount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system"}, {"invocation": "Search  in current directory downwards all files whose size is 10 blocks .", "cmd": "find .  -size 10 print"}, {"invocation": "Find all files/directories under current directory with null character as the delimiter", "cmd": "find . -print0"}, {"invocation": "find all text files in the current directory and display them page wise", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "display all the files in the folder /home which do not belong to the group test", "cmd": "find /home ! -group test"}, {"invocation": "List .conf files residing in the /etc/nginx/ directory tree", "cmd": "find /etc/nginx -name '*.conf' -exec echo {} ;"}, {"invocation": "search for all \"tif\" images in the entire file system", "cmd": "find / -name '*.tif ' \u2013print"}, {"invocation": "Finds matched text in defined path recursively, but not follows symlinks.", "cmd": "grep -r \"string to be searched\"  /path/to/dir"}, {"invocation": "Change to the directory containing the \"oracle\" executable", "cmd": "cd \"$(dirname \"$(which oracle)\")\""}, {"invocation": "Sort and compare files \"$def.out\" and \"$def-new.out\"", "cmd": "diff <(sort $def.out) <(sort $def-new.out)"}, {"invocation": "Read the history file $HISTFILE and append the contents to the history list", "cmd": "history -r \"$HISTFILE\"     #Alternative: exec bash"}, {"invocation": "Creates temporary file with file name formatted like /tmp/gnuplot_cmd_$(basename \"${0}\").XXXXXX.gnuplot and saves path to it in a variable 'gnuplotscript'.", "cmd": "gnuplotscript=$(mktemp /tmp/gnuplot_cmd_$(basename \"${0}\").XXXXXX.gnuplot)"}, {"invocation": "Show the subdirectories of the current directory", "cmd": "find . -maxdepth 1 -type d -print | xargs echo Directories:"}, {"invocation": "list regular files ending in .mbox", "cmd": "find . -type f -wholename \\*.mbox"}, {"invocation": "find all files in the current folder that are not modified in the last 10 minutes", "cmd": "find . -mmin +10 -print"}, {"invocation": "Remove all files in the /myfiles directory tree that were accessed at least 30 days ago", "cmd": "find /myfiles -atime +30 -exec rm {} ;"}, {"invocation": "display all the text files in the home folder ( case insensitive search )", "cmd": "find /home -iname \"*.txt\""}, {"invocation": "list all regular files which path is not dir1 or dir2", "cmd": "find ! -path \"dir1\" ! -path \"dir2\" -type f"}, {"invocation": "search  in current directory downwards all files whose status has changed more then 7  days ago", "cmd": "find .  -ctime +7 -print"}, {"invocation": "Sort file.txt ignoring the last 10 characters of each line.", "cmd": "sort file.txt | rev | uniq -f 10 | rev"}, {"invocation": "Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names", "cmd": "find /etc -size +5M -exec ls -sh {} +"}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find . -type l -xtype l"}, {"invocation": "Find all 'test' directories in the current directory tree and remove them", "cmd": "find . -type d -name 'test' -exec rm -rf {} \\;"}, {"invocation": "Append \"<br/>\" to the end of each line in \"1\\n2\\n3\"", "cmd": "echo -e \"1\\n2\\n3\" | sed 's/.*$/&<br\\/>/'"}, {"invocation": "Set the read bit for \"other\" on all *rc.conf files in the current directory tree", "cmd": "find . -name \"*rc.conf\" -exec chmod o+r '{}' \\;"}, {"invocation": "Print file information of command \"studio\"", "cmd": "which studio | xargs ls -l"}, {"invocation": "Remove all regular files from the current directory tree whose names do not end with \"ignore1\" or \"ignore2\"", "cmd": "find . -type f -not -name '*ignore1' -o -not -name '*ignore2' | xargs rm"}, {"invocation": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"", "cmd": "find /users/tom -name \"*.pl\" -name \"*.pm\""}, {"invocation": "Remove all empty regular files under the current directory and below", "cmd": "find ./ -type f -empty -print0 | xargs -0 rm"}, {"invocation": "Copies 'src' to 'dest' preserving overwriting the existing files.", "cmd": "cp -n src dest"}, {"invocation": "Split \"domains.xml\" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of \"domains_\"", "cmd": "split -a 4 -d -l 50000 domains.xml domains_"}, {"invocation": "Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths", "cmd": "find /home/jul/here -type f \\( -iname \"*.php\" -o -iname \"*.js\" \\) ! -path \"/home/jul/here/exclude/*\""}, {"invocation": "Find all files/directories named 'top' (case insensitive) in the entire filesystem", "cmd": "find / -iname top"}, {"invocation": "Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path", "cmd": "find / -type f -perm -002 -printf '%p has world write permissions\\n'"}, {"invocation": "Show file type information for all regular files under '/home' directory tree", "cmd": "find /home -type f -exec file {} \\;"}, {"invocation": "Report file system containing the current directory disk usage", "cmd": "df ."}, {"invocation": "Delete all __temp__* files/directories under current directory tree", "cmd": "find . -name __temp__* -exec rm -rf '{}' \\;"}, {"invocation": "display in a list of all the files that are bigger than 10KB in current folder", "cmd": "find . -size +10k -ls"}, {"invocation": "Find files/directories under current directory that matches 'projects/insanewebproject' in their paths", "cmd": "find -ipath 'projects/insanewebproject'"}, {"invocation": "find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list", "cmd": "find . -type f \\! -name \"*.Z\" \\! -name \".comment\" -print | tee -a /tmp/list"}, {"invocation": "Get files that last had their meta information changed more than 3 days ago", "cmd": "find / -ctime +3"}, {"invocation": "Find the first file/directory named 'something' under current directory and quit", "cmd": "find . -name something -print -quit"}, {"invocation": "Recursively copies all files in the current directory but ones with 'c' in name to the home directory.", "cmd": "cp -r `ls -A | grep -v \"c\"` $HOME/"}, {"invocation": "Print the first line of each file under the home directory", "cmd": "find $HOME/. -name *.txt -exec head -n 1 -v {} \\;"}, {"invocation": "Move all files/directories under current directory to ~/play", "cmd": "find . | xargs -I'{}' mv '{}' ~/play/"}, {"invocation": "Removes everything from current folder but '*ddl*' and '*docs*' files.", "cmd": "ls -1|grep -v -e ddl -e docs| xargs rm -rf"}, {"invocation": "Find all files in the current directory tree which do not belong to any user", "cmd": "find . -nouser"}, {"invocation": "find all the files in the current folder which end with .o or with the name a.out and display them.", "cmd": "find . ( -name a.out -o -name *.o ) -print"}, {"invocation": "Delete all empty files in the current directory tree", "cmd": "find . -type f -empty -delete"}, {"invocation": "find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them", "cmd": "find . -type f -mtime -1 -daystart -exec ls -l {} \\;"}, {"invocation": "Creates temporary folder and saves path to it in a 'tempd' variable.", "cmd": "tempd=`mktemp -d`"}, {"invocation": "Create a symbolic link named \"/lib/libc.so.0\" to \"/lib/libc.so.6\"", "cmd": "ln -s /lib/libc.so.6 /lib/libc.so.0"}, {"invocation": "create a backup of all the files which have been modified in the last 48 hours", "cmd": "find source/directory -ctime -2 | cpio -pvdm /my/dest/directory"}, {"invocation": "list all *.txt files in the user's home directory.", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "Find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago", "cmd": "find -amin +25 -amin -35"}, {"invocation": "print the last word in a.txt", "cmd": "tac a.txt | awk 'NF{print $NF; exit}'"}, {"invocation": "Reports count of processors in system.", "cmd": "grep '^core id' /proc/cpuinfo |sort -u|wc -l"}, {"invocation": "Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'", "cmd": "find . -type f|grep -i \"\\.jpg$\" |sort| tee file_list.txt"}, {"invocation": "Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar", "cmd": "find . | grep FooBar | xargs -I{} cp {} ~/foo/bar"}, {"invocation": "Find all directories starting from the current directory", "cmd": "find . -type d"}, {"invocation": "Print '\"HTTP/1.1 200 OK', two new lines and the current date", "cmd": "echo -e \"HTTP/1.1 200 OK\\n\\n $(date)\""}, {"invocation": "Search the directory tree given as variable $root_dir for regular files", "cmd": "find $root_dir -type f"}, {"invocation": "Removes all files from current folder but 3 newest ones", "cmd": "ls -tQ | tail -n+4 | xargs rm"}, {"invocation": "Search the current directory tree for directories lacking execute permissions for user, group, or others", "cmd": "find . -type d ! -perm -111"}, {"invocation": "create directory \".hiddendir\"", "cmd": "mkdir .hiddendir"}, {"invocation": "Find files larger than 50k", "cmd": "find . -size +50k"}, {"invocation": "Show the list of files modified less than a minute ago", "cmd": "find / -mmin -1 -print"}, {"invocation": "Print the names and sizes of all regular files from the current directory tree", "cmd": "find . -type f -printf \"%f %s\\n\""}, {"invocation": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree", "cmd": "find ~ -iname \"screen*\""}, {"invocation": "Find all the files without permission 777 under current directory and show a few lines of output from the beginning", "cmd": "find . -type f ! -perm 777 | head"}, {"invocation": "extract 'archive.tar.gz' to /destination", "cmd": "gzip -dc archive.tar.gz | tar -xf - -C /destination"}, {"invocation": "Print the number of lines for each *.txt file from the $DIR directory tree", "cmd": "find $DIR -name \"*.txt\" -exec wc -l {} \\;"}, {"invocation": "Unzip file \"$empty_variable\"", "cmd": "gunzip $empty_variable"}, {"invocation": "Dump \"file\" as ASCII characters", "cmd": "od -t c file"}, {"invocation": "Search all regular files in the current directory tree for \"example\"", "cmd": "find -type f -print0 | xargs -r0 grep -F 'example'"}, {"invocation": "Converts all windows line endings to unix line endings", "cmd": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx"}, {"invocation": "Mount remote \"cifs\" filesystem \"//server/source/\" on \"/mnt/source-tmp\" with username \"Username\" and password \"password\"", "cmd": "mount -t cifs //server/source/ /mnt/source-tmp -o username=Username,password=password"}, {"invocation": "list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.", "cmd": "find . ! -perm -g+r,u+r,o+r -prune"}, {"invocation": "display all the directories in the current folder excluding those that are present in the .svn directory tree", "cmd": "find -type d -path '.svn' -prune -o -print"}, {"invocation": "Find all JPG files under the \"$SOURCE\" directory and below", "cmd": "find \"$SOURCE\" -type f -iname '*.jpg'"}, {"invocation": "Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755", "cmd": "find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "extract \"phantomjs-1.9.0-linux-x86_64.tar.bz2\"", "cmd": "sudo tar xvf phantomjs-1.9.0-linux-x86_64.tar.bz2"}, {"invocation": "Convert \"abc\" to a string of hexadecimal bytes", "cmd": "echo abc | od -A n -v -t x1 | tr -d ' \\n'"}, {"invocation": "Look for file `Chapter1' under /usr and /home", "cmd": "find /usr /home -name Chapter1 -type f"}, {"invocation": "find files in /tmp directory that named are core and deletes them", "cmd": "find /tmp -name core -type f -print | xargs /bin/rm -f"}, {"invocation": "Find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter '_'", "cmd": "find */201111/* -name \"*.jpg\" | sort -t '_' -nk2"}, {"invocation": "Make directory \"testExpress\"", "cmd": "mkdir testExpress"}, {"invocation": "find all the files in the current folder which are bigger than 10MB and less than 50MB", "cmd": "find . -size +10M -size -50M -print"}, {"invocation": "Find all .gif files in the /var/www directory tree", "cmd": "find /var/www -name *.gif"}, {"invocation": "Remove all empty files in /tmp/ and below", "cmd": "find /tmp -type f -empty -print | xargs rm -f"}, {"invocation": "list all .c or .sh regular files.", "cmd": "find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}, {"invocation": "Remount subtree \"/outside\" to \"/inside\" as a bind", "cmd": "mount /outside /inside -o bind"}, {"invocation": "find all files in the current folder which have not been changed in the last 48 hours", "cmd": "find ./ -daystart -ctime +2"}, {"invocation": "Search for files in your home directory which have been modified in the last twenty-four hours.", "cmd": "find $HOME  -mtime 0"}, {"invocation": "Copies 'libgtest_main.so' and 'libgtest.so' to '/usr/lib/', preserving all attributes, and copying symlinks as symlinks, without following in source files.", "cmd": "sudo cp -a libgtest_main.so libgtest.so /usr/lib/"}, {"invocation": "Find regular files under / that contain \"stringtofind\"", "cmd": "find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \\;"}, {"invocation": "find the file \"foo.txt\" in the current folder and assign the output to a variable", "cmd": "OUTPUT=`find . -name foo.txt`"}, {"invocation": "find the type of all the regular/normal files in the current folder", "cmd": "find . -type f | xargs file"}, {"invocation": "Find all the files/directories with '.conf' extension under '/etc' directory non-recursively and display the last ten files", "cmd": "find /etc -maxdepth 1 -name \"*.conf\" | tail"}, {"invocation": "Print fourth column of space-separated data from text file text.txt.", "cmd": "cat text.txt | cut -d \" \" -f 4"}, {"invocation": "Print a single line of numbers from \"001\" to \"010\"", "cmd": "yes | head -n 10 | awk '{printf( \"%03d \", NR )}'    ##for 01..10"}, {"invocation": "Find all files in maximum 1 level down the current directory that were modified less than 1 day ago", "cmd": "find -maxdepth 1 -type f -mtime -1"}, {"invocation": "Unzip and merge all \"small-*.gz\" files into files of 2000000 lines", "cmd": "zcat small-*.gz | split -d -l2000000 -a 3 - large_"}, {"invocation": "Find files named tecmint.txt  of owner root in the entire file system", "cmd": "find / -user root -name tecmint.txt"}, {"invocation": "List files in the current directory tree which have permissions rwx for user and rw for group and others", "cmd": "find . -perm 766 -exec ls -l {} \\;"}, {"invocation": "Find all files under current directory matching the regex '.*\\(\\(error\\|access\\)\\(_log\\)?\\|mod_jk\\.log\\)\\.[0-9]+' in their paths", "cmd": "find -type f -regex '.*\\(\\(error\\|access\\)\\(_log\\)?\\|mod_jk\\.log\\)\\.[0-9]+'"}, {"invocation": "Replace any blank character from standard input with a tab", "cmd": "tr '[:blank:]' \\\\t"}, {"invocation": "Search for \"YOURSTRING\" in all files under current directory", "cmd": "grep YOURSTRING `find .`"}, {"invocation": "Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.pid' file, comparing human readable numbers in file strings.", "cmd": "cat ${TMP}/${SCRIPT_NAME}.pid|sort -rh;"}, {"invocation": "Execute \"ls -l data.temp\" every 2 seconds", "cmd": "watch ls -l data.temp"}, {"invocation": "Change permissions to 644 recursively for PHP files.", "cmd": "find . -type f -name '*.php' -exec chmod 644 {} \\;"}, {"invocation": "Display infinite scroll of random ASCII art", "cmd": "yes 'c=(\u2571 \u2572);printf ${c[RANDOM%2]}'|bash"}, {"invocation": "search for a word in all the .C files in the current directory", "cmd": "find . -name \"*.c\" -exec grep -ir \"keyword\" {} \";\""}, {"invocation": "Find all empty files starting from the current directory and delete them", "cmd": "find . -type f -empty -delete"}, {"invocation": "Print \"$somedir is empty\" if $somedir is empty", "cmd": "find \"$somedir\" -maxdepth 0 -empty -exec echo {} is empty. \\;"}, {"invocation": "Set variable \"MAVEN_DEBUG_OPTS\" to \"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\" on Windows machines", "cmd": "set MAVEN_DEBUG_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"}, {"invocation": "Find all files/directories named $something under current directory", "cmd": "find -name \"$something\""}, {"invocation": "Changes group ownership of 'myprogram' to ${USER} (the current user)", "cmd": "chgrp \"${USER}\" myprogram"}, {"invocation": "search for a shell script in the current folder and display the current folder path", "cmd": "find . -name onlyme.sh -exec pwd \\;"}, {"invocation": "copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4", "cmd": "find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}, {"invocation": "Add \"Line of text here\" on top of each *.py files under current directory", "cmd": "find . -name \\*.py | xargs sed -i '1a Line of text here'"}, {"invocation": "Print variable \"$opt\" with double quotes deleted", "cmd": "echo \"$opt\" | tr -d '\"'"}, {"invocation": "Display the last slash-separated part of each filename path in file.txt", "cmd": "rev file.txt | cut -d/ -f1 | rev"}, {"invocation": "Recursively change the owner and group of \"/home/el/svnworkspace\" and \"775\" to \"your_user_name\"", "cmd": "chown -R your_user_name.your_user_name 775 /home/el/svnworkspace"}, {"invocation": "Strips last section from the path $pathname, and prints basename of the rest part.", "cmd": "echo $(basename $(dirname $pathname))"}, {"invocation": "Copy the owner and group from \"file.txt\" to \"$tempfile\"", "cmd": "chown --reference=file.txt -- \"$tempfile\""}, {"invocation": "Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size", "cmd": "find /var/www -name *.gif -size +5k -size -10k"}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find . -name test -type d -exec rm -r {} +"}, {"invocation": "Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.", "cmd": "find ~/ -name *.png -exec cp {} imagesdir \\;"}, {"invocation": "Monitor 3 specific process IDs: 18884, 18892, and 18919 (GNU specific)", "cmd": "top -p 18884 -p 18892 -p 18919"}, {"invocation": "View history using \"less\"", "cmd": "history | less"}, {"invocation": "List the z* links in the /usr/bin directory with inode information and the file to which it points to", "cmd": "find /usr/bin -type  l  -name \"z*\" -ls"}, {"invocation": "The file \"files_to_find.txt\" contains a list of filenames, create each file or update its timestamp if it exists.", "cmd": "touch `cat files_to_find.txt`"}, {"invocation": "Creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in 'my_temp' variable.", "cmd": "$ my_temp_dir=$(mktemp -d --tmpdir=$temp_dir -t $template)"}, {"invocation": "Make directories \"/tmp/A\", \"/tmp/B\", \"/tmp/C\", and \"/tmp/ dir with spaces\"", "cmd": "mkdir /tmp/A /tmp/B /tmp/C \"/tmp/ dir with spaces\""}, {"invocation": "Replace all negative numbers in the 3rd comma-separated column of inputfile by the number notated in parenthesis instead of with a minus sign.", "cmd": "awk -F, 'BEGIN {OFS = \",\"} {gsub(\"-([0-9.]+)\", \"(\" substr($3, 2) \")\", $3); print}' inputfile"}, {"invocation": "find all normal/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and and delete them", "cmd": "find . -maxdepth 1 -type f -name '*~' -delete  -or -name '#*#' -delete"}, {"invocation": "Change permissions of all files ending in \".php\" under the current directory to 755 and print a '+' for each file", "cmd": "find . -name '*.php' -exec chmod 755 {} \\; -exec echo '+' \\;"}, {"invocation": "Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree", "cmd": "find . -name \"*.[!r]*\" -exec grep -i -l \"search for me\" {} \\;"}, {"invocation": "Create a symbolic link in directory \"~/newlinks\" for each file listed in \"results2.txt\"", "cmd": "cat results2.txt | xargs -I{} ln -s {} ~/newlinks"}, {"invocation": "find all the files that are modified in the last 1 day", "cmd": "find -mtime +0 -mtime -1"}, {"invocation": "Output only the filetype suffix of \"foo.tar.gz\", in this case \"gz\"", "cmd": "echo \"foo.tar.gz\" | rev | cut -d\".\" -f1 | rev"}, {"invocation": "display all the files in the current folder and traverse from the sub directories", "cmd": "find . -type d -depth"}, {"invocation": "Show human-readable file type description of file \"/mnt/c/BOOT.INI\"", "cmd": "file /mnt/c/BOOT.INI"}, {"invocation": "Archive \"src-dir\" to \"dest-dir\" on \"remote-user@remote-host\" and delete any files in \"dest-dir\" not found in \"src-dir\"", "cmd": "rsync -av --delete src-dir remote-user@remote-host:dest-dir"}, {"invocation": "find list of all files with file permission , link , owner , group , reation time , size , file name", "cmd": "find . -exec ls -ld {} \\;"}, {"invocation": "change owner and group  of all files and directory into current directory to user and group apache", "cmd": "find . -maxdepth 1 -not -name \".\" -print0 | xargs --null chown -R apache:apache"}, {"invocation": "Lists all subdirectories in the current directory with the trailing slash removed", "cmd": "ls -d1 */ | tr -d \"/\""}, {"invocation": "find all regular/normal files in the current folder that have been modified in the last 120 hours", "cmd": "find -mtime -5 -type f -print"}, {"invocation": "Archive directory specified by variable \"i\" to \"/iscsi\" preserving relative paths.", "cmd": "rsync -avR $i /iscsi;"}, {"invocation": "Copy file \"exist\" from directory \"/file/that\" to a new file named \"file\" in \"/location/for/new\"", "cmd": "cp /file/that/exists /location/for/new/file"}, {"invocation": "Count number of lines in \"Sample_51770BL1_R1.fastq.gz\"", "cmd": "zcat Sample_51770BL1_R1.fastq.gz | wc -l"}, {"invocation": "Split \"/path/to/large/file\" into files with at most 50000 lines and use prefix \"/path/to/output/file/prefix\"", "cmd": "split --lines=50000 /path/to/large/file /path/to/output/file/prefix"}, {"invocation": "Find all *.tex regular files in maximum 2 levels down the current directory", "cmd": "find . -type f -maxdepth 2 -name \"*.tex\""}, {"invocation": "Recursively removes all files and folders that match pattern '/usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*'", "cmd": "rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*"}, {"invocation": "Delete recursively empty files named 'bad'", "cmd": "find . -name bad -empty -delete"}, {"invocation": "Search for \"pattern\" in \"file\" and join each line by a space", "cmd": "cat file | grep pattern | paste -sd' '"}, {"invocation": "Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely", "cmd": "find . -not \\( -path ./directory -prune \\) -name \\*.js"}, {"invocation": "ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours", "cmd": "find /mydir -atime +100 -ok rm {} \\;"}, {"invocation": "Synchronize \"/path/to/dir_a\" with files in \"/path/to/dir_b/\" if the files are newer", "cmd": "rsync -rtuv /path/to/dir_b/* /path/to/dir_a"}, {"invocation": "Make directory \"aaa\"", "cmd": "mkdir aaa"}, {"invocation": "find all the text files in the folder /home/calvin and do not search beyond 2 levels", "cmd": "find /home/calvin/ -maxdepth 2  -name \u201c*.txt\u201d"}, {"invocation": "Search all files in the current directory tree that are named \"whatever\" for \"whatever\"", "cmd": "find . -name whatever -print | xargs grep whatever"}, {"invocation": "Find all files under current directory that were modified in the last 24 hours", "cmd": "find -mtime 0"}, {"invocation": "Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves", "cmd": "find $ROOT_DIR -type d -depth -print"}, {"invocation": "List all .svn files/directories under current directory", "cmd": "find . -name .svn -exec echo {} \\;"}, {"invocation": "Look for *log files in directories at least three levels down the directory tree", "cmd": "find / -mindepth 3  -name \"*log\""}, {"invocation": "Create intermediate directories as required and directory /tmp/test/blah/oops/something", "cmd": "mkdir -p /tmp/test/blah/oops/something"}, {"invocation": "Find \"*prefs copy\" files in the /mnt/zip directory tree and remove them with prompting", "cmd": "find /mnt/zip -name \"*prefs copy\" -print0 | xargs -p rm"}, {"invocation": "Set 644 permission to all regular files under /path", "cmd": "find /path -type f -exec chmod 644 {} +;"}, {"invocation": "display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name \"Metallica\"", "cmd": "find /mp3-collection -name 'Metallica*' -or -size +10000k"}, {"invocation": "Search the current directory tree for the files with extension \"trc\" and remove them if they are more than three days old", "cmd": "find . -name \"*.trc\" -ctime +3 -exec rm {} \\;"}, {"invocation": "Create a symbolic link named \"foo\" to \"/var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb\"", "cmd": "ln -s   /var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb foo"}, {"invocation": "Find out all files owned by user vivek", "cmd": "find / -user vivek"}, {"invocation": "Search for all files with the same inode number 41525360", "cmd": "find . -follow -inum 41525360"}, {"invocation": "Find all the regular files under directory 'dir1' that are at least N levels deep", "cmd": "find dir1 -mindepth N -type f"}, {"invocation": "Finds IP address of 'en0' network interface.", "cmd": "ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}'"}, {"invocation": "find the file \"filename.txt\" in the usr folder", "cmd": "find /usr -name filename.txt -print"}, {"invocation": "Change permissions to 700 for files and directories deeper than the current directory", "cmd": "find . -mindepth 2 | xargs chmod 700"}, {"invocation": "Remove all *.swp files/directories under current directory", "cmd": "find . -name \"*.swp\"-exec rm -rf {} \\;"}, {"invocation": "Find all the files on the system that have been changed within the last hour", "cmd": "find / -cmin -60"}, {"invocation": "Find all strings matching pattern \"^${KEY}${DELIMITER}\" in $FILE file and print rest of string after $DELIMITER", "cmd": "cat \"$FILE\" | grep \"^${KEY}${DELIMITER}\" | cut -f2- -d\"$DELIMITER\""}, {"invocation": "Display a dump of \"file\" as floating point values of double size", "cmd": "od -t fD file"}, {"invocation": "Search the system for directories named \"needle\"", "cmd": "find / -type d -name \"needle\""}, {"invocation": "Find all 777 permission files and use chmod command to set permissions to 644", "cmd": "find / -type f -perm 0777 -print -exec chmod 644 {} \\;"}, {"invocation": "Save 'echo whatever you \"want your\" command to be' in history", "cmd": "history -s 'echo whatever you \"want your\" command to be'"}, {"invocation": "Search the entire file hierarchy for files ending in '.old' and delete them.", "cmd": "find / -name \"*.old\" -delete"}, {"invocation": "split content of the files *.txt beginning with 1001st line into pieces per 1000 lines", "cmd": "cat *.txt | tail -n +1001 | split --lines=1000"}, {"invocation": "Get domain name of $ip and save it to the variable 'reverse'", "cmd": "reverse=$(dig -x $ip +short)"}, {"invocation": "display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set", "cmd": "find / -noleaf -wholename '/proc' -prune -o -wholename '/sys' -prune -o -wholename '/dev' -prune -o -perm -2 ! -type l  ! -type s ! \\( -type d -perm -1000 \\) -print"}, {"invocation": "Count the number of .gz files in directory tree /home/user1/data1/2012/mainDir", "cmd": "find /home/user1/data1/2012/mainDir -name '*.gz' | wc -l"}, {"invocation": "Move all directories from the `sourceDir' directory tree to the `destDir' directory", "cmd": "find sourceDir -mindepth 1 -type d  -exec mv -t destDir \"{}\"  \\+"}, {"invocation": "Move all regular files under current directory to ./newdir", "cmd": "find ./ -type f -print | xargs    -l56 -I {} mv -f {} ./newdir"}, {"invocation": "find all the text files in the folder /home/calvin which are atleast below 2 levels", "cmd": "find /home/calvin/ -mindepth 2  -name \u201c*.txt\u201d"}, {"invocation": "change the group of all regular/normal files in the current directory", "cmd": "find . -type f -exec chgrp usergroup {} \\;"}, {"invocation": "find CSS files, omitting results containing \"CVS\"", "cmd": "find . \\! -path \"*CVS*\" -type f -name \"*.css\""}, {"invocation": "Find *.css files in the current directory tree, skipping all directories that match pattern '*/lang/en.css'", "cmd": "find . -path '*/lang/en.css' -prune -o -name '*.css' -print"}, {"invocation": "Find all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents", "cmd": "find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \\{\\} \\; -print"}, {"invocation": "Count the number of equal lines in \"file1.txt\" and \"file2.txt\"", "cmd": "comm -12 <(sort file1.txt) <(sort file2.txt) | wc -l"}, {"invocation": "Search the /home/bozo/projects directory tree for files modified within the last 24 hours", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Join comma-separated data in file1 and file2, including extra non-matching information in both files.", "cmd": "join -t, -a1 -a2 <(sort file1) <(sort file2)"}, {"invocation": "display all symbolic links in current folder", "cmd": "find . -lname \"*\""}, {"invocation": "Search the *.cc files in the current directory tree for string \"xxx\"", "cmd": "find . -name \"*.cc\" -print -exec grep \"xxx\" {} \\;"}, {"invocation": "Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'.", "cmd": "shopt -s expand_aliases extglob xpg_echo"}, {"invocation": "Find all symbolic links starting from the current directory and list them", "cmd": "find . -type l -ls"}, {"invocation": "display all the jpg images in current folder", "cmd": "find . -type f -iregex '.*\\.jpe?g'"}, {"invocation": "Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths", "cmd": "find -L /path/to/dir/* -printf \"%TY%Tm%Td%TH%TM%TS|%p\\n\""}, {"invocation": "Find all regular files or symlinks in the entire file system", "cmd": "find / -mount -depth \\( -type f -o -type l \\) -print"}, {"invocation": "Find files in the current directory tree whose names are of the form \"cxx_data.txt\" where xx is a number from 30 to 70", "cmd": "find . -regextype posix-egrep -regex '.\\*c([3-6][0-9]|70).\\*'"}, {"invocation": "display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab", "cmd": "find /etc /srv \\! -path \"./srv/tftp/pxelinux.cfg*\" -a \\! -name /etc/mtab"}, {"invocation": "display all the files in the home folder which are smaller than 500 bytes", "cmd": "find ~ -size -500b"}, {"invocation": "find in the entire file system for the file mysql", "cmd": "sudo find / -name mysql -print"}, {"invocation": "Measure the disk space taken up by all *.txt files in the current directory tree", "cmd": "find . -name \"*.txt\" -print0 |xargs -0 du -ch"}, {"invocation": "Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/", "cmd": "find arch/x86/usr/sbin arch/x86/usr/X11R6/bin usr/sbin/ -type f | xargs chmod a+x"}, {"invocation": "Find all files/directories named 'apt' in the entrie filesystem", "cmd": "find  / -name \"apt\""}, {"invocation": "Prints file descriptor of executed built-in 'true'.", "cmd": "echo <(true)"}, {"invocation": "searching for all files with the extension mp3", "cmd": "find / -name *.mp3"}, {"invocation": "find all the files in the current folder with the name \"test-a\" and move them to the folder test-10. execdir runs the command in the directory where the file is found.", "cmd": "find ~ -type f -name test-a -execdir mv {} test-10 \\;"}, {"invocation": "Save a unique list of the currently logged in usernames to variable \"line\"", "cmd": "line=$(who | cut -d' ' -f1 | sort -u)"}, {"invocation": "display long listing of all the empty files in the current folder", "cmd": "find . -empty -exec ls -l {} \\;"}, {"invocation": "Remove all regular files named \"Waldo\" in the ~/Books directory tree", "cmd": "find ~/Books -type f -name Waldo -exec rm {} \\;"}, {"invocation": "Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths", "cmd": "find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90  | sed 's|/[^/]*$||'"}, {"invocation": "find all files in the current folder that are not modified in the last 240 hours", "cmd": "find . -mtime +10 -print"}, {"invocation": "Find file `foo.bar' and delete it", "cmd": "find /home -name foo.bar -type f -exec rm -f \"{}\" ';'"}, {"invocation": "Print the last 10 commands in history", "cmd": "history | tail -n 10"}, {"invocation": "List all variables (names only) with names containing X.", "cmd": "env | awk -F \"=\" '{print $1}' | grep \".*X.*\""}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety", "cmd": "find var/log -print0 -iname 'anaconda.*' | tar -cvf somefile.tar -T -"}, {"invocation": "list names of bind functions containing \"/\"", "cmd": "bind -l | grep /"}, {"invocation": "Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex \".*/20140624.*\" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'", "cmd": "find /usr/share/data -regextype posix-extended -regex \".*/20140624.*\" -fprint /home/user/txt-files/data-as-of-20140624.txt"}, {"invocation": "Find regular files modified within the last ten minutes under /etc", "cmd": "find /etc -type f -mmin -10"}, {"invocation": "Update timestamps of all files (not directories) under current directory.", "cmd": "find . -exec touch {} \\;"}, {"invocation": "find the \"MyCProgram.c\" file (case insensitive find) under the current directory", "cmd": "find -iname \"MyCProgram.c\""}, {"invocation": "Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths", "cmd": "find \"${DIR_TO_CLEAN?}\" -type f -mtime +${DAYS_TO_SAVE?} -print0"}, {"invocation": "Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.", "cmd": "cd -P xyz"}, {"invocation": "find all the files in the home folder which are empty (Size 0 bytes)", "cmd": "find ~ -empty"}, {"invocation": "find the file \"httpd.log\" in the entire file system", "cmd": "find / -type f -name httpd.log"}, {"invocation": "Read a line from standard input with a timeout of 0.1 seconds and prompt \"This will be sent to stderr\"", "cmd": "read -t 0.1 -p \"This will be sent to stderr\""}, {"invocation": "display all the regular files in current folder that belong to the user \"tom\"", "cmd": "find . -type f -user tom"}, {"invocation": "Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir", "cmd": "find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.", "cmd": "find ${WP_ROOT}/wp-content -exec chgrp ${WS_GROUP} {} \\;"}, {"invocation": "Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree", "cmd": "find -name file -exec echo '-exec is an action so an implicit -print is not applied' \\;"}, {"invocation": "Find all files in the /myfiles directory tree following symbolic links", "cmd": "find -L /myfiles"}, {"invocation": "Perform a case insensitive search for *filename* files/directories under current directory tree", "cmd": "find . -iname \"*filename*\""}, {"invocation": "search for a word in all c files in the current folder", "cmd": "find . -name '*.c' | xargs grep 'stdlib.h'"}, {"invocation": "display all the files in the current folder which have not been modified in the last 7 days and which are not in the list \"file.lst\"", "cmd": "find -mtime +7 -print | grep -Fxvf file.lst"}, {"invocation": "display list of all the files in the current directory (print0 handles file names with newlines or spaces)", "cmd": "find -print0 | xargs -0 ls"}, {"invocation": "Rename all \"thumbs\" directories to \"thumb\" in the current directory tree", "cmd": "find . -type d -exec rename 's/^thumbs$/thumb/' {} \";\""}, {"invocation": "Create a full path symbolic link \"$newlink\" from a relative path symbolic link \"$origlink\"", "cmd": "ln -s $(readlink -f $origlink) $newlink"}, {"invocation": "Set variable PING to 1 if it's possible to ping host ADDRESS, to 0 otherwise.", "cmd": "PING=$(ping ADDRESS -c 1 | grep -E -o '[0-9]+ received' | cut -f1 -d' ')"}, {"invocation": "switch to user username", "cmd": "su username"}, {"invocation": "Kill the processes of user `myuser' that have been working more than 7 days", "cmd": "find /proc -user myuser -maxdepth 1 -type d -mtime +7 -exec basename {} \\; | xargs kill -9"}, {"invocation": "Recursively archive \"test/a/\" to \"test/dest\" excluding \"test/a/b/c/d\"", "cmd": "rsync -nvraL test/a/ test/dest --exclude=/b/c/d"}, {"invocation": "Move all directories in the current directory that match \"some-dir\" to \"x/\"", "cmd": "find ./ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x/"}, {"invocation": "Find all regular *.css files", "cmd": "find . -type f -name \"*.css\""}, {"invocation": "Find all directories under $1/.hg and set their SGID bit", "cmd": "find \"$1\"/.hg -type d -print0 | xargs chmod g+s"}, {"invocation": "Find *.java files in the current directory with GNU find and replace foo with bar in those files", "cmd": "find . -name \"*.java\" -exec sed -i s/foo/bar/g \\;"}, {"invocation": "Display all lines contained in 'dax-weekly.csv' in reverse order.", "cmd": "cat dax-weekly.csv | awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }'"}, {"invocation": "As root, edit the cron job list of user \"apache\" using the editor specified by EDITOR environment variable, or default /usr/bin/editor if this variable is not set.", "cmd": "sudo crontab -e -u apache"}, {"invocation": "remove all the core files in the home folder", "cmd": "find /home -name core -exec rm {} \\;"}, {"invocation": "Check whether \"$path_in_question\" is a mount point", "cmd": "df $path_in_question | grep \" $path_in_question$\""}, {"invocation": "find all the files in the file system that belong to the user www", "cmd": "find / -user www -print"}, {"invocation": "Find all files throughout the entire file hierarchy with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and/or \u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.", "cmd": "find / [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] \t[\u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f]"}, {"invocation": "Find all *.jpg files under current directory and print only unique names", "cmd": "find . -name \\*.jpg -exec basename {} \\; | uniq -u"}, {"invocation": "Exchanges the top two directories in the dirs stack.", "cmd": "pushd"}, {"invocation": "Creates temporary directory in '/tmp/' folder and saves path to it in 'my_tmp_dir' variable.", "cmd": "my_tmp_dir=$(mktemp -d --tmpdir=/tmp)"}, {"invocation": "Set permissions of command \"node\" to 755", "cmd": "sudo chmod 755 $(which node)"}, {"invocation": "Recursively change ownership of \"~/.npm\" to the current user", "cmd": "sudo chown -R $(whoami) ~/.npm"}, {"invocation": "Print mount point of the file system containing $path.", "cmd": "df -P \"/tmp\" | awk 'BEGIN {FS=\"[ ]*[0-9]+%?[ ]+\"}; NR==2 {print $NF}'"}, {"invocation": "delete all files in $DIR that have not been accessed in at least 5 days", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "Find all the files which were modified 50 days ago", "cmd": "find / -mtime 50"}, {"invocation": "Set the group to \"username\" for all files with GID=1000 in the current directory tree", "cmd": "find -gid 1000 -exec chown -h :username {} \\;"}, {"invocation": "Find files on the system created during the last 50 days", "cmd": "find / -ctime -50"}, {"invocation": "search for the file \"file_name\" in the folder /path", "cmd": "find /path -name file_name"}, {"invocation": "Delete all files and directories", "cmd": "find -delete"}, {"invocation": "display all the files in the current folder excluding those ending with \".disabled\" in sorted order", "cmd": "find /target/ | grep -v '\\.disabled$' | sort"}, {"invocation": "Unzip and untar \"openssl-fips-2.0.1.tar.gz\"", "cmd": "gunzip -c openssl-fips-2.0.1.tar.gz | tar xf \u00ad-"}, {"invocation": "Removes all files but $1 newest ones from current folder.", "cmd": "ls -tp | grep -v '/' | tail -n +\"$1\" | xargs -I {} rm -- {}"}, {"invocation": "Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them", "cmd": "find /folder/path/* -mmin +120 -delete"}, {"invocation": "Replace \"foo\" with \"bar\" in all PHP files in the current directory tree", "cmd": "find . -name \"*.php\" -exec sed -i 's/foo/bar/g' {} \\;"}, {"invocation": "create directory saxon_docs", "cmd": "mkdir saxon_docs"}, {"invocation": "Create symbolic links in the current directory for all files excluding \"CONFIGFILE\" located under \"/your/project\" directory tree", "cmd": "find /your/project -type f ! -name 'CONFIGFILE' -exec ln -s \\{\\} ./ \\;"}, {"invocation": "Delete line 2 in numbered file \"file\" and renumber", "cmd": "grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '"}, {"invocation": "Delete all files in the /myDir directory tree that were last modified 7 days ago", "cmd": "find /myDir -mtime 7 -exec rm -rf {} \\;"}, {"invocation": "Finds recursively all folders in current folder which path not contains \"NameToExclude\" string and removes only ones without files and another folders within.", "cmd": "find . -type 'd' | grep -v \"NameToExclude\" | xargs rmdir"}, {"invocation": "Delete all files/directories older than 48 hours in /path/to/files* paths", "cmd": "find /path/to/files* -mtime +2 -delete"}, {"invocation": "Move all files matching case insensitive \".cpp\" in the current directory tree to \"./test/\"", "cmd": "find . -type f -iname '*.cpp' -exec mv -t ./test/ {} \\+"}, {"invocation": "Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the files from the current directory tree, keeping a backup copy of every touched file", "cmd": "find . -type f -print0 | xargs -0 sed -i.bak -e \"s/HOGE/MOGA/\""}, {"invocation": "Search the /path directory tree for regular files", "cmd": "find /path -type f"}, {"invocation": "Search the /usr/local/doc directory tree for .texi files", "cmd": "find /usr/local/doc -name '*.texi'"}, {"invocation": "display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word \"file\"", "cmd": "find . \\( -type d -name aa -prune \\) -o \\( -type f -name 'file*' -print \\)"}, {"invocation": "Find *.scm files recursively in the current directory", "cmd": "find . -name '*.scm'"}, {"invocation": "Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory", "cmd": "find /home/mine -iname \"*.png\" -execdir cp {} /home/mine/pngcoppies/copy{} \\;"}, {"invocation": "Print concatenated content of all files ending with '.foo' under the current folder", "cmd": "cat `find . -name '*.foo' -print`"}, {"invocation": "Find files under current directory that are newer than $date_time in regards of modification time", "cmd": "find . -type f -newermt \"$date_time\""}, {"invocation": "Find all regular files in the \"aaa\" directory", "cmd": "find aaa/ -maxdepth 1 -type f"}, {"invocation": "Find all *.txt file and replace old word to new word with sed command", "cmd": "find  . -type f -name \"*.txt\" -exec sed 's/TZ/MALAWI/g' {} \\;"}, {"invocation": "Search the current directory tree for files and directories whose names do not end in \"exe\" and \"dll\"", "cmd": "find . | grep -v '(dll|exe)$'"}, {"invocation": "Remove all .txt files from the /full/path/dir directory tree", "cmd": "find /full/path/dir -name '*.txt' -exec /bin/rm {} \\;"}, {"invocation": "Forward port 8000 bound on localhost to port 22 in 'clusternode' via 'user@bridge'", "cmd": "ssh -L localhost:8000:clusternode:22 user@bridge"}, {"invocation": "Find all executable files under current directory and show a few lines of output from the beginning", "cmd": "find . -perm /a=x | head"}, {"invocation": "Find any file that has \"disc\" somewhere in its name in the current directory and all of its sub-directories.", "cmd": "find . -name *disc*"}, {"invocation": "List regular files in current directory with read, write and execute permission for all users and also show the permissions", "cmd": "find . -type f  -perm 777 -exec ls -l {} \\;"}, {"invocation": "Searches the manual pages with descriptions in section 3, that name begins with lowercase letter.", "cmd": "apropos -s 3 . | grep ^[a-z]"}, {"invocation": "Print 'file' content, formatting output as 29-symbol wide column, regarding space symbol as a word separator", "cmd": "cat file | fold -s -w29"}, {"invocation": "Cut off three last symbols from string '1234567890  *'", "cmd": "echo '1234567890  *' | rev | cut -c 4- | rev"}, {"invocation": "Display all lines contiaining 'funcname' in system map file matching current kernel.", "cmd": "cat /boot/System.map-`uname -r` | grep funcname"}, {"invocation": "Print unique lines of sorted file \"b\" compared with sorted file \"a\"", "cmd": "comm -13 a b"}, {"invocation": "find all the \".c\" files in the folder /home/david which have been modified in the last 48 hours", "cmd": "find /home/david -mtime -2 -name '*.c'"}, {"invocation": "Copy \"some_file_name\" to \"destination_directory\" and change ownership to \"someuser:somegroup\"", "cmd": "echo 'some_file_name' | cpio -p --owner someuser:somegroup destination_directory"}, {"invocation": "Find all directories named build under the current directory", "cmd": "find . -type d -name build"}, {"invocation": "Copies defined file to the target folder without overwriting existing files.", "cmd": "cp -n"}, {"invocation": "find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension", "cmd": "find . -name \"*.dat\" -type f -cmin +60 | grep \"^./[^/]\\+dat\" | sed \"s/^.\\///\""}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \\+"}, {"invocation": "Connect to host \"$USER_AT_HOST\" in master mode in the background without executing any commands and set the ControlPath to \"$SSHSOCKET\"", "cmd": "ssh -M -f -N -o ControlPath=\"$SSHSOCKET\" \"$USER_AT_HOST\""}, {"invocation": "delete all the mp3 files in the home folder", "cmd": "find /home/ -exec grep -l \u201cmp3\u201d {} \\; | xargs rm"}, {"invocation": "Recursively finds strings like \"texthere\"  in all \"*.txt\" files of a current folder.", "cmd": "grep -r --include \"*.txt\" texthere ."}, {"invocation": "Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename \" \" \"_\" \"{}\" \";\""}, {"invocation": "display all regular/normal files in temp folder and display the filename along with file size", "cmd": "find tmp -type f -printf \"f %s %p\\n\""}, {"invocation": "Set permissions of all files under \"/opt/lampp/htdocs\" to 644", "cmd": "find /opt/lampp/htdocs -type f -exec chmod 644 {} \\;"}, {"invocation": "Find files and directories with group id 1003", "cmd": "find . -gid 1003"}, {"invocation": "find all files in the file system which have been accessed in the last 24 hours", "cmd": "find / -atime 0"}, {"invocation": "Find files/directories greater than 10MB in your home directory", "cmd": "find ~ -size +10M"}, {"invocation": "Remove empty directories from the current directory tree", "cmd": "find . -depth -empty -type d -delete"}, {"invocation": "Report only total size of file systems in terabytes.", "cmd": "df -m | awk '{ SUM += $2} END { print SUM/1024/1024\"TB\" }'"}, {"invocation": "Make directory \"saxon_docs\"", "cmd": "mkdir saxon_docs"}, {"invocation": "Print the newest *.txt file under current directory with timestamp and path", "cmd": "find . -name \"*.txt\" -printf \"%T@ %p\\n\" | sort | tail -1"}, {"invocation": "create the compressed tar archive images.tar.gz containing all jpg files found under /", "cmd": "find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}, {"invocation": "display all the regular/normal files in the entire file system", "cmd": "find / -type f -exec echo {} \\;"}, {"invocation": "Change permissions to 644 for *.html files under /usr/local", "cmd": "find /usr/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}, {"invocation": "Print the content of the file 'file' deleting the last four lines", "cmd": "nl -b a file | sort -k1,1nr | sed '1, 4 d' | sort -k1,1n | sed 's/^ *[0-9]*\\t//'"}, {"invocation": "Left justify number each non-blank line in \"log.txt\" as input to \"sed ...\"", "cmd": "nl -n ln log.txt | sed ..."}, {"invocation": "Remove all subdirectories of the current directory, except for \"bar\", \"foo\", \"a\", and \"b\"", "cmd": "find . -maxdepth 1 -type d \\( ! -name \"bar\" -a ! -name \"foo\" -a ! -name \"a\" -a ! -name \"b\" \\) -delete"}, {"invocation": "display long listing of all the symbolic links in the current folder", "cmd": "find . -type l -exec ls -l {} \\;"}, {"invocation": "Change permissions to 644 for all regular files under and below /path/to/someDirectory/", "cmd": "find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644"}, {"invocation": "Search for 'organic' in all files with '.html' extension under ~/html directory", "cmd": "find ~/html/ -name '*.html' -exec grep organic '{}' ';'"}, {"invocation": "Find all files named \"MyCProgam.c\" (ignoring the case) and calculate each file's md5sum.", "cmd": "find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}, {"invocation": "download content from \"http://example.com/textfile.txt\" and output to \"textfile.txt\"", "cmd": "curl http://example.com/textfile.txt -o textfile.txt"}, {"invocation": "Find all dir* files/directories under parent", "cmd": "find parent -name dir*"}, {"invocation": "find all the regular/normal files in the current folder which belong to the group \"flossblog\"", "cmd": "find . -group flossblog -type f"}, {"invocation": "Search the given $directory for files with permissions stored in $permissions", "cmd": "find \"$directory\" -perm \"$permissions\""}, {"invocation": "create a symbolic link with absolute path \"/cygdrive/c/Users/Mic/mypics\" to file \"/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/\"", "cmd": "ln -sf '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/' /cygdrive/c/Users/Mic/mypics"}, {"invocation": "Save the user name of the current user to variable \"x\"", "cmd": "x=$(whoami)"}, {"invocation": "Recursively change the owner of all files in \"/usr/local/lib/node_modules\" to the current user", "cmd": "sudo chown -R $USER /usr/local/lib/node_modules"}, {"invocation": "as root, find from / all files called \"file.txt\"", "cmd": "sudo find / -name file.txt"}, {"invocation": "Remove all files with names like \"vmware-*.log\" from the current directory tree", "cmd": "find . -name vmware-*.log -print0 | xargs -0 rm"}, {"invocation": "move files accessed more than one day ago to directory TMP", "cmd": "find . -atime +1 -type f -exec mv {} TMP \\; # mv files older then 1 day to dir TMP"}, {"invocation": "display all the empty files in current folder", "cmd": "find . -empty"}, {"invocation": "force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name", "cmd": "find . -name \"*.c\" -print0 | xargs -0 rm -rf"}, {"invocation": "Moves the file that named like file $1 from '/tmp' folder to the folder where $2 file is located.", "cmd": "mv \"/tmp/`basename $1`\" \"`dirname $2`\""}, {"invocation": "Write output of \"ls -lR /\" to standard output and append to \"output.file\"", "cmd": "ls -lR / | tee -a output.file"}, {"invocation": "Create tar archive \"foo.tar\" and copy all files from directory tree /tmp/a1 to it", "cmd": "find /tmp/a1 | xargs tar cvf foo.tar"}, {"invocation": "Remove all empty sub-directories under current directory", "cmd": "find . -depth  -type d  -empty -exec rmdir {} \\;"}, {"invocation": "Search directory tree $DIR for *.txt files", "cmd": "find $DIR -name \"*.txt\""}, {"invocation": "Print NS record for domain 'domain.' from 8.8.8.8 nameserver", "cmd": "dig @8.8.8.8 domain. ns"}, {"invocation": "Find all *.txt files under current directory that contains the regex 'pattern' and list them with their filenames and matches", "cmd": "find . -type f -name '*.txt' -exec egrep pattern {} /dev/null \\;"}, {"invocation": "find for a filename with multiple patterns in the current folder", "cmd": "find . -name \"photo*.jpg\""}, {"invocation": "Creates temporary folder in /tmp/ (by default) with 10-letter suffux.", "cmd": "mktemp -d -t"}, {"invocation": "List all functions defined in the shell", "cmd": "set | grep \" () $\" | cut -d' ' -f1"}, {"invocation": "Archive \"./dir\" to \"user@host:/path\" via ssh on port 2222 and display progress", "cmd": "rsync -rvz -e 'ssh -p 2222' --progress ./dir user@host:/path"}, {"invocation": "Count all directories in maximum 1 level down the current directory", "cmd": "find . -maxdepth 1 -type d -exec ls -dlrt {} \\; | wc --lines"}, {"invocation": "Recursively copy all (non-hidden) files and directories in current dir except \"foo\" to location specified by variable \"other\"", "cmd": "rsync --recursive --exclude 'foo' * \"$other\""}, {"invocation": "Set permission of \"file\" to read only for the owner", "cmd": "chmod 600 file"}, {"invocation": "Print the entire saved command history", "cmd": "history"}, {"invocation": "display the long listing of all files in /var/log which were modified 60 days or more ago.", "cmd": "find /var/log/ -mtime +60 -type f -exec ls -l {} \\;"}, {"invocation": "Find all .c, .h files in the current directory tree and search them for string \"expr\"", "cmd": "find . -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Sort a file 'file' preserving only unique lines and change the file in-place", "cmd": "sort -u -o file !#$"}, {"invocation": "List all *.txt files under current directory that contains the regex 'pattern'", "cmd": "find . -type f -name '*.txt' -exec egrep -l pattern {} \\;"}, {"invocation": "Add group write permission to all files and directories in the current directory including hidden files and excluding \"..\"", "cmd": "chmod g+w .[^.]* ..?*"}, {"invocation": "display list of all the hidden directories in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search -path '*/.*' -ls"}, {"invocation": "find all the files in the entire file system that have been modified exactly 7 days before which end with \"conf\"", "cmd": "find / -name \"*conf\" -mtime 7"}, {"invocation": "Print a count of files and directories in the current directory tree", "cmd": "tree | tail -1"}, {"invocation": "Make directories \"$@\" verbosely and replace \"mkdir: created directory \" with \"jar-jar: yea, weesa gotta \" in the output", "cmd": "mkdir -v \"$@\" | sed 's/mkdir: created directory /jar-jar: yea, weesa gotta /'"}, {"invocation": "List all .c and .h files in the current directory tree that contain \"thing\"", "cmd": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}, {"invocation": "display all the doc files in the current folder ( files ending with \".doc\" )", "cmd": "find . -name '*.doc'"}, {"invocation": "Check all .txt files whose names may contain spaces whether they contain \"needle\"", "cmd": "find . -type f -iname \"*.txt\" -print0 | xargs -0 grep \"needle\""}, {"invocation": "Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names", "cmd": "find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'"}, {"invocation": "Find all filenames ending with .c in the current directory tree", "cmd": "find -name \"*.c\""}, {"invocation": "display the count of all the files in the current folder", "cmd": "find . -print | wc -l"}, {"invocation": "Remove all files under current directory", "cmd": "find -exec rm '{}' +"}, {"invocation": "Search the home directory tree for files modified less than 7 days ago", "cmd": "find $HOME -mtime -7"}, {"invocation": "Search the current directory tree for symlinks pointing at other symlinks", "cmd": "find . -type l -xtype l"}, {"invocation": "Find symlinks in the current directory tree", "cmd": "find . -type l | xargs ls -ld"}, {"invocation": "Change permission to 755 for all directories under $d directory tree", "cmd": "find \"$d/\" -type d -print0 | xargs -0 chmod 755"}, {"invocation": "List all files without descending into subdirectories", "cmd": "find * -type f -print -o -type d -prune"}, {"invocation": "Display the differences between \"file1.cf\" and \"file2.cf\" side-by-side with a width of 150 characters", "cmd": "diff -y -W 150 file1.cf file2.cf"}, {"invocation": "Create a symbolic link in the current directory for each file under the directories matching \"../[12][0-9][0-9]\"", "cmd": "find ../[12][0-9][0-9][0-9] -type f -exec ln -s {} \\;"}, {"invocation": "Print each character of \"abcdefg\" on a line", "cmd": "echo \"abcdefg\" | fold -w1"}, {"invocation": "display all the files ending with \".foo\" excluding those that are in the directory \".snapshot\"", "cmd": "find . -name .snapshot -prune -o -name '*.foo' -print"}, {"invocation": "Find not-executable files under /home/www", "cmd": "find /home/www/ ! -executable"}, {"invocation": "Find files/directories that belong to user 'ian' under '/tmp' directory tree", "cmd": "find /tmp -user ian"}, {"invocation": "Replace the first occurrence of \"string1\" on each line with \"string2\" in all regular files in the current directory tree", "cmd": "find ./ -type f -exec sed -i 's/string1/string2/' {} \\;"}, {"invocation": "Gives longest '*.php' files with line count first, and excludes directories with \"libs\", \"tmp\", \"tests\" and  \"vendor\" in their paths.", "cmd": "find . -name '*.php' | xargs wc -l | sort -nr | egrep -v \"libs|tmp|tests|vendor\" | less"}, {"invocation": "find all the undo files in the current folder and display the toal lines, words, characters", "cmd": "find ./ -name *.undo | xargs wc"}, {"invocation": "Write \"foo\" to the real path of the current command's standard output", "cmd": "echo foo | readlink /proc/self/fd/0"}, {"invocation": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end", "cmd": "find /etc -maxdepth 1 -name \"*.conf\" | tail"}, {"invocation": "display all the files in the file system which do not belong to the user \"wnj\" and which are modified before the file \"ttt\"", "cmd": "find / \\! \\( -newer ttt -user wnj \\) -print"}, {"invocation": "find all the files in the current folder which have been modified after the file disk.log", "cmd": "find . -newer disk.log -print"}, {"invocation": "display all the empty files in the entire file system", "cmd": "find / -size 0 -print"}, {"invocation": "find all the files ending with \"clj\" in the current folder and search for a pattern", "cmd": "find . -name *.clj | xargs grep -r resources"}, {"invocation": "find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it", "cmd": "find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}, {"invocation": "List all regular files in the current directory tree", "cmd": "find . -type f -exec ls -l '{}' \\;"}, {"invocation": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles", "cmd": "find . -type f -execdir /usr/bin/grep -iH '#!/bin/ksh' {} \\; | tee /tmp/allfiles"}, {"invocation": "Find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission", "cmd": "find / -perm /711"}, {"invocation": "Prints long listing of directory $var sorted from oldest to newest, with appended indicators.", "cmd": "$ ls -Fltr $var"}, {"invocation": "Search /root/directory/to/search recursively for the files matching pattern 'filename.*'", "cmd": "find /root/directory/to/search -name 'filename.*'"}, {"invocation": "Find all btree*.c files under current directory", "cmd": "find . -type f -name 'btree*.c'"}, {"invocation": "check find version", "cmd": "find --version"}, {"invocation": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files", "cmd": "find ${x} -type f -exec chmod ug=rw,o= '{}' \\;"}, {"invocation": "find all the files in the folder /opt which have been modified between 20 to 50 days ago", "cmd": "find /opt -mtime +30 -mtime -50"}, {"invocation": "Execute the 'echo' command on each file from the current directory tree individually", "cmd": "find . -exec echo {} \\;"}, {"invocation": "Search for case-insensitive \"string\" in \"log.tar.gz\"", "cmd": "zcat log.tar.gz | grep -a -i \"string\""}, {"invocation": "find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.", "cmd": "find $1 \\( -name \"*$2\" -o -name \".*$2\" \\) -print"}, {"invocation": "list broken symbolic links under \"somedir\"", "cmd": "find \"somedir\" -type l -print0 | xargs -r0 file | grep \"broken symbolic\" | sed -e 's/^\\|: *broken symbolic.*$/\"/g'"}, {"invocation": "Search for the regex \"\\$wp_version =\" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names", "cmd": "find /var/www/vhosts/*/httpdocs -type f -iwholename \"*/wp-includes/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}, {"invocation": "Find files on the system bigger than 50MB but smaller than 100MB", "cmd": "find / -type f -size +50M -size -100M"}, {"invocation": "Find all files under $1 not matching the regex '.*/\\..*' and execute hashmove on each of them with the file path as its argument", "cmd": "find $1 -type f -not -regex '.*/\\..*' -exec $0 hashmove '{}' \\;"}, {"invocation": "List all files and directories residing in the current directory and below", "cmd": "find -print0 | xargs -0 ls"}, {"invocation": "search for all the regular files in the current folder and display the contents", "cmd": "find . -type f -exec cat {} \\;"}, {"invocation": "Search the /path directory tree for files that do not have a valid user or group", "cmd": "find /path -nouser -or -nogroup"}, {"invocation": "Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only", "cmd": "find . -name '*.pl' | xargs grep -L '^use strict'"}, {"invocation": "Find all directories named essbase under /fss/fin", "cmd": "find /fss/fin -type d -name  \"essbase\" -print"}, {"invocation": "Run an awk program on every TXT file found in the current directory tree", "cmd": "find . -name \"*.txt\" -print -exec awk '{if($9!=\"\"&&n<11){print;n++}}' {} \\;"}, {"invocation": "Force create a symbolic link without dereferencing named \"$SYMLINK_PATH\" to \"$lastModified\"", "cmd": "ln -nsf $lastModified $SYMLINK_PATH"}, {"invocation": "Search for files greater than 20MB under your home directory (/home/user)", "cmd": "find ~ -size +20M"}, {"invocation": "kill all jobs", "cmd": "kill $(jobs -p)"}, {"invocation": "Finds all files in a '/path' folder and prints long listing for them.", "cmd": "find /path -type f -exec ls -l \\{\\} \\;"}, {"invocation": "Edit current user's cron job list with editor specified by EDITOR environment variable, or default /usr/bin/editor if EDITOR is not set.", "cmd": "crontab -e"}, {"invocation": "Find all aliencoders.[0-9]+ files under /home/jassi/ directory", "cmd": "find /home/jassi/ -type f -name \"aliencoders.[0-9]+\""}, {"invocation": "Show files in /home owned by group `test'", "cmd": "find /home -group test"}, {"invocation": "Search the /tmp tree for files between 10kb and 20kb", "cmd": "find /tmp -size +10k -size -20k"}, {"invocation": "Print lines 10000 to 10010 from input \"seq 1 100000\"", "cmd": "seq 1 100000 | tail -n +10000 | head -n 10"}, {"invocation": "display all the files in the current folder", "cmd": "find ./"}, {"invocation": "Suffix all files and folders in the current directory with \"_SUF\"", "cmd": "ls | xargs -I {} mv {} {}_SUF"}, {"invocation": "Find files in the current directory tree whose permissions are 775", "cmd": "find .  -perm 775"}, {"invocation": "List all files matching regular expression '*foo*' in a human-readable form", "cmd": "find . -name '*foo*' -exec ls -lah {} \\;"}, {"invocation": "Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.", "cmd": "find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html"}, {"invocation": "find a.out, *.o and core files under the current directory and sub-directories and delete them.", "cmd": "find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}, {"invocation": "Find all files/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others", "cmd": "find / -perm /222"}, {"invocation": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones", "cmd": "find ~/code -type d -name '[^\\.]*' | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "Finds all files having text \"texthere\" recursively in a current folder, and precedes found string with string number in file and file name.", "cmd": "find -type f -exec grep -Hn \"texthere\" {} +"}, {"invocation": "Report file system containing path to the current working directory inodes usage.", "cmd": "df -i $PWD"}, {"invocation": "Gets IP address of ${NET_IF} network interface.", "cmd": "NET_IP=`ifconfig ${NET_IF} | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'`"}, {"invocation": "Print string \"123\" once with '1' replaced by 'a' and second time replaced by 'b'", "cmd": "echo 123 | tee >(tr 1 a)  | tr 1 b"}, {"invocation": "Find all files/directories with permission $permissions under $directory directory tree", "cmd": "find \"$directory\" -perm \"$permissions\""}, {"invocation": "Views text content of compressed FileB file in TarFile archive.", "cmd": "tar -xOf TarFile FileB.gz | zless"}, {"invocation": "Rename all files in current directory whose name starts with 'F0000', trimming a zero from any sequence of four zeroes in the name.", "cmd": "rename s/0000/000/ F0000*"}, {"invocation": "Format time string @$TIMESTAMP according to default time format", "cmd": "date -d @$TIMESTAMP"}, {"invocation": "Returns exit code 1.", "cmd": "a=$(false)"}, {"invocation": "Get the total sizes of all files under current directory", "cmd": "find path -type f -printf '%s\\n' | awk '{sum += $1} END {print sum}'"}, {"invocation": "Remove all regular files found in and below /path", "cmd": "find /path -type f -print | xargs rm"}, {"invocation": "Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names", "cmd": "find -type d -a ! -name '.?*' -o ! -prune"}, {"invocation": "Count all the lines of all php files in current directory recursively", "cmd": "find -name '*.php' | xargs cat | wc -l"}, {"invocation": "Search the current directory tree for .log files containing the string \"The SAS System\" on the first line", "cmd": "find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{/The SAS System/q0};q1' {} \\; -print"}, {"invocation": "Count the number of unique 3 to 6 character file extensions are in the current directory tree", "cmd": "find . -type f -name \"*.*\" | grep -o -E \"\\.[^\\.]+$\" | grep -o -E \"[[:alpha:]]{3,6}\" | awk '{print tolower($0)}' | sort | uniq -c | sort -rn"}, {"invocation": "Find file1 in the level 1 directories and above", "cmd": "find -maxdepth 2 -name file1"}, {"invocation": "Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.", "cmd": "find /myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \\;"}, {"invocation": "Find recursively all empty directories in the current directory", "cmd": "find . -type d -empty"}, {"invocation": "Prints line count of each file within current directory.", "cmd": "find . -type f -print0 | xargs -0L1 wc -l"}, {"invocation": "Set permissions to 500 for directories under the current directory", "cmd": "find . -type d -exec chmod 500 {} \\;"}, {"invocation": "find all the text files present in the current directory excluding the search in certain paths.", "cmd": "find . -type f -name \"*.txt\" ! -path \"./Movies/*\" ! -path \"./Downloads/*\" ! -path \"./Music/*\""}, {"invocation": "Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755", "cmd": "find . -name \"*.php\" -exec chmod 755 {} \\; -exec /bin/echo {} \\; | wc -l"}, {"invocation": "Get the number of \"use\" statements in all PHP files, ordered", "cmd": "find . -type f -name \"*.php\" -exec grep --with-filename -c \"^use \" {} \\; | sort -t \":\" -k 2 -n -r"}, {"invocation": "Recursively finds all files with whole word \"pattern\" in a current folder, and precedes found string with its number in file.", "cmd": "grep -rnw `pwd` -e \"pattern\""}, {"invocation": "Find all files/directories under '/home/exampleuser/' directory tree whose names end with 'conf' and were modified exactly 3 days ago", "cmd": "find /home/exampleuser/ -name \"*conf\" -mtime 3"}, {"invocation": "Calculate the total size of all *.jpg files in the directory tree", "cmd": "find . -name \"*jpg\" -exec du -k {} \\; | awk '{ total += $1 } END { print total/1024 \" Mb total\" }'"}, {"invocation": "Create a symbolic link named \"${DESTINATION}${file}\" to \"${TARGET}${file}\"", "cmd": "ln -s  \"${TARGET}${file}\"  \"${DESTINATION}${file}\""}, {"invocation": "Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter", "cmd": "find /path/to/dir -type f -mtime -7 -print0"}, {"invocation": "Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches", "cmd": "find . -print0 -name '*.coffee'|xargs -0 grep -m1 -ri 're'"}, {"invocation": "Find all files under current directory that are read less than 1 minute ago", "cmd": "find . -amin -1"}, {"invocation": "Find all files whose names end with \"~\" in the /home/peter directory tree, following symlinks, and delete them", "cmd": "find -L /home/peter -name *~ -exec rm '{}' \\;"}, {"invocation": "Find files/directories that does not have write permssion for group", "cmd": "find /path ! -perm /g+w"}, {"invocation": "Find all *.mp4 files under /working", "cmd": "find /working -type f -name '*.mp4'"}, {"invocation": "Lists file descriptors of a current process.", "cmd": "ls -l /proc/self/fd/"}, {"invocation": "Removes all files from current folder but 5 newest ones.", "cmd": "ls -tr | head -n -5 | xargs rm"}, {"invocation": "Display the last space-separated field of each line in file.txt", "cmd": "rev file.txt | cut -d ' ' -f1 | rev"}, {"invocation": "split $SOURCE_FILE\" into pieces per 100 lines", "cmd": "split -l 100 \"$SOURCE_FILE\""}, {"invocation": "Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them", "cmd": "find xargstest/ -name 'file??' | sort"}, {"invocation": "Merge data in file1 and file2 where second field is common in both files", "cmd": "join -j2 <(sort -k2 file1) <(sort -k2 file2)"}, {"invocation": "Move all *.php~ (case insensitive) files under current directory to /mydir", "cmd": "find . -iname \"*.php~\" -exec mv \"{}\" /mydir +;"}, {"invocation": "find all the directories in the current folder", "cmd": "find -type d"}, {"invocation": "File 'mydatafile' has a number on each line, display the sum of these numbers rounded to lowest integer.", "cmd": "awk '{s+=$1} END {printf \"%.0f\", s}' mydatafile"}, {"invocation": "Make a directory in the current working directory with a random 32 alphanumeric character name", "cmd": "mkdir $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"}, {"invocation": "Search for regular file foo ignoring case", "cmd": "find . -iname foo -type f"}, {"invocation": "find in $HOME files ending in \"txt\" and do nothing with them, or files ending in \"html\" and list them null separated.", "cmd": "find $HOME -name \\*txt -o -name \\*html -print0"}, {"invocation": "Copies all files like \"*FooBar*\" under the current directory to the '~/foo/bar' directory.", "cmd": "find . -name '*FoooBar*' | sed 's/.*/\"&\"/' | xargs cp ~/foo/bar"}, {"invocation": "display all the files in the current folder which do not belong to any group", "cmd": "find . -nogroup"}, {"invocation": "Print amount of space available on the file system containing path to the current working directory in megabytes.", "cmd": "df . -B MB | tail -1 | awk {'print $4'} | cut -d'%' -f1"}, {"invocation": "find all the empty in the current folder do not search in sub directories", "cmd": "find . -maxdepth 1 -type d -empty"}, {"invocation": "Find all *.rb files/directories under current directory", "cmd": "find . -name \\*.rb"}, {"invocation": "search for the word text in all the python files in the current folder", "cmd": "find . -iname '*py' -exec grep \"text\" {} \\;"}, {"invocation": "Use awk command '{ ... }' on compressed files \"input1.vcf.gz\" and \"input2.vcf.gz\"", "cmd": "awk '{ ... }' <(gzip -dc input1.vcf.gz) <(gzip -dc input2.vcf.gz)"}, {"invocation": "Find a.out and object files in the current directory tree", "cmd": "find . ( -name a.out -o -name *.o ) -print"}, {"invocation": "Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian", "cmd": "find lib etc debian -name \"*.sh\" -type f | xargs chmod +x"}, {"invocation": "search all undo files(ending with .undo) in the current folder and calculate the total size of them", "cmd": "find -name '*.undo' -exec wc -c {} + | tail -n 1 | cut -d' ' -f 1"}, {"invocation": "Find all the files/directories under user's home directory that do not belong to the user $USER", "cmd": "find ~ ! -user ${USER}"}, {"invocation": "Print \"echo ping -c 2\" on each string in file 'ips'", "cmd": "cat ips | xargs echo ping -c 2"}, {"invocation": "Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\\n'", "cmd": "find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%TY %p\\n'"}, {"invocation": "Recursively removes all folders named '.svn' in a current folder.", "cmd": "find . -type d -name .svn -print0|xargs -0 rm -rf"}, {"invocation": "display all the files in the current folder which contains form feed (^L) and does not contain NULL", "cmd": "find . | xargs grep -PL \"\\x00\" | xargs grep -Pl \"\\x0c\""}, {"invocation": "Write output of \"ls -hal /root/\" to standard output and to \"/root/test.out\"", "cmd": "ls -hal /root/ | sudo tee /root/test.out"}, {"invocation": "copy all the regular files in the current directory to the temporary diectory.", "cmd": "find . -type f -exec cp {} /tmp +"}, {"invocation": "Search for all files in the current directory recursively whose names begin with \"Linkin Park\"", "cmd": "find . -name \"Linkin Park*\""}, {"invocation": "display the count of all the directories present in a folder", "cmd": "find /mount/point -type d | wc -l"}, {"invocation": "Remount \"/\" without writing in \"/etc/mtab\"", "cmd": "mount -n -o remount /"}, {"invocation": "find file which name like 'foo.*' in current directory.", "cmd": "find . -name \"foo.*\""}, {"invocation": "Read the first line of output from \"du -s $i\" into variable \"k\" in ksh", "cmd": "du -s $i | read k"}, {"invocation": "Send 4 ping packets of size 2 to \"www.google.com\" on a Solaris machine", "cmd": "ping -s www.google.com 2 4"}, {"invocation": "Search the file system for regular files whose pathnames are shorter than 25 characters", "cmd": "find / -type f|awk -F'/' '{print $NF}'| awk 'length($0) < 25'"}, {"invocation": "find case-insentive example.com file, and whole dose not contain beta", "cmd": "find -iname example.com | grep -v beta"}, {"invocation": "List the files in the /etc directory tree containing text '128.200.34.'", "cmd": "find /etc -type f -print | xargs grep -il '128\\.200\\.34\\.'"}, {"invocation": "Find all files in the current directory tree that match pattern 'a(b*'", "cmd": "find . -name 'a(b*' -print"}, {"invocation": "find all the files which have been accessed after modifying the file /etc/hosts", "cmd": "find -anewer /etc/hosts"}, {"invocation": "replaces the last occurrence of 'a' with 'c'", "cmd": "tac infile.txt | sed \"s/a/c/; ta ; b ; :a ; N ; ba\" | tac"}, {"invocation": "Display non-hidden files in the current directory with the given output format", "cmd": "find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}, {"invocation": "archive all files in a current directory modified in the last 30 days", "cmd": "tar czvf mytarfile.tgz `find . -mtime -30`"}, {"invocation": "Removes empty folder, and hides error message if one is not empty.", "cmd": "rmdir --ignore-fail-on-non-empty $newBaseDir/Data/NewDataCopy"}, {"invocation": "Recursively removes all files like '4' under folder './a' and removes folders with such files if they become empty.", "cmd": "find a -type f -name '4' -delete -printf \"%h\\0\" | xargs -0 -r rmdir"}, {"invocation": "Find all test.txt files/directories under current directory", "cmd": "find . -name test.txt"}, {"invocation": "Find all empty files in the current directory and delete them", "cmd": "find . -maxdepth 1 -type f -empty -delete"}, {"invocation": "search for the file test.txt in the folders /home and /opt", "cmd": "find /home /opt -name test.txt"}, {"invocation": "Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files", "cmd": "find  /storage/sdcard0/tencent/MicroMsg/ -type f  -iname '*.jpg' -print0"}, {"invocation": "List all files under the current working directory tree", "cmd": "find $(pwd)/ -type f"}, {"invocation": "Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter", "cmd": "find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\)"}, {"invocation": "find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir", "cmd": "find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir"}, {"invocation": "Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .", "cmd": "find . -name \"*.txt\" -exec echo {} \\; -exec grep banana {} \\;"}, {"invocation": "Find all *Company* files/directories under /root/of/where/files/are directory", "cmd": "find /root/of/where/files/are -name *Company*"}, {"invocation": "find httpd.conf file in /etc directory", "cmd": "find /etc -name \"httpd.conf\""}, {"invocation": "search for a word in all the php files in the current folder and display the matching lines.", "cmd": "find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'"}, {"invocation": "display all files in the current folder which do not belong to the user john", "cmd": "find . ! -user john"}, {"invocation": "display all directories in current folder and do not search in sub directories", "cmd": "find . -maxdepth 1 -mindepth 1 -type d"}, {"invocation": "Search for broken symlinks", "cmd": "find -L -type l"}, {"invocation": "List the z* links in the /usr/bin directory and the file to which it points to", "cmd": "find /usr/bin  -type l  -name \"z*\" -exec ls  -l {} \\;"}, {"invocation": "Find all files/directories under /myfiles following symlinks if needed", "cmd": "find -L /myfiles"}, {"invocation": "Find all the files in entire file system  which are modified 50 days back.", "cmd": "find / -mtime 50"}, {"invocation": "Request IP address of 'myip.opendns.com' from name server 'resolver1.opendns.com'", "cmd": "dig +short myip.opendns.com @resolver1.opendns.com"}, {"invocation": "Recursively set all permissions under \"/opt/lampp/htdocs\" to 755", "cmd": "sudo chmod 755 -R /opt/lampp/htdocs"}, {"invocation": "Recursively copy \"/path/to/data/myappdata/*.txt\" to \"user@host:/remote/path/to/data/myappdata/\"", "cmd": "rsync -rvv /path/to/data/myappdata/*.txt user@host:/remote/path/to/data/myappdata/"}, {"invocation": "Find all files under /somefolder matching the extended case insensitive regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths", "cmd": "find -E /somefolder -type f -iregex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$'"}, {"invocation": "Find CSS files omitting results containing \"CVS\"", "cmd": "find . \\! -path \"*CVS*\" -type f -name \"*.css\""}, {"invocation": "Search for all zero-byte files and move them to the /tmp/zerobyte folder", "cmd": "find test -type f  -size 0 -exec mv {} /tmp/zerobyte \\;"}, {"invocation": "Go to /the/project/root//data, which in most filesystems/operating systems will be the same as cd /the/project/root/data", "cmd": "cd /the/project/root//data"}, {"invocation": "Change the owner of \"destination_dir\" to \"user\"", "cmd": "chown user destination_dir"}, {"invocation": "find all the files (under root file system /) that were updated in the last 24 hours", "cmd": "find / -mtime -1"}, {"invocation": "find all the files from root folder which have nogroup or noname and dispaly their details.", "cmd": "find / \\( -nogroup -o -noname \\) -ls"}, {"invocation": "search files  in the file system excluding those in the paths \"10_Recommended\" and \"/export/repo\"", "cmd": "find / -name whatever -not -path \"/10_Recommended*\" -not -path \"/export/repo/*\""}, {"invocation": "finds all files modified within a certain time frame recursively", "cmd": "find . -type f -newermt \"2013-06-01\" \\! -newermt \"2013-06-20\""}, {"invocation": "search for the files \"foo.txt\" in the current folder and rename it to foo.xml", "cmd": "find -name foo.txt -execdir rename 's/\\.txt$/.xml/' '{}' ';'"}, {"invocation": "Archive all files beginning with .env or .bash in current directory to user's home directory on host \"app1\", preserving timestamps and skipping files that are newer on \"app1\"", "cmd": "rsync -vaut ~/.env* ~/.bash* app1:"}, {"invocation": "Search for the system host name in \"/etc/hosts\" and print the IP address in the first awk field", "cmd": "more /etc/hosts | grep `hostname` | awk '{print $1}'"}, {"invocation": "Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor", "cmd": "find . | grep -E -v '\\.png$|\\.class$' | vim -"}, {"invocation": "search for the file \"process.txt\" in the entire file system (case insensitive search)", "cmd": "find / -iname 'process.txt' -print"}, {"invocation": "Print \"hello\" followed by the current user name", "cmd": "echo hello `whoami`"}, {"invocation": "Go to directory specified by variable \"somedir\", but replacing leading ~ character by actual home directory.", "cmd": "cd $(echo $somedir | sed \"s#^~#$HOME#\")"}, {"invocation": "find all files  that names are 'apt' and display detailed list", "cmd": "find  / -name \"apt\" -ls"}, {"invocation": "display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to \"peter\",\"peter\"", "cmd": "find /home/peter -nouser -exec ls -l {} \\; -ok chown peter.peter {} \\;"}, {"invocation": "display all the directories in the folder /var and do not go beyond 2 levels during search", "cmd": "find /var -maxdepth 2 -type d;"}, {"invocation": "Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory", "cmd": "md5sum *.java | grep 0bee89b07a248e27c83fc3d5951213c1"}, {"invocation": "Print short TXT record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8", "cmd": "dig TXT +short o-o.myaddr.l.google.com @8.8.8.8"}, {"invocation": "Search for files/directories which have read and write permission for their owner, and group and only read permission for others", "cmd": "find . -perm 664"}, {"invocation": "Search the current directory recursively for regular files last changed 2 days ago", "cmd": "find . type -f -ctime 2"}, {"invocation": "Search the home directory tree for video files", "cmd": "find ~ -type f -regex '.*\\.\\(mkv\\|mp4\\|wmv\\|flv\\|webm\\|mov\\)'"}, {"invocation": "Filter /path/to/logfile for any lines containing the specified date, paging interactively through the output.", "cmd": "grep 'Nov 12 2012' /path/to/logfile | less"}, {"invocation": "Create a symbolic link named \"~/bin/subl\" to \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\"", "cmd": "ln -s \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\" ~/bin/subl"}, {"invocation": "Display total apparent size of a file", "cmd": "du -sb"}, {"invocation": "Prints a random number between 1 and 10", "cmd": "grep -m1 -ao '[0-9]' /dev/urandom | sed s/0/10/ | head -n1"}, {"invocation": "change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755", "cmd": "sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755"}, {"invocation": "Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size", "cmd": "find /home -name \"*.txt\" -size +100k"}, {"invocation": "Saves date of the first Sunday in month $mo of year $yo in the 'do' variable.", "cmd": "do=$(cal -m $mo $yo|awk 'NR>2&&!/^  /{print$1;exit}')"}, {"invocation": "Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff1 -mtime +90 -delete &"}, {"invocation": "Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today", "cmd": "find -maxdepth 1 -type f -daystart -mtime -1"}, {"invocation": "Find files/directories in entire file system that have been modified in the last minute", "cmd": "find / -mmin -1"}, {"invocation": "Rename all \"thumbs\" directories to \"thumb\" in the current directory tree", "cmd": "find . -type d | awk -F'/' '{print NF, $0}' | sort -k 1 -n -r | awk '{print $2}' | sed 'p;s/\\(.*\\)thumbs/\\1thumb/' | xargs -n2 mv"}, {"invocation": "change the ownership of all regular/normal files in the current directory", "cmd": "find . -type f -exec chown username {} \\;"}, {"invocation": "Remove all files that are not newer than Jul 01 by modification time", "cmd": "find /file/path ! -newermt \"Jul 01\" -type f -print0 | xargs -0 rm"}, {"invocation": "Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch", "cmd": "source  <(date +\"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'\")"}, {"invocation": "Find SGID files", "cmd": "find / -perm +2000"}, {"invocation": "Change the group of \"myfile\" to \"friends\"", "cmd": "chown :friends myfile"}, {"invocation": "Display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty.", "cmd": "diff -ENwbur repos1/ repos2/"}, {"invocation": "display all regular/normal files which have been modified in the last 30 minutes", "cmd": "find -type f -and -mmin -30"}, {"invocation": "Find all files and directories that do not match the pattern given as the $controlchars variable", "cmd": "find . ! -name \"$controlchars\""}, {"invocation": "Download \"Louis Theroux's LA Stories\" using rsync over ssh", "cmd": "rsync -ave ssh '\"Louis Theroux\"''\"'\"'\"'\"''\"s LA Stories\"'"}, {"invocation": "Find files/directories named 'somename.txt' under current directory tree", "cmd": "find ./ -name \"somename.txt\""}, {"invocation": "find files which modification time is  one day ago", "cmd": "find . -mtime 1"}, {"invocation": "Search the /tmp/ directory recursively for regular files", "cmd": "find /tmp -type f"}, {"invocation": "Locate files that reside in the /u/bill directory tree and were last accessed between 2 and 6 minutes ago", "cmd": "find /u/bill -amin +2 -amin -6"}, {"invocation": "Add \"prefix_\" to every non-blank line in \"a.txt\"", "cmd": "nl -s \"prefix_\" a.txt | cut -c7-"}, {"invocation": "Find all files/directories named 'photo?.jpg' under current directory tree", "cmd": "find . -name photo\\?.jpg"}, {"invocation": "Print only unique lines of 'file_name' file", "cmd": "cat -n file_name | sort -uk2 | sort -nk1 | cut -f2-"}, {"invocation": "Archive all files specified on standard input under \"/path/to/files\" to \"/path\" on host \"targethost\" as user \"user\" with escalated privileges", "cmd": "rsync -av --files-from=- --rsync-path=\"sudo rsync\" /path/to/files user@targethost:/path"}, {"invocation": "For each item in array \"alpha\", display the basename, that is the part following the last slash, or the whole item if no slash is present.", "cmd": "basename -a \"${alpha[@]}\""}, {"invocation": "force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days", "cmd": "find /tmp -size 0 -atime +10 -exec rm -f {} \\;"}, {"invocation": "Find all your text files", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "Read a line from standard input with prompt \"Are you sure? [Y/n]\" and save response in variable \"response\"", "cmd": "read -r -p \"Are you sure? [Y/n]\" response"}, {"invocation": "Recursively list contents of the current directory in a tree-like format", "cmd": "tree"}, {"invocation": "Find all catalina* files/directories under /path/to/search/in", "cmd": "find /path/to/search/in -name 'catalina*'"}, {"invocation": "Gets state of shell option 'dotglob' and saves it in 'rest_cmd' variable.", "cmd": "rest_cmd=$(shopt -p dotglob)"}, {"invocation": "find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt", "cmd": "find /    \\( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\\n' \\) , ( -size +100M -fprintf /root/big.txt '%-10s %p\\n' \\)"}, {"invocation": "Search the path given as the $absolute_dir_path variable for regular files", "cmd": "find \"$absolute_dir_path\" -type f -print0"}, {"invocation": "Find files named 'core' in or below the directory /tmp and delete them", "cmd": "find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f"}, {"invocation": "Print the given file name's extensions.", "cmd": "echo \"$NAME\" | cut -d'.' -f2-"}, {"invocation": "Remove filetype suffix (last dot and following characters if any) from filename", "cmd": "echo $filename | rev | cut -f 2- -d '.' | rev"}, {"invocation": "find all the core files in the entire file system and  delete them", "cmd": "find / -name core -exec rm -f {} \\;"}, {"invocation": "Find all directories named 'octave' under current directory tree", "cmd": "find . -name \"octave\" -type d"}, {"invocation": "Creates temporary file with appended suffix '.cmd' and saves path to it in 'LGT_TEMP_FILE' variable.", "cmd": "LGT_TEMP_FILE=\"$(mktemp --suffix .cmd)\""}, {"invocation": "Delete all files/directories with '.old' extension under current directory tree", "cmd": "find . -name \u201c*.old\u201d -delete"}, {"invocation": "Find every file under the directory /home owned by the user joe.", "cmd": "find /home -user joe"}, {"invocation": "Search for 'example' in all regular files under current directory tree and also print the filenames", "cmd": "find . -type f -exec grep \"example\" '{}' \\; -print"}, {"invocation": "Archive current directory to \"/some/path\" on localhost, using ssh to authentify as user \"me\", only update files that are newer in the source directory.", "cmd": "rsync -auve \"ssh -p 2222\" . me@localhost:/some/path"}, {"invocation": "delete all the text files in the current folder", "cmd": "find . -type f -name \"*.txt\" -delete"}, {"invocation": "prints first line of $bigfile", "cmd": "head -n1 $bigfile"}, {"invocation": "Print the files in the current directory as a list of semicolon separated values", "cmd": "ls -m | tr -d ' ' | tr ',' ';'"}, {"invocation": "Find all the files whose name is tecmint.txt in the current directory", "cmd": "find . -name tecmint.txt"}, {"invocation": "Rename all files in current directory with names starting with \"fgh\" so they start with \"jkl\" instead", "cmd": "rename 's/^fgh/jkl/' fgh*"}, {"invocation": "Count the number of differing lines in \"file1\" and \"file2\"", "cmd": "diff file1 file2 | grep ^[\\>\\<] | wc -l"}, {"invocation": "find all the files in the current folder that have been accessed in today", "cmd": "find -atime 0"}, {"invocation": "search for the word LOG in all the files in the folder ~/jsmith", "cmd": "find ~jsmith -exec grep LOG '{}' /dev/null \\; -print"}, {"invocation": "Search for 'example' in all regular files from the current directory tree", "cmd": "find -type f -print0 | xargs -r0 grep -F 'example'"}, {"invocation": "Find all *.swp files/directories under current directory", "cmd": "find . -name \"*.swp\""}, {"invocation": "Make directory and parents as needed for the directory name of file \"$f\"", "cmd": "mkdir -p -- \"$(dirname -- \"$f\")\""}, {"invocation": "modify the permissions of all the folders in a directory", "cmd": "find /path/to/dir -type d -exec chmod 755 {} \\;"}, {"invocation": "search for the file \".user.log\" in a folder", "cmd": "find /nfs/office -name .user.log -print"}, {"invocation": "Extract, sort and print only group names from /etc/group.", "cmd": "cut -d: -f1 /etc/group | sort"}, {"invocation": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\""}, {"invocation": "List the names of all files under current directory", "cmd": "find . -type f -exec basename {} \\;"}, {"invocation": "search for all the files in the current directory which have been modified in the last 24 hours.", "cmd": "find . -mtime -1"}, {"invocation": "Find all empty directories under /tmp and below", "cmd": "find /tmp -type d -empty"}, {"invocation": "Find all files in your home directory and below that are smaller than 100M.", "cmd": "find ~ -size -100M"}, {"invocation": "Remove sequence like '\\xEF\\xBB\\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.", "cmd": "find . -type f -exec sed '1s/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;"}, {"invocation": "find all files in the file system having the name \"filename\"", "cmd": "find / -iname \"filename\""}, {"invocation": "Search the current directory tree for regular files that can be read by noone", "cmd": "find -type f ! -perm -444"}, {"invocation": "Find the total size of *.jpg files within the directory tree ./photos/john_doe", "cmd": "find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$"}, {"invocation": "Find the 5 largest regular files in the Downloads folder of tecmint's home directory.", "cmd": "find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5"}, {"invocation": "ssh into \"ssh.myhost.net\" as user \"myusername\" and run command \"mkdir -p $2\"", "cmd": "ssh myusername@ssh.myhost.net \"mkdir -p $2\""}, {"invocation": "find all files that names are filename and open in nano text editor", "cmd": "find / -name filename -exec  nano '{}' \\;"}, {"invocation": "Find all *.tex regular files under current directory", "cmd": "find . -type f -name \"*.tex\""}, {"invocation": "Find all files/directories under current directory with the null character as the delimiter", "cmd": "find -print0"}, {"invocation": "Perform a default cPanel configuration", "cmd": "find /home/*/public_html/ -type f -iwholename \u201c*/wp-includes/version.php\u201d -exec grep -H \u201c\\$wp_version =\u201d {} \\;"}, {"invocation": "Find all files/directories named 'fprintf.c' under '/usr/src' directory tree", "cmd": "find /usr/src -name fprintf.c"}, {"invocation": "show all the files in the current folder excluding those from the directories whose name starts with \"git\"", "cmd": "find . -type d -name '.git*' -prune -o -type f -print"}, {"invocation": "find files in home directory that names are game", "cmd": "find ~ -name game"}, {"invocation": "Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts.", "cmd": "find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf"}, {"invocation": "Search directory lpi104-6 for files with inode number 1988884", "cmd": "find lpi104-6 -inum 1988884"}, {"invocation": "Find all files that were not accessed in the past 100 days", "cmd": "find /home -atime +100"}, {"invocation": "Prints information about user $euids currently on machine and its processes, without printing header.", "cmd": "w -h $euids"}, {"invocation": "List directories in the current working directory and remove the trailing \"/\"", "cmd": "ls -1p | grep '/$' | sed 's/\\/$//'"}, {"invocation": "List the files in \"archive.tar.gz\"", "cmd": "gzip -l archive.tar.gz"}, {"invocation": "prevents curl from returning error (23) Failed writing body when grepping for foo", "cmd": "curl \"url\" | tac | tac | grep -qs foo"}, {"invocation": "search for the file \"foo.txt\" in the entire file system", "cmd": "find / -name foo.txt"}, {"invocation": "Display the content of YourFile.txt, waiting for user input at each page.", "cmd": "cat YourFile.txt | more"}, {"invocation": "List environment variables and their values, escaping all semicolons with a backslash.", "cmd": "env | sed 's/;/\\\\;/g'"}, {"invocation": "Extract data from HTML table in \"mycode.html\"", "cmd": "paste -d: <(grep '<th>' mycode.html | sed -e 's,</*th>,,g') <(grep '<td>' mycode.html | sed -e 's,</*td>,,g')"}, {"invocation": "find all gzip files in a folder", "cmd": "find /home/foo -name \"*.gz\""}, {"invocation": "List content of 'myfile' in a subshell and returns output to parent shell", "cmd": "$(cat myfile)"}, {"invocation": "Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 50", "cmd": "ping 8.8.8.8 | awk -F\"[= ]\" '{if($10>50) {cmd=\"date\"; cmd | getline dt; close(cmd) ; print $10, dt}}'"}, {"invocation": "Retrieve column number from column name \"Target\" in file \"table\"", "cmd": "head -1 table | tr -s ' ' '\\n' | nl -nln |  grep \"Target\" | cut -f1"}, {"invocation": "Print the first line and lines with \"f\" as the third \",\" separated field in \"input\" and format the result as a \",\" delimited table", "cmd": "awk -F, '{ if (NR == 1)print}{if($3 == \"f\")print}' input | column -t -s,"}, {"invocation": "Search the current directory tree for *cache, *xml, and *html files", "cmd": "find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}, {"invocation": "Request MX record of 'example.com' domain, and filter out all comment strings", "cmd": "dig mx example.com | grep -v '^;' | grep example.com"}, {"invocation": "Change the owner of all files in \"/empty_dir/\" to \"root\" using at most 10 files at a time", "cmd": "ls /empty_dir/ | xargs -L10 chown root"}, {"invocation": "Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files", "cmd": "find . \\( ! -regex '.*/\\..*' \\) -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'"}, {"invocation": "Remove directories in /media/1Tb/videos modified more than 7 days ago", "cmd": "find /media/1Tb/videos -maxdepth 1 -type d -mtime +7 -exec rm -rf {} \\;"}, {"invocation": "search for the file chapter1 in the folder /work", "cmd": "find /work -name chapter1"}, {"invocation": "search for a word in all the files in the current directory", "cmd": "find . -type f -exec grep 'needle' {} \\;"}, {"invocation": "Lists all files in a '/home/dreftymac/' folder and subfolders without recursion.", "cmd": "ls /home/dreftymac/*"}, {"invocation": "Print the first 24 alphanumeric characters from \"/dev/urandom\", determining C locale for all categories", "cmd": "cat /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | fold -w 24 | head -n 1"}, {"invocation": "Saves real path of the folder containing the current script", "cmd": "DIR=$(dirname \"$(readlink -f \\\"$0\\\")\")"}, {"invocation": "Search the current directory tree for files named \"accepted_hits.bam\"", "cmd": "find `pwd` -name \"accepted_hits.bam\""}, {"invocation": "Search the current directory tree for files AAA and BBB", "cmd": "find . \\( -name AAA -o -name BBB \\) -print"}, {"invocation": "Print the kernel configuration options found in \"/proc/config.gz\"", "cmd": "cat /proc/config.gz | gunzip"}, {"invocation": "Sort the lines of the file 'temp.txt' and change it in-place", "cmd": "sort temp.txt -otemp.txt"}, {"invocation": "find in the file system for the directories with the name \"httpdocs\"", "cmd": "find / -type d -name 'httpdocs'"}, {"invocation": "Changes group ownership of 'logdir' to 'loggroup'.", "cmd": "chgrp loggroup logdir"}, {"invocation": "Find all files named \"test2\" in the current directory", "cmd": "find -name test2 -prune"}, {"invocation": "Find all broken symlinks under /path/to/search directory", "cmd": "find /path/to/search -type l -xtype l"}, {"invocation": "Print each line in \"file1.txt\" that is not found in \"file2.txt\"", "cmd": "sort file1.txt file2.txt file2.txt | uniq -u"}, {"invocation": "ssh into \"hostname\" as user \"buck\"", "cmd": "ssh -l buck hostname"}, {"invocation": "calculate the total size of jpg files in current folder", "cmd": "find . -name \"*jpg\" -exec du -k {} \\; | awk '{ total += $1 } END { print total/1024 \" Mb total\" }'"}, {"invocation": "List all files under the current working directory with name \".htaccess\"", "cmd": "find `pwd` -name .htaccess"}, {"invocation": "Print unique lines in sorted \"file1\" compared to sorted file \"file2\"", "cmd": "comm -23 file1 file2"}, {"invocation": "Archive all files (not directories) in \"folder1\" to \"copy_of_folder1\" specifying to include files info.txt and data.zip", "cmd": "rsync -a -f\"+ info.txt\" -f\"+ data.zip\" -f'-! */' folder1/ copy_of_folder1/"}, {"invocation": "Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time", "cmd": "find . -regex \".*\\.\\(flv\\|mp4\\)\" -type f -printf '%T+ %p\\n' | sort | head -n 500"}, {"invocation": "Find files that were modified in less than 1 minute ago", "cmd": "find / -mmin -1"}, {"invocation": "Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names", "cmd": "find /basedir/ \\( -iname '*company*' -and \\( -iname '*.txt' -or -iname '*.html' \\) \\) -print0"}, {"invocation": "Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable.", "cmd": "dir=\"$(mktemp aws-sync-XXXXX)\""}, {"invocation": "List all files in the /var directory tree whose size is greater than 10 megabytes", "cmd": "find /var/ -size +10M -exec ls -lh {} \\;"}, {"invocation": "Search the directories given as arguments to the Bash script for files whose name is not \"ss\"", "cmd": "find $@ -not -name ss"}, {"invocation": "Find all files/directories with user id 120 under current directory tree", "cmd": "find . -uid 120 -print"}, {"invocation": "Find all php files in a directory", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "List all files under the current working directory last modified less than a day ago", "cmd": "find `pwd` -mtime -1 -type f -print"}, {"invocation": "Find and remove all .core files", "cmd": "find / -name \"*.core\" -print -exec rm {} \\;"}, {"invocation": "Return the depth of the current directory tree", "cmd": "find . -type d -printf '%d:%p\\n' | sort -n | tail -1"}, {"invocation": "Enable history and history expansion within a script", "cmd": "set -o history -o histexpand"}, {"invocation": "Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree", "cmd": "find /home/user/Series/ -iname '*sample*' -exec rm {} \\;"}, {"invocation": "Find all files under /path and calculate their md5sum", "cmd": "find /path -type f -print0 | xargs -0 md5sum"}, {"invocation": "Copies file 'file.txt' to each top-level directory in the current directory.", "cmd": "ls -d */ | xargs -iA cp file.txt A"}, {"invocation": "Show manual page of find", "cmd": "man find"}, {"invocation": "Prints a process tree for each process of user 'username'.", "cmd": "ps -aux | grep ^username | awk '{print $2}' | xargs pstree"}, {"invocation": "Display a character dump of \"oldfile\"", "cmd": "od -c oldfile"}, {"invocation": "Remove the first 13 characters of each \".txt\" filename in the \"/tmp\" directory tree and number the output", "cmd": "find /tmp -type f \\( -name '*.txt' \\) |cut -c14- | nl"}, {"invocation": "Search the files from the current directory tree for text \"documentclass\"", "cmd": "find . -type f -print0 | xargs -0 grep -H 'documentclass'"}, {"invocation": "create an archive excluding files matching patterns listed in /path/to/exclude.txt", "cmd": "tar -czf backup.tar.gz -X /path/to/exclude.txt /path/to/backup"}, {"invocation": "Go into the first directory whose name contains 1670", "cmd": "cd `find . -maxdepth 1 -type d | grep 1670`"}, {"invocation": "find the file \"httpd.log\" in the folder /home/web-server/ ( case insensitive search )", "cmd": "find /home/web-server/ -type f -iname httpd.log"}, {"invocation": "Print file name without extension assuming there is only one dot in the file name.", "cmd": "echo \"$FILE\" | cut -d'.' -f1"}, {"invocation": "find all empty files in /tmp directory .", "cmd": "find /tmp -type f -empty"}, {"invocation": "Search the current directory for files whose names start with \"messages.\" ignoring SVN, GIT, and .anythingElseIwannaIgnore files", "cmd": "find -name 'messages.*' -exec grep -Iw uint {} + | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'"}, {"invocation": "remove all the core files from /usr folder which have not been accessed in the last 7*24 hours", "cmd": "find /usr -name core -atime +7 -exec rm \"{}\" \\;"}, {"invocation": "Find files associated with an inode", "cmd": "find . -inum 968746 -print"}, {"invocation": "Find all files under current directory and search for 'something' in those files", "cmd": "find . -print | xargs grep something"}, {"invocation": "find all regular/normal files in current folder which have been modified in the last 60 minutes", "cmd": "find -type f -mtime -60"}, {"invocation": "Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set", "cmd": "find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \\;"}, {"invocation": "Just find directories and skip file names", "cmd": "find  / -type d -name \"apt\" -ls"}, {"invocation": "List all files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 -ls"}, {"invocation": "Modify and rewrite 'file' replacing the first instance of \"foo\" on each line with \"bar\"", "cmd": "sed -i 's/foo/bar/' file"}, {"invocation": "Replace \"version.old\" with \"version.new\" in the symbolic link target of \"SomeLibrary\"", "cmd": "ln -f -s -T `readlink SomeLibrary | sed 's/version.old/version.new/'` SomeLibrary"}, {"invocation": "delete all text files in the home folder after user confirmation", "cmd": "find $HOME/. -name \"*.txt\" -ok rm {} \\;"}, {"invocation": "Enable history expansion in a script", "cmd": "set -H"}, {"invocation": "find all the files in the current folder which have a set uid set", "cmd": "find . -perm -4000 -print"}, {"invocation": "print all lines after the last match of 'string match'", "cmd": "tac infile | sed '/string match/,$d' | tac"}, {"invocation": "Find all files and directories with permissions 664", "cmd": "find . -perm 664"}, {"invocation": "Make directory \"temp\"", "cmd": "mkdir temp"}, {"invocation": "Sends current job to the background.", "cmd": "bg %"}, {"invocation": "Compute the mean average of the word count of *.txt files in the home directory", "cmd": "find ~/ -name '*.txt' -print0 | xargs -0 wc -w | awk 'END { print $1/(NR-1) }'"}, {"invocation": "Execute \"ls -l\" every 2 seconds", "cmd": "watch 'ls -l'"}, {"invocation": "Delete all *.zip files under current directory that are older than 2 days", "cmd": "find . -name \"*.zip\" -mtime +2 -print0 | xargs -0 -I {} rm {}"}, {"invocation": "Creates temporary file in default folder and saves path to it in 'source' variable.", "cmd": "source=`mktemp`"}, {"invocation": "Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory", "cmd": "find /home -iname tecmint.txt"}, {"invocation": "Find all files that are set group ID to 10", "cmd": "find . -group 10 -perm -2000 -print"}, {"invocation": "find all the directories in the entire file system whose size is greater than 50KB", "cmd": "find / -type d -size +50k"}, {"invocation": "Find all files matching \"abc*\" in the current directory and append \"\\tok\"", "cmd": "find . -name 'abc*' | sed 's/$/\\tok/' | column -t"}, {"invocation": "Find all .mp3 files starting from the current directory and delete them", "cmd": "find . -type f -iname *.mp3 -delete"}, {"invocation": "Recursively change ownership of \"/usr/lib/node_modules/\" to the current user", "cmd": "sudo chown -R $(whoami) /usr/lib/node_modules/"}, {"invocation": "Takes first text field from file 'file.txt' as a domain name and gets short A record for this one.", "cmd": "awk '{print $1}' file.txt | xargs dig +short"}, {"invocation": "Search for \"largecalculation\" in all processes owned by the current user", "cmd": "ps -u `whoami` | grep largecalculation"}, {"invocation": "List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.", "cmd": "find . -perm /111 -type f | sed 's#^./##' | sort | diff -u .gitignore -"}, {"invocation": "Remove all tmp/*.mp3 files", "cmd": "find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs rm"}, {"invocation": "Save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable 'totalLineCnt'", "cmd": "totalLineCnt=$(cat \"$file\" | grep \"$filter\" | grep -v \"$nfilter\" | wc -l | grep -o '^[0-9]\\+');"}, {"invocation": "get the git user access", "cmd": "su git"}, {"invocation": "Find files that were modified more than 7 days ago but less than 14 days ago and archive them", "cmd": "find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}, {"invocation": "Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2'", "cmd": "find . -name '*.what_to_find' | grep -v exludeddir1 | grep -v excludeddir2"}, {"invocation": "Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\\n'", "cmd": "read -rsp $'Press escape to continue...\\n' -d $'\\e'"}, {"invocation": "Print the first 5 decompressed lines of compressed file \"$line\"", "cmd": "zcat \"$line\" | head -n5"}, {"invocation": "Compare the contents of gzip-ompressed files \"file1\" and \"file2\"", "cmd": "diff <(zcat file1.gz) <(zcat file2.gz)"}, {"invocation": "Change directory to the user's home directory", "cmd": "cd"}, {"invocation": "Wrap each line in \"longline\" to a maximum of 30 characters breaking at spaces", "cmd": "fold -w30 -s longline"}, {"invocation": "list the regular files in your home directory that were modified yesterday", "cmd": "find ~/ -daystart -type f -mtime 1"}, {"invocation": "Find all directories under current directory and set read & execute permission for group and other for these files", "cmd": "find . -type d -print0 | xargs -0 chmod go+rx"}, {"invocation": "Connect to host 'hostname' as user 'username' by forcing host key confirmation", "cmd": "ssh -o UserKnownHostsFile=/dev/null username@hostname"}, {"invocation": "Display differences between directories dir1 and dir2, treating absent files as empty.", "cmd": "diff -Naur dir1/ dir2/"}, {"invocation": "Prints path to folder that contains file \"/path/to/vm.vmwarevm/vm.vmx\".", "cmd": "echo /path/to/vm.vmwarevm/vm.vmx | xargs dirname"}, {"invocation": "Find all files whose names end with \"macs\" in and below the current directory", "cmd": "find -name '*macs'"}, {"invocation": "For each line of colon-separated information in files 'empsal' and 'empname' whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal.", "cmd": "join -j 1 -t : -o 2.1,2.2,2.4,1.3 <(sort empsal) <(sort empname)"}, {"invocation": "Delete files containing whitespaces", "cmd": "find . -name \"* *\" -exec rm -f {} \\;"}, {"invocation": "Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary.", "cmd": "ps -A -o pid | xargs -I pid readlink \"/proc/pid/exe\" | xargs -I file dirname \"file\""}, {"invocation": "find all the perl files in /var/www ( case insensitive search )", "cmd": "find /var/www/ -type f -iname \"*.pl\" -print"}, {"invocation": "Remove the last file extension from \"filename.gz\"", "cmd": "echo \"filename.gz\"     | sed 's/^/./' | rev | cut -d. -f2- | rev | cut -c2-"}, {"invocation": "display all the text files in the home folder", "cmd": "find /home -name \"*.txt\""}, {"invocation": "Search the current directory tree for regular files last changed more than 14 days ago", "cmd": "find -type f -ctime +14"}, {"invocation": "Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media", "cmd": "find / -path /media -prune -o -size +200000 -print"}, {"invocation": "find all the files in the current folder that have been modified in the last 24*3 hours", "cmd": "find ./ -mtime -3"}, {"invocation": "Display a long listing of the files/directories with human readable sizes (100M, 10G etc..) under '/var' directory tree which are bigger than 10MB", "cmd": "find /var/ -size +10M -exec ls -lh {} \\;"}, {"invocation": "recursively change owner and group of the directory and all files into it to user root and group root", "cmd": "chown -R root:root /var/lib/jenkins"}, {"invocation": "Kill all processes matching the string \"myProcessName\"", "cmd": "ps -ef | grep myProcessName | grep -v grep | awk '{print $2}' | xargs kill -9"}, {"invocation": "search for the word \"mysql\" in all the files in the current containing the word \"notes\" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names", "cmd": "find . -iname \"*notes*\" -print0 | xargs -I{} -0 grep -i mysql \"{}\""}, {"invocation": "Open a ssh connection to user@host with X11 forwarding to run GUI programs", "cmd": "ssh user@host -X"}, {"invocation": "List jobs and their process ids and print them by replacing newline with '^'", "cmd": "joblist=$(jobs -l | tr \"\\n\" \"^\")"}, {"invocation": "Find file `Chapter1' on the system", "cmd": "find / -name Chapter1 -type f -print"}, {"invocation": "Archive \"/source/backup\" to \"/destination\" with compression during transfer", "cmd": "rsync -ravz /source/backup /destination"}, {"invocation": "find all the files that are modified exactly one day ago", "cmd": "find -daystart -mtime 1"}, {"invocation": "Search the .cs files of the current directory tree for string \"content pattern\"", "cmd": "find ./ -type f -iname \"*.cs\" -print0 | xargs -0 grep \"content pattern\""}, {"invocation": "Find 10 most recently changed files in the current directory tree", "cmd": "find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}, {"invocation": "Find all files/directories under current directory and print their paths", "cmd": "find . -exec echo {} \\;"}, {"invocation": "Find all `doc.txt' files in the current directory tree printing \"found\" for each of them", "cmd": "find ./ -name doc.txt -printf \"found\\n\""}, {"invocation": "Print a count of each unique line from standard input", "cmd": "sort | uniq -c"}, {"invocation": "Saves invoked command 'check_script_call=$(history |tail -1|grep myscript.sh )' in variable 'check_script_call', preceeding by its number in history.", "cmd": "check_script_call=$(history |tail -1|grep myscript.sh )"}, {"invocation": "Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields.", "cmd": "paste <(uniq -f3 file | cut -f1,2) <(tac file | uniq -f3 | tac | cut -f3-)"}, {"invocation": "Print $d if $d is empty", "cmd": "find \"$d\" -prune -empty"}, {"invocation": "List files under current directory according to their size in descending order", "cmd": "find . -type f -exec ls -s {} \\; | sort -n -r"}, {"invocation": "Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\\.ExampleClass' from those files", "cmd": "find /starting/directory -type f -name '*.css' | xargs -ti grep '\\.ExampleClass' {}"}, {"invocation": "Find all files/directories in entire file system that are exactly 50 bytes", "cmd": "find / -size 50c"}, {"invocation": "List all files in the current directory tree that were last modified yesterday or later", "cmd": "find -newermt yesterday -ls"}, {"invocation": "Prints current directory name", "cmd": "pwd | grep -o \"\\w*-*$\""}, {"invocation": "display list of all the regular/normal files in the home folder which are bigger than 512 kb", "cmd": "find /home/ -type f -size +512k -exec ls -lh {} \\;"}, {"invocation": "Connect to port 1234 of specified IP address or hostname as ssh user \"user\", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /myNewPathOnCurrentLocalMachine - this directory must already exist on local host.", "cmd": "scp -P 1234 user@[ip address or host name]:/var/www/mywebsite/dumps/* /var/www/myNewPathOnCurrentLocalMachine"}, {"invocation": "List files in the current directory", "cmd": "find . \\( -path './*' -prune \\)"}, {"invocation": "Print which files differ between dir1 and dir2, treating absent files as empty", "cmd": "diff --brief -Nr dir1/ dir2/"}, {"invocation": "count lines of C or C++ or Obj-C or Java code under the current directory", "cmd": "find . \\( -name \"*.c\" -or -name \"*.cpp\" -or -name \"*.h\" -or -name \"*.m\" -or -name '*.java' \\) -print0 | xargs -0 wc"}, {"invocation": "Find files containing `blah' in their names modified less than 2 days ago, case insensitive", "cmd": "find . -iname '*blah*' -mtime -2"}, {"invocation": "Display all files in the current directory tree that match \"*foo\"", "cmd": "tree -P \"*foo\""}, {"invocation": "Find files with the extension .conf in the /etc directory", "cmd": "find /etc -name '*.conf'"}, {"invocation": "Change onwer to \"root\" and group to \"wheel\" of \"com.xxxx.adbind.plist\"", "cmd": "sudo chown root:wheel com.xxxx.adbind.plist"}, {"invocation": "Find all .mp3 files with more then 10MB and delete them from root directory .", "cmd": "find /  -type f -name *.mp3 -size +10M -exec rm  {} \\;"}, {"invocation": "Move all files and directories matching \"*.boo\" in the current directory to \"subdir\"", "cmd": "mv `ls *.boo` subdir"}, {"invocation": "Find all directories in the /path/to/base/dir tree", "cmd": "find /path/to/base/dir -type d"}, {"invocation": "Check whether \"/full/path\" is a mount point with no output and using the exit code", "cmd": "df /full/path | grep -q /full/path"}, {"invocation": "Find all empty directories in minimum 2 levels down the root directory", "cmd": "find root -mindepth 2 -type d -empty"}, {"invocation": "display long list of all the perl files in the current folder", "cmd": "find . -name \"*.pl\" -ls"}, {"invocation": "display all regular/normal files in the current folder which are not accessed in the last 7*24 hours", "cmd": "find . -type f -atime +7"}, {"invocation": "List all environment variables containing 'USER' in their name or value that would result in running a command with 'sudo env'.", "cmd": "sudo env |grep USER"}, {"invocation": "list all javascipts file expect files under proc folder", "cmd": "find . -type d -name proc -prune -o -name '*.js'"}, {"invocation": "Split \"file.tar.gz\" into files of size 1024 MB", "cmd": "split -b 1024m file.tar.gz"}, {"invocation": "Recursively copy everything in /source/path whose name doesn't begin with a period, to /destination/path, without overwriting existing files, and outputting a line for each file copied or skipped.", "cmd": "cp -Rvn /source/path/* /destination/path/"}, {"invocation": "Move all regular files under current directory to ./newdir", "cmd": "find ./ -type f -print | xargs    -i mv -f {} ./newdir"}, {"invocation": "find md5sum of an empty string", "cmd": "echo -n '' | md5"}, {"invocation": "search for all text files in the folder /home", "cmd": "find /home -name *.txt"}, {"invocation": "Find all files whose name or type description includes \"text\", display only paths to files.", "cmd": "find . -exec file {} \\; | grep text | cut -d: -f1"}, {"invocation": "display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt", "cmd": "find \\( -size +100M -fprintf /root/big.txt %-10s %p\\n \\)"}, {"invocation": "Serach for all the files starting with grep in man pages", "cmd": "find /usr/share/man/ -regex grep.*"}, {"invocation": "find all of the executable files on your computer", "cmd": "find / -executable"}, {"invocation": "Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.", "cmd": "find /your/target/path/ -type f -exec rename 's/special/regular/' '{}' \\;"}, {"invocation": "List the regular files of the current directory tree that contain string \"texthere\"", "cmd": "find -type f -exec grep -l \"texthere\" {} +"}, {"invocation": "Take the last slash-separated section of variable \"FILE\" and copy it to variable \"NAME\".", "cmd": "NAME=`basename \"$FILE\"`"}, {"invocation": "List path/filename of all PHP files under current directory whose file type description or path/name contains \"CRLF\"", "cmd": "find . -type f -iname \"*.php\"  -exec file \"{}\" + | grep CRLF"}, {"invocation": "Change permissions to 777 for all directories in the current directory tree", "cmd": "find . -type d -exec chmod 777 {} \\;"}, {"invocation": "Find all php files that belong to user 'takuya' and have been modified in the last 1 day", "cmd": "find -user takuya -name '*.php' -daystart -mtime -1"}, {"invocation": "Find files in the current directory tree that are named \"some_pattern\" and move them to directory \"target_location\"", "cmd": "find . -name some_pattern -print0 | xargs -0 -i mv {} target_location"}, {"invocation": "Lists all subdirectories in a current folder, removing trailing slash.", "cmd": "ls -d */ | cut -f1 -d'/'"}, {"invocation": "Format tab delimited file \"list-of-entries.txt\" as a table", "cmd": "column -t -s $'\\t' list-of-entries.txt"}, {"invocation": "recursively change owner and group of the directory  /opt/antoniod/ to user and group antoniod", "cmd": "chown -R antoniod:antoniod /opt/antoniod/"}, {"invocation": "Find root's files in the current directory tree", "cmd": "find ./ -user root"}, {"invocation": "List environment variables whose name contains \"X\"", "cmd": "set | cut -d= -f1 | grep X"}, {"invocation": "Remove all vmware-*.log files under current directory", "cmd": "find . -name vmware-*.log -delete"}, {"invocation": "Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \""}, {"invocation": "Search for hidden files non-recursively", "cmd": "find . -name '.?*' -prune"}, {"invocation": "Dump \"/dev/ttySomething\" in both hex and text", "cmd": "od -t x1 -t a /dev/ttySomething"}, {"invocation": "Find all directories under /path/to/base/dir and change their permission to 755", "cmd": "chmod 755 $(find /path/to/base/dir -type d)"}, {"invocation": "Counts lines in each of *.php files in current folder with subfolders and prints total count as well.", "cmd": "find . -name '*.php' | xargs wc -l | sort -r"}, {"invocation": "Find all files/directories not with the name 'query_to_avoid' under current directory", "cmd": "find -not -name \"query_to_avoid\""}, {"invocation": "Sets 'globstar' shell option.", "cmd": "shopt -s globstar"}, {"invocation": "display all the files in the file system which belong to the group lighttpd", "cmd": "find / -group lighttpd -print"}, {"invocation": "delete all the php files in the folder /var/www", "cmd": "find /var/www/*.php -type f -exec rm {} \\;"}, {"invocation": "Find files whose name starts with \"MyFile\", ignoring the case", "cmd": "find . -iname 'MyFile*'"}, {"invocation": "Removes first and last parts of path $path and saves the result in 'finalName' variable.", "cmd": "finalName=$(basename -- \"$(dirname -- \"$path\")\")"}, {"invocation": "Find and remove the file with inode number 782263 in the current directory tree", "cmd": "find . -inum 782263 -exec rm -i {} \\;"}, {"invocation": "Print the list of files in the current directory tree excluding those whose paths contain \"exclude3\" or \"exclude4\"", "cmd": "find . | egrep -v \"(exclude3|exclude4)\" | sort"}, {"invocation": "Find all files/directories under $dir directory", "cmd": "find \"$dir\""}, {"invocation": "Convert all characters in \"$a\" to upper case and save to variable \"b\"", "cmd": "b=`echo \"$a\" | sed 's/./\\U&/g'`"}, {"invocation": "Find all filenames ending with .c in the /usr directory tree", "cmd": "find /usr -name \"*.c\""}, {"invocation": "Delete all files in the /myDir directory tree that were last modfied more than 7 days ago", "cmd": "find /myDir -mindepth 1 -mtime +7 -delete"}, {"invocation": "Print your/dir if it's empty", "cmd": "find \"your/dir\" -prune -empty"}, {"invocation": "Replace all occurrence of \"toreplace\" with \"replaced\" in all files under /home/www", "cmd": "find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's/toreplace/replaced/g'"}, {"invocation": "change the permissions of all the regular/normal files to 664 in the current folder", "cmd": "find . -type f -exec chmod 664 {} \\;"}, {"invocation": "Find files matching the pattern \"./sr*sc\" in their paths under current directory", "cmd": "find . -path \"./sr*sc\""}, {"invocation": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file", "cmd": "find . -name \\*.sql -not -samefile $oldest_to_keep -not -newer $oldest_to_keep"}, {"invocation": "List all the file links", "cmd": "find . -type l"}, {"invocation": "search for the pattern \"tgt/etc/file1\" in the files tgt/etc/file2, tgt/etc/file3", "cmd": "find . -type f -name \\* | grep tgt/etc/file1 tgt/etc/file2 tgt/etc/file3"}, {"invocation": "Recursively removes $TMPDIR folder, prompting user on each deletion.", "cmd": "rm -r $TMPDIR"}, {"invocation": "delete all the empty files in the current directory only if they are ok and the user has the permission to delete them", "cmd": "find . -empty -ok rm {}\\;"}, {"invocation": "Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions", "cmd": "find / -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -q \"{}\" \\; -print0 | xargs -0 sed '/./d'"}, {"invocation": "Make directory \"TestProject\"", "cmd": "mkdir TestProject"}, {"invocation": "Search all files called \"abc\" that reside in the current directory tree for string \"xyz\"", "cmd": "find . -name abc | xargs grep xyz"}, {"invocation": "Find files/directories that is under group 'root' or have no group and set their group to 'apache'", "cmd": "find /var/www -group root -o -nogroup -print0 | xargs -0 chown :apache"}, {"invocation": "Print the current directory tree", "cmd": "tree"}, {"invocation": "use regex with find command", "cmd": "find . * | grep -P \"[a-f0-9\\-]{36}\\.jpg\""}, {"invocation": "Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps", "cmd": "find /path-to-directory -type f -mtime +60 -printf \"%T@ %p\\n\" | sort"}, {"invocation": "Find all files that have been modified in the last seven days.", "cmd": "find . -mtime -7 -type f"}, {"invocation": "Disables shell option 'dotglob'.", "cmd": "shopt -u dotglob"}, {"invocation": "Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.", "cmd": "find -type d -name a -exec rmdir {} \\;"}, {"invocation": "Make 3 directories named \"$HOME/Labs/lab4a/folder\" followed by a 3 width zero padded number from 1 to 3", "cmd": "mkdir $(seq -f \"$HOME/Labs/lab4a/folder%03g\" 3)"}, {"invocation": "find all png files in the current folder", "cmd": "find . -type f -name '*.png'"}, {"invocation": "Calculate md5 sum of the md5 sum of all the sorted files under $path", "cmd": "find \"$path\" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"}, {"invocation": "find all files in the current directory that are less than 1 byte size", "cmd": "find . -size -1c -print"}, {"invocation": "Archive \"src\" to \"dst\" updating files existing in \"dst\"", "cmd": "rsync -a -v src dst"}, {"invocation": "Change permissions of \".bash_logout\", \".bashrc\", and \".profile\" to 444", "cmd": "chmod 444 .bash_logout .bashrc .profile"}, {"invocation": "Delete all files that were modified more than 60 days ago under '/path-to-directory' tree", "cmd": "find /path-to-directory -mtime +60 -exec rm -f {} \\;"}, {"invocation": "Find the first file/directory under $DIR which matches the $TMP_DIR in its path", "cmd": "/usr/bin/find $DIR -maxdepth 1 -ipath $TMP_DIR -print -quit"}, {"invocation": "Look for SGID files and directories", "cmd": "find / -perm /g=s"}, {"invocation": "display the base name(name without extension) of all the \".NEF\" files in the current folder", "cmd": "find . -name \"*.NEF\" -exec basename \\{\\} .NEF \\;"}, {"invocation": "Archive \"/home/user1\" to \"wobgalaxy02:/home/user1\" excluding hidden files", "cmd": "rsync -av /home/user1 wobgalaxy02:/home/user1"}, {"invocation": "Find files smaller than 40 blocks skipping directories on other file systems", "cmd": "find . -size -40 -xdev -print"}, {"invocation": "Search /usr/local for subdirectories whose names end with a number 0-9", "cmd": "find /usr/local -maxdepth 1 -type d -name '*[0-9]'"}, {"invocation": "Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/", "cmd": "scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path"}, {"invocation": "Find regular files named \"regex\" under and below /dir/to/search/", "cmd": "find /dir/to/search/ -type f -name 'regex' -print"}, {"invocation": "Change ownership of \"/data/db\" to the current user", "cmd": "sudo chown `whoami` /data/db"}, {"invocation": "Saves listing of a current folder in 'var' variable.", "cmd": "var=$(ls -l)"}, {"invocation": "Search for files in your home directory which have been modified in the last twenty-four hours", "cmd": "find $HOME  -mtime 0"}, {"invocation": "Find all directories starting from / that have permissions 777", "cmd": "find / -type d -perm 0777"}, {"invocation": "Find the current directory and all its subdirectories.", "cmd": "find . -type d"}, {"invocation": "Search directory tree `foo' for files named `Headers'", "cmd": "find foo -name Headers"}, {"invocation": "Find the most recently changed files in a subtree", "cmd": "find . -type f -printf '%TY-%Tm-%Td %TT   %p\\n' | sort"}, {"invocation": "Find all *.csv files under /foo/bar and move them to some_dir", "cmd": "find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir"}, {"invocation": "Find all regular files with 400 permission under '/data' directory tree", "cmd": "find /data -type f -perm 400 -print"}, {"invocation": "find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files", "cmd": "find . -type f -iname '*.CR2' -print0 | xargs -0 -n 1 -P 8 -I {}"}, {"invocation": "Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning", "cmd": "find / -mtime +50 -mtime -100 | head"}, {"invocation": "list in long format all files from / whose filename ends in \"jbd\", not descending into directories that are not readable while searching.", "cmd": "find / \\! -readable -prune -o -name '*.jbd' -ls"}, {"invocation": "search for *.log files starting from /", "cmd": "find / -name \"*.log\""}, {"invocation": "Find all *.c files on the system and feed the output to wc", "cmd": "find / -name *.c | wc"}, {"invocation": "find all readme files in a folder", "cmd": "find /usr/share/doc -name README"}, {"invocation": "Recursively finds all \"*.pas\" and \"*.dfm\" files and prints strings with \"searchtext\" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.", "cmd": "find . -type f \\( -name \"*.pas\" -o -name \"*.dfm\" \\) -print0 | xargs --null grep --with-filename --line-number --no-messages --color --ignore-case \"searchtext\""}, {"invocation": "Show the current UTC date in '%Y-%m-%dT%k:%M:%S%z' format", "cmd": "date -u '+%Y-%m-%dT%k:%M:%S%z'"}, {"invocation": "Search the system for regular files whose names are \"filename\" ignoring the case", "cmd": "find / -type f -iname \"filename\""}, {"invocation": "Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file \"txtlist.txt\"", "cmd": "ls *.txt | tee /dev/tty txtlist.txt"}, {"invocation": "Search the current directory tree for files whose names do not end in \".exe\" and \".dll\"", "cmd": "find . -not -name \"*.exe\" -not -name \"*.dll\" -type f"}, {"invocation": "find for lighttpd in /var", "cmd": "find /var -name lighttpd"}, {"invocation": "Output two lines of \"-tcp\"", "cmd": "yes -- \"-tcp\" | head -n 2"}, {"invocation": "Find files/directories that have no owner or group under /path", "cmd": "find /path -nouser -or -nogroup"}, {"invocation": "Print the file content of command \"[whatever]\"", "cmd": "cat `find [whatever]`"}, {"invocation": "find Texinfo source files in /usr/local/doc", "cmd": "find foo -path foo/bar -print"}, {"invocation": "Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command", "cmd": "echo \"$queue\" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*"}, {"invocation": "List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago", "cmd": "find /data1/Marcel -size +1024  \\( -mtime +365 -o -atime +365 \\) -ls -exec file {} \\;"}, {"invocation": "Read the first 10 characters from standard input in an interactive shell into variable \"VAR\"", "cmd": "read -n10 -e VAR"}, {"invocation": "Search the current directory tree for files containing \"string\" in their path names", "cmd": "find | egrep string"}, {"invocation": "Search the files from the current directory tree for \"foo\"", "cmd": "find . -exec grep -l foo {} +"}, {"invocation": "Prints what year it was 222 days ago", "cmd": "date --date=\"222 days ago\" +\"%Y\""}, {"invocation": "Search for files/directories which are writable by either their owner or their group", "cmd": "find . -perm /u+w,g+w"}, {"invocation": "Look for files that have SUID or SGID set", "cmd": "find / -perm +6000 -type f"}, {"invocation": "Search all *.c files from the current directory tree for \"hogehoge\"", "cmd": "find . -name \\*.c -print0 | xargs -0 grep hogehoge /dev/null"}, {"invocation": "Finds recursion-related options of a 'grep' utility.", "cmd": "grep --help |grep recursive"}, {"invocation": "Returns exit code 1.", "cmd": "false"}, {"invocation": "display all the files in the current folder which have the word \"bills\" in their name", "cmd": "find . -name '*bills*' -print"}, {"invocation": "display all scala files in the directory \"src/main\"", "cmd": "find . -path \"*src/main*\" -type f -iname \"*\\.scala*\""}, {"invocation": "find files ending with .jpg", "cmd": "find . -name '*.jpg' -print ./bar/foo.jpg"}, {"invocation": "find all the text files in the current folder expect those which are in the path \"sk\"", "cmd": "find . -path \"./sk\" -prune -o -name \"*.txt\" -print"}, {"invocation": "Set the system date to Sat May 11 06:00:00 IDT 2013", "cmd": "sudo date --set=\"Sat May 11 06:00:00 IDT 2013\""}, {"invocation": "List files in \"dir1\" that are not in \"dir2\"", "cmd": "comm -23 <(ls dir1 |sort) <(ls dir2|sort)"}, {"invocation": "Find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644", "cmd": "find /path/to/dir -type d -exec chmod 0755 '{}' \\; -o -type f -exec chmod 0644 '{}' \\;"}, {"invocation": "Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning", "cmd": "find . -perm 0644 | head"}, {"invocation": "Search the files from the current directory tree for \"chrome\"", "cmd": "find . -exec grep chrome {} +"}, {"invocation": "Finds IP address of system network interface, that belongs to 192.168.111 subnet.", "cmd": "ifconfig | grep 192.168.111 | awk '{print $2}'"}, {"invocation": "Find StringBuffer in all *.java files", "cmd": "find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}, {"invocation": "Make directories a, b, c, ..., z under path2 as needed.", "cmd": "mkdir -p path2/{a..z}"}, {"invocation": "List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time", "cmd": "find / -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -ls"}, {"invocation": "Find recursively all regular .txt files in the current directory tree except README.txt", "cmd": "find . -type f -name \"*.txt\" ! -name README.txt -print"}, {"invocation": "List environment variables whose name matches \".*X.*\"", "cmd": "set | awk -F \"=\" '{print $1}' | grep \".*X.*\""}, {"invocation": "Recursively find the latest modified \"zip\" file in the current directory", "cmd": "find . -name \"*zip\" -type f | xargs ls -ltr | tail -1"}, {"invocation": "Get the sizes (and total size) of all files under dir2 directory", "cmd": "find dir2 ! -type d |xargs wc -c"}, {"invocation": "find all read me files in a folder", "cmd": "find /usr/share/doc -name README"}, {"invocation": "Save absolute path of \"$path\" whose parents exist to variable \"abspath\"", "cmd": "abspath=$(readlink -f $path)"}, {"invocation": "Print the full path of executable \"lshw\"", "cmd": "which lshw"}, {"invocation": "Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"", "cmd": "AMV=$(mount -l | grep \"\\[$VLABEL\\]\")"}, {"invocation": "Search the current directory recursively for files containing \"needle text\"", "cmd": "find . -type f -print0 | xargs -0 grep -I \"needle text\""}, {"invocation": "Find all files whose names end with \"~\" in the /home/peter directory tree, following symlinks, and delete them", "cmd": "find -L /home/peter -name *~ -print0 |xargs -0 -r rm"}, {"invocation": "Recursively find strings in all files under current directory, that matching with comma-separated patterns list in file 'searches-txt'", "cmd": "cat searches.txt| xargs -I {} -d, -n 1 grep  -r {}"}, {"invocation": "Find all files in the current user's home directory and its sub-directories with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and/or \u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.", "cmd": "find ~/ [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] [\u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f]"}, {"invocation": "Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time", "cmd": "find . -name '*.[ch]' | xargs grep $1 | less"}, {"invocation": "Determine if user \"$USER\" is logged in", "cmd": "who | grep $USER"}, {"invocation": "Search file /etc/logs/Server.log for lines containing \"Error\"", "cmd": "find /etc/logs/Server.log -exec grep Error {} \\; -print"}, {"invocation": "Display a long listing of all directories under '/nas' directory tree", "cmd": "find /nas -type d -ls"}, {"invocation": "Find all files/directories under current directory and put the output into full_backup_dir variable", "cmd": "full_backup_dir=\"`find . -depth -print0`\""}, {"invocation": "search in the current folder for the files that begin with \"myletter\"", "cmd": "find . -name 'myletter*' -print"}, {"invocation": "find all normal/regular files in the entire file system having the word \"filename\" in their name.", "cmd": "find / -type f -iname \"filename\""}, {"invocation": "Find writable regular files in the current directory", "cmd": "find -type f -maxdepth 1 -writable"}, {"invocation": "Delete all HTML files under tree ~/mydir", "cmd": "find ~/mydir -iname '*.htm' -exec rm {} \\;"}, {"invocation": "Find all *.foo files under current directory and print their contents", "cmd": "find . -name '*.foo' -exec cat {} +"}, {"invocation": "display a long list of all regular/normal files in the file system which belong to the root and with suid bit set", "cmd": "find / -type f -user root -perm -4000 -exec ls -l {} \\;"}, {"invocation": "Remove all Thumbs.db files from the current directory tree", "cmd": "find . -name Thumbs.db -exec rm {} \\;"}, {"invocation": "Find broken symlinks in current directory", "cmd": "find -L -type l"}, {"invocation": "Find files named \"blabla\" in the current directory tree and print the number of lines in each of them", "cmd": "find ./ -name \"blabla\" -exec wc -l {} ;"}, {"invocation": "Set permission of all files in \"img\", \"js\", and \"html\" to 644", "cmd": "chmod 644 img/* js/* html/*"}, {"invocation": "Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories", "cmd": "find $1 -perm -u+w -exec chmod g+w {} \\;"}, {"invocation": "Print numbers from 1 to 10 with padded leading zeros", "cmd": "seq -w 1 10"}, {"invocation": "Print which files differ in \"/tmp/dir1\" and \"/tmp/dir2\" recursively", "cmd": "diff -qr /tmp/dir1/ /tmp/dir2/"}, {"invocation": "Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day (day counted from today)", "cmd": "find /tmp/test/* -daystart -mtime -1"}, {"invocation": "Remove all *.txt files under the given directory modified more than 5 minutes ago", "cmd": "find /home/u20806/public_html -maxdepth 1 -mmin +5 -type f -name \"*.txt\" -delete"}, {"invocation": "display all mp3 files in the file system which have not been accessed in the last 24 hours", "cmd": "find / -name \u201c*.mp3\u201d -atime +01 -type f"}, {"invocation": "Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\\S+ )*\\S+', and saves them in $match variable, each matched part on a separate line.", "cmd": "match=$(echo \"${line}\" | egrep -o 'run-parts (-{1,2}\\S+ )*\\S+')"}, {"invocation": "Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory'", "cmd": "find /path/to/folder -name fileName.txt -not -path \"*/ignored_directory/*\""}, {"invocation": "find all files in the current directory excluding those that end with .js or have the words .min or console in their name", "cmd": "find . -type f \\( -name \"*.js\" ! -name \"*-min*\" ! -name \"*console*\" \\)"}, {"invocation": "Print the sorted unique column of usernames of users who are currently logged in without the header", "cmd": "finger | cut -d ' ' -f1 | sort -u | grep -iv login"}, {"invocation": "Find all files/directories with 'my key phrase' in their names under current directory", "cmd": "find . -name '*my key phrase*'"}, {"invocation": "search for all xml files in current folder and display them", "cmd": "find . -name \"*.xml\" -exec echo {} \\;"}, {"invocation": "Exit the shell on the first error encountered", "cmd": "set -e"}, {"invocation": "display all the files in the folder \"/dev\" which belong to the user \"peter\"", "cmd": "find /dev -user \"peter\" |more"}, {"invocation": "List all cron jobs where the minute part is either * or a number from 0 to 14.", "cmd": "crontab -l | awk '$1 == \"*\" || $1 ~ /^[0-9]+$/ && $1 < 15 {print}'"}, {"invocation": "Recursively change owner and group to \"tomcat7\" of \"webapps\", \"temp\", \"logs\", \"work\", and \"conf\"", "cmd": "chown -R tomcat7:tomcat7 webapps temp logs work conf"}, {"invocation": "Find regular files in the current directory tree that have all executable bits set", "cmd": "find -L . -type f -perm -a=x"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 2 days ago", "cmd": "find . -type f -mtime +2"}, {"invocation": "Count the number of all directories under directory '/mount/point' non-recursively", "cmd": "find /mount/point -maxdepth 1 -type d | wc -l"}, {"invocation": "Find files newer than start.txt but not newer than end.txt", "cmd": "find ./ -newer start.txt -and ! -newer end.txt"}, {"invocation": "find files in the current directory and sub-directories, whose content was updated within the last hour", "cmd": "find . -mmin -60"}, {"invocation": "Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.", "cmd": "find . -perm -g=r -type f -exec ls -l {} \\;"}, {"invocation": "Find all regular files on the system whose names are 'myfile'", "cmd": "find / -name myfile -type f -print"}, {"invocation": "find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once", "cmd": "find / \\( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\\n' \\) , \\  \\( -size +100M -fprintf /root/big.txt '%-10s %p\\n' \\)"}, {"invocation": "Dump the character output of 'echo `echo \"Ho ho ho\"`'", "cmd": "echo `echo \"Ho ho ho\"` | od -c"}, {"invocation": "Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name", "cmd": "find . -type d | sed -e 's/\\.\\///g' -e 's/\\./avoid/g' | grep -v avoid | awk '{print $1\"\\t\"$1}' | xargs chgrp"}, {"invocation": "find StringBuffer in all *.java files", "cmd": "find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}, {"invocation": "Recursively list all files on smbfs mounts", "cmd": "mount -v | grep smbfs | awk '{print $3}' | xargs ls -lsR"}, {"invocation": "copy all files which do not have execute permission to another folder", "cmd": "cp `find -perm -111 -type f` /usr/local/bin"}, {"invocation": "List and sort all leaf directories (directories which don't contain any sub-directory) under current directory", "cmd": "find . -type d | sort | awk '$0 !~ last \"/\" {print last} {last=$0} END {print last}'"}, {"invocation": "Find all 'test' directories in the current directory tree and remove them", "cmd": "find . -name test -type d -print0|xargs -0 rm -r --"}, {"invocation": "Read a line from standard input with prompt \"Enter your age:\\n\"", "cmd": "read -p $'Enter your age:\\n'"}, {"invocation": "Decompress \"path/to/test/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 line limit", "cmd": "gzip -dc path/to/test/file.gz | grep -P --regexp='my regex' | split -dl1000000 - file"}, {"invocation": "search for the file \"filename\" in the entire file system", "cmd": "find / -name filename"}, {"invocation": "create directory aaa", "cmd": "mkdir aaa"}, {"invocation": "Save the number of matching executables for \"$cmd\" in $PATH to variable \"candidates\"", "cmd": "candidates=$(which -a $cmd | wc -l)"}, {"invocation": "Find all .php files starting from the root directory and ignoring /media", "cmd": "find / -name \"*.php\" -print -o -path '/media' -prune"}, {"invocation": "Search the home directory tree for files last modified less than 2 days ago or newer than file \"filename\"", "cmd": "find ~/ -mtime -2 -o newer filename"}, {"invocation": "Split \"$ORIGINAL_FILE\" into files of at most \"$MAX_LINES_PER_CHUNK\" lines each with a prefix \"$CHUNK_FILE_PREFIX\"", "cmd": "split -l $MAX_LINES_PER_CHUNK $ORIGINAL_FILE $CHUNK_FILE_PREFIX"}, {"invocation": "Replace spaces with underscores in the names of all files and directories in the \"/tmp\" directory tree", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename \" \" \"_\" \"{}\" \";\""}, {"invocation": "Compress every file in the current directory tree with gzip and keep file extensions the same", "cmd": "find folder -type f -exec gzip -9 {} \\; -exec mv {}.gz {} \\;"}, {"invocation": "Extract protocol part from URL.", "cmd": "echo \"$url\" | cut -d':' -f1"}, {"invocation": "Print all files and directories in the `.' directory tree skipping SCCS directories", "cmd": "find . -name SCCS -prune -o -print"}, {"invocation": "Search the ./in_save directory for regular files and view the result using pager `more'", "cmd": "find ./in_save/ -type f -maxdepth 1| more"}, {"invocation": "Search all files in the current directory tree whose names end in \"1\" for string \"1\"", "cmd": "find . -name \"*1\" -exec grep \"1\" {} \\;"}, {"invocation": "Print a unique list of characters from standard input showing backslash escapes for non-displayables", "cmd": "od -cvAnone -w1 | sort -bu"}, {"invocation": "find all the files in the entire file system that have been accessed in the last 60 days ago", "cmd": "find / -amin -60"}, {"invocation": "Prints long recursive listing of all content of a current folder, saving output to 'output.file'.", "cmd": "ls |& tee files.txt"}, {"invocation": "Non-recursively finds all '*.pdf' files in a current folder and removes them.", "cmd": "find -maxdepth 1 -name '*.pdf' -exec rm \"{}\" \\;"}, {"invocation": "Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir", "cmd": "find . -inum 211028 -exec mv {} newname.dir \\;"}, {"invocation": "Counts total lines in all *.php files in the current directory recursively", "cmd": "find . -name '*.php' -type f | xargs cat | wc -l"}, {"invocation": "search for all the .o files in the current directory which have permisssions 664 and print them.", "cmd": "find . -name *.o -perm 664 -print"}, {"invocation": "Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days", "cmd": "find $HOME -iname '*.ogg' -atime +30"}, {"invocation": "Find directories named 'work' under '/usr/ports/' directory tree and remove them", "cmd": "find /usr/ports/ -name work -type d -print -exec rm -rf {} \\;"}, {"invocation": "Convert relative symbolic link \"$link\" to absolute symbolic link", "cmd": "ln -sf \"$(readlink -f \"$link\")\" \"$link\""}, {"invocation": "Delete all directories in the TBD directory that were modified more than 1 day ago", "cmd": "find /TBD -mtime +1 -type d | xargs rm -f -r"}, {"invocation": "Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'", "cmd": "md5=\"$(md5sum \"${my_iso_file}\")\""}, {"invocation": "Save the network node hostname append with '-', the current date and '.txt' into variable 'filename'", "cmd": "filename=\"$(uname -n)-$(date +%F).txt\""}, {"invocation": "Delete all files in directory $DIR that have not been accessed in at least 5 days", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "Prints top-ten biggest top-level folders within a 'var' folder.", "cmd": "sudo du -hDaxd1 /var | sort -h | tail -n10"}, {"invocation": "Print all unique directory paths under \"dir1\" compared to \"dir2\"", "cmd": "comm -23 <(find dir1 -type d | sed 's/dir1/\\//'| sort) <(find dir2 -type d | sed 's/dir2/\\//'| sort) | sed 's/^\\//dir1/'"}, {"invocation": "Concatenate files containing `test' in their names", "cmd": "find . -name '*test*' -exec cat {} \\;"}, {"invocation": "login as user postgres", "cmd": "sudo su -l oracle"}, {"invocation": "Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'", "cmd": "find /dev/sd*[a-z] -printf . | wc -c"}, {"invocation": "Find all *fink* files/directories in entire file system", "cmd": "find / -name \"*fink*\" -print"}, {"invocation": "searches through the /usr directory for the regular  file named 'Chapter1*'", "cmd": "find /usr -name \"Chapter*\" -type f"}, {"invocation": "List all file paths under the current directory with case insensitive name \".note\" in reverse alphabetic order", "cmd": "find . -iname '.note' | sort -r"}, {"invocation": "Mount the \"linprocfs\" filesystem on \"/proc\"", "cmd": "mount -t linprocfs none /proc"}, {"invocation": "display all directories in current folder", "cmd": "find -type d"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder.", "cmd": "find . -name \"*.pyc\"|xargs rm -rf"}, {"invocation": "Find all files/directories in entire file system that are owned by \"syslog\" user", "cmd": "find / -user syslog"}, {"invocation": "Print the names and sizes of regular files residing in the \"tmp\" directory tree", "cmd": "find tmp -type f -printf \"f %s %p\\n\" | awk '{sub(/^[^ ]+ +[^ ]/,sprintf(\"%s %10d\",$1,$2))}1'"}, {"invocation": "Change string \"searc\" to \"replace\" in all files in directory hierarchy", "cmd": "find . -type f -exec sed -i 's/searc/replace/g' {} \\;"}, {"invocation": "Concatenate with a space every other line in \"input.txt\"", "cmd": "paste -s -d' \\n' input.txt"}, {"invocation": "Remount \"/mnt/mountpoint\" as read only", "cmd": "mount /mnt/mountpoint -oremount,ro"}, {"invocation": "Display differences in \"/tmp/ksh-9725.log\" when compared to \"/tmp/ksh-9781.log\"", "cmd": "diff /tmp/ksh-{9725,9781}.log | grep ^\\<"}, {"invocation": "search for a word in all the files in the current directory", "cmd": "find . | xargs grep 'chrome'"}, {"invocation": "Check if the file \"somelink\" links to exists", "cmd": "ls `readlink somelink`"}, {"invocation": "Sets shell option 'extglob'.", "cmd": "shopt -s extglob"}, {"invocation": "display all scala files in the directory \"src/main\"", "cmd": "find . -type f -regex \".*src/main.*\\.scala$\""}, {"invocation": "display all the java script files in a folder", "cmd": "find src/js -name '*.js'"}, {"invocation": "Print the last 10 commands in history", "cmd": "history | tail"}, {"invocation": "find all the files that have not been modified in the last 24 hours", "cmd": "find /tmp/test/* -mtime +1"}, {"invocation": "Find all directories that do not contain \"main.cpp\"", "cmd": "diff <(find . -exec readlink -f {} \\; | sed 's/\\(.*\\)\\/.*$/\\1/' | sort | uniq) <(find . -name main.cpp  -exec readlink -f {} \\; | sed 's/\\(.*\\)\\/.*$/\\1/' | sort | uniq) | sed -n 's/< \\(.*\\)/\\1/p'"}, {"invocation": "Find all *.htm files under current directory", "cmd": "find -type f -name \"*.htm\""}, {"invocation": "Save a random 4 byte unsigned integer from \"/dev/urandom\" to variable \"RAND\"", "cmd": "RAND=`od -t uI -N 4 /dev/urandom | awk '{print $2}'`"}, {"invocation": "Find all the files in the current directory recursively whose permissions are not 777", "cmd": "find . -type f ! -perm 777 | head"}, {"invocation": "Sort the contents of file \"ips.txt\", eliminate duplicate entries, and prefix each entry with number of occurrences.", "cmd": "sort ips.txt | uniq -c"}, {"invocation": "list all files in /home/bozo/projects directory tree that were modified within the last day", "cmd": "find /home/bozo/projects -mtime -1"}, {"invocation": "Look in /home/dm and below for files with 'uniform' in their names", "cmd": "find /home/dm -name \"*uniform*\""}, {"invocation": "Find all Makefile's in the current directory tree and look for line 235 in each of them", "cmd": "find . -name Makefile -print0 | xargs -0 grep -nH $ | grep :235:"}, {"invocation": "display the type of all the regular/normal files in the entire file system", "cmd": "find / -type f -print | xargs file"}, {"invocation": "Set the bash environmental variable \"PROMPT_COMMAND\" to save the output of the last executed command to variable \"LAST\" and file '/tmp/x\"", "cmd": "PROMPT_COMMAND='LAST=\"`cat /tmp/x`\"; exec >/dev/tty; exec > >(tee /tmp/x)'"}, {"invocation": "Find all files/directories named 'text' under current directory", "cmd": "find -name \"text\""}, {"invocation": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes", "cmd": "find /your/dir -type f -size +5M -exec du -h '{}' + | sort -hr"}, {"invocation": "Replace all instances of \";\" with \"\\n\" in \"bla@some.com;john@home.com\"", "cmd": "echo \"bla@some.com;john@home.com\" | sed -e 's/;/\\n/g'"}, {"invocation": "Create symbolic links in the current directory for all files under \"bar1\" that are not directories and do not end in \".cc\"", "cmd": "find bar1 -name '*foo*' -not -type d -not -name '*.cc' -exec ln -s $PWD/'{}' bar2/ \\;"}, {"invocation": "create an archive using 7zhelper.sh as a compress program", "cmd": "tar -I 7zhelper.sh -cf OUTPUT_FILE.tar.7z paths_to_archive"}, {"invocation": "search for the directory \"config\" in the current folder and change directory to it", "cmd": "cd `find . -name \"config\"`"}, {"invocation": "Prints folder where current script is located", "cmd": "echo \"dirname: `dirname \"$0\"`\""}, {"invocation": "Count the number of characters in the list of regular files from the current directory tree", "cmd": "find . -type f | xargs | wc -c"}, {"invocation": "Search for files/directories which are writable by either their owner or their group", "cmd": "find . -perm /u=w,g=w"}, {"invocation": "Print each character in \"orange\" on a new line", "cmd": "echo orange | fold -w 1"}, {"invocation": "Search for regular files of the user bluher in the file system", "cmd": "find / -type f -user bluher -exec ls -ls {}  \\;"}, {"invocation": "Replaces any occurences of '*favicon.ico*' in any subfolder with file '/root/favicon.ico'.", "cmd": "find . | grep favicon\\.ico | xargs -n 1 cp -f /root/favicon.ico"}, {"invocation": "Look for any files that were modified 2-5 days ago", "cmd": "find -mtime +2 -mtime -5"}, {"invocation": "Dry run making directories in \"/TARGET_FOLDER_ROOT/\" for each \".mov\" file in the current directory tree", "cmd": "find . -type f -iname \\*.mov -printf '%h\\n' | sort | uniq | xargs -n 1 -d '\\n' -I '{}' echo mkdir -vp \"/TARGET_FOLDER_ROOT/{}\""}, {"invocation": "Read a line from standard input into variable \"password\" without echoing the input and using the prompt \"Password: \"", "cmd": "read -s -p \"Password: \" password"}, {"invocation": "Print unique list of who is logged in and the time of login formatted in columns", "cmd": "who -su | sort | uniq | column"}, {"invocation": "Delete all hidden files under $some_directory", "cmd": "find \"$some_directory\" -type f -name '.*' | xargs rm"}, {"invocation": "Find and delete all hard links in the /home directory to file1", "cmd": "find /home -xdev -samefile file1 -print0 | xargs -0 rm"}, {"invocation": "Remount \"yaffs2\" filesystem \"/dev/block/mtdblk4\" to \"/system\" as read and write only", "cmd": "mount -o rw,remount -t yaffs2 /dev/block/mtdblk4 /system"}, {"invocation": "Print the IP addresses for the current host name", "cmd": "hostname  -I | awk -F\" \" '{print $1}'"}, {"invocation": "Lookup information for user \"vivek\"", "cmd": "finger vivek"}, {"invocation": "Shows MAC address of network interface eth0.", "cmd": "ifconfig eth0 | grep HWaddr |cut -dH -f2|cut -d\\  -f2"}, {"invocation": "Find all PHP files under current directory", "cmd": "find . -type f -name *.php"}, {"invocation": "change owner and group of the file \"file\" to user \"user\" and group \"group\"", "cmd": "chown user:group file ..."}, {"invocation": "Add directory \"$HOME/Pictures\" to the directory stack", "cmd": "pushd \"$HOME/Pictures\""}, {"invocation": "display all the ip addresses in all the files that are present in /etc folder", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "Find the total size of *.jpg files within the current directory tree", "cmd": "find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'"}, {"invocation": "Print each logged in user's username and full name", "cmd": "finger -l | grep \"Name:\" | tr -s ' ' | cut -d \" \" -f 2,4- | sort | uniq"}, {"invocation": "Find files/directories named<filetype> under current directory which were accessed less than 5 days ago", "cmd": "find -name \"<filetype>\" -atime -5"}, {"invocation": "kill all background processes", "cmd": "kill -INT $(jobs -p)"}, {"invocation": "Get the list of regular files in the current directory", "cmd": "find . -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0 -I {} echo \"{}\""}, {"invocation": "dispaly all the empty regular/normal files in the current folder", "cmd": "find . -type f -empty"}, {"invocation": "display all files in the current folder", "cmd": "find . -print"}, {"invocation": "Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field", "cmd": "cat text.txt | tr -s ' ' | cut -d ' ' -f 4"}, {"invocation": "Compress \"my_large_file\" with gzip and split the result into files of size 1024 MiB with prefix \"myfile_split.gz_\"", "cmd": "gzip -c my_large_file | split -b 1024MiB - myfile_split.gz_"}, {"invocation": "Find all directories under maximum 1 level down the current directory and set their permission to 700", "cmd": "find . -mindepth 1 -type d | xargs chmod 700"}, {"invocation": "test if the 2nd column in file A is in the reverse order of the second column of file B", "cmd": "diff --brief <(awk '{print $2}' A) <(tac B | awk '{print $2}')"}, {"invocation": "Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches", "cmd": "find . -name '*.txt'|xargs grep -m1 -ri 'oyss'"}, {"invocation": "List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time", "cmd": "ls -alrt `pwd`/*"}, {"invocation": "Make a new directory \"new-dir\" in every directory in the current directory tree", "cmd": "find . -type d | xargs -I \"{x}\" mkdir \"{x}\"/new-dir"}, {"invocation": "Display the contents of \"myfile\" located in the current directory.", "cmd": "cat myfile"}, {"invocation": "display all the users in the current folder that belong to the group \"sunk\"", "cmd": "find . -type f -group sunk"}, {"invocation": "Find UTF-8 files with BOM", "cmd": "find . -type f -print0 | xargs -0 awk '/^\\xEF\\xBB\\xBF/ {print FILENAME} {nextfile}'"}, {"invocation": "Prints week day of a 31 day in a current month.", "cmd": "cal | awk 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}' FIELDWIDTHS=\"3 3 3 3 3 3 3 3\" date=31"}, {"invocation": "Print the type of the current shell", "cmd": "echo $(cat /proc/$$/cmdline)"}, {"invocation": "Delete all lines matching \"some string here\" in \"yourfile\"", "cmd": "sed --in-place '/some string here/d' yourfile"}, {"invocation": "Find all *.java files under current directory and archive them to myfile.tar", "cmd": "find . -type f -name \"*.java\" | xargs tar rvf myfile.tar"}, {"invocation": "Find all files under the current directory that are not the same file as \"/home/nez/file.txt\"", "cmd": "find . -maxdepth 1 -not -samefile /home/nez/file.txt"}, {"invocation": "Look for any instance of \"HIGHMEM\" in the current kernel's compile-time config file.", "cmd": "grep \u201cHIGHMEM\u201d /boot/config-`uname -r`"}, {"invocation": "Recursively copy all \".txt\" files to \"user@remote.machine:/tmp/newdir/\"", "cmd": "rsync -rvv *.txt user@remote.machine:/tmp/newdir/"}, {"invocation": "Save the directory name of the current bash script to variable \"path\" if it is found in one of the directories specified by PATH.", "cmd": "path=\"$( dirname \"$( which \"$0\" )\" )\""}, {"invocation": "Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.", "cmd": "find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}, {"invocation": "Find all regular files under ./Desktop directory", "cmd": "find ./Desktop -type f"}, {"invocation": "Print list of all user names who are logged in", "cmd": "who | awk '{ print $1 }'"}, {"invocation": "Find all files whose permission are 777", "cmd": "find / -type f -perm 777"}, {"invocation": "Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'", "cmd": "find \\! -name \"query_to_avoid\""}, {"invocation": "Print the average round trip time of 5 pings to \"google.com\" from OSX", "cmd": "ping -c 5 google.com | grep \"round-trip\" | cut -f 5 -d \"/\""}, {"invocation": "find all the files in the entire file system starting with the word top", "cmd": "find / -name 'top?????*'"}, {"invocation": "Prints sorted list of logged in users.", "cmd": "w -h  | cut -d' ' -f1 | sort | uniq"}, {"invocation": "display list of all the regular/normal files in the home folder which are exactly 6579 bytes", "cmd": "find /home/ -type f -size 6579c -exec ls {} \\;"}, {"invocation": "Set trace prompt to print seconds.nanoseconds", "cmd": "PS4='+ $(date \"+%s.%N\")\\011 '"}, {"invocation": "Search the current directory tree for TXT files skipping hidden ones", "cmd": "find . -type f \\( -iname \"*.txt\" ! -iname \".*\" \\)"}, {"invocation": "list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user", "cmd": "find / -path /proc -prune -o -perm -2 ! -type l -ls"}, {"invocation": "Login to \"host\" using identity file \"id_rsa\"", "cmd": "ssh -i id_rsa host"}, {"invocation": "Print unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"", "cmd": "comm -23 a.txt b.txt"}, {"invocation": "display the directory name along with the modified time  for all the files /var", "cmd": "find /var -maxdepth 2 -type d -printf \"%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\\n\""}, {"invocation": "Save number of lines in 'file.txt' file in 'nbLines' variable", "cmd": "nbLines=$(cat -n file.txt | tail -n 1 | cut -f1 | xargs)"}, {"invocation": "Recursively changes group ownership of everything in 'files' to 'my_group'.", "cmd": "chgrp -R my_group files"}, {"invocation": "Search /public/html/cosi for files whose name is \"wiki.phtml\"", "cmd": "find /public/html/cosi -name \"wiki.phtml\""}, {"invocation": "Find all *.foo files under current directory and print their contents", "cmd": "find . -name '*.foo' -exec cat {} \\;"}, {"invocation": "Print 3 space separated '%'", "cmd": "echo $(yes % | head -n3)"}, {"invocation": "Print which files differ in \"dir1\" and \"dir2\" recursively", "cmd": "diff -qr dir1 dir2"}, {"invocation": "Find only files under /etc with the size of 100k-150k", "cmd": "find /etc -size +100k -size -150k"}, {"invocation": "Send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable \"COUNTER\", and output only lines containing \"ms\" to standard output.", "cmd": "ping -c 1 192.168.1.$COUNTER | grep 'ms'"}, {"invocation": "display all the files in the home folder which begin with \"arrow\"", "cmd": "find ~ -name 'arrow*'"}, {"invocation": "Remove all white space from \"infile.txt\" and wrap each line to 80 characters", "cmd": "cat infile.txt | tr -d \"[:space:]\" | fold -80"}, {"invocation": "create directory dir", "cmd": "mkdir -p dir"}, {"invocation": "Format the date represented by time string @1267619929 according to default format and print it", "cmd": "date -ud @1267619929"}, {"invocation": "Send ping requests to \"yourhostname.local\"", "cmd": "ping youhostname.local"}, {"invocation": "Find all configration files in Home directory & Subtitute permanently in files", "cmd": "find $HOME -name \"*.conf\" -exec sed -i 's/vermin/pony/g' {} \\;"}, {"invocation": "Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.kb' file, comparing human readable numbers in file strings.", "cmd": "cat ${TMP}/${SCRIPT_NAME}.kb|sort -rh;"}, {"invocation": "list files in /usr modified after the time which /tmp/stamp$$ modified", "cmd": "find /usr -newer /tmp/stamp$$"}, {"invocation": "Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'", "cmd": "find /usr/ports/ -name pkg-plist\\* -exec grep dirrmtry '{}' '+' | wc -l"}, {"invocation": "Find all directories in directory tree `httpdocs'", "cmd": "find httpdocs -type d"}, {"invocation": "Find all files/directories under current directory matching the case insensitive pattern 'pattern'", "cmd": "find -iname pattern"}, {"invocation": "Find all files named \"file.ext\" within the current folder and print the path where each one is located", "cmd": "find `pwd` -name \"file.ext\" -exec dirname {} \\;"}, {"invocation": "find all the files in the current folder that have been accessed in today from the start of the day", "cmd": "find -daystart   -atime 0"}, {"invocation": "Filters only directories from long file listing of a current directory, and prints their names.", "cmd": "ls -l | grep \"^d\" | awk -F\" \" '{print $9}'"}, {"invocation": "Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'", "cmd": "cat myfiles_split.tgz_* | tar xz"}, {"invocation": "Recursively search for all regular files below directory \"dir1\" in currentd directory, and output the name of each, without any containing directories.", "cmd": "find ./dir1 -type f -exec basename {} \\;"}, {"invocation": "Calculate the md5 sum of every \".py\" file in directory tree \"/path\"", "cmd": "find /path -type f -name \"*.py\" -exec md5sum \"{}\" +;"}, {"invocation": "Copy \"*.cc\", \"*.h\", and \"SConstruct\" to \"rsync://localhost:40001/bledge_ce\" using blocking IO", "cmd": "rsync --blocking-io *.cc *.h SConstruct rsync://localhost:40001/bledge_ce"}, {"invocation": "Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here", "cmd": "find root -name '*.rmv' -type f -exec cp --parents \"{}\" /copy/to/here \\;"}, {"invocation": "Print mount point of the file system containing $path.", "cmd": "df -P \"$path\"  | tail -1 | awk '{ print $NF}'"}, {"invocation": "Mount \"proc\" file system on \"/var/snmp3/proc\"", "cmd": "mount -t proc none /var/snmp3/proc"}, {"invocation": "Ungzip and untar all files matching \"www-backup.tar.*\"", "cmd": "cat www-backup.tar.*|gunzip -c |tar xvf -"}, {"invocation": "list all samba files in /var/l* directory ( /var/lib or /var/log )", "cmd": "find  /var -path */l??/samba*"}, {"invocation": "Recursively removes all files and folders named '.svn' in a current folder.", "cmd": "find . -name .svn -exec rm -rf {} +"}, {"invocation": "Set permissions to ug=rwx,o= for directories under the $d directory tree", "cmd": "find $d -type d -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "Prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself.", "cmd": "echo \"$(dirname $(readlink -e $F))/$(basename $F)\""}, {"invocation": "search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file", "cmd": "find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}"}, {"invocation": "Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree", "cmd": "find . -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "display all normal/regular files in current directory", "cmd": "find . -type f"}, {"invocation": "Search for \"pattern\" in all the .c files in the current directory tree", "cmd": "find . -name \"*.c\" | xargs grep pattern"}, {"invocation": "Print \"This is a sentence.\" by replacing all consecutive space characters with a single newline character", "cmd": "echo \"This is   a sentence.\" | tr -s \" \" \"\\012\""}, {"invocation": "Find all files in the `sourceDir' directory tree", "cmd": "find sourceDir -mindepth 1"}, {"invocation": "Find SUID files", "cmd": "find / -perm +4000"}, {"invocation": "Remove all broken symbolic links in /usr/ports/packages", "cmd": "find -L /usr/ports/packages -type l -delete"}, {"invocation": "delete what was typed in the command line and run \"pwd\" when button \"\\e[24~\"", "cmd": "bind '\"\\e[24~\":\"\\C-k \\C-upwd\\n\"'"}, {"invocation": "Execute \"ls -l\" every 2 seconds", "cmd": "watch ls -l"}, {"invocation": "find all files in current folder which are less than 300MB", "cmd": "find . -size -300M"}, {"invocation": "run ksh shell as user apache", "cmd": "su apache -s /bin/ksh"}, {"invocation": "Find all files with the SUID bit set beginning with the root directory", "cmd": "find / -perm -u+s"}, {"invocation": "Make directory \"/etc/cron.5minute\"", "cmd": "mkdir /etc/cron.5minute"}, {"invocation": "Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmp'", "cmd": "tmp=$(mktemp -d $(dirname \"$1\")/XXXXXX)"}, {"invocation": "Search for \"Stock\" in all *.java files from the current directory tree", "cmd": "find . -name \"*.java\" | xargs grep \"Stock\""}, {"invocation": "Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories", "cmd": "find . -inum 211028 -exec mv {} newname.dir \\;"}, {"invocation": "Find recursively all regular files in the current directory tree not ending in .dll or .exe", "cmd": "find . -type f | grep -vP \"\\.dll$|\\.exe$\""}, {"invocation": "Remount \"yaffs2\" filesystem \"/dev/block/mtdblk4\" to \"/system\" as read only", "cmd": "mount -o ro,remount -t yaffs2 /dev/block/mtdblk4 /system"}, {"invocation": "Print the list of all directories under the current directory and below", "cmd": "find ./ -type d -print"}, {"invocation": "Show the list of files larger than 100 MB", "cmd": "find / -size +100M -print"}, {"invocation": "Find all test2.h files under current directory", "cmd": "sudo find . -name test2.h"}, {"invocation": "Run an awk program on every TXT file found in the current directory tree", "cmd": "find . -name \"*.txt\" -print -exec awk '$9 != \"\" {print; if(NR > 9) exit; }' {} \\;"}, {"invocation": "Get a list of all hidden files from the current directory tree", "cmd": "find . -type f -name '.*'"}, {"invocation": "Search the /myfiles directory tree for files last accessed more than 30 days ago", "cmd": "find /myfiles -atime +30"}, {"invocation": "Count the number of lines in each .java file in the current directory tree", "cmd": "find . -name \"*.java\" -exec wc -l {} \\;"}, {"invocation": "Find all files on the system whose names are 'composer.json' and search them for \"drush\"", "cmd": "find / -name composer.json -exec grep -n drush {} /dev/null \\;"}, {"invocation": "show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories", "cmd": "find . -maxdepth 1 -name \\*.txt -print0 | grep -cz ."}, {"invocation": "find all files in the current folder that are modified exactly 1 minute ago", "cmd": "find -mmin 1 -print"}, {"invocation": "print number of jobs", "cmd": "n_jobs=$( jobs -p | awk '{print NR}' )"}, {"invocation": "Calculate the total disk usage for each \".jpg\" file on the system and prepend the system host name to the output", "cmd": "find \"$PWD\" / -iname '*.jpg' -exec du -s {} + | sed \"s/^/$(hostname): /\""}, {"invocation": "Find all files/directories under /myfiles that were accessed more than 30 days ago", "cmd": "find /myfiles -atime +30"}, {"invocation": "Find and uncompress all files in the current directory tree ending in \".csv.gz\"", "cmd": "find . -name '*.csv.gz' -exec gzip -d {} \\;"}, {"invocation": "search for a file \"file\" in current folder and display all instances of this file", "cmd": "find -name file -print"}, {"invocation": "display all the files in the current folder excluding those which are in the path of \".git\"", "cmd": "find . ! -path  \"*.git*\" -type f -print"}, {"invocation": "Removes resursively all files and folders named \".DS_Store\".", "cmd": "find . -name \".DS_Store\" -print0 | xargs -0 rm -rf"}, {"invocation": "Find files in the current directory tree whose names begin with \"file\" and whose size is 0, and remove them", "cmd": "find -name 'file*' -size 0 -delete"}, {"invocation": "Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.", "cmd": "wc -l **/*.php"}, {"invocation": "find all the core files in the temp folder and force delete them", "cmd": "find /tmp -name core -type f -print | xargs /bin/rm -f"}, {"invocation": "Print the full path of command \"cc\"", "cmd": "which cc"}, {"invocation": "sleep for 500 seconds", "cmd": "sleep 500"}, {"invocation": "Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths", "cmd": "find /path/* -maxdepth 0 -type d -exec sudo tar -zcpvf {}.tar.gz {} \\;"}, {"invocation": "Find all files on the system that are larger than 600 MB", "cmd": "find / -size +600M -print"}, {"invocation": "Enables shell option 'nocaseglob'.", "cmd": "shopt -s nocaseglob"}, {"invocation": "Search the /path directory tree for files missing g+w or o+w bits", "cmd": "find /path ! -perm -022"}, {"invocation": "Print the physical current working directory", "cmd": "echo \"`pwd -P`\""}, {"invocation": "Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP", "cmd": "PacketLoss=$(ping \"$TestIP\" -c 2 | grep -Eo \"[0-9]+% packet loss\" | grep -Eo \"^[0-9]\")"}, {"invocation": "Find all .tmp files under and below the /tmp/ directory and remove them", "cmd": "find /tmp -name \"*.tmp\"| xargs rm"}, {"invocation": "search all the lines that start with the word malloc in the files ending with .c or .h or .ch", "cmd": "grep ^malloc `find src/ -name '*.[ch]'`"}, {"invocation": "Locate all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\""}, {"invocation": "Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output", "cmd": "find . -type f -exec grep -i California {} \\; -print | wc -l"}, {"invocation": "Sort \",\" delimited lines in \"file\" by the first field preserving only unique lines", "cmd": "sort -u -t, -k1,1 file"}, {"invocation": "search in the current folder for all the directories with the name \"test\"", "cmd": "find . -type d -name test"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found", "cmd": "find var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \\;"}, {"invocation": "Execute the first instance of \"parallel\" found in the PATH, passing it all parameters received by the script/function", "cmd": "`which parallel` \"$@\""}, {"invocation": "Show the mv commands that would rename the *.so files in the current directory tree prepending their names with \"lib\"", "cmd": "find . -name \"*.so\" -printf \"mv '%h/%f' '%h/lib%f'\\n\" | less -S"}, {"invocation": "Find all files in the current directory tree whose names are \"file_name\", except for those with pathnames matching pattern \"./dirt to be Excluded/*\"", "cmd": "find ./ -iname file_name ! -path \"./dirt to be Excluded/*\""}, {"invocation": "find all files in and under the current directory that have read, write and execute permissions set for all users.", "cmd": "find . -perm 777 -print"}, {"invocation": "Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible", "cmd": "find /home/www/ -type f -exec sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g' {} +"}, {"invocation": "search for all the mp3 files in the folder /home/you which have been accessed 24 ago", "cmd": "find /home/you -iname \u201c*.mp3\u201d -atime 01 -type -f"}, {"invocation": "Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files", "cmd": "find . -name \"filename_regex\"|grep -v '.svn' -v '.pdv'|xargs grep -i 'your search string'"}, {"invocation": "Find all files named \"filename\" in the current directory tree, not descending into \"FOLDER1\" directories", "cmd": "find . -name FOLDER1 -prune -o -name filename"}, {"invocation": "Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago", "cmd": "find . -maxdepth 1 -cmin +60 -name file"}, {"invocation": "Execute \"ls\" every second", "cmd": "watch -n 1 ls"}, {"invocation": "locate large files (> 100 MB) in /home/ for 'cleaning'", "cmd": "find /home -type f -size +100M -print0 |xargs -0 rm"}, {"invocation": "Search the files from directory tree \"dirname\" for string \"foo\"", "cmd": "find dirname  -print0 | xargs -0 grep foo"}, {"invocation": "Print content of all files found regarding seach options '[whatever]'", "cmd": "find [whatever] -exec cat {} \\;"}, {"invocation": "sleep for 10 seconds", "cmd": "sleep 10"}, {"invocation": "find all text files in current folder; which have been modified exactly 5 days ago", "cmd": "find . \u2013name \"*.txt\" \u2013mtime 5"}, {"invocation": "Find the largest original \".gz\" file in the current directory tree", "cmd": "find . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"}, {"invocation": "Find all *.mp4 files under /foo/bar and move them to /some/path", "cmd": "find /foot/bar/ -name '*.mp4' -exec mv -t /some/path {} +"}, {"invocation": "Print the size for every *.ogg file found under the home directory", "cmd": "find $HOME -name '*.ogg' -type f -exec du -h '{}' \\;"}, {"invocation": "Find files in the /travelphotos that are greater than 200k in size but do not have \"2015\" anywhere in the file name", "cmd": "find /travelphotos -type f -size +200k -not -iname \"*2015*\""}, {"invocation": "Receive input and print it to terminal preceeding with line number", "cmd": "cat -n"}, {"invocation": "Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter", "cmd": "find /some/dir -name \"*.pdf\" ! -name \"*_signed.pdf\" -print0"}, {"invocation": "Return the list of files named \"filename\" that are 50 megabytes or larger", "cmd": "find / -size +50M -iname \"filename\""}, {"invocation": "List each subdirectory name composing the current working directory", "cmd": "pwd | cut -f 1- -d\\/ --output-delimiter=$'\\n'"}, {"invocation": "Print the names of all the files from directory tree ~/some/directory whose names end in \"rb\"", "cmd": "find ~/some/directory -name \"*rb\" -exec basename {} \\;"}, {"invocation": "Read a line from standard input into variable \"dir\"", "cmd": "read dir"}, {"invocation": "Find all files in the /var/tmp directory tree with uid=1000", "cmd": "find /var/tmp -uid 1000"}, {"invocation": "Copy directory hierarchy \"dir\" and all its .txt files to \"dir_txt\"", "cmd": "find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"}, {"invocation": "Find the top 25 files according to their size in the current directory and its subdirectories", "cmd": "find . -type f -exec ls -al {} \\; | sort -nr -k5 | head -n 25"}, {"invocation": "display a list of all the files  in the home folder which have been modified today", "cmd": "find ~ -type f -mtime 0 -ls"}, {"invocation": "Find all files named \"filename\"", "cmd": "find -name \"filename\""}, {"invocation": "create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months)", "cmd": "find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar"}, {"invocation": "Print content of all files ending with '*.foo' in current directory recursively", "cmd": "find . -name '*.foo' -exec cat {} \\;"}, {"invocation": "Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.", "cmd": "find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"}, {"invocation": "find all posix-extended regex  \"[a-f0-9\\-]\\{36\\}\\.jpg\" files", "cmd": "find . -regextype posix-extended -regex \"[a-f0-9\\-]\\{36\\}\\.jpg\""}, {"invocation": "find all the backup files in the current folder and delete them after user confirmation", "cmd": "find . -type f -name \"*.bak\" -exec rm -i {} \\;"}, {"invocation": "Invoke a trusted X11 forwarding SSH connection with server \"192.168.0.14\" on port 222 as user \"phil\"", "cmd": "ssh -v -Y phil@192.168.0.14 -p 222"}, {"invocation": "Find all files/directories under current directory that match the case insensitive extended regex .*/(EA|FS)_.*", "cmd": "find -E . -iregex '.*/(EA|FS)_.*'"}, {"invocation": "Find all *.java files under current directory containing the string 'String'", "cmd": "find . -name \"*.java\" -exec grep \"String\" {} \\+"}, {"invocation": "display only the file names of all the files which end with \".deb\"", "cmd": "find . -name '*.deb' -printf \"%f\\n\""}, {"invocation": "Saves calendar of $month, $year in the 'cal' variable.", "cmd": "cal=$(echo $(cal \"$month\" \"$year\"))"}, {"invocation": "Find all SUID set files in the file system", "cmd": "find / -perm /u=s"}, {"invocation": "List files in the current directory", "cmd": "find . \\( ! -name . -prune \\)"}, {"invocation": "Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.", "cmd": "find /home/tecmint/Downloads/ -type f -printf \"%s %p\\n\" | sort -rn | head -n 5"}, {"invocation": "Search the current directory tree for regular files lacking read permissions for user, group, or others", "cmd": "find . -type f ! -perm -444"}, {"invocation": "Mount image \"test\" to loop device \"/dev/loop0\"", "cmd": "sudo mount -o loop /dev/loop0 test"}, {"invocation": "show all .cpp, .c, .h, .hpp files in the folder ~/src", "cmd": "find ~/src -type f \\( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \\) -exec echo {} \\;"}, {"invocation": "Search the current directory for PHP files", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "Set shell option 'dotglob'.", "cmd": "shopt -s dotglob"}, {"invocation": "Output \"file.txt\", omitting all containing directories \"some/unknown/amoutn/of/sub/folder/\"", "cmd": "basename \"some/unknown/amount/of/sub/folder/file.txt\""}, {"invocation": "View lines 116 through 120 of history", "cmd": "history | head -n 120 | tail -n 5"}, {"invocation": "Find all files on the system whose names are 'composer.json'", "cmd": "find / -name composer.json"}, {"invocation": "Find all *.cgi files/directories under current directory and change their permission to 755", "cmd": "find . -name '*.cgi' -print0 | xargs -0 chmod 755"}, {"invocation": "Find all links pointing to /path/to/foo.txt", "cmd": "find . -lname /path/to/foo.txt"}, {"invocation": "search for the file picasso in the folder /home/calvin/ (case insensitive search)", "cmd": "find /home/calvin/ -iname \u201cpicasso\u201d"}, {"invocation": "List all functions or variables containing \" ()\" defined in the shell", "cmd": "set | grep \" ()\""}, {"invocation": "Create symbolic links in the current directory for all files excluding \"CONFIGFILE\" located in \"/your/project\"", "cmd": "find /your/project -maxdepth 1 ! -name \"CONFIGFILE\" -exec ln -s \\{\\} ./ \\;"}, {"invocation": "Print a colon-separated list of all directories from the $root directory tree", "cmd": "find $root -type d -printf '%p:'"}, {"invocation": "Copies file 'file.dat' to each top-level directory in the current directory.", "cmd": "ls | xargs -n 1 cp -i file.dat"}, {"invocation": "search  in root  ( / ) directory downwards all files which have less than 2 links.", "cmd": "find / -links -2 -print"}, {"invocation": "Print canonical filename of \"/path/here/..\"", "cmd": "readlink -f  /path/here/.."}, {"invocation": "search the file myfile.txt in the current folder", "cmd": "find . -name myfile.txt -print"}, {"invocation": "display all the files in the current folder which have been accessed in the last 60 minutes", "cmd": "find . -amin -60"}, {"invocation": "Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers", "cmd": "find . -name '*.axvw' -print0 | xargs -0 grep -n 'some string'"}, {"invocation": "List the files in the /etc directory tree containing text \"old1.old2.co.com\"", "cmd": "find /etc -type f -print | xargs grep -il old1\\.old2\\.co\\.com"}, {"invocation": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"", "cmd": "find . -name \\*.c -exec grep wait_event_interruptible {} +"}, {"invocation": "Make directory \"destdir\"", "cmd": "mkdir destdir"}, {"invocation": "Save the absolute path of the current script to variable \"SELF\"", "cmd": "SELF=$(readlink /proc/$$/fd/255)"}, {"invocation": "find all the configuration files which have been accessed in the last 30 minutes.", "cmd": "find /etc/sysconfig -amin -30"}, {"invocation": "Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them", "cmd": "find MyApp.app -name Headers -type d -delete"}, {"invocation": "find for xml files in current folder using regular expressions", "cmd": "find ./ -regex \"cmn-.*[\\x4e00-\\x9fa5]*\\.xml\""}, {"invocation": "Uncompress and unarchive \"data.tar.gz\"", "cmd": "gzip -dc data.tar.gz | tar -xvf -"}, {"invocation": "Mount \"nifs\" filesystem \"/dev/mapper/myldm\" on \"/mnt\" as read only", "cmd": "mount -t ntfs -o ro /dev/mapper/myldm /mnt"}, {"invocation": "Find all files under and below /dir that were changed or created less than 60 minutes ago", "cmd": "find /dir -cmin -60"}, {"invocation": "Search the current directory tree for files whose name is \".note\", case insensitive", "cmd": "find . -iname '.note'"}, {"invocation": "find all js files under the build direcotry except build/external and build/log directory.", "cmd": "find build -not \\( -path build/external -prune \\) -not \\( -path build/blog -prune \\) -name \\*.js"}, {"invocation": "delete all the normal/regular files in the current folder", "cmd": "find . -type f -print -delete"}, {"invocation": "find all the files in the current directory which are bigger than 1000MB", "cmd": "find . -size +1000M"}, {"invocation": "rename all the svg.png files to png files in the current fodler", "cmd": "find . -name \"*.svg.png\" -print0 | sed 's/.svg.png//g' | xargs -0 -I namePrefix mv namePrefix.svg.png namePrefix.png"}, {"invocation": "display a long list of all the files that are bigger than 10KB in current folder", "cmd": "find . -size +10k -exec ls -l {} \\;"}, {"invocation": "List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO", "cmd": "env | grep '^\\(GO\\|HOME=\\|PATH=\\)'"}, {"invocation": "Search the current directory tree for .VER files", "cmd": "find . -name \"*.VER\""}, {"invocation": "display all file in the folder /dir/to/search except \".c\" files", "cmd": "find /dir/to/search/ -not -name \"*.c\" -print"}, {"invocation": "search for all the files in the current folder which are bigger than 10KB and display them biggest file", "cmd": "find . -size +10k -exec ls -ls {} \\+ | sort -n | tail -1"}, {"invocation": "Move \"/usr/bin/openssl\" to directory \"/root/\"", "cmd": "mv /usr/bin/openssl /root/"}, {"invocation": "Split \"data.tsv\" into files of at most 100 MiB preserving lines and use a prefix of \"data.tsv.\" and numeric suffixes", "cmd": "split -C 100m -d data.tsv data.tsv."}, {"invocation": "Find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output", "cmd": "find /path/to/dir -type f -mtime -7 -print0 | xargs -0 ls -lt | head"}, {"invocation": "Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters", "cmd": "cd /cygdrive/c/Program\\ Files\\ \\(x86\\)"}, {"invocation": "List all files/directories under current directory ensuring white space safety", "cmd": "find -print0 | xargs --null"}, {"invocation": "Print out all files with their paths that have identical content and the same filename in different cases", "cmd": "find * -type f  | xargs md5sum | sort | uniq -Dw32 | awk -F'[ /]' '{ print $NF }' | sort -f | uniq -Di"}, {"invocation": "Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them", "cmd": "find \"$DIR\" -type f \\! -newer \"$a\" \\! -samefile \"$a\" -delete"}, {"invocation": "list all javascipts file which whole name does not contain excludeddir", "cmd": "find . -name '*.js' | grep -v excludeddir"}, {"invocation": "Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files", "cmd": "find . -name '*.py' | tee output.txt | xargs grep 'something'"}, {"invocation": "Print the pathnames of all files from the /tmp/dir1 directory tree", "cmd": "find /tmp/dir1 -exec echo {} \\;"}, {"invocation": "Find all build* directories under /var/www/html/ and reverse sort them", "cmd": "find /var/www/html/ -type d -name \"build*\" | sort -r"}, {"invocation": "List all IP addresses assigned to current hostname, pausing for user interaction after each page.", "cmd": "more /etc/hosts | grep `hostname` | awk '{print $1}'"}, {"invocation": "find all readable files", "cmd": "find / -readable"}, {"invocation": "Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions", "cmd": "find -x / -user george -print0 | xargs -0 chown eva"}, {"invocation": "Prints all business days in a current month.", "cmd": "cal -h | cut -c 4-17"}, {"invocation": "search for all the text files and display the long listing of these files from that directory", "cmd": "find . -name \"*.txt\" -execdir ls -la {} \";\""}, {"invocation": "Print which files differ in \"dir1\" and \"dir2\" recursively", "cmd": "diff -qr dir1/ dir2/"}, {"invocation": "Copy all files matching \"*failed.ipynb\" in the current directory tree to \"./fails\" preserving the directory hierarchy", "cmd": "find . -name \"*failed.ipynb\" | cpio -pd ./fails"}, {"invocation": "Save \"something\" into variable \"param\" in ksh", "cmd": "echo something | read param"}, {"invocation": "Show directory sizes in KB and sort to give the largest at the end", "cmd": "find . -type d -exec du -sk {} \\; |  sort -n -k 1"}, {"invocation": "Recursively search for all directories containing \"foo\" (case insensitive) under the current directory, renaming them to replace \"foo\" (case insensitive) with \"Bar\"", "cmd": "find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +"}, {"invocation": "find the regular/normal file \"myfile\" in the folder /root", "cmd": "find /root/ -name myfile -type f"}, {"invocation": "Find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive", "cmd": "find . -iname '*blah*' \\( -type d -o -type f \\) -mtime -2"}, {"invocation": "Delete all .svn directories under current directory", "cmd": "find . -type d -name .svn -print0|xargs -0 rm -rf"}, {"invocation": "Prints number of days in a current month.", "cmd": "cal $(date +\"%m %Y\") | awk 'NF {DAYS = $NF}; END {print DAYS}'"}, {"invocation": "Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.", "cmd": "cp lib*.so ~/usr/gtest/lib"}, {"invocation": "Split \"$INFILE\" into files of at most \"$SPLITLIMT\" with a numeric suffix and a prefix \"x_\"", "cmd": "split -d -l $SPLITLIMT $INFILE x_"}, {"invocation": "Display variable 'var' without leading and trailing whitespace.", "cmd": "echo $var | awk '{gsub(/^ +| +$/,\"\")}1'"}, {"invocation": "Print the common third whitespace separated fields in \"file1\" and \"file2\"", "cmd": "comm -12 <(awk '{print $3}' file1 | sort -u) <(awk '{print $3}' file2 | sort -u)"}, {"invocation": "create directory dirname with permissions 777", "cmd": "mkdir -m 777 dirname"}, {"invocation": "find all files in current folder which are bigger than 1MB", "cmd": "find ./ -size +1000k"}, {"invocation": "Recursively copies /mnt/usr/lib to the '/usr/' directory, creating symbolic links on each file instead of real copying them.", "cmd": "cp -rs /mnt/usr/lib /usr/"}, {"invocation": "Remove file with inode number 31246", "cmd": "find . -inum 31246 -exec rm [] ';'"}, {"invocation": "Perform a case insensitive search for *.jpg files which are greater than 500KB in size under /ftp/dir/ directory", "cmd": "find /ftp/dir/ -size +500k -iname \"*.jpg\""}, {"invocation": "List all files in a current folder, separating names with semicolon", "cmd": "ls -m | tr -d ' ' | tr ',' ';'"}, {"invocation": "find all the files ending with undo in the current folder and calculate the total size of these files", "cmd": "find . -name \"*.undo\" -ls | awk '{total += $7} END {print total}'"}, {"invocation": "display the number of lines in all the \".c\" files in the current folder", "cmd": "find . -name \"*.c\" -print0 | xargs -0 wc -l"}, {"invocation": "Print the commands that would execute \"myfile\" on all .ogv files from the current directory tree", "cmd": "find ./ -name *.ogv -exec echo myfile {} \\;"}, {"invocation": "Read one character from standard input into variable \"REPLY\"", "cmd": "read -n1"}, {"invocation": "search for the word \"nameserver\" in all the configuration files of the /etc folder", "cmd": "find /etc/ -type f -name \"*.conf\" -print0 | xargs -I {} -0 grep \"nameserver\" \"{}\""}, {"invocation": "display all the files in the current folder which are in the path \"./sr*sc\"", "cmd": "find . -path './sr*sc'"}, {"invocation": "Find all files under $source_dir that match the regex expanded by $input_file_type in their paths", "cmd": "find \"$source_dir\" -type f|egrep \"$input_file_type\""}, {"invocation": "search all the files in the current folder using name patterns", "cmd": "find . -name 'a(b*' -print"}, {"invocation": "Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces", "cmd": "find \"$dir\" -maxdepth 1 -type f | sed 's#.*/#   #'"}, {"invocation": "display all text files in the folder /user/directory which have been modified in today", "cmd": "find /user/directory/* -name \"*txt\" -mtime 0 -type f"}, {"invocation": "Find all SGID files in entire file system", "cmd": "find / -perm +g=s"}, {"invocation": "Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file", "cmd": "find ~/clang+llvm-3.3/bin/ -type f -exec echo basename {} \\;"}, {"invocation": "Delete file with inode number 314167125", "cmd": "find . -type f -inum 314167125 -delete"}, {"invocation": "force delete all the regular/normal files in the current folder", "cmd": "find . -type f -exec rm -fv {} \\;"}, {"invocation": "display all the text files in the current folder", "cmd": "find -name \u201c*.txt\u201d"}, {"invocation": "Search all regular files in the current directory tree for \"string\"", "cmd": "find . -type f -exec grep string {} \\;"}, {"invocation": "create directory temp into home directory", "cmd": "mkdir ~/temp"}, {"invocation": "Find all directories named \"D\" in the current directory tree", "cmd": "find . -name \"D\" -type d"}, {"invocation": "Exclude directory from find . command", "cmd": "find ./ -path ./beta/* -prune -o -iname example.com -print"}, {"invocation": "Execute md5sum command on files found by the find command", "cmd": "find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}, {"invocation": "Pass all the files from the current directory tree as arguments to a single 'echo' command", "cmd": "find . -exec echo {} +"}, {"invocation": "Wrap each line in \"longline\" to a maximum of 30 characters", "cmd": "fold -w30 longline"}, {"invocation": "Prints top-ten list of most used utilities from history.", "cmd": "history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head"}, {"invocation": "Save first IP address of domain 'google.com' in 'address' variable", "cmd": "address=$(dig +short google.com | grep -E '^[0-9.]+$' | head -n 1)"}, {"invocation": "Search regular files from the /path/to/dir directory tree for lines that contain \"_START\" and are enclosed in lines \"@GROUP\" and \"@END_GROUP\"", "cmd": "find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} \\; | grep '_START'"}, {"invocation": "Recursively list all the files and directories that are only in directory /dir1 with their full paths.", "cmd": "diff -rq /dir1 /dir2 | grep -E \"^Only in /dir1.*\" | sed -n 's/://p' | awk '{print $3\"/\"$4}'"}, {"invocation": "Remove trailing whitespaces in .txt files from the current directory tree", "cmd": "find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\\+$//' {} \\+"}, {"invocation": "List the commands in /usr/bin, pausing for user input after each page.", "cmd": "ls /usr/bin | more"}, {"invocation": "Save the first \".\" separated field of the system host name to variable \"HOSTZ\"", "cmd": "HOSTZ=$( hostname | cut -d. -f1 )"}, {"invocation": "Print the absolute path of third-level files under the current directory tree and number the output", "cmd": "ls -d -1 $PWD/**/*/* | nl"}, {"invocation": "Display difference between one.txt and two.txt side-by-side.", "cmd": "diff -y one.txt two.txt"}, {"invocation": "Find all files/directories excluding paths that match '.git' or '.gitignore'", "cmd": "find -print0 | grep -vEzZ '(\\.git|\\.gitignore/)'"}, {"invocation": "Archive \"/path/to/files\" on host \"remotemachine\" authentifying as user \"user\" and compressing data during transmission, copy symlinks as symlinks.", "cmd": "rsync -avlzp user@remotemachine:/path/to/files /path/to/this/folder"}, {"invocation": "Display summary of each specified file in human readable form", "cmd": "du -sh *"}, {"invocation": "Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user", "cmd": "sudo find /home/user/Series/ -iname sample -print0 | sudo xargs -0 rm -r"}, {"invocation": "Unzip \"file.gz\", list the unique lines matching regex pattern '\"searchstring\":\"[^\"]*\"' prefixed by the number of occurrences, sort from least frequent to most frequent", "cmd": "zcat file.gz | grep -o '\"searchstring\":\"[^\"]*\"'| sort | uniq -c | sort -n"}, {"invocation": "recursively change owner of the directory ~/.npm to the current user", "cmd": "sudo chown -R $(whoami) ~/.npm"}, {"invocation": "Read a line from standard input into variable \"REPLY\" with prompt \"> $line (Press Enter to continue)\"", "cmd": "read -p \"> $line (Press Enter to continue)\""}, {"invocation": "Rename \"Tux.png\" to \".Tux.png\"", "cmd": "mv Tux.png .Tux.png"}, {"invocation": "search for all the jpg files in the folder \"/mnt/hda1/zdjecia/test1/\" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>", "cmd": "find /mnt/hda1/zdjecia/test1/ -iname \u201c*.jpg\u201d -type f -exec cp {} -rv /mnt/hda1/test{} \u2018;\u2019"}, {"invocation": "Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago", "cmd": "find $backup_path/* -name *.sql -mtime +30 -exec rm {} \\;"}, {"invocation": "Move all files matching patterns \"*.old\", \".old\", \".*.old\" from the current directory to directory \"../old/\"", "cmd": "find . ! -name . -prune -name '*.old' -exec mv {} ../old/ \\;"}, {"invocation": "Allow all users to execute \"myscript.sh\"", "cmd": "chmod a+x myscript.sh"}, {"invocation": "calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes", "cmd": "find ~/tmp -mtime 0 -exec du -ks {} \\; | cut -f1"}, {"invocation": "Find files in the current directory and below that are less than 500 kB in size", "cmd": "find . -size -500k -print"}, {"invocation": "Generates default-formatted file name of temporary file in a /dev/mapper folder, and saves path to it in a variable 'MAPPER'.", "cmd": "MAPPER=$(mktemp -up /dev/mapper)"}, {"invocation": "Calculate md5 checksum of the list of all files/dirs in /path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in /tmp/file", "cmd": "ls -alR -I dev -I run -I sys -I tmp -I proc /path | md5sum -c /tmp/file"}, {"invocation": "Append the current date in '%d%m%Y-%H-%M' format, '_' and the current username, then save it in 'name' variable", "cmd": "name=\"$(date +'%d%m%Y-%H-%M')_$(whoami)\""}, {"invocation": "Save full path of command \"mktemp\" to variable \"MKTEMP\"", "cmd": "MKTEMP=`which mktemp`"}, {"invocation": "Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes \"UTF\"", "cmd": "file */*.php | grep UTF"}, {"invocation": "Display all files in a folder", "cmd": "find man5 -print"}, {"invocation": "Output \"stuff\", removing \"/foo/bar/\" from the specified path.", "cmd": "basename /foo/bar/stuff"}, {"invocation": "delete all the files in the current folder which are bigger than 1KB", "cmd": "find . -size +1024 ?print|xargs -i rm \\;"}, {"invocation": "Find the core files and  remove them", "cmd": "find . -name \u201ccore\u201d -exec rm -f {} \\;"}, {"invocation": "Display an infinite number of lines consisting of \"y\", until the user presses the Q key.", "cmd": "yes | cat | more"}, {"invocation": "Print crontabs of all users in system, skipping messages that some users don`t have crontab.", "cmd": "cat /etc/passwd | sed 's/^\\([^:]*\\):.*$/crontab -u \\1 -l 2>\\&1/' | sh | grep -v \"no crontab for\""}, {"invocation": "Create a tar archive with all *.java files under the current directory", "cmd": "find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"}, {"invocation": "Change the owner of \"$JBOSS_CONSOLE_LOG\" to \"$JBOSS_USER\"", "cmd": "chown $JBOSS_USER $JBOSS_CONSOLE_LOG"}, {"invocation": "Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output", "cmd": "find . -iname *.page -exec ~/t.sh {} \\; | sort"}, {"invocation": "Find all files/directories with '.js' extension under current directory tree without descending into './directory'", "cmd": "find . -path ./directory -prune -o -name '*.js' -print"}, {"invocation": "Remove leading and trailing spaces or tabs from \"   wordA wordB wordC   \"", "cmd": "echo \"   wordA wordB wordC   \" | sed -e 's/^[ \\t]*//' | sed -e 's/[ \\t]*$//'"}, {"invocation": "Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end", "cmd": "find /etc -maxdepth 2 -name \"*.conf\" | tail"}, {"invocation": "Force create a symbolc link named \"softlink_name\" to \"source_file_or_directory_name\" without dereferencing \"softlink_name\"", "cmd": "ln -sfn source_file_or_directory_name softlink_name"}, {"invocation": "Disable exiting the shell on error", "cmd": "set +e"}, {"invocation": "find all the files ending with \".coffee\" in the current folder and search for the words \"re\" in each line", "cmd": "find . -name \\*.coffee -exec grep -m1 -i 're' {} \\;"}, {"invocation": "Change the ownership of all aluno1's files in the current directory and below to aluno2", "cmd": "find . -user aluno1 -exec chown aluno2 {}"}, {"invocation": "Set variable \"fname\" to the basename of path specified in variable \"f\", that is remove everything up to the last slash if present.", "cmd": "fname=`basename $f`"}, {"invocation": "List all empty files in the current directory tree", "cmd": "find . -type f -empty"}, {"invocation": "Print pathname of a file that is connected to the standard output of the command \"yes\"", "cmd": "echo <(yes)"}, {"invocation": "Send TERM signal to process with id listed in '/var/run/DataBaseSynchronizerClient.pid' file", "cmd": "kill `cat /var/run/DataBaseSynchronizerClient.pid`"}, {"invocation": "Find all regular files residing in the current directory tree and search them for string \"/bin/ksh\"", "cmd": "find . -type f -print | xargs grep -i 'bin/ksh'"}, {"invocation": "Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar", "cmd": "find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +"}, {"invocation": "display all the regular files in the current folder that are less than 10KB", "cmd": "find . -type f -size -10k"}, {"invocation": "Variable PID contains a process ID, send SIGTERM to this process if it exists.", "cmd": "kill $PID"}, {"invocation": "find the file \"dateiname\" in the current folder ( case insensitive search)", "cmd": "find -iname \"Dateiname\""}, {"invocation": "split compressed content of the directory /home into pieces per 4000 mb named as  \"/media/DRIVENAME/BACKUPNAME.tgz.NNN\"", "cmd": "tar --one-file-system -czv /home | split -b 4000m - /media/DRIVENAME/BACKUPNAME.tgz"}, {"invocation": "SSH into \"hostname\" on port 22 as user \"myName\"", "cmd": "ssh -l myName -p 22 hostname"}, {"invocation": "Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in", "cmd": "find `pwd` -name file.ext |xargs -l1 dirname"}, {"invocation": "Recursively change the owner to \"$USER\" and group to \"$GROUP\" of \"/var/lib/cassandra\"", "cmd": "sudo chown -R  $USER:$GROUP /var/lib/cassandra"}, {"invocation": "Find all files/directories under /myfiles that were modified 2 days ago", "cmd": "find /myfiles -mtime 2"}, {"invocation": "Find out all *.sh owned by user vivek", "cmd": "find / -user vivek -name \"*.sh\""}, {"invocation": "display all the files ending with .c in the current folder", "cmd": "find . -name \\*.c -print0"}, {"invocation": "Print groups of all users logged in", "cmd": "groups $(who | cut -d' ' -f 1)"}, {"invocation": "Find executable files", "cmd": "find . -perm -100 -print"}, {"invocation": "Search the current directory tree for files modified less than 5 days ago", "cmd": "find . -mtime -5"}, {"invocation": "Recursively finds all '*.pdf' files in a current folder and removes them.", "cmd": "find . -name \"*.pdf\" -exec rm {} \\;"}, {"invocation": "Remove files matching pattern '*-*x*.*' from the current directory tree", "cmd": "find  -name '*-*x*.*' | xargs rm -f"}, {"invocation": "Connect to host \"remotehost\" as ssh user \"user\" to copy remote file \"/location/KMST_DataFile_*.kms\" to current directory on local host.", "cmd": "scp -v user@remotehost:/location/KMST_DataFile_*.kms"}, {"invocation": "Search the regular files of the current directory tree for string \"whatever\"", "cmd": "find . -type f | xargs grep whatever"}, {"invocation": "Make directory \"/data/db\"", "cmd": "sudo mkdir /data/db"}, {"invocation": "Search the .py files residing in the current directory tree for \"something\"", "cmd": "find . -name \"*.py\" -type f -exec grep \"something\" {} \\;"}, {"invocation": "Output the file name \"file.txt' from the path \"some/unknown/amount/of/sub/folder/file.txt\"", "cmd": "basename \"some/unknown/amount/of/sub/folder/file.txt\""}, {"invocation": "display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.", "cmd": "find / -type f \\( -perm -4000 -o -perm -2000 \\) -exec ls -l {} \\;"}, {"invocation": "Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem", "cmd": "find / -newer ttt -user wnj -print"}, {"invocation": "change the group of all the files which belong to the user edwarda to pubs", "cmd": "find / -user edwarda -exec chgrp pubs \"{}\" \\;"}, {"invocation": "Remove files from the file system that are owned by nobody", "cmd": "find / -nouser -exec rm {} \\;"}, {"invocation": "Find all files/drectories under '/u/bill' directory tree that have been accessed in the last 2 to 6 minutes", "cmd": "find /u/bill -amin +2 -amin -6"}, {"invocation": "Search the /path directory tree for files having permissions 777", "cmd": "find /path -perm ugo+rwx"}, {"invocation": "Print information about all users who are logged in", "cmd": "who -la"}, {"invocation": "display a long listing of all regular files  in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 -type f | xargs ls -l"}, {"invocation": "Gets string with MAC address of eth0 network interface.", "cmd": "ifconfig eth0 | grep HWaddr"}, {"invocation": "Make a copy of the entire contents of dir1 in the Pictures directory located in the user's home directory.", "cmd": "cp -r dir1/ ~/Pictures/"}, {"invocation": "Shows strings that NOT match regex '^($|\\s*#|\\s*[[:alnum:]_]+=)'", "cmd": "echo \"${line}\" | egrep --invert-match '^($|\\s*#|\\s*[[:alnum:]_]+=)'"}, {"invocation": "find all pdf files in the current folder", "cmd": "find . -name \u201c*.pdf\u201d -print"}, {"invocation": "find all the files in the folder /path/to/dir which have been modified after a specific date (Feb 07)", "cmd": "find /path/to/dir -newermt \u201cFeb 07\u201d"}, {"invocation": "search for files having python in filename", "cmd": "find / -name '*python*'"}, {"invocation": "Recursively change the user and group of all files in \"/var/cache/jenkins\" to \"root\"", "cmd": "chown -R root:root /var/cache/jenkins"}, {"invocation": "Print the average time of 4 ping requests to \"www.stackoverflow.com\"", "cmd": "ping -c 4 www.stackoverflow.com | sed '$!d;s|.*/\\([0-9.]*\\)/.*|\\1|'"}, {"invocation": "create directory subdirectory", "cmd": "mkdir subdirectory"}, {"invocation": "Print lines in \"foo.txt\" that are found only once", "cmd": "sort foo.txt | uniq"}, {"invocation": "Creates temporary file and saves path to it in a 'tmpfile' variable.", "cmd": "tmpfile=$(mktemp)"}, {"invocation": "display all the html files in the current folder that have been modified exactly 7*24 hours ago", "cmd": "find . -mtime 7 -name \"*.html\" -print"}, {"invocation": "find all the javascript files in current folder using regular expressions", "cmd": "find . -regex '.+\\.js'"}, {"invocation": "find files in home directory which are modified yesterday", "cmd": "find ~/ -daystart -type f -mtime 1"}, {"invocation": "Find all directories recursively starting from / and skipping the contents of /proc/, and count them", "cmd": "find / -path /proc -prune -o -type d | wc -l"}, {"invocation": "Reread user's .profile configuration file.", "cmd": "source ~/.profile"}, {"invocation": "Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"", "cmd": "comm -12 <(comm -12 <(comm -12 <(sort file1) <(sort file2)) <(sort file3)) <(sort file4)"}, {"invocation": "Merge 10 already sorted files and display the result, pausing at each page of output.", "cmd": "sort -m a b c d e f g h i j | more"}, {"invocation": "Find files in the current directory tree whose content was changed within the last 60 minutes", "cmd": "find . -mmin -60"}, {"invocation": "display all normal/regular files in the folder \"pathfolder\"", "cmd": "find pathfolder -type f"}, {"invocation": "replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)", "cmd": "find . -type f -print0 | xargs -0 sed -i 's/Application/whatever/g'"}, {"invocation": "Print unique lines of sorted file \"file1\" when compared with the list of first space separated fields of all sorted strings of file \"file2\"", "cmd": "cut -d' ' -f1 file2 | comm -13 - file1"}, {"invocation": "Find all *.c files located under /home and below", "cmd": "find /home -name \"*.c\""}, {"invocation": "search for swap files (.swp files) in temp folder and remove them", "cmd": "find /tmp -name '*.swp' -exec rm {} \\;"}, {"invocation": "Test if \"file.tar.gz\" is corrupt", "cmd": "gunzip -t file.tar.gz"}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*", "cmd": "find . -mtime 0 -not \\( -name '*.swp' -o -regex '\\./es.*' -o -regex '\\./en.*' \\)"}, {"invocation": "Format bash array \"${arr}\" in columns", "cmd": "echo \" ${arr[@]/%/$'\\n'}\" | column"}, {"invocation": "convert epoch second timestamp to date", "cmd": "date -d @1278999698 +'%Y-%m-%d %H:%M:%S'"}, {"invocation": "Send one ping request to local machine.", "cmd": "ping -c 1 127.0.0.1 #ping your adress once"}, {"invocation": "View the man page of find", "cmd": "man find"}, {"invocation": "Print unique lines of sorted file \"A.txt\" compared to sorted file \"B.txt\"", "cmd": "comm -23 <(sort -u A.txt) <(sort B.txt)"}, {"invocation": "Find all *.txt files/directories under current directory", "cmd": "find -name \\*.txt"}, {"invocation": "Change permissions to 644 for all regular files in and below the current directory", "cmd": "find . -type f -print | sed -e 's/^/\"/' -e 's/$/\"/' | xargs chmod 644"}, {"invocation": "Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found", "cmd": "find /var/log/crashes -name app-\\*\\.log -mmin -5 -print | head -n 1"}, {"invocation": "Insert the current host name on line 15 of \"test.html\"", "cmd": "sed -i \"15i `hostname`\" test.html"}, {"invocation": "Print equal lines in compressed files \"number.txt\" and \"xxx.txt\"", "cmd": "comm -12 <(zcat number.txt.gz) <(zcat xxx.txt.gz)"}, {"invocation": "Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours", "cmd": "find \"/path/to/files\" -mmin +120"}, {"invocation": "Find all files in the current directory tree whose names begin with '-'", "cmd": "find . -name '[-]*'"}, {"invocation": "Search the current directory tree for directories", "cmd": "find \"$PWD\" -type d"}, {"invocation": "display all the regular/normal files in the current folder excluding the files with the name mmm", "cmd": "find . -name mmm -prune -o -type f -print"}, {"invocation": "Calculate the md5 sum of the contents of the sorted list of files \"$FILES\"", "cmd": "cat $(echo $FILES | sort) | md5sum"}, {"invocation": "Display a sorted count of all the characters in \"filename\"", "cmd": "fold -w1 filename | sort | uniq -c | sort -nr"}, {"invocation": "Rename \"www_new\" to \"www\" even if \"www\" directory exists", "cmd": "mv -T www_new www"}, {"invocation": "Search the current directory tree for an html file having the text 'Web sites' in it", "cmd": "find . -type f -iname \\*.html -exec grep -s \"Web sites\" {} \\;"}, {"invocation": "Find all directories under /home/me/\"$d\"", "cmd": "find /home/me/\"$d\" -type d"}, {"invocation": "Save a comma separated list of all directories under current directory tree to variable 'FOLDER'", "cmd": "FOLDERS=$(find . -type d -print0 | tr '\\0' ',')"}, {"invocation": "find for a word in all the regular files in the current directory", "cmd": "find . -type f -print | xargs grep -li 'bin/ksh'"}, {"invocation": "Find all .php files in the current directory tree", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "Find all 400 permission files under /data directory", "cmd": "find /data -type f -perm 400"}, {"invocation": "Print yesterday's date as yyy:mm:dd", "cmd": "date +%Y:%m:%d -d \"1 day ago\""}, {"invocation": "create a compressed archive \"compressFileName.tar.gz\" with verbose output", "cmd": "tar -zcvf compressFileName.tar.gz folderToCompress"}, {"invocation": "display all directories in vim folder do not search in sub directories", "cmd": "find .vim/ -maxdepth 1 -type d"}, {"invocation": "Remove trailing white spaces from all files under dir directory", "cmd": "find dir -type f -exec sed -i 's/ *$//' '{}' ';'"}, {"invocation": "Change the owner of all \".txt\" files in directory tree \"/mydir\" to \"root\"", "cmd": "find /mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}, {"invocation": "Set timestamp of old_file.dat to specified timestamp.", "cmd": "touch -t 200510071138 old_file.dat"}, {"invocation": "Create intermediate directoriy path2 as required and directories a..z", "cmd": "mkdir -p path2/{a..z}"}, {"invocation": "change the ownership of all the files in the file system from edwarda to earnestc", "cmd": "find / -user edwarda -exec chown earnestc \"{}\" \\;"}, {"invocation": "Pipe 3 newlines to sshe-keygen, answering prompts automatically.", "cmd": "echo -e \"\\n\\n\\n\" | ssh-keygen -t rsa"}, {"invocation": "Find files patching \"pattern\"", "cmd": "find . -name \"pattern\" -print"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder.", "cmd": "rm `find . -name \\*.pyc`"}, {"invocation": "Enables 'globstar' (recursive globbing) shell option.", "cmd": "shopt -s globstar"}, {"invocation": "find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them", "cmd": "find /home -size +5000000b -name \"error_log\" -exec rm -rf {} \\;"}, {"invocation": "Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'", "cmd": "find /home/foo \\( -name '.DS_Store' -or -name '._.DS_Store' -or -name '._*' -or -name '.TemporaryItems' -or -name '.apdisk' \\) -exec rm -rf {} \\;"}, {"invocation": "Locate all the hard links of file `passwd'", "cmd": "find / -samefile passwd"}, {"invocation": "Find all regular files in the home directory tree that were modified in the last 24 hours", "cmd": "find ~ -type f -mtime 0"}, {"invocation": "Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable \"i\", waiting 1 second for a reply, and output only lines containing \"from\" to standard output.", "cmd": "ping -W 1 -c 1 10.0.0.$i | grep 'from' &"}, {"invocation": "search for files in the current folder using name patterns", "cmd": "find . -name '[mM][yY][fF][iI][lL][eE]*'"}, {"invocation": "Decompress and unarchive \"hello-0.2.tar.gz\"", "cmd": "gzip -dc hello-0.2.tar.gz | tar -xf -"}, {"invocation": "Calculate the md5 sum of all files in \"/your/dir\" including content and filenames", "cmd": "grep -ar -e . /your/dir | md5sum | cut -c-32"}, {"invocation": "Make 3 directories named \"~/Labs/lab4a/folder\" followed by the number 1, 2, or 3", "cmd": "mkdir ~/Labs/lab4a/folder{1..3}"}, {"invocation": "Copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line.", "cmd": "cp --parents src/prog.js images/icon.jpg /tmp/package"}, {"invocation": "replace the word apple with orange in all the regular/normal files in the current folder", "cmd": "find ./ -type f -exec sed -i -e 's/apple/orange/g' {} \\;"}, {"invocation": "Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx", "cmd": "find . -perm u=rwx,g=rx,o=rx"}, {"invocation": "Change directory to the directory containing the executable file of command \"oracle\"", "cmd": "cd $(which oracle | xargs dirname)"}, {"invocation": "display all the regular files in the current folder which dont not have the permission 777", "cmd": "find . -type f ! -perm 777"}, {"invocation": "display all the regular files in the current folder which have the permission 777", "cmd": "find . -type f -perm 777"}, {"invocation": "Save the current date, system host name, and \"$changes\" with newlines removed to variable \"subj\"", "cmd": "subj=\"$(date) - $(hostname) - $(echo \"$changes\" | sed \"s/$/,/\" | tr \"\\n\" \" \")\""}, {"invocation": "Prints line count of each file within current directory.", "cmd": "find . -type f -print | xargs -L1 wc -l"}, {"invocation": "display all the files in the folder \"/Users/Me/Desktop\" which belong to the user \"popo\" and which have the permission 777", "cmd": "find /Users/Me/Desktop -user popo -perm 777"}, {"invocation": "Remove all *~ files under current directory with confirmation prompt", "cmd": "find . -name '*~' -ok rm {} \\;"}, {"invocation": "Delete all files named \"filename\" in the current directory tree, except those with paths ending in \"/myfolder/filename\"", "cmd": "find . -name \"filename\" -and -not -path \"*/myfolder/filename\" -delete"}, {"invocation": "find all the symbolic links in the current folder and check the file type and display the output of those files which are broken", "cmd": "find ./ -type l -exec file {} \\; |grep broken"}, {"invocation": "Change directory to \"/path/to/pdf\"", "cmd": "cd  /path/to/pdf"}, {"invocation": "Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them", "cmd": "find $DIR -type f -mtime +450 -exec rm {} \\;"}, {"invocation": "Change permissions of \"mksdcard\" to 755", "cmd": "sudo chmod 755 mksdcard"}, {"invocation": "search all the files in the folder \"myfiles\" which have the word \"blue\" in their name", "cmd": "find /myfiles -name '*blue*'"}, {"invocation": "Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*", "cmd": "find /path/to/directory/* -maxdepth 0 -type d -printf '%f\\n'"}, {"invocation": "Prints the length and contents of the longest line in filename", "cmd": "cat filename | awk '{print length, $0}'|sort -nr|head -1"}, {"invocation": "List all cron jobs which contain \"word\".", "cmd": "crontab -l | egrep \"word\""}, {"invocation": "search files in the folder /home which have been modified after /tmp/after and before /tmp/before", "cmd": "find /home/ -type f -newer /tmp/after -not -newer /tmp/before"}, {"invocation": "List all regular files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -type f -mmin -60 -print0 | xargs -r0 ls -l"}, {"invocation": "Find directories in the /path directory tree whose names are 33 characters in length", "cmd": "find /path -type d -printf \"%f\\n\" | awk 'length==33'"}, {"invocation": "Print the list of files in the current directory tree skipping SVN files", "cmd": "find . -path '*/.svn*' -prune -o -print"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f -print0|xargs -0 ls -drt|tail -n 1"}, {"invocation": "Search for \"1234567890\" in every gzip file modified between 8:00 and 9:00 on 2014-04-30", "cmd": "find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00' |xargs gunzip -c | grep 1234567890"}, {"invocation": "Count the number of users logged in", "cmd": "who | wc -l"}, {"invocation": "Find all the files under /etc directory which are larger than 100k", "cmd": "find /etc -size +100k"}, {"invocation": "Merge already sorted files in the current directory ending in \".$suffix\"", "cmd": "sort -m *.$suffix"}, {"invocation": "display the three smallest files by size in a folder.", "cmd": "find /etc/ -type f -exec ls -s {} + | sort -n | head -3"}, {"invocation": "Find all files accessed on the 29th of September, 2008, starting from the current directory", "cmd": "find . -type f -newerat 2008-09-29 ! -newerat 2008-09-30"}, {"invocation": "Archive files (not directories) in \"sorce_dir\" to \"target_dir\"", "cmd": "rsync -a --filter=\"-! */\" sorce_dir/ target_dir/"}, {"invocation": "Output \"testFile.txt.1\" without the \".1\" suffix.", "cmd": "basename testFile.txt.1 .1"}, {"invocation": "Find all *foo files/directories under current directory", "cmd": "find . -name '*foo'"}, {"invocation": "Recursively copy \"dir_a\" to \"dir_b\" and delete any new files in \"dir_b\"", "cmd": "rsync -u -r --delete dir_a dir_b"}, {"invocation": "Rename \"original.filename\" to \"new.original.filename\"", "cmd": "mv original.filename new.original.filename"}, {"invocation": "display all the files having the word \"searched phrasse\" in their name in the current folder excluding those from the paths \"/tmp/\" and \"./var/log\"", "cmd": "find . -type f -name \"*searched phrasse*\" ! -path \"./tmp/*\" ! -path \"./var/log/*\""}, {"invocation": "Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory", "cmd": "find . -maxdepth 2 -name 'onlyme*'"}, {"invocation": "Find files/directories that does not have write permssion for group or others", "cmd": "find /path ! -perm -022"}, {"invocation": "Display the sizes and filepaths of all files/directories sorted in ascending order of size", "cmd": "du -a --max-depth=1 | sort -n"}, {"invocation": "Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.", "cmd": "find . -type f -name \"*.py[c|o]\" -exec rm -f {} +"}, {"invocation": "Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak", "cmd": "find . -type f -name INPUT.txt -print0 | xargs -0 -I file  sed -i.bak '/^#/d' file"}, {"invocation": "Prints a random line from $FILE", "cmd": "sort --random-sort $FILE | head -n 1"}, {"invocation": "Set permissions of all directories under \"/path/to/base/dir\" to 755", "cmd": "chmod 755 $(find /path/to/base/dir -type d)"}, {"invocation": "Measure the disk space taken up by all *.txt files in directory trees folder1 and folder2", "cmd": "find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1"}, {"invocation": "Recursively removes all files and folders named '.svn' in a current folder.", "cmd": "find . -name .svn |xargs rm -rf"}, {"invocation": "Recursively find all files ending with '*.txt' and print they names and content", "cmd": "find  . -name \\*.txt -print -exec cat {} \\;"}, {"invocation": "Print a time stamp for each successful ping to \"host\"", "cmd": "ping host | awk '{if($0 ~ /bytes from/){print strftime()\"|\"$0}else print}'"}, {"invocation": "Remove junk files modified more than 31 days ago recursively", "cmd": "find /path/to/junk/files -type f -mtime +31 -print0 | xargs -0 -r rm -f"}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}'"}, {"invocation": "Join lines in file \"aa\" with lines in file \"bb\" if the lines share a common first word", "cmd": "join <(sort aa) <(sort bb)"}, {"invocation": "Find files readable only by the group", "cmd": "find . -perm g=r -type f -exec ls -l {} \\;"}, {"invocation": "Print only common strings in content of files 'file1.sorted' and 'file2.sorted'", "cmd": "comm -1 -2 file1.sorted file2.sorted"}, {"invocation": "Search the current directory tree for files whose names begin with 'my'", "cmd": "find . -name 'my*'"}, {"invocation": "Find all files/directores under /etc and run the file command on each of them", "cmd": "find /etc -print0 | xargs -0 file"}, {"invocation": "Search all variables and their values for \"NAME\"", "cmd": "env | grep NAME"}, {"invocation": "find all foo.bar files in the entire file system and which are present in the same partition as root.", "cmd": "find / -name foo.bar -print -xdev"}, {"invocation": "Print 'infile' content with line numbers", "cmd": "cat -n infile"}, {"invocation": "Find all *.txt files/directories under current directory terminating their names/paths with null character", "cmd": "find . -name '*.txt' -print0"}, {"invocation": "Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes", "cmd": "find /data1/realtime -mmin -60 -type d"}, {"invocation": "Find all *.dbf files/directories in entire file system", "cmd": "find / -name \"*.dbf\""}, {"invocation": "create an archive using pbzip2 as a compress program", "cmd": "tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 /DIR_TO_ZIP/"}, {"invocation": "Send SIGTERM signal to entire process tree starting from ID 24901 and below.", "cmd": "kill `pstree -p 24901 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/' | tr \"\\n\" \" \"`"}, {"invocation": "Search for the files that are owned by user rooter or by user www-data", "cmd": "find -user root -o -user www-data"}, {"invocation": "finds all directories named CVS, and deletes them and their contents.", "cmd": "find . -type d -name CVS -exec rm -r {} \\;"}, {"invocation": "Remount \"/dev/block/mtdblock3\" on \"/system\" with read only permission", "cmd": "mount -o remount,ro -t yaffs2 /dev/block/mtdblock3 /system"}, {"invocation": "search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.", "cmd": "find ~/junk  -name 'cart[4-6]' -exec rm {}  \\;"}, {"invocation": "Create a symbolic link in directory \"new\" for each file in \"original\" directory tree", "cmd": "find original -type f -exec ln -s {} new/{} \\;"}, {"invocation": "Find all README's in /usr/share", "cmd": "find /usr/share -name README"}, {"invocation": "Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory", "cmd": "find  / -iname findcommandexamples.txt"}, {"invocation": "Display mime type of file specified by variable \"file\"", "cmd": "file -ib \"$file\""}, {"invocation": "Prepend date to ping output to google.com", "cmd": "ping google.com | xargs -L 1 -I '{}' date '+%+: {}'"}, {"invocation": "Get current directory name without full path, ie. the part after the last /", "cmd": "basename \"$(pwd)\""}, {"invocation": "Search for all *.ogg (case insensitive) files in the $HOME directory that have an access time of greater than 30 days", "cmd": "find $HOME -iname '*.ogg' -atime +30"}, {"invocation": "display the count of all normal/regular files in current directory", "cmd": "find . -type f | wc -l"}, {"invocation": "change owner and group of the file \"/path/to/yourapp\" to root", "cmd": "chown -v root:root /path/to/yourapp"}, {"invocation": "Print the current working directory and the base name of \"$1\"", "cmd": "echo \"$(pwd)/$(basename \"$1\")\""}, {"invocation": "Find all .py files in the current directory except \"setup.py\" and those beginning with \"test_\"", "cmd": "find . -maxdepth 1 -mindepth 1 \\( -name '*.py' -not -name 'test_*' -not -name 'setup.py' \\)"}, {"invocation": "Sorts content of the $tmp file and filters out all strings with ':0'.", "cmd": "sort $tmp | grep -v ':0'  #... handle as required"}, {"invocation": "Prints process tree of user 'user' processes.", "cmd": "pstree -p user"}, {"invocation": "Display the 5 smallest files in the current directory and its sub-directories.", "cmd": "find . -type f -exec ls -s {} \\; | sort -n  | head -5"}, {"invocation": "Find all files with the SUID bit set", "cmd": "find / -perm -u+s"}, {"invocation": "Recursively changes group ownership of everything within '.git' to 'git'.", "cmd": "chgrp -R git .git"}, {"invocation": "Find all empty regular files in the current directory and below", "cmd": "find . -type f -empty"}, {"invocation": "Print \"new.txt\" with line numbers prepended", "cmd": "cat new.txt  | nl"}, {"invocation": "Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*", "cmd": "find /path/to/directory/* -maxdepth 0 -type d -exec basename -a {} +"}, {"invocation": "search for the file \"foobar.txt\" in the folder \"/home/mywebsite\"", "cmd": "find /home/mywebsite -type f -name \"foobar.txt\""}, {"invocation": "Split \"input.txt\" into files of at most 10 bytes each with prefix \"xxx/split-file\"", "cmd": "split -b 10 input.txt xxx/split-file"}, {"invocation": "List all files in the /var directory tree whose size is greater than 10 megabytes", "cmd": "find /var/ -size +10M -ls"}, {"invocation": "Remove all files with names like \"vmware-*.log\" from the current directory tree", "cmd": "find . -name vmware-*.log -delete"}, {"invocation": "find all files in the current folder that have a single letter in their name and have not been modified today", "cmd": "find . -name \\? -mtime +0"}, {"invocation": "Replace all newlines with spaces in standard input", "cmd": "sed -z 's/\\n/ /'g"}, {"invocation": "List files in the current directory and below", "cmd": "find -ls"}, {"invocation": "Change permissions of \"/usr/bin/wget\" to 777", "cmd": "chmod 777 /usr/bin/wget"}, {"invocation": "Find all directories named \"D\" in the \"A\" directory tree", "cmd": "find A -type d -name 'D'"}, {"invocation": "Find all files under /home/username/public_html/sites/all/themes and set their permission to 640", "cmd": "find /home/username/public_html/sites/all/themes -type f -exec chmod 640 {} +"}, {"invocation": "Search the home directory tree for video files", "cmd": "find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'"}, {"invocation": "Delete all files/directories with node number $inum under current directory tree", "cmd": "find . -inum $inum -exec rm {} \\"}, {"invocation": "Save the current working directory to variable \"CURRENT\"", "cmd": "CURRENT=`pwd`"}, {"invocation": "Get a list of files and directories in the current directory tree", "cmd": "find . -print0 | xargs -0 echo"}, {"invocation": "Dump the character output of \"echo 'hi'\"", "cmd": "echo 'hi' | od -c"}, {"invocation": "Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.", "cmd": "find / -type f -exec grep -l \"text-to-find-here\" {} \\;"}, {"invocation": "Find all directories and for each of them, print an mv command to move it to /new/location", "cmd": "find . -type d   -execdir echo /bin/mv {} /new/location \\;"}, {"invocation": "Remove all .gz files in the current directory tree", "cmd": "find . -name '*.gz' -type f -printf '\"%p\"\\n' | xargs rm -f"}, {"invocation": "Print \"echo ping -c 2\" on each string in file 'ips'", "cmd": "cat ips | xargs -n1 echo ping -c 2"}, {"invocation": "display a long listing of all the log files in the current folder which are bigger than 1MB", "cmd": "find . -size +1000k -name *.log -print0 | xargs -0 ls \u2013lSh"}, {"invocation": "Search the current directory tree for files named \"accepted_hits.bam\"", "cmd": "find . -name \"accepted_hits.bam\""}, {"invocation": "Give a long listing of all the  *.pl files (Perl files) beneath the current directory.", "cmd": "find . -name \"*.pl\" -exec ls -ld {} \\;"}, {"invocation": "search for all the files in current folder which start with \"file2015-0\" and move them to frst 400 fiiles  to another folder", "cmd": "find . -name \"file2015-0*\" | head -400 | xargs -I filename mv  filename"}, {"invocation": "find in the entire file system for the files which have sticky bit.", "cmd": "find / -perm 0551"}, {"invocation": "Sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place", "cmd": "sort inputfile | uniq | sort -o inputfile"}, {"invocation": "Change the permission of all regular files under current directory tree to 644", "cmd": "find . -type f -exec chmod 644 {} \\;"}, {"invocation": "Shows only process trees rooted at processes of this user.", "cmd": "pstree user"}, {"invocation": "display all files in the current folder and do not search in the sub directories", "cmd": "find . -maxdepth 0"}, {"invocation": "Create intermediate directories as required and directory project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}", "cmd": "mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}"}, {"invocation": "Set variable value to current kernel release name.", "cmd": "value=$(uname -r)"}, {"invocation": "force remove all the c files in the current folder", "cmd": "find . -name \"*.c\" | xargs rm -rf"}, {"invocation": "Search for the wp-config.php file in /var/www and one level below", "cmd": "find /var/www/ -name wp-config.php -maxdepth 2"}, {"invocation": "Print the list of files and directories of the /etc directory", "cmd": "find /etc/. ! -name /etc/."}, {"invocation": "Find all files under current directory that were modified less than 1 day ago", "cmd": "find -mtime -1"}, {"invocation": "Search /usr/bin for regular files that have been modified within the last 10 days", "cmd": "find /usr/bin -type f -mtime -10"}, {"invocation": "Replace \",,\" with \", ,\" in \"$file\" and display the \",\" delimited result as a table in \"less\" with a shift value of 5 and line numbers", "cmd": "cat \"$file\" | sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S"}, {"invocation": "find all the files in the file system which have the permission 777 and with the name \"dateiname\"", "cmd": "find / -perm 777 -iname \"Dateiname\""}, {"invocation": "find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them", "cmd": "find . -type f -mtime 2 -mtime -3 -daystart -exec ls -l {} \\;"}, {"invocation": "Find a single file called tecmint.txt and remove it", "cmd": "find . -type f -name \"tecmint.txt\" -exec rm -f {} \\;"}, {"invocation": "Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names", "cmd": "find . -type d -a ! -name '.?*' -o -name '.?*' -a ! -prune"}, {"invocation": "Recursively search for everything under the current directory, displaying human-readable file type description for each entry.", "cmd": "find . -exec file {} \\;"}, {"invocation": "Show all values (without the names) of variables whose name or value contains \"VARIABLE_NAME\"", "cmd": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');"}, {"invocation": "Search the current directory recursively for regular files, skipping hidden files in the current directory", "cmd": "find * -type f -print"}, {"invocation": "Find the \"*.foo\" files in the current directory tree that are not under \".snapshot\" directories", "cmd": "find . -name .snapshot -prune -o -name '*.foo' -print"}, {"invocation": "Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/management/commands/tests directory", "cmd": "find ./cms/djangoapps/contentstore/management/commands/tests -iname *.css | xargs sed -i s/[Ee][Dd][Xx]/gurukul/g"}, {"invocation": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories", "cmd": "find . -name foo.mp4 -printf '%h\\n'"}, {"invocation": "Copy and always overwrite all files in \"/zzz/zzz\" to \"/xxx/xxx\"", "cmd": "yes | cp -rf /zzz/zzz/* /xxx/xxx"}, {"invocation": "Find all files larger than 20000k and print their names and sizes", "cmd": "find / -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}, {"invocation": "Find all files under current directory and change their permission to 600", "cmd": "find . -type f -exec chmod 600 {} \\;"}, {"invocation": "Find .rmv files in the current directory recursively", "cmd": "find . -name *.rmv"}, {"invocation": "return every file that does not have bar somewhere in its full pathname", "cmd": "find . ! -path '*bar*' -print"}, {"invocation": "find md5sum of 'string to be hashed'", "cmd": "echo 'string to be hashed' | md5"}, {"invocation": "Removes all empty folders under '/path/to/the/folder' path.", "cmd": "find /path/to/the/folder -depth -type d -print0 | xargs -0 rmdir"}, {"invocation": "find all regular/normal files which have cpp folder in their path", "cmd": "find . -type f -path \"*/cpp/*\""}, {"invocation": "change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name", "cmd": "find . -type f -print0 | xargs -0 chmod 664"}, {"invocation": "find all the reguar/normal php files in current directory.", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "search for all the directories ending with \".mp3\" in the file system and move them to the folder /mnt/mp3", "cmd": "find / -iname \"*.mp3\" -type d -exec /bin/mv {} /mnt/mp3 \\;"}, {"invocation": "Save the system host name into variable \"HOST\"", "cmd": "HOST=$(hostname)"}, {"invocation": "Print out the contents of all *.txt files in the home directory", "cmd": "find ~/ -name '*.txt' -exec cat {} ;"}, {"invocation": "find md5sums of files named \"file*.txt\"", "cmd": "md5sum file*.txt"}, {"invocation": "force delete all the core files in the home folder", "cmd": "find $HOME -name core -exec rm -f {} \\;"}, {"invocation": "Print source of the file system containing $path.", "cmd": "df -P $path | tail -1 | cut -d' ' -f 1"}, {"invocation": "Find all regular files named postgis-2.0.0 under current directory", "cmd": "find . -type f -name \"postgis-2.0.0\""}, {"invocation": "SSH into host \"$1\" using key file \"/path/to/ssh/secret/key\" and execute command \"$2\"", "cmd": "ssh -i /path/to/ssh/secret/key $1 $2"}, {"invocation": "Sets shell option 'nullglob'.", "cmd": "shopt -s nullglob"}, {"invocation": "Find all files in the current directory and below with extension .php and replace \"php\" with \"html\" in their names", "cmd": "find ./ -type f -name \"*.php\"  | xargs -r rename \"s/php/html/\""}, {"invocation": "Print a welcome message with the current user's user name", "cmd": "echo -ne \"Welcome $(whoami)!\\n\""}, {"invocation": "List non-hidden regular files in the current directory tree that were last modified more than 500 days ago", "cmd": "find . -type f -not -name '.*' -mtime +500 -exec ls {} \\;"}, {"invocation": "List the names of the directories in current directory without going into sub-directories", "cmd": "find . -mindepth 1 -maxdepth 1 -type d -printf \"%P\\n\""}, {"invocation": "Add newline before all 2nd and consequent occurrences of '3d3d' in file 'temp' and write each line from the output to files with prefix 'temp' and numeric suffixes", "cmd": "sed 's/3d3d/\\n&/2g' temp | split -dl1 - temp"}, {"invocation": "Change the group to `temp' for all files in the current directory tree that belong to group `root'", "cmd": "find . -group root -print | xargs chgrp temp"}, {"invocation": "Find all the files whose permissions are 777 under current directory", "cmd": "find . -type f -perm 0777 -print"}, {"invocation": "Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"", "cmd": "find . ! \\( -name \"*.exe\" -o -name \"*.dll\" \\)"}, {"invocation": "Print 1 byte from \"/dev/urandom\" as a signed decimal value and no address radix", "cmd": "od -A n -t d -N 1 /dev/urandom"}, {"invocation": "Find all empty files in home directory", "cmd": "find ~ -empty"}, {"invocation": "Search $MYGROUP in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'", "cmd": "MYUSERS=`grep $MYGROUP /etc/group | cut -d \":\" -f4| tr \",\" \"\\n\"`"}, {"invocation": "Find all file in current directory with have .c extenstion & have 777 permission . delete then", "cmd": "find . -name \"*.c\" -a  -perm -777 | xargs rm -rf"}, {"invocation": "Gets domain name from dig reverse lookup.", "cmd": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'"}, {"invocation": "List all files in /home/bozo/projects directory tree that were modified exactly one day ago", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Read a line from standard input into variable \"SSHPASS\" with prompt \"Password: \" and without echoing the input", "cmd": "read -p \"Password: \" -s SSHPASS"}, {"invocation": "find all files in the home folder that are modified in the last 7 days", "cmd": "find $HOME -mtime -7"}, {"invocation": "Replace \",\" with \"\\r\\n\" in \"a,b\"", "cmd": "echo \"a,b\"|sed 's/,/\\r\\n/'"}, {"invocation": "Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody", "cmd": "find . -perm -444 -perm /222 ! -perm /111"}, {"invocation": "Split \"foo.txt\" into files with 1 line each and use a suffix length of 5", "cmd": "split --suffix-length=5 --lines=1 foo.txt"}, {"invocation": "Print every three lines of \"file\" as a comma separated line", "cmd": "paste -sd',,\\n' file"}, {"invocation": "Remount \"/system\" with read and write permission", "cmd": "mount -o remount,rw /system"}, {"invocation": "change owner of all files into current directory except  files named as  './var/foo*' to user www-data", "cmd": "find . -not -iwholename './var/foo*' -exec chown www-data '{}' \\;"}, {"invocation": "Find all level 1 subdirectories of the current directory", "cmd": "find . -maxdepth 1 -type d"}, {"invocation": "Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory", "cmd": "find . -name \"$1\" -type f -print0 | xargs -0 grep -i \"$2\""}, {"invocation": "List the full path of each directory under the current working directory", "cmd": "tree -dfi \"$(pwd)\""}, {"invocation": "unzip and search for a word in all the jar files in the current folder and display the matched file name", "cmd": "find . -iname '*.jar' -printf \"unzip -c %p | grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\\n\" | sh"}, {"invocation": "List all files/directories under current directory using comma (,) as the delimiter for different fields in the output", "cmd": "find . -ls|awk 'BEGIN{OFS=\",\"}$1=$1'"}, {"invocation": "Replace all non-punctuation characters with newlines from standard input", "cmd": "tr -sc '[:punct:]' '\\n'"}, {"invocation": "Gets domain name from dig reverse lookup and save in variable 'go'.", "cmd": "go=$(dig -x 8.8.8.8| awk '/PTR[[:space:]]/{print $NF}')"}, {"invocation": "Sort \"file\" using a buffer with a size 50% of main memory", "cmd": "sort -S 50% file"}, {"invocation": "Find all *.tex files/directories in maximum 2 levels down the current directory", "cmd": "find . -maxdepth 2 -name '*.tex'"}, {"invocation": "Removes all files from current folder but 5 newest ones.", "cmd": "rm `ls -t | awk 'NR>5'`"}, {"invocation": "Find all files under /home/username/public_html/modules  and set their permission to 640", "cmd": "find /home/username/public_html/modules -type f -exec chmod 640 {} +"}, {"invocation": "Merge each line in \"file\" into a single comma separated line", "cmd": "paste -d, -s file"}, {"invocation": "Search for all files with either \"sitesearch\" or \"demo\" in their path names", "cmd": "find . -iregex '.*sitesearch.*' -iregex '.*demo.*'"}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*", "cmd": "find -mtime 0 -not \\( -name '*.swp' -o -path './es*' -o -path './en*' \\)"}, {"invocation": "Print the lines of file \"strings\" specified in file \"index\"", "cmd": "join <(sort index) <(nl strings | sort -b)"}, {"invocation": "Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script1' variable.", "cmd": "script1=`mktemp /tmp/.script.XXXXXX`;"}, {"invocation": "Prepend the reverse history number as negative values to the output of the history command with arguments \"$@\"", "cmd": "history \"$@\" | tac | nl | tac | sed 's/^\\( *\\)\\([0-9]\\)/\\1-\\2/'"}, {"invocation": "Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.", "cmd": "source <( sed 's/:\\(.*\\)/=\"\\1\"/' msgs.config )"}, {"invocation": "Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses", "cmd": "echo $(seq 254) | xargs -P255 -I% -d\" \" ping -W 1 -c 1 192.168.0.% | grep -E \"[0-1].*?:\""}, {"invocation": "Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files'", "cmd": "files=\"$(find $dir -perm 755)\""}, {"invocation": "This command find displays the files which are modified in the last 15 minutes. And it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output.", "cmd": "find . -mmin -15 \\( ! -regex \".*/\\..*\" \\)"}, {"invocation": "Find all .jpg files in the current directory and below.", "cmd": "find . -name \u201c*.jpg\u201d"}, {"invocation": "Go to /tmp directory.", "cmd": "cd /tmp"}, {"invocation": "Delete all files not owned by valid users", "cmd": "find / -nouser | xargs -0 rm"}, {"invocation": "Print a randomly sorted list of numbers from 1 to 10 to file \"/tmp/lst\" and outputs \"-------\" followed by the reverse list to the screen", "cmd": "seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo '-------') | tac"}, {"invocation": "find all files in the home folder which are modified in the last 2 days.", "cmd": "find ~ -type f -mtime -2"}, {"invocation": "Display the last colon-separated field of variable 'var'", "cmd": "echo \"$var\" | rev | cut -d: -f1 | rev"}, {"invocation": "create directory /tmp/foo", "cmd": "mkdir /tmp/foo"}, {"invocation": "Read a line from standard input in an interactive shell with prompt in variable \"myprompt\" interpreted as PS1 is interpreted", "cmd": "read -e -p \"${myprompt@P}\""}, {"invocation": "Check if the contents of file \"subset\" is a subset of file \"set\"", "cmd": "comm -23 <(sort subset | uniq) <(sort set | uniq) | head -1"}, {"invocation": "Finds IP addresses of all network interfaces.", "cmd": "ifconfig | grep -v '127.0.0.1' | sed -n 's/.*inet addr:\\([0-9.]\\+\\)\\s.*/\\1/p'"}, {"invocation": "find all the files in the current folder that have not been modified in the last 24*3 hours", "cmd": "find ./ -mtime +3"}, {"invocation": "Display kernel name, release, and version.", "cmd": "uname -s -r -v"}, {"invocation": "Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"", "cmd": "find \"$HOME\" -name '*.txt' -type f -print0 | xargs -0 cp -ut \"$HOME/newdir\""}, {"invocation": "Calculate md5 checksum of theDirname", "cmd": "cpio -i -e theDirname | md5sum"}, {"invocation": "Print all files/directories with their sizes under $WHATEVER directory tree", "cmd": "find $WHATEVER -printf \"%s %p\\n\""}, {"invocation": "Print all user names and terminals of users who are logged in", "cmd": "who | awk '{ print $1, $2 }'"}, {"invocation": "Find all the files that were modified within the last day", "cmd": "find . -mtime -1"}, {"invocation": "Counts lines in each *.php file.", "cmd": "find . -name '*.php' -type f | xargs wc -l"}, {"invocation": "Prints lines count in each *.c file of a current folder and total count.", "cmd": "wc -l *.c"}, {"invocation": "Print only digits in variable \"$name\"", "cmd": "echo $name | tr -c -d 0-9"}, {"invocation": "Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755", "cmd": "find . -type f -perm 777 -exec chmod 755 {} \\;"}, {"invocation": "find  files which full path name is foo/bar under foo directory and print", "cmd": "find foo -path /tmp/foo/bar -print"}, {"invocation": "Find only number of hard link & name of files from long list", "cmd": "find -type f -iname \"*.txt\" -exec ls -lrt {} \\;|awk -F' ' '{print $1 $2  $9}'"}, {"invocation": "display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )", "cmd": "find . -type f -print0 | xargs -0 ls -l"}, {"invocation": "find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today", "cmd": "find . -name \\? -daystart -mtime +0 -mtime -3"}, {"invocation": "find all directories in the current directory", "cmd": "find . -type d"}, {"invocation": "Lists all manual pages.", "cmd": "apropos -r '.*'"}, {"invocation": "Find all files in the `sourceDir' directory", "cmd": "find sourceDir -mindepth 1 -maxdepth 1"}, {"invocation": "list regular files under the current directory ending in .mbox putting a null between each file found", "cmd": "find . -type f -wholename \\*.mbox -print0"}, {"invocation": "Shows state of shell option 'extglob'.", "cmd": "shopt extglob"}, {"invocation": "Find files that were modified less than 7 days ago and archive them", "cmd": "find . -type f -mtime -7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}, {"invocation": "Find all files under $dir", "cmd": "find \"$dir\" -type f"}, {"invocation": "display all files which have been modified between two dates in current folder", "cmd": "find . -type f -newermt \"2014-01-01\" ! -newermt \"2014-06-01\""}, {"invocation": "list symbolic links under the directory \"$directory\" using contents of the $IFS variable between output of each one", "cmd": "find $directory -type l -printf \"%p$IFS\""}, {"invocation": "Print lines in file 'filename' that do not match the regex 'pattern'", "cmd": "grep -v 'pattern' filename"}, {"invocation": "Delete all files in the /myDir directory tree that were last modfied 7 days ago", "cmd": "find /myDir -mindepth 1 -mtime 7 -delete"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 4 days ago", "cmd": "find . -type f -mtime +4"}, {"invocation": "Print 'Since -printf is an action the implicit -print is not applied\\n' for every file named 'file' found under current directory tree", "cmd": "find -name file -printf 'Since -printf is an action the implicit -print is not applied\\n'"}, {"invocation": "find all the regular/normal files in the current folder and do not search in the sub directories", "cmd": "find . -maxdepth 1 -type f"}, {"invocation": "Write \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" to standard output and append to \"/etc/apt/sources.list.d/10gen.list\" as root", "cmd": "sudo echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" | sudo tee -a /etc/apt/sources.list.d/10gen.list"}, {"invocation": "search for soft links in current folder and display those links which are not pointed to files in current folder", "cmd": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\""}, {"invocation": "search for text files in the current folder which have write access to others", "cmd": "find . -type f \\( -iname \"*.txt\" -and -perm -o=w \\)"}, {"invocation": "Find all files under current directory whose file type description contains \"image\", display only path to each file.", "cmd": "find . -type f -exec file {} \\; | grep -o -P '^.+: \\w+ image'"}, {"invocation": "display all the files in the directory modules", "cmd": "find . -name modules"}, {"invocation": "split processed content of the file temp into pieces per 1 line named \"tempNNN\" with numeric suffix", "cmd": "sed 's/3d3d/\\n&/2g' temp | split -dl1 - temp"}, {"invocation": "Find links to any file that happens to be named `foo.txt'", "cmd": "find . -lname \\*foo.txt"}, {"invocation": "Search the current directory tree for executable files", "cmd": "find . -type f -executable -print"}, {"invocation": "display all the files in the /usr folder which have the permissions 777", "cmd": "find /usr -perm 0777 -print"}, {"invocation": "Find all directories name nasa in the current directory and below.", "cmd": "find . -name nasa -type d"}, {"invocation": "Print all files in the current directory tree as a comma separated list", "cmd": "find . -type f | paste -d, -s"}, {"invocation": "Find all files starting from the current directory that contain '.java' in their pathnames", "cmd": "find . -print | grep '\\.java'"}, {"invocation": "find files which full path name like '*f' at current directory and print", "cmd": "find .  -path '*f'"}, {"invocation": "find all the links in the current directory and print them in each line and display their names.", "cmd": "find . -type l -print | xargs ls -ld | awk '{print $10}'"}, {"invocation": "Cuts off last two parts from the path $dir, and deletes resulted folder if empty.", "cmd": "rmdir \"$(dirname $(dirname $dir))\""}, {"invocation": "Find directory \"your/dir\" if it is empty", "cmd": "find your/dir -prune -empty"}, {"invocation": "Find all directories under /home/username/public_html/modules  and set their permission to 750", "cmd": "find /home/username/public_html/modules -type d -exec chmod 750 {} +"}, {"invocation": "search for a word in all the files in the current directory", "cmd": "find . -exec grep chrome {} +"}, {"invocation": "Check if the $somedir directory is empty", "cmd": "find \"$somedir\" -maxdepth 0 -empty -exec echo {} is empty. \\;"}, {"invocation": "display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input)", "cmd": "find ~ -iname '*.jpg' -exec ls {} +"}, {"invocation": "find all files that names are dir-name-here", "cmd": "find / -name \"dir-name-here\""}, {"invocation": "Read a line from standard input into the variable \"yn\" using the first argument as the prompt (\"$1 \")", "cmd": "read -p \"$1 \" yn"}, {"invocation": "Remove what follows the forth occurrence of the character \":\" in any field which contains it", "cmd": "sed -r 's/((:[^: \\t]*){3}):[^ \\t]*/\\1/g' file | column -t"}, {"invocation": "search for dbmsspool.sql file in the current folder", "cmd": "find . -print|grep ?i dbmspool.sql"}, {"invocation": "Delete all empty directories in minimum 2 levels down the root directory", "cmd": "find root -mindepth 2 -type d -empty -delete"}, {"invocation": "Print the contents of \"my_script.py\"", "cmd": "cat my_script.py"}, {"invocation": "Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt.", "cmd": "join -v1 success.txt fail.txt"}, {"invocation": "Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file'", "cmd": "find /var -regex '.*/tmp/.*[0-9]*.file'"}, {"invocation": "Change permissions to 500 for all regular files under and below the current directory", "cmd": "find . -type f -exec chmod 500 {} ';'"}, {"invocation": "Extract the contents of \"Input.txt.gz\", list the unique first comma separated field prefixed by the number of occurrences", "cmd": "zcat Input.txt.gz | cut -d , -f 1 | sort | uniq -c"}, {"invocation": "List all *.bak files in the current directory tree", "cmd": "find  . -name '*.bak' -ls"}, {"invocation": "Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found", "cmd": "cd $(find . -name Subscription.java -printf '%h\\n')"}, {"invocation": "find all the text files in the file system and search only in the disk partition of the root.", "cmd": "find / -mount -name \"*.txt\""}, {"invocation": "find all the files in the current folder which have been modified in the last one day", "cmd": "find . -daystart -mtime -1 -ls"}, {"invocation": "Add a line number to every line in \"infile\"", "cmd": "nl -ba infile"}, {"invocation": "List all *fink* files/directories under current directory", "cmd": "find . -name \"*fink*\" |xargs ls -l"}, {"invocation": "display all the soft links in a  folder which are not broken", "cmd": "find -L /target ! -type l"}, {"invocation": "Print appended data in \"file\" that match \"my_pattern\"", "cmd": "tail -f file | grep --line-buffered my_pattern"}, {"invocation": "Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them", "cmd": "find $DIR/tmp/daily/ -name '*.tar.gz' | sort -n | tail -3"}, {"invocation": "Find all regular files in the current directory tree ignoring directory ./source/script", "cmd": "find . -path ./source/script -prune -o -type f -print;"}, {"invocation": "Search the current directory tree for directories", "cmd": "find $PWD -type d"}, {"invocation": "List all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/Music/ directory", "cmd": "find /home/musicuser/Music/ -type f  -iname \"*$1*\" -iname \"*$2*\" -exec echo {} \\;"}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find -L . -type l"}, {"invocation": "find all files in the folder \"myfiles\" which have not been accessed in the last 30*24 hours", "cmd": "find /myfiles -atime +30"}, {"invocation": "Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.", "cmd": "join -t, -o 1.1,1.2,2.3 in1 in2"}, {"invocation": "Prints information about active network interfaces in system.", "cmd": "echo \"$(ifconfig)\""}, {"invocation": "Count number of occurences of \"123\" in the string \"123 123 123\" (ie. 3)", "cmd": "echo \"123 123 123\" | grep -o 123 | wc -l"}, {"invocation": "Recursively copy /path/to/foo on host \"your.server.example.com\" to local directory \"/home/user/Desktop\", connecting as ssh username \"user\".", "cmd": "scp -r user@your.server.example.com:/path/to/foo /home/user/Desktop/"}, {"invocation": "Print \"huzzah\" if directory \"/some/dir\" is empty", "cmd": "find /some/dir/ -maxdepth 0 -empty -exec echo \"huzzah\" \\;"}, {"invocation": "search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.", "cmd": "find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}, {"invocation": "Save the day of the year from the time string \"20131220\" to variable 'DATECOMING'", "cmd": "DATECOMING=$(echo `date -d \"20131220\" +%j`)"}, {"invocation": "Gives the primary group of $USERNAME.", "cmd": "groups $USERNAME | cut -d\\  -f 1"}, {"invocation": "Set permissions to 600 for regular files under media/", "cmd": "find media/ -type f -exec chmod 600 {} \\;"}, {"invocation": "Merge files 'text.txt' and 'codes.txt' by outputting any lines whose second field in the first matches the first field in the second.", "cmd": "join -1 2 -2 1 text.txt codes.txt"}, {"invocation": "Change owner of \"my_test_expect.exp\" to \"el\"", "cmd": "sudo chown el my_test_expect.exp"}, {"invocation": "Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.", "cmd": "find . -type f -ctime -3 | tail -n 5"}, {"invocation": "Gets IP address of 'en0' network interface.", "cmd": "ifconfig en0 | awk '$1 == \"inet\" {print $2}'"}, {"invocation": "Search the current directory tree for .rb files ignoring .vendor directories", "cmd": "find . -name .vendor -prune -o -name '*.rb' -print"}, {"invocation": "Find all files under ./lib/app and redirect their sorted list to myFile", "cmd": "find ./lib/app -type f | sort | tee myFile"}, {"invocation": "Find all files named \"something\" in the current folder and below and run them through the ls -l command, one by one.", "cmd": "find . -name something -exec ls -l {} \\;"}, {"invocation": "Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.", "cmd": "file=`basename \"$1\"`"}, {"invocation": "Archive \"/var/www/test/\" to \"/var/www/test\" on host \"231.210.24.48\" as user \"ubuntu\" via ssh using identity file \"/home/test/pkey_new.pem\"", "cmd": "rsync -rave \"ssh -i /home/test/pkey_new.pem\" /var/www/test/ ubuntu@231.210.24.48:/var/www/test"}, {"invocation": "Change user to \"amzadm\" and group to \"root\" of \"/usr/bin/aws\"", "cmd": "chown amzadm.root  /usr/bin/aws"}, {"invocation": "find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end", "cmd": "find . -type f -wholename \\*.mbox | sed 's/\\(.*\\)\\.mbox/mv \"\\1.mbox\" \"\\1\"/' | sh"}, {"invocation": "Find all files under /path/to/base/dir and change their permission to 644", "cmd": "chmod 644 $(find /path/to/base/dir -type f)"}, {"invocation": "display all the directories in the folder /usr/share", "cmd": "find /usr/share -type d"}, {"invocation": "create an archive using pbzip2 as a compress program", "cmd": "tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 paths_to_archive"}, {"invocation": "Find suspicious PHP files", "cmd": "find . -type f -name \"*.php\" -exec grep --with-filename \"eval(\\|exec(\\|base64_decode(\" {} \\;"}, {"invocation": "Split the contents of \"file1 file2 ... file40000\" into 1445 files in a round robin fashion with prefix \"outputprefix\" and numeric suffixes", "cmd": "cat file1 file2 ... file40000 | split -n r/1445 -d - outputprefix"}, {"invocation": "Disables overwriting existing files", "cmd": "set -o noclobber"}, {"invocation": "Convert \"1199092913\" to dotted decimal IPv4 address", "cmd": "ping -c1 1199092913 | head -n1 | grep -Eow \"[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+\""}, {"invocation": "Find all SUID set files", "cmd": "find / -perm /u=s"}, {"invocation": "find all files in current folder which are exactly 300MB", "cmd": "find . -size 300M"}, {"invocation": "Show directory sizes in KB and sort to give the largest at the end", "cmd": "du -sk $(find . -type d) | sort -n -k 1"}, {"invocation": "Find all files/directories under whatever and ... directory and copy them to /var/tmp", "cmd": "find whatever ... | xargs -d \"\\n\" cp -t /var/tmp"}, {"invocation": "Locates Erlang distribution, and prints release number from 'RELEASES' file.", "cmd": "awk -F, 'NR==1 {gsub(/\"/,\"\",$3);print $3}' \"$(dirname $(readlink -f $(which erl)))/../releases/RELEASES\""}, {"invocation": "display all the files with the names \"name1\" and \"name2\" in the current folder and do not search in the sub directories", "cmd": "find . -maxdepth 1 -name \"name1\" -o -name \"name2\""}, {"invocation": "List each unique case insensitive character in \"file\" prefixed by number of occurrences", "cmd": "grep -o . file | sort -f | uniq -ic"}, {"invocation": "display all the files in the home folder which begin with \"arrow\" and end with \"xbm\"", "cmd": "find ~ -name 'arrow*.xbm'"}, {"invocation": "Add group write permission to all files and directories in the current directory including hidden files and excluding \"..\"", "cmd": "chmod g+w $(ls -1a | grep -v '^..$')"}, {"invocation": "Count the number of times that a single \"-----------\\n\" separated record contains both \"A=2\" and \"dummy=2\" in compressed file \"file.gz\"", "cmd": "zcat file.gz | awk -v RS=\"-----------\\n\" '/A=2[ ,\\n]/ && /dummy=2[ ,\\n]/{count++} END{print \"Final counter value=\",count}'"}, {"invocation": "Search for first match of the regex 're' in all *.coffee files under current directory", "cmd": "find . -name \\*.coffee -exec awk '/re/ {print;exit}' {} \\;"}, {"invocation": "Find all files you have modified in the last two days", "cmd": "find ~ -type f -mtime -2"}, {"invocation": "display the count of total number of non empty files in the current folder", "cmd": "find . -type f -not -empty | wc -l"}, {"invocation": "find all the directories with the name \"some-dir\" in the current folder and move them to another folder and do not search in subfolders", "cmd": "find ./ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x/"}, {"invocation": "Change all files in \"~\" which are owned by the group \"vboxusers\" to be owned by the user group \"kent\"", "cmd": "find ~ -group vboxusers -exec chown kent:kent {} \\;"}, {"invocation": "Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days", "cmd": "find \"$DIR_TO_CLEAN\" -mtime +$DAYS_TO_SAVE | wc -l"}, {"invocation": "Search the current directory for files whose names start with \"messages.\" ignoring SVN, GIT, and .anythingElseIwannaIgnore files", "cmd": "find . -type f -print0 | xargs -0 egrep messages. | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'"}, {"invocation": "find all files with pattern` '*song*abc2009*.jpg' and replace \"abc2009\" with \"def2010\"", "cmd": "find . -name '*song*abc2009*.jpg' | sed 's/\\(^.*song.*\\)abc2009\\(.*.jpg\\)$/mv \"&\" \"\\1def2010\\2\"/' | sh"}, {"invocation": "Find all files under /path/to/base/dir and change their permission to 644", "cmd": "find /path/to/base/dir -type f -exec chmod 644 {} +"}, {"invocation": "Create an empty index.html, or update its timestamp if it already exists.", "cmd": "touch index.html"}, {"invocation": "List all files under current directory matching the regex '.*\\.\\(c\\|h\\|cpp\\)'", "cmd": "find . -type f -regex '.*\\.\\(c\\|h\\|cpp\\)' -exec ls {} \\;"}, {"invocation": "Archive all filepattern-*2009* files/directories under data/ into 2009.tar", "cmd": "find data/ -name 'filepattern-*2009*' -exec tar uf 2009.tar '{}' +"}, {"invocation": "display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg", "cmd": "find /etc /srv \\( -path /srv/tftp/pxelinux.cfg -o -path /etc/mtab \\)  -prune -o -print"}, {"invocation": "Locate all *.csv regular files under the current directory tree", "cmd": "find . -type f -name \"*.csv\""}, {"invocation": "Find all .js files in the current directory tree that do not contain a whitespace", "cmd": "find . -type f -name '*.js' \\( -exec grep -q '[[:space:]]' {} \\; -o -print \\)"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified 1 day ago", "cmd": "find . -type f -mtime 0"}, {"invocation": "Find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them", "cmd": "find /home -mindepth 1 -maxdepth 1 -type d -name '*[aeiou][aeiou]*' -printf '*' | wc -c"}, {"invocation": "Display the host's ECDSA fingerprint using the sha256 hasing algorithm.", "cmd": "ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub"}, {"invocation": "find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .", "cmd": "find . \\( -name a.out -o -name '*.' -o -name  'core' \\) -exec rm {} \\;"}, {"invocation": "Find all *.rb (regular) files under current directory and change their mode to 600", "cmd": "find . -name \"*.rb\" -type f -exec chmod 600 {} \\;"}, {"invocation": "Remount \"/system\" with read only permission", "cmd": "mount -o remount,ro /system"}, {"invocation": "Search the current directory tree for directories that can be opened by noone", "cmd": "find -type d ! -perm -111"}, {"invocation": "Find all files/directories in entire file system that are owned by \"shadow\" group", "cmd": "find / -group shadow"}, {"invocation": "find all the symbolic links in the current folder that are broken", "cmd": "find . -xtype l"}, {"invocation": "Print all lines from file 'report.txt' containing any-cased 'error' pattern", "cmd": "cat report.txt | grep -i error"}, {"invocation": "Find all 0644 permission files/directories under current directory tree and show only the first 10 of them", "cmd": "find . -perm 0644 | head"}, {"invocation": "Remove the last 2 tab-separated fields of each line in file pointed to by filename", "cmd": "cat $filename | rev | cut -c 3- | rev"}, {"invocation": "Search the current directory tree for files whose name is \".note\", case insensitive", "cmd": "find -type d -exec find {} -maxdepth 1 \\! -type d -iname '.note' \\;"}, {"invocation": "Archive \"/path/to/sfolder/\" to \"name@remote.server:/path/to/remote/dfolder\" preserving hard links and compressing the data during transmission", "cmd": "rsync -aHvz /path/to/sfolder/ name@remote.server:/path/to/remote/dfolder"}, {"invocation": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names", "cmd": "find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\" | xargs -n 1 ls"}, {"invocation": "Extract protocol and host name from URL.", "cmd": "echo \"$url\" | cut -d'/' -f1-3"}, {"invocation": "View history using \"vim\"", "cmd": "vim <(history)"}, {"invocation": "Read a line from standard input into variable \"date\" with prompt \"BGC enter something\", and storing typed backslash as backslash symbol", "cmd": "read -p 'BGG enter something:' -r data"}, {"invocation": "Make directories \"./es/es_MX.utf8/LC_MESSAGES\" as needed and do not error if it exists", "cmd": "mkdir --parents ./es_MX.utf8/LC_MESSAGES"}, {"invocation": "Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others", "cmd": "find -perm -644"}, {"invocation": "Find all files changed on the 29th of September, 2008, starting from the current directory", "cmd": "find . -type f -newerct 2008-09-29 ! -newerct 2008-09-30"}, {"invocation": "Print the list of files and directories of the current directory", "cmd": "find . ! -name . -prune"}, {"invocation": "Overwrites file 'filename' with random content 35 times, finally writes it with zeros, truncates and deletes.", "cmd": "shred -uzn 35 filename"}, {"invocation": "Find all files which  are accessed after modifying /etc/passwd files.", "cmd": "find -newer /etc/passwd"}, {"invocation": "search for files that are readable for everybody, have at least on write bit set but are not executable for anybody", "cmd": "find . -perm -444 -perm /222 ! -perm /111"}, {"invocation": "Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable", "cmd": "read -u 4 -N $char -r -s line"}, {"invocation": "Find all directories in the current directory tree that do not have `execute' permissions for anyone", "cmd": "find . -type d ! -perm -111"}, {"invocation": "Search the regular files of the current directory tree for string \"foo\"", "cmd": "find ./ -type f | xargs grep \"foo\""}, {"invocation": "Remove all files and directories called \"test\" from the current directory tree", "cmd": "find . -name test -exec rm {} \\;"}, {"invocation": "Delete all hard links to the physical file with inode number 2655341", "cmd": "find /home -xdev -inum 2655341 | xargs rm"}, {"invocation": "Resolve symbolic link of path of \"python2.7\"", "cmd": "readlink $(which python2.7)"}, {"invocation": "Search all regular files in the current directory tree for \"string\"", "cmd": "find . -type f | xargs -d '\\n' grep string"}, {"invocation": "Rename \"original.filename\" to \"new.original.filename\"", "cmd": "mv {,new.}original.filename"}, {"invocation": "Find all PNG and JPG files and append them to archive `images.tar'", "cmd": "find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}, {"invocation": "Make directory \"certs\"", "cmd": "mkdir certs/"}, {"invocation": "Find and delete all files with a used disk size of 0", "cmd": "rm `du * | awk '$1 == \"0\" {print $2}'`"}, {"invocation": "List all directories and subdirectories", "cmd": "find . -type d"}, {"invocation": "Find all 50MB files", "cmd": "find / -size 50M"}, {"invocation": "Unzip and extract \"*\\(userAgent=[^=]*\\) [^ =][^ =]*=.*\" from \"input.gz\"", "cmd": "zcat input.gz | sed -n 's/.*\\(userAgent=[^=]*\\) [^ =][^ =]*=.*/\\1/p'"}, {"invocation": "Display current running kernel's compile-time config file.", "cmd": "cat /boot/config-`uname -r`"}, {"invocation": "find all the files that have been modified in the last 1 day ago", "cmd": "find -mtime -1"}, {"invocation": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line", "cmd": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\""}, {"invocation": "Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string \"debug (\"", "cmd": "find /srv/www/*/htdocs/system/application/ -name \"*.php\" -exec grep -H \"debug (\" {} +"}, {"invocation": "Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours", "cmd": "find $LOGDIR -type d -mtime -1 -exec compress -r {} \\;"}, {"invocation": "show all the regular files in current folder", "cmd": "find . -type f -print0"}, {"invocation": "Rename '.mkv' extension to '.avi' for all files/directories under '/volume1/uploads' directory tree", "cmd": "find /volume1/uploads -name \"*.mkv\" -exec rename 's/\\.mkv$/.avi/' \\{\\} \\;"}, {"invocation": "Find the .groovy files outside the \"./target\" directory path", "cmd": "find .  -name \"*.groovy\" -not -path \"./target/*\" -print"}, {"invocation": "Find the largest files in a particular location", "cmd": "find /home/tecmint/Downloads/ -type f -printf \"%s %p\\n\" | sort -rn | head -n 5"}, {"invocation": "Change owner to \"$FUID\" and group to \"$FGID\" of \"$FILE2\"", "cmd": "chown $FUID:$FGID \"$FILE2\""}, {"invocation": "Prints calendar of February, 1900.", "cmd": "cal 2 1900"}, {"invocation": "Find files/directories under current directory and print them as null terminated strings.", "cmd": "find -print0"}, {"invocation": "Make directory \"/tmp/foo\"", "cmd": "mkdir /tmp/foo"}, {"invocation": "Search /usr/src for filenames not ending in \"*,v\"", "cmd": "find /usr/src ! \\( -name '*,v' -o -name '.*,v' \\) '{}' \\; -print"}, {"invocation": "Set file permission to 664 and directory permission to 775 for all files and directories under htdocs", "cmd": "find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +"}, {"invocation": "create directory public_html into home directory", "cmd": "mkdir ~/public_html"}, {"invocation": "Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories", "cmd": "find ${x} -type d -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "Prints all child processes of a process with id 20238, separated with comma.", "cmd": "pstree -p 20238 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/' | tr \"\\n\" ,"}, {"invocation": "Add read and execute permission to every directory under the current directory", "cmd": "find . -type d -exec chmod +rx {} \\;"}, {"invocation": "Copy *.txt files from the dir/ directory tree along with their parent directories", "cmd": "find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"}, {"invocation": "recursively change user of the direct /home/test/ and all files into it to user test", "cmd": "sudo chown -R test /home/test"}, {"invocation": "Make directories and parents as needed for each unique second \"&\" delimited field with \" \", \",\", and \":\" removed in \"filetypes.txt\"", "cmd": "mkdir -p `cut -f2 -d\"&\" filetypes.txt | sed 's/[ ,:]//g' | sort -u`"}, {"invocation": "Lists all paths to all subfolders in a current folder.", "cmd": "ls -mR * | sed -n 's/://p'"}, {"invocation": "Recursively find the latest modified file in the current directory", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}, {"invocation": "Find all files/directories under '/usr/share/doc' directory tree that contain 'readme' (case insensitive) at the beginning of their names", "cmd": "find /usr/share/doc -iname readme\\*"}, {"invocation": "Exclude directory from find . command", "cmd": "find . -path ./misc -prune -o -name '*.txt' -print"}, {"invocation": "Search directory /Users/david/Desktop/ recursively for regular files", "cmd": "find /Users/david/Desktop/ -type f"}, {"invocation": "Read a line from standard input into variable \"message\" with prompt \"Please Enter a Message: \" followed by a newline", "cmd": "read -p \"`echo -e 'Please Enter a Message: \\n\\b'`\" message"}, {"invocation": "Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them", "cmd": "find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -exec rm {} \\;"}, {"invocation": "Add variable TESTVAR with value \"bbb\" to a temporary environment, and search for TESTVAR in all variables and their values in the resulting environment.", "cmd": "TESTVAR=bbb env | fgrep TESTVAR"}, {"invocation": "search for al cpp files in current folder and display distinct parent directory of these files in sorted order", "cmd": "find . -name \"*.cpp\" -exec dirname {} + | sort -u"}, {"invocation": "Print a minimal set of differences between files in directories \"a\" and \"b\", ignore differences in whitespace, and print 0 lines of unified context", "cmd": "diff -dbU0 a b"}, {"invocation": "List files and directories recursively", "cmd": "find . -print | xargs ls -gilds"}, {"invocation": "Remove Mac OS X Desktop Services Store files", "cmd": "find . -name \".DS_Store\" -exec rm {} \\;"}, {"invocation": "Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in \".log\"", "cmd": "sudo find / -xdev -type f -size +100000 -name \"*.log\" -exec gzip {} \\; -exec echo {} \\;"}, {"invocation": "Print file type of command \"gcc\"", "cmd": "file -L `which gcc`"}, {"invocation": "Forward port 3307 on localhost to port 3306 on 1.2.3.4 via 'user@gateway' on port 24222", "cmd": "ssh -f user@gateway -p 24222 -L 3307:1.2.3.4:3306 -N"}, {"invocation": "List .c files in the current directory", "cmd": "find . \\( ! -name . -prune \\) -name \"*.c\" -print"}, {"invocation": "search for the file \"abc\" in the current folder or display all the directories", "cmd": "find . -name abc -or -type d"}, {"invocation": "create a compressed archive with files newer than 1st of January 2014, 18:00:00.", "cmd": "tar -N '2014-02-01 18:00:00' -jcvf archive.tar.bz2 files"}, {"invocation": "Create a hard link named \"my-hard-link\" to \"myfile.txt\"", "cmd": "ln myfile.txt my-hard-link"}, {"invocation": "Recursively change ownership of \"/usr/local/lib/node_modules\" to the current user", "cmd": "sudo chown -R `whoami` /usr/local/lib/node_modules"}, {"invocation": "Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.", "cmd": "rm -f ~/.android/adbkey ~/.android/adbkey.pub"}, {"invocation": "Find all files under ./lib/app and sort them", "cmd": "find ./lib/app -type f | sort"}, {"invocation": "Recursively removes 'classes' folder, prompting user on each deletion.", "cmd": "rm -r classes"}, {"invocation": "Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory", "cmd": "find ~/container  -mindepth 3 -type f -exec mv {} . \\;"}, {"invocation": "Unzip and untar \"tarball.tar.gz\"", "cmd": "zcat tarball.tar.gz | tar x"}, {"invocation": "display all the files in the folder /home which have the setuid bit enabled", "cmd": "find /home -perm /u=s"}, {"invocation": "Find files/directories that does not have write permssion for group and others", "cmd": "find /path ! -perm /022"}, {"invocation": "Find all files/directories named 'java' under /usr directory", "cmd": "find /usr -name java"}, {"invocation": "Create a symbolc link named \"latest\" to the last modified file or directory in \"target-directory\"", "cmd": "ln -s target-directory/`ls -rt target-directory | tail -n1` latest"}, {"invocation": "Delete the text matched by the regex '<script>if(window.*<\\/script>' in all index.html files under current directory", "cmd": "find index.html | xargs -rt sed -i 's/<script>if(window.*<\\/script>//g'"}, {"invocation": "Remove trailing white spaces from all files under current directory ignoring .git and .svn directories", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -exec sed -i \"s/[[:space:]]*$//g\" \"{}\" \\;"}, {"invocation": "find files (under root file system /) that were accessed within the last 24 hours", "cmd": "find / -atime -1"}, {"invocation": "Remove all *.log files from the current directory tree", "cmd": "find ./ -name '*.log' -print0 | xargs -0 rm"}, {"invocation": "all .jpg or .png images modified in the past week", "cmd": "find . -mtime -7 \\( '*.jpg' -o -name '*.png' \\)"}, {"invocation": "display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems", "cmd": "find / -nogroup \\( -fstype jfs -o -fstype jfs2 \\) -ls"}, {"invocation": "find the type of all the regular/normal files in the current folder", "cmd": "find . -type f -exec file {} \\;"}, {"invocation": "Find regular files that are larger than 2GB", "cmd": "find . -type f -size +2G"}, {"invocation": "Find all *.txt files/directories in entire file system", "cmd": "find / -name \"*.txt\""}, {"invocation": "display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.", "cmd": "find . -mtime -2 -type f -name \"t*\" -exec ls -l '{}' \\;"}, {"invocation": "Sort lines in \"FILE\" to standard output preserving only unique lines", "cmd": "sort -u FILE"}, {"invocation": "Find *.html files in the current directory tree that were last modified more than 7 days ago", "cmd": "find . -mtime +7 -name \"*.html\" -print"}, {"invocation": "Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\\.\\./.*authors'", "cmd": "find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE_SUBDIR.*\\.\\./.*authors' '{}' '+' | wc -l"}, {"invocation": "Counts all files in a current folder and subfolders.", "cmd": "find -type f -printf '\\n' | wc -l"}, {"invocation": "Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename", "cmd": "find dir -type f -print0 | xargs -r0 sed -i 's/ *$//'"}, {"invocation": "Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree", "cmd": "find . -type f -name \"*.txt\" ! -name README.txt -print"}, {"invocation": "SSH into server \"server.com\" as user \"remote_user\"", "cmd": "ssh remote_user@server.com"}, {"invocation": "Replace spaces with underscores in the names of all files and directories in the \"/tmp\" directory tree", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename 's/ /_/g' \"{}\" \\;"}, {"invocation": "Prints calendar for a current month, replacing current data with asterisk.", "cmd": "cal -h|sed -r \"s/\\b$(date|cut -d' ' -f3)\\b/*/\""}, {"invocation": "Gets MAC address of en0 network interface.", "cmd": "ifconfig en0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}, {"invocation": "Find `string' in all *.java files ignoring the case of that string", "cmd": "find . -type f -name \"*.java\" -exec grep -il string {} \\;"}, {"invocation": "Output the string 'yes' continously until killed", "cmd": "yes"}, {"invocation": "display the number of lines in all the \".c\" files in the current folder", "cmd": "find . -name \"*.c\" -exec wc -l {} \\;"}, {"invocation": "find all the regular/normal files in the current folder and rename them to html files", "cmd": "find main-directory -type f -exec mv -v '{}' '{}'.html \\;"}, {"invocation": "Write out the entire directory hierarchy from the current directory", "cmd": "find ."}, {"invocation": "Find find symlinks pointing to /mnt/oldname* in the entire file system", "cmd": "find / -type l -lname '/mnt/oldname*'"}, {"invocation": "Print every 4th line from 10 lines of \"y\" with line numbers", "cmd": "yes | cat -n | head -10 | awk 'NR % 4 == 1'"}, {"invocation": "Find all files under /home/myfolder that match the regex 'abc.*def.*ghi' in their contents", "cmd": "find /home/myfolder -type f -print0 | xargs -0 grep -l -E 'abc.*def.*ghi'"}, {"invocation": "Move all files in \"/path/subfolder\" to \"/path\" without clobbering any destination files", "cmd": "find /path/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} /path \\;"}, {"invocation": "Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _", "cmd": "find . -depth -name \"* *\" -execdir rename \"s/ /_/g\" \"{}\" \\;"}, {"invocation": "Find and clear UTF-8 files with BOM", "cmd": "find . -type f -exec sed '1s/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;"}, {"invocation": "Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file", "cmd": "find \\( -size +100M -fprintf /root/big.txt '%-10s %p\\n' \\)"}, {"invocation": "Locate all files in the current directory and below that do not have \"testfileasdf\" in their names", "cmd": "find -not -name \"*testfileasdf*\""}, {"invocation": "Print second section of space-separated data coming from stdin.", "cmd": "cut -d\\  -f 2"}, {"invocation": "Make directories and parents as needed for each file path in \"a.txt\" excluding the basename for each path", "cmd": "cat a.txt | grep / | sed 's|/[^/]*$||' | sort -u | xargs -d $'\\n' mkdir -p"}, {"invocation": "Search for 'stuff' in all *,txt files under current directory", "cmd": "find . -name \"*.txt\" -print0 | xargs -0 egrep 'stuff'"}, {"invocation": "Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree", "cmd": "find /usr /bin /sbin /opt -name sar"}, {"invocation": "Archive all *html files using tar.", "cmd": "find . -type f -name \"*html\" | xargs tar cvf htmlfiles.tar -"}, {"invocation": "Set the exit code($?) to '0'.", "cmd": "true"}, {"invocation": "find all the files in the entire file system that start with the word top and have 3 letters next to it.", "cmd": "find / -name 'top???'"}, {"invocation": "Find all directories in level 1 down the $queue directory", "cmd": "echo \"$queue\" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "Find all files in $dir directory (non-recursive) and count them", "cmd": "find \"$dir\" -maxdepth 1 -type f | wc -l"}, {"invocation": "Replace all instances of \"STRING_TO_REPLACE\" with \"REPLACE_WITH\" in file \"index.html\" and make a backup with suffix \"bak\"", "cmd": "sed -ibak -e s/STRING_TO_REPLACE/REPLACE_WITH/g index.html"}, {"invocation": "Find all files/directores that are newer than /etc/motd and conain the string 'top' at the beginning of their names under user's home directory tree", "cmd": "find ~ -name 'top*' -newer /etc/motd"}, {"invocation": "display all file in the home folder except \".c\" files", "cmd": "find $HOME \\! -iname \"*.c\" print"}, {"invocation": "Find all files in the current directory tree that are newer than some_file", "cmd": "find . -newer some_file"}, {"invocation": "Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree", "cmd": "find . -name \"*.txt\" -print0 |xargs -0 du -ch"}, {"invocation": "Find .cpp files that differs in subdirectories PATH1 and PATH2.", "cmd": "diff -rqx \"*.a\" -x \"*.o\" -x \"*.d\" ./PATH1 ./PATH2 | grep \"\\.cpp \" | grep \"^Files\""}, {"invocation": "Look for files with wide open permissions", "cmd": "find . -type f  -perm 777 -exec ls -l {} \\;"}, {"invocation": "Copy /my/configfile to all empty directories of the $somedir directory tree", "cmd": "find \"$somedir\" -type d -empty -exec cp /my/configfile {} \\;"}, {"invocation": "Scan every file in /etc for IPV4 addresses.", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "Find 10 largest files in the current directory and its subdirectories", "cmd": "du -hsx * | sort -rh | head -10"}, {"invocation": "find all the files in the file system which have sticky bit enabled to the user", "cmd": "find / -perm -u+s"}, {"invocation": "Find directories in the current directory recursively that are not \"executable\" by all", "cmd": "find -type d ! -perm -111"}, {"invocation": "Search the current directory tree for PHP files changed less than 14 days ago", "cmd": "find . -name *.php -ctime -14"}, {"invocation": "change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name", "cmd": "find . -type d -print0 | xargs -0 chmod 2775"}, {"invocation": "Replace \",,\" with \", ,\" twice in \"data.csv\" and display the \",\" delimited result as a table", "cmd": "sed 's/,,/, ,/g;s/,,/, ,/g' data.csv | column -s, -t"}, {"invocation": "Delete all '-' character from $1 and save the resultant string to variable 'COLUMN'", "cmd": "COLUMN=`echo $1 | tr -d -`"}, {"invocation": "Find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.", "cmd": "find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f"}, {"invocation": "Change owner to \"root\" and group to \"www-data\" of \"/foobar/test_file\"", "cmd": "sudo chown root:www-data /foobar/test_file"}, {"invocation": "Change directory to the output of command '~/marker.sh go \"$@\"'", "cmd": "cd $( ~/marker.sh go \"$@\" )"}, {"invocation": "Find all files/directories under /var/log directory", "cmd": "find /var/log"}, {"invocation": "Find all files/directories following symbolic links under current directory tree that are owned by 'root' user", "cmd": "find . -follow -uid 0 -print"}, {"invocation": "display the file name and creation month of top 11 files in the entire file system", "cmd": "find / -type f -printf \"\\n%Ab %p\" | head -n 11"}, {"invocation": "Find all *.csv files under /foot/bar/ and move them to some_dir", "cmd": "find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir"}, {"invocation": "Copy the entire contents of the current directory preserving ownership, permissions, and times", "cmd": "find . | cpio -pdumv /path/to/destination/dir"}, {"invocation": "Read a line from standard input into variable \"password\" without echoing the input", "cmd": "read -s password"}, {"invocation": "Display the contents of \"file\" formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line.", "cmd": "column -t file | uniq -w12 -c"}, {"invocation": "Change permissions to 644 for all files showing the respective chmod command", "cmd": "find ./ -type f -print0 | xargs -t -0 chmod -v 644"}, {"invocation": "Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output", "cmd": "find . -type f -exec grep -n California {} \\; -print | wc -l"}, {"invocation": "Recursively copy all regular files below current directory to directory /tmp on hostname, connecting as ssh user matching current username on local host.", "cmd": "find . -type f -exec scp {} hostname:/tmp/{} \\;"}, {"invocation": "Find files belonging to the given owner", "cmd": "find /path/to/search -user owner"}, {"invocation": "List all leaf directories (directories which don't contain any sub-directory) under current directory", "cmd": "find . -type d -links 2"}, {"invocation": "Get a recursive file list of directory $dir", "cmd": "find $dir -type f"}, {"invocation": "Change the ownership of \"file.sh\" to \"root\"", "cmd": "sudo chown root file.sh"}, {"invocation": "Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago", "cmd": "grep ! error_log | find /home/foo/public_html/ -mmin -60"}, {"invocation": "Find all regular files named 'Waldo' under ~/Books directory tree", "cmd": "find ~/Books -type f -name Waldo"}, {"invocation": "Remove all .mpg files in the /home/luser directory tree", "cmd": "find /home/luser -type f -name '*.mpg' -exec rm -f {} \\;"}, {"invocation": "create directory /etc/cron.15sec", "cmd": "mkdir /etc/cron.15sec"}, {"invocation": "Search directory tree $DIR for *.txt files", "cmd": "find \"$DIR\" -name \\*.txt"}, {"invocation": "display a long listing of all the directories in current directory", "cmd": "find . -type d -ls"}, {"invocation": "search  character special files called ' backup '  from  /usr directory downwards and print them .", "cmd": "find /usr -type c -name backup -print"}, {"invocation": "Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in", "cmd": "find . -name \"file.ext\" -execdir pwd ';'"}, {"invocation": "create backup of all the text files  present in the current folder", "cmd": "find -name \"*.txt\" cp {} {}.bkup \\;"}, {"invocation": "Generates temporary file name with full path by template 'fifo.XXXXXX' and saves it to variable 'fifo_name'", "cmd": "fifo_name=$(mktemp -u -t fifo.XXXXXX)"}, {"invocation": "Search for files only that end with .php and look for the string $test inside those files", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\;"}, {"invocation": "List in detail regular files from the current directory tree whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$'", "cmd": "find -type f |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | sed -re 's/(\\s)/\\\\\\1/g' | xargs ls -l"}, {"invocation": "Move all files from the `sourceDir' directory tree to the `destDir' directory", "cmd": "find sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir"}, {"invocation": "search for all tar.gz compress files  in the current folder", "cmd": "find -name *.tar.gz"}, {"invocation": "List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest", "cmd": "du -sh */ | sort -n"}, {"invocation": "display all symbolic links in the folder \"myfiles\" and follow them", "cmd": "find -L /myfiles"}, {"invocation": "ERROR - need to add -a or -r for recursive copy", "cmd": "rsync --exclude='B/' --exclude='C/' . anotherhost:/path/to/target/directory"}, {"invocation": "search for text files in the directory \"/home/user1\" and copy them to the directory /home/backup", "cmd": "find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents"}, {"invocation": "create a symbolic link named \"/usr/lib/jvm/default-java\" to file \"/usr/lib/jvm/java-7-oracle\"", "cmd": "sudo ln -s /usr/lib/jvm/java-7-oracle /usr/lib/jvm/default-java"}, {"invocation": "Run 'make -e' with an environment variable 'HOSTNAME' set to the system hostname", "cmd": "HOSTNAME=$(hostname) make -e"}, {"invocation": "Remove regular files whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$' from the current directory tree", "cmd": "find -type f  |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | sed -re 's/(\\s)/\\\\\\1/g' | xargs rm"}, {"invocation": "Search for the string 'magic' in all regular files under current directory tree and display long listing of them", "cmd": "find . -type f -exec grep \"magic\" {} \\; -ls"}, {"invocation": "find all the ogg files in the current directory which have the word \"monfichier\" in their name", "cmd": "find -name *monfichier*.ogg"}, {"invocation": "find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation", "cmd": "find . -size +1M -ok mv {} files \\+"}, {"invocation": "Copy \"/new/x/y/z/\" over the network to \"user@remote:/pre_existing/dir/\" preserving the directory hierarchy", "cmd": "rsync -a --relative /new/x/y/z/ user@remote:/pre_existing/dir/"}, {"invocation": "Print the output of history without line numbers", "cmd": "history | sed 's/^[ ]*[0-9]\\+[ ]*//'"}, {"invocation": "Prints full path of a 'cat.wav' file in a current folder.", "cmd": "ls $PWD/cat.wav"}, {"invocation": "display all the files  in the current folder excluding the perl files", "cmd": "find . -not -name \"*.pl\""}, {"invocation": "Report file systems inodes usage.", "cmd": "df -i"}, {"invocation": "find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format", "cmd": "find -mmin -60 -exec ls -l {} \\;"}, {"invocation": "Delete all empty files and directories in the \"test\" directory tree", "cmd": "find test -depth -empty -delete"}, {"invocation": "Find all files/directories with '.o' extension under '/lib/modules' directory tree", "cmd": "find /lib/modules -name '*.o'"}, {"invocation": "List all *.txt files/directories under current directory", "cmd": "find . -name *.txt -exec ls {} \\;"}, {"invocation": "Find all directories that start with stat", "cmd": "find . -type d \u2013iname stat*"}, {"invocation": "Remove all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\" -exec rm {} +"}, {"invocation": "Extract and print hostname and protocol part from URL like \"http://www.suepearson.co.uk/product/174/71/3816/\".", "cmd": "echo \"http://www.suepearson.co.uk/product/174/71/3816/\" | cut -d'/' -f1-3"}, {"invocation": "Truncate all non-empty regular files under the current directory", "cmd": "find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}"}, {"invocation": "Compresses file 'example.log' keeping original file in place.", "cmd": "bzip2 -k example.log"}, {"invocation": "Count the number of directories under directory '/directory/' non-recursively", "cmd": "find /directory/ -maxdepth 1 -type d -print| wc -l"}, {"invocation": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"", "cmd": "find . -iname .svn -print | xargs rm -rf"}, {"invocation": "Delete all directories found in $LOGDIR that are more than a work-week old", "cmd": "find $LOGDIR -type d -mtime +5 -exec rm -rf {} \\;"}, {"invocation": "find all files that do not have execute permission to all", "cmd": "find . -type d ! -perm -111"}, {"invocation": "change owner and group of the file it to user and group root", "cmd": "chown root:root it"}, {"invocation": "Find the passwd file under root and two levels down", "cmd": "find / -maxdepth 3 -name passwd"}, {"invocation": "Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents", "cmd": "find /data/SpoolIn -name job.history -exec grep -l FAIL {} \\; | wc -l"}, {"invocation": "Search the system for files and directories owned by group `managers'", "cmd": "find / -group managers -print"}, {"invocation": "Set the environment variable \"DISPLAY\" to the system host name followed by \":0 skype\"", "cmd": "DISPLAY=`hostname`:0 skype"}, {"invocation": "Count the number of files in the current directory and below", "cmd": "find . -type d -exec basename {} \\; | wc \u2013l"}, {"invocation": "Creates temporary file in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with file name like current shell name and '-XXXXX'-formatted suffix, and saves created path to the 'tempFile' variable.", "cmd": "tempFile=\"$(mktemp \"${TMPDIR:-/tmp/}$(basename \"$0\")-XXXXX\")\""}, {"invocation": "find all the xml files in the current folder which are present in the pattern text file", "cmd": "find . -name \"*.xml\" -exec grep -HFf <(find . -name \"*.txt\" -printf \"%f\\n\") {} \\;"}, {"invocation": "Prints long listing of file 'file.ext'.", "cmd": "ls -al file.ext"}, {"invocation": "Open all .java files in the current directory tree in the vim editor", "cmd": "find . -name '*.java' | xargs vim"}, {"invocation": "Check if directory $some_dir is empty", "cmd": "find \"`echo \"$some_dir\"`\" -maxdepth 0 -empty"}, {"invocation": "Find all files/directories that belong to the group 'audio' under '/dev' directory tree", "cmd": "find /dev -group audio"}, {"invocation": "Remove the last two components (directories) of $path", "cmd": "echo $path | rev | cut -d'/' -f4- | rev"}, {"invocation": "Find files in the current directory tree which have permissions rwx for user and rw for group and others", "cmd": "find . -perm 766"}, {"invocation": "Make directories to \"/tmp/test/blah/oops/something\" as needed", "cmd": "mkdir -p /tmp/test/blah/oops/something"}, {"invocation": "Print a space separated list of numbers from 1 to 10 with no trailing new line", "cmd": "seq 10 | xargs echo -n"}, {"invocation": "display all the regular/normal files in current folder", "cmd": "find . -type f -print0"}, {"invocation": "Save 'foo' into variable 'bar' in ksh", "cmd": "echo foo | read bar"}, {"invocation": "Print information of the process running the current script as the current user", "cmd": "ps -ef | grep $0 | grep $(whoami)"}, {"invocation": "Move all directories in the current directory tree that have been modified in the last day to \"/path/to/target-dir\"", "cmd": "find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "List each subdirectory name composing the current working directory", "cmd": "pwd | cut -b2- | tr '/' '\\n'"}, {"invocation": "Make directory \"new_dir\"", "cmd": "mkdir new_dir"}, {"invocation": "Search for first match of the regex 're' in all *.coffee files under current directory and print the file names", "cmd": "find . -name \\*.coffee -exec awk '/re/ {print FILENAME \":\" $0;exit}' {} \\;"}, {"invocation": "Set variable \"finalName\" to the second-to-last slash-separated path component of variable \"path\"", "cmd": "finalName=$(basename -- \"$(dirname -- \"$path\")\")"}, {"invocation": "Set variable \"architecture\" to machine architecture, ie. x86_64", "cmd": "architecture=\"$(uname -m)\""}, {"invocation": "List the full path of each directory in the current working directory", "cmd": "tree -dfi -L 1 \"$(pwd)\""}, {"invocation": "Find all files/directories named 'foo' in the entire filesystem", "cmd": "find / -name foo"}, {"invocation": "Append all regular files modified in the last 24 hours to the \"$archive.tar\" tar archive", "cmd": "find . -mtime -1 -type f -exec tar rvf \"$archive.tar\" '{}' \\;"}, {"invocation": "Print the names of all files in or below the current directory, with all of the file permission bits S_ISUID, S_ISGID, and S_IWOTH set", "cmd": "find . -perm -o+w,+s"}, {"invocation": "display all the files in the file system which have been modified in the last 10 minutes", "cmd": "find / -mmin -10"}, {"invocation": "Search the current directory recursively for regular files last accessed 2 minutes ago", "cmd": "find . type -f -amin 2"}, {"invocation": "create a tar ball of all the jpg and png images in the current folder", "cmd": "find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}, {"invocation": "download contents of a website \"http://example.com/\"", "cmd": "curl http://example.com/"}, {"invocation": "Find files with a question mark in their names", "cmd": "find . -name \\*\\\\?\\*"}, {"invocation": "Display standard input as octal bytes", "cmd": "cat | od -b"}, {"invocation": "search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file \"files.secure\".", "cmd": "find / \\( -perm 2000 -o -perm 4000 \\) -print | diff - files.secure"}, {"invocation": "Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html'", "cmd": "find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}, {"invocation": "find file end with  '.txt' in current directory.", "cmd": "find . -name \"*.txt\""}, {"invocation": "Move all files that contain \"Subject: \\[SPAM\\]\" to \"your_file\"", "cmd": "mv $(grep -l 'Subject: \\[SPAM\\]' | awk -F ':' '{print $1}') your_file"}, {"invocation": "Recursively change the owner and group of \"/opt/antoniod/\" to \"antoniod\"", "cmd": "chown -R antoniod:antoniod /opt/antoniod/"}, {"invocation": "split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix", "cmd": "cat file1 file2 ... file40000 | split -n r/1445 -d - outputprefix"}, {"invocation": "Find all regular files under current directory tree excluding files from './dir1' (except './dir1/subdir1/) and './dir2' directories", "cmd": "find . \\( -not -path './dir1/*' -and -not -path './dir2/*' -or -path './dir1/subdir1/*' \\) -type f"}, {"invocation": "Remove all directories called \"test\" from the /path/to/dir directory tree", "cmd": "find /path/to/dir -name \"test\" -type d -exec rm -rf {} \\;"}, {"invocation": "Merge colon-separated information from file1 and file2 where first field of both files matches", "cmd": "join -t: <(sort file1) <(sort file2)"}, {"invocation": "Find how many directories are in a path (counts current directory)", "cmd": "find . -type d -exec basename {} \\; | wc -l"}, {"invocation": "Find disk usage of all files inside the directory", "cmd": "du -a"}, {"invocation": "Display users who are currently logged in", "cmd": "finger | sed 's/^\\([^ ]*\\) *\\([^ ]*\\) *pts[^A-Z]*\\([^(]*\\).*/\\2\\t(\\1)\\t\\3/'"}, {"invocation": "Recursively add user write permission to all files under \"/path/to/git/repo/objects\"", "cmd": "chmod -Rf u+w /path/to/git/repo/objects"}, {"invocation": "Update timestamps of all files and directories under directory /path/to/dir.", "cmd": "find /path/to/dir -print0 | xargs -0 touch"}, {"invocation": "Process each file beginning with \"file\" in the current directory as an argument to \"bash script.sh\"", "cmd": "find -type f -maxdepth 1 -name 'file*' -print0 | sort -z | xargs -0 bash script.sh"}, {"invocation": "Prints listing of a root folder including hidden files, and saves output to 'output.file'.", "cmd": "ls -a | tee output.file"}, {"invocation": "Lists all files in a current folder, separating names with space.", "cmd": "ls -1 | awk 'ORS=\" \"'"}, {"invocation": "Display the content of file \"f\" in home directory if it exists and is executable", "cmd": "cat `which ~/f`"}, {"invocation": "Calculate a list of duplicate md5 sum hashes for all the \".java\" files in the current directory", "cmd": "md5sum *.java | awk '{print $1}' | sort | uniq -d"}, {"invocation": "Changes to the directory where 'ssh' executable is located.", "cmd": "cd $(dirname $(which ssh));"}, {"invocation": "Create the directory '.npm-packages' in the user's home directory($HOME)", "cmd": "mkdir \"${HOME}/.npm-packages\""}, {"invocation": "search for the word \"mysql\" in all the files in the current containing the word \"notes\" in their name", "cmd": "find . -iname \"*notes*\" | xargs grep -i mysql"}, {"invocation": "Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent", "cmd": "find ~/container  -mindepth 3 -type f -exec mv {} .. \\;"}, {"invocation": "Rename the *.so files at level 2 of the current directory tree prepending their names with \"lib\"", "cmd": "find . -mindepth 2 -maxdepth 2 -name \"*.so\" -printf \"mv '%h/%f' '%h/lib%f'\\n\" | sh"}, {"invocation": "Split \"$FILENAME\" into files with at most 20 lines each with a prefix \"xyz\"", "cmd": "split -l 20 $FILENAME xyz"}, {"invocation": "Add a cron job to existing list, without removing existing ones, ro tun \"scripty.sh\" at 2:01 am, 3rd day of april (4th month), if that day happens to be a friday (5th day of the week starting with sunday=0).", "cmd": "cat <(crontab -l) <(echo \"1 2 3 4 5 scripty.sh\") | crontab -"}, {"invocation": "Show find's version", "cmd": "find --version"}, {"invocation": "Remove all core dump files from user's home directory", "cmd": "find ~/ -name 'core*' -exec rm {} \\;"}, {"invocation": "Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output.", "cmd": "ping -c 5 -q 12.34.56.78 | tail -n 2"}, {"invocation": "Change directory to the download directory specified in the current user's user-dirs.dirs file", "cmd": "cd \"$(grep DOWNLOAD $HOME/.config/user-dirs.dirs | cut -f 2 -d \"=\" | tr \"\\\"\" \"\\n\" | tr -d \"\\n\")\""}, {"invocation": "change the permission of all the regular/normal files in the current folder from 777 to 755", "cmd": "find . -type f -perm 777 -exec chmod 755 {} \\;"}, {"invocation": "Recursively change the owner and group of \"subdir1\" to \"user1\"", "cmd": "chown user1:user1 -R subdir1"}, {"invocation": "display all files in current folder excluding those that have the word \"git\" in their name and display files that have git in their path names", "cmd": "find . ! -name '*git*' | grep git"}, {"invocation": "find all text files in the current directory", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "use find command to search for .png and .jpg files", "cmd": "find ./ -type f \\( -iname \\*.jpg -o -iname \\*.png \\)"}, {"invocation": "Find & Write Changes to a File and Print the Changes Using sed s//gpw", "cmd": "find . -type f -name \"*.txt\" -exec sed -n 's/Linux/Linux-Unix/gpw output' thegeekstuff.txt"}, {"invocation": "find all files in the current folder which have not been accessed in the last 30 days in the current folder", "cmd": "find . -atime +30 -print"}, {"invocation": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits", "cmd": "find . -\\( -name \"myfile[0-9][0-9]\" -o -name \"myfile[0-9]\" \\)"}, {"invocation": "search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad)", "cmd": "find . -type f -name \"*.sh\" -exec grep -il landoflinux {} \\;"}, {"invocation": "Find all fglrx-libglx* files under and below debian/fglrx/", "cmd": "find debian/fglrx/ -name 'fglrx-libglx*'"}, {"invocation": "Find all files/directories under current directory and print only 2nd field from output delimited by '/'", "cmd": "find . | awk -F\"/\" '{ print $2 }'"}, {"invocation": "delete all the files which start with \"Tes\" in the current folder", "cmd": "find . -type f -name \"Tes*\" -exec rm {} \\;"}, {"invocation": "Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX", "cmd": "find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./JUKEBOX"}, {"invocation": "Print file system disk space usage in 1 KiB blocks of the current directory's file system", "cmd": "df -k ."}, {"invocation": "find all the text files in the entire filesystem which belong to the user root and display the ten files.", "cmd": "find / -user root -iname \"*.txt\" | head"}, {"invocation": "Display human-readable file type description of utf8.txt", "cmd": "file utf8.txt"}, {"invocation": "Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents", "cmd": "find A \\! -path \"A/a/*\" -a \\! -path \"A/a\""}, {"invocation": "Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions", "cmd": "find / -maxdepth 1 -xdev -type f -print -exec grep -i \"stringtofind\" -q {} \\;"}, {"invocation": "List files ending in .html and residing in the current directory tree", "cmd": "find . -name \"*.html\""}, {"invocation": "List all files/directories under current directory", "cmd": "find . -print"}, {"invocation": "Find files in the /var/log folder which were modified modified 2 weeks ago", "cmd": "find /var/log/ -mtime +7 -mtime -8"}, {"invocation": "Run checksums recursively from the current directory, and give back the filenames of all identical checksum results", "cmd": "find ./ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\\ *//;'"}, {"invocation": "Generates a randomly sorted list of numbers from 1 to 10.", "cmd": "seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo '-------') \\ <(tac)"}, {"invocation": "Search the current directory tree for the files with extension \"trc\" and list them if they are more than three days old", "cmd": "find . -name \"*.trc\" -ctime +3 -exec ls -l {} \\;"}, {"invocation": "Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place", "cmd": "find . -type f -maxdepth 1 -exec sed -i \"s/$P_FROM/$P_TO/g\" {} \\;"}, {"invocation": "List all files in the current directory tree that were modified 60 minutes ago", "cmd": "find . -mmin 60 -print0 | xargs -0r ls -l"}, {"invocation": "Gets MAC address of 'eth0' network interface.", "cmd": "ifconfig eth0 | head -n1 | tr -s ' ' | cut -d' ' -f5"}, {"invocation": "Compress all files in the \"$FILE\" directory tree that were last modified 30 days ago", "cmd": "find $FILE -type f -mtime 30 -exec gzip {} \\;"}, {"invocation": "Format each line as 3 columns based on extraneous columns", "cmd": "awk '{for(i=3;i<=NF;i++){print $1,$2,$i}}' file | column -t"}, {"invocation": "Remove a leading \"machine\" from the system host name and save the result to variable \"machnum\"", "cmd": "machnum=$(hostname | sed 's/^machine//')"}, {"invocation": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes", "cmd": "cat infile | sed 's/\\r$//' | od -c"}, {"invocation": "Print lines that only unique ones in 'set1' and 'set2' files", "cmd": "cat <(grep -vxF -f set1 set2) <(grep -vxF -f set2 set1)"}, {"invocation": "display all files in the directory \"dir\" which have been changed in the last 60 minutes", "cmd": "find /dir -cmin -60"}, {"invocation": "find all files in current folder and display the total lines in them", "cmd": "find . | xargs wc -l"}, {"invocation": "Update timestamps of all files and directories under current directory.", "cmd": "find . -print0 | xargs -0 touch"}, {"invocation": "change permissions of files older than 30 days", "cmd": "find /path/to/directory -type f -mtime +30 -exec chmod 644 {} +"}, {"invocation": "Find all \"YourProgramName\" regular files in the current directory tree and print the full paths to the directories containing them", "cmd": "find . -type f -name YourProgramName -execdir pwd \\;"}, {"invocation": "Finds out what groups a given user has.", "cmd": "groups user"}, {"invocation": "Delete all lines matching \"pattern\" in \"filename\"", "cmd": "sed -i '/pattern/d' filename"}, {"invocation": "Numerically sort each line in file \"out\" and print the result to console", "cmd": "sort -n out"}, {"invocation": "Change permissions to u=rw,g=r,o= for all files in the current directory tree", "cmd": "find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}, {"invocation": "Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory", "cmd": "find . -path ./.git  -prune -o -name file  -print"}, {"invocation": "Force create a symbolic link in \"/usr/bin/\" for each file matching \"$javaUsrLib/jdk1*/bin/*\"", "cmd": "sudo ln -f -s $javaUsrLib/jdk1*/bin/* /usr/bin/"}, {"invocation": "Find all directories in the current directory tree with \"music_files\" in their names", "cmd": "find . -type d -iname \\*music_files\\*"}, {"invocation": "Find all *.mov (case insensitive) files under current directory and list their paths with their names", "cmd": "find . -iname \"*.mov\" -printf \"%p %f\\n\""}, {"invocation": "Find all .sh files in the current directory tree and remove them", "cmd": "find . -name \"*.sh\" -print0 | xargs -0 rm -rf"}, {"invocation": "split file data.csv into pieces per 100 lines", "cmd": "split -l 100 date.csv"}, {"invocation": "find all files in the current directory whose size is 24 or 25 bytes.", "cmd": "find . -size -26c -size +23c -print"}, {"invocation": "Search three folders named foo, bar, and baz for all \"*.rb\" files", "cmd": "find foo bar baz -name \"*.rb\""}, {"invocation": "Copy \"6.3.3/6.3.3/macosx/bin/mybinary\" to \"~/work/binaries/macosx/6.3.3/\" and create directory \"~/work/binaries/macosx/6.3.3/\" if \"~/work/binaries/macosx/\" exists", "cmd": "rsync 6.3.3/6.3.3/macosx/bin/mybinary ~/work/binaries/macosx/6.3.3/"}, {"invocation": "Creates temporary file and saves path to it in 'content_dir2' variable.", "cmd": "content_dir2=$(mktemp)"}, {"invocation": "Count the number of times that a single \"-----------\\n\" separated record contains both \"A=2\" and \"dummy=2\" and the number of records that do not have \"dummy=2\" in compressed file \"file.gz\"", "cmd": "zcat file.gz | awk -v RS=\"-----------\\n\" '/A=2[ ,\\n]/ && /dummy=2[ ,\\n]/{count++} !/dummy=2[ ,\\n]/{other++} END{print \"Final counter value=\",count, \"; other=\", other}'"}, {"invocation": "list regular file which file name end with 'cache' 'xml' or 'html' in current directory", "cmd": "find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}, {"invocation": "Find all .bak files starting from the current directory and delete them", "cmd": "find . -iname \"*.bak\" -type f -print | xargs /bin/rm -f"}, {"invocation": "List all the .c files under the current directory and below in a 3 column format", "cmd": "find . -name \"*.c\" | xargs -n3"}, {"invocation": "Find all files/directories under current directory tree whose paths start with './sr' and end with 'sc'", "cmd": "find . -path './sr*sc'"}, {"invocation": "Remove all spaces from standard input", "cmd": "tr -d ' '"}, {"invocation": "delete all the \".bak\" or swap files in kat folder", "cmd": "find kat -type f \\( -name \"*~\" -p -name \"*.bak\" \\) -delete"}, {"invocation": "change the permissions of the directories from 777 to 755 in the folder \"/var/www/html\"", "cmd": "find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Set trace prompt to print seconds, nnoseconds, script name, and line number", "cmd": "PS4='+$(date \"+%s:%N\") %N:%i> '"}, {"invocation": "Find all *.m4a files/directories under /home/family/Music directory", "cmd": "find /home/family/Music -name '*.m4a' -print0"}, {"invocation": "Display inputfile all on one line (replace newlines by spaces)", "cmd": "awk '{printf \"%s|\", $0} END {printf \"\\n\"}' inputfile"}, {"invocation": "Write \"\\n/usr/local/boost_1_54_0/stage/lib\" to standard output and append to \"/etc/ld.so.conf\"", "cmd": "echo -e \"\\n/usr/local/boost_1_54_0/stage/lib\" | sudo tee -a /etc/ld.so.conf"}, {"invocation": "Sort standard input in alphabetical order", "cmd": "sort"}, {"invocation": "Print the list of files in the current directory tree skipping SVN files", "cmd": "find . -name .svn -a -type d -prune -o -print"}, {"invocation": "Search all directories starting from the root directory for \"filename\"", "cmd": "find / -iname \"filename\""}, {"invocation": "Find all files/directories  under  /eserver6 directory and follow symlinks if needed", "cmd": "find /eserver6 -L"}, {"invocation": "find \".flac\" files in current folder using regular expressions", "cmd": "find ./ -regex \"./cmn-.\\.flac\""}, {"invocation": "Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago", "cmd": "find /home/u20806/public_html -maxdepth 1 -mmin +5 -type f -name \"*.txt\" ! -name \"robots.txt\" -delete"}, {"invocation": "Print revesed second from the end dot-bounded field in $i value", "cmd": "j=`echo $i | rev | cut -d \".\" -f2`;"}, {"invocation": "Print space separated numbers from 1 to 10", "cmd": "seq 10 | xargs echo"}, {"invocation": "Count the number of \"x\" characters in \"filename\"", "cmd": "sed 's/[^x]//g' filename | tr -d '\\012' | wc -c"}, {"invocation": "Set variable \"extract_dir\" to list of top-level directories and files contained in tar archive specified by variable FILE.", "cmd": "extract_dir=$(tar -tf $FILE | cut -d/ -f1 | uniq)"}, {"invocation": "Save hexadecimal byte 10 in binary file \"file.moi\" to variable \"day\"", "cmd": "day=$(od -t x1 --skip-bytes=9 --read-bytes=1 file.moi | head -1 | awk '{print $2}')"}, {"invocation": "Find all files named 'new' under current directory tree and display their contents", "cmd": "find . -name new -print -exec cat {} +"}, {"invocation": "Opens gcc info manual and goes to a node pointed by index entry \"funroll-loops\".", "cmd": "info gcc --index-search=funroll-loops"}, {"invocation": "List all files/directories under current directory with 'FooBar' in their names ensuring white space safety", "cmd": "find . -name 'FooBar' -print0 | xargs -0"}, {"invocation": "Find all the files in the current directory with \u201clinkin park\u201d in their names", "cmd": "find . -maxdepth 1 -iname \"*linkin park*\""}, {"invocation": "search for files named \"WSFY321.c\" in a case-insensitive manner", "cmd": "find . -iname \"WSFY321.c\""}, {"invocation": "find all normal/regular files in current folder and display them in sorted order", "cmd": "find . -type f -ls | awk '{print $(NF-3), $(NF-2), $(NF-1), $NF}'"}, {"invocation": "Remove all *.mp3 files in tmp directory but not in it's subdirectories", "cmd": "find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    rm"}, {"invocation": "search for word linux in all the regular/normal files in the folder mail.", "cmd": "find ~/mail -type f | xargs grep \"Linux\""}, {"invocation": "find all .bak files in or below the current directory and move them to ~/.old.files directory:", "cmd": "find . -name \"*.sh\" -print0 | xargs -0 -I {} mv {} ~/back.scripts"}, {"invocation": "Read a line of standard input with prompt \"My prompt: \" and save it to variable \"varname\"", "cmd": "read -e -p \"My prompt: \" varname"}, {"invocation": "Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak", "cmd": "find . -type f -name INPUT.txt -print0 | xargs -0 sed -i.bak '/^#/d'"}, {"invocation": "Report all C language source code files under the current directory", "cmd": "find . -name \\*.c -print"}, {"invocation": "Run the file command on every regular file under current directory", "cmd": "find . -type f -exec file '{}' \\;"}, {"invocation": "Find regular files in the current directory that are writable by at least somebody", "cmd": "find -maxdepth 1 -type f -perm /222"}, {"invocation": "Find all files with the extension jpg regardless of case", "cmd": "find . -type f -iname '*.jpg' -print0"}, {"invocation": "Find the file whose inode number is 1316256", "cmd": "find . -inum 1316256"}, {"invocation": "find all regular files which have been modified in the last 48 hours in home folder", "cmd": "find ~ -type f -mtime -2"}, {"invocation": "Find all directories under current directory and change their permission to 700", "cmd": "find . -type d -exec chmod 700 {} \\;"}, {"invocation": "Find regular files larger than 500MB in the current directory tree", "cmd": "find . -type f -size +500M"}, {"invocation": "Search directory trees /tmp and /var/tmp for \"testfile.txt\"", "cmd": "find /tmp /var/tmp -iname \"testfile.txt\""}, {"invocation": "Find all regular files under and below /root that match pattern \"*linux*\", case insensitive", "cmd": "find /root -type f -iname \"*linux*\""}, {"invocation": "Search the current directory tree for .aux files", "cmd": "find . -name \".aux\""}, {"invocation": "Find all 15MB files", "cmd": "find / -size 15M"}, {"invocation": "Count the number of lines in \"myfile.txt\"", "cmd": "cat myfile.txt | wc -l"}, {"invocation": "Remove all text files in the home directory with confirmation", "cmd": "find $HOME/. -name *.txt -ok rm {} \\;"}, {"invocation": "delete all the files in the current folder which have been modified in the last 14*24 hours", "cmd": "find . -mtime -14 -print|xargs -i rm \\;"}, {"invocation": "Find all *.* directories under /home/feeds/data directory", "cmd": "find /home/feeds/data -type d \\( -name 'def/incoming' -o -name '456/incoming' -o -name arkona \\) -prune -o -name '*.*' -print"}, {"invocation": "Execute \"${MD5}\" on all files found under \"${1}\", numerically sort the results, and save to variable \"DATA\"", "cmd": "DATA=$( find \"${1}\" -type f -exec ${MD5} {} ';' | sort -n )"}, {"invocation": "Print each character in \"Hello\" as a hexadecimal value", "cmd": "echo -n \"Hello\" | od -A n -t x1"}, {"invocation": "Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'tmpdir' variable.", "cmd": "tmpdir=$(mktemp -d)"}, {"invocation": "display the name of all directories in the current folder and do not search in sub directories", "cmd": "find . -type d -maxdepth 1 -exec basename {} \\;"}, {"invocation": "Print a hex dump byte to byte of the output of \"echo Aa\"", "cmd": "echo Aa | od -t x1"}, {"invocation": "Report file system containing path-to-file disk usage human-readable.", "cmd": "df -h path-to-file"}, {"invocation": "Set variable BZIP2_CMD to the full path of command \"bzip2\"", "cmd": "BZIP2_CMD=`which bzip2`"}, {"invocation": "change the ownership of all regular/normal files in the current directory", "cmd": "find . -type f | xargs chown username"}, {"invocation": "Find all directories under and below /root that match pattern \"*linux*\", case insensitive", "cmd": "find  /root -type d -iname \"*linux*\""}, {"invocation": "Remove newline characters from \"file.txt\"", "cmd": "paste -sd \"\" file.txt"}, {"invocation": "Find all directories under ~/code and replace all newlines with : in the output then remove the last :", "cmd": "find ~/code -type d | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "Split \"database.sql\" into files of at most 100000 lines each with prefix \"database-\"", "cmd": "split -l 100000 database.sql database-"}, {"invocation": "Verbosely compresses all files on third and fourth depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*/*"}, {"invocation": "Give rwx permissions to the user and group of the directory named \"files\" leaving others without any privileges", "cmd": "find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "find all the files in the /usr folder that have been modified after the file /usr/FirstFile.", "cmd": "find /usr -newer /usr/FirstFile -print"}, {"invocation": "Search the current directory recursively for the largest files", "cmd": "find . -type f -printf '%20s %p\\n' | sort -n | cut -b22- | tr '\\n' '\\000' | xargs -0 ls -laSr"}, {"invocation": "find all files having certain word in its name in the current folder", "cmd": "find . -name \"*bsd*\" -print"}, {"invocation": "Page through the contents of yourFile, adding a $ at the end of each line.", "cmd": "cat -e yourFile | less"}, {"invocation": "display a long list of all the directories which have files ending with \".todo\"", "cmd": "find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n' | xargs ls -l"}, {"invocation": "Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones", "cmd": "comm <(sort -n f1.txt) <(sort -n f2.txt)"}, {"invocation": "find all files in the current folder and search for a word in them.", "cmd": "find . -type f -exec grep \"applicationX\" {} \\;"}, {"invocation": "Removes the last 2 lines from a file", "cmd": "head -n -2 myfile.txt"}, {"invocation": "Find files that end in \".gz\" and execute \"awk -F, '$1 ~ /F$/'\" on their unzipped contents", "cmd": "find . -maxdepth 1 -name \\*.gz -print0 | xargs -0 zcat | awk -F, '$1 ~ /F$/'"}, {"invocation": "Recursively and forcibly removes $TMP folder with all content.", "cmd": "rm -fR \"${TMP}/\";"}, {"invocation": "Find all *.log files under path/", "cmd": "find path/ -name \"*.log\""}, {"invocation": "Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750", "cmd": "find /home/mywebsite/public_html/sites/all/modules -type d -exec chmod 750 {} +"}, {"invocation": "Find all fglrx-libGL* files under and below debian/fglrx/", "cmd": "find debian/fglrx/ -name 'fglrx-libGL*'"}, {"invocation": "Print login information of all users except the first two and replace all instances of \" \" with \", \"", "cmd": "who | awk '{ if (NR!=1 && NR!=2) {print} }' | sed -e 's/ /, /g'"}, {"invocation": "find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word \"2015\" in their name", "cmd": "find /travelphotos -type f -size +200k -not -iname \"*2015*\""}, {"invocation": "Search the /myfiles directory tree for regular files with at least these permissions: 647", "cmd": "find /myfiles -type f -perm -647"}, {"invocation": "Find all the files which are greater than 50MB and less than 100MB", "cmd": "find / -size +50M -size -100M"}, {"invocation": "List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory", "cmd": "find /home/jassi/ -name \"aliencoders.[0-9]+\" -exec ls -lrt {} + | awk '{print $9}'"}, {"invocation": "find all the files in the home folder which are less than 300Bytes", "cmd": "find ~ -size -300b"}, {"invocation": "Find all files/directories named 'file1' under current directory tree", "cmd": "find . -name file1 -print"}, {"invocation": "List all *.jpg files/directories in entire file system", "cmd": "find / -name \"*.jpg\" -print"}, {"invocation": "Execute awk script \"script.awk\" with 2 arguments both \"file.txt\" and format the output as a table", "cmd": "awk -f script.awk file.txt{,} | column -t"}, {"invocation": "find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.", "cmd": "find . -name 'cache*' -depth -exec rm {} \\;"}, {"invocation": "Calculate and show md5 sums for every files under current directory tree", "cmd": "find . | xargs md5sum"}, {"invocation": "Display the first 10 lines of the byte hex dump with no file offset data for \"/bin/ls\"", "cmd": "od -t x1 -An /bin/ls | head"}, {"invocation": "Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory'", "cmd": "find . -path ./ignored_directory -prune -o -name fileName.txt -print"}, {"invocation": "delete all the log files in the current folder", "cmd": "find ./ -name '*.log' | xargs rm"}, {"invocation": "Recursively compress every file in the current directory tree and keep the original file", "cmd": "gzip -kr ."}, {"invocation": "Find with combine multiple search criterias , in this command serach  files that begin with abc in there name and dont have .py extension .", "cmd": "find . -type f -name 'abc*' ! -name '*.py'"}, {"invocation": "Find only directories", "cmd": "find . -type d"}, {"invocation": "Find all files/directories named 'foo.bar' in the entire filesystem", "cmd": "find / -name foo.bar -print"}, {"invocation": "Remove all files with names like \"vmware-*.log\" from the current directory tree", "cmd": "find . -name vmware-*.log | xargs -i rm -rf {}"}, {"invocation": "sort based on size and display top ten small normal/regular files in the current folder", "cmd": "find . -type f -exec ls -s {} \\; | sort -n | head -10"}, {"invocation": "delete all the trace files (\".trc\") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours", "cmd": "find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7 -exec rm {} \\;"}, {"invocation": "Convert Unix `cal` output to latex table code.", "cmd": "cal | sed '1d;2{h;s/./ /g;x};/^\\s*$/b;G;s/\\n/ /;s/^...\\(.\\{15\\}\\).*/\\1/;s/.../ &\\t\\&/g;s/\\&$/\\\\\\\\/'"}, {"invocation": "Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable.", "cmd": "rand_str=$(mktemp --dry-run ${str// /X})"}, {"invocation": "find files in /usr directory which are modified after February 1 of the current year", "cmd": "find /usr -newermt \"Feb 1\""}, {"invocation": "Force create a symbolic link named \"mylink\" with target \"/apps/myapps/new/link/target\"", "cmd": "ln -f -s /apps/myapps/new/link/target mylink"}, {"invocation": "Rename absolute path of symbolic link \"dirln\" to \"dir2\"", "cmd": "mv \"$(readlink -f dirln)\" dir2"}, {"invocation": "Find all files/directories under current directory tree that belong to user 'john'", "cmd": "find . -user john"}, {"invocation": "Delete all files named \"filename\" in the current directory tree, except the one with path ./path/to/filename", "cmd": "find . -name \"filename\" -and -not -path \"./path/to/filename\" -delete"}, {"invocation": "Find all the files that were modified exactly one day ago", "cmd": "find . -mtime 1"}, {"invocation": "Print lines 2960 to 2966 from the output of \"history\"", "cmd": "history | sed -n '2960,2966p'"}, {"invocation": "Print list of file systems currently mounted.", "cmd": "df -h |  awk '{print $1}'"}, {"invocation": "Find all *.ogg (case insensitive) files/directories under your home directory that are not greater than 20MB in size", "cmd": "find $HOME -iname '*.ogg' ! -size +20M"}, {"invocation": "Strips two last sections from the path $pathname, and prints basename of the rest part.", "cmd": "echo $(basename $(dirname $(dirname $pathname)))"}, {"invocation": "Print only alphanumeric values from \"/dev/urandom\"", "cmd": "cat /dev/urandom | tr -dc 'a-zA-Z0-9'"}, {"invocation": "Find all the files under /home directory with name tecmint.txt", "cmd": "find /home -name tecmint.txt"}, {"invocation": "Find *.java files under current directory and compress them to myfile.tar  (unsafe)", "cmd": "find . -type f -name \"*.java\" | xargs    tar cvf myfile.tar"}, {"invocation": "Find all files/directories under current directory tree excluding hidden files/directories", "cmd": "find . -not -path '*/\\.*'"}, {"invocation": "Search the current directory tree for *.wav files that have \"export\" in their pathnames", "cmd": "find -type f -name \"*.wav\" | grep export"}, {"invocation": "Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago", "cmd": "find ${CURR_DIR} -type f \\( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \\) -printf \"./%P\\n\""}, {"invocation": "Save a nginx link to \"/path/to/file\" with the current user and system FQDN host name in variable \"path\"", "cmd": "path=\"http://$(whoami).$(hostname -f)/path/to/file\""}, {"invocation": "Display standard input as printable characters or backslash escapes with no addressing radix", "cmd": "od -cAn;"}, {"invocation": "Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories", "cmd": "find . -maxdepth 1 -name \"*.jpg\" -size -50k | xargs rm -f"}, {"invocation": "Copy all .patch files from the current directory tree to patches/", "cmd": "find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/"}, {"invocation": "Find *.o files with permissions 664 in the current directory tree", "cmd": "find . -name *.o -perm 664 -print"}, {"invocation": "Print out the full path name of \"mypathname\" with dots resolved", "cmd": "readlink -ev mypathname"}, {"invocation": "Format the contents of \"[file]\" in a neat table", "cmd": "column -t [file]"}, {"invocation": "Find empty regular files in /dir and its subdirectories", "cmd": "find /dir -type f -size 0 -print"}, {"invocation": "Find writable regular files in the current directory", "cmd": "find .  -maxdepth 1 -type f -writable"}, {"invocation": "Search the current directory tree for *.c and *.asm files, ignoring the case", "cmd": "find . -type f \\( -iname \"*.c\" -or -iname \"*.asm\" \\)"}, {"invocation": "Creates 5-letter random file name and saves it in 'rand_str' variable.", "cmd": "rand_str=\"$(mktemp --dry-run XXXXX)\""}, {"invocation": "Find all files/directories containing 'farm' in their names under '/usr/share' directory tree", "cmd": "find /usr/share -name '*farm*'"}, {"invocation": "Create a symbolic link named the basename of \"$file\" to \"$file\"", "cmd": "ln -s $file `basename $file`"}, {"invocation": "List the last modified file under \"$DIR\"", "cmd": "find $DIR -type f -printf \"%T@ %p\\n\" | sort -n | cut -d' ' -f 2 | tail -n 1"}, {"invocation": "Copies \"\"$project_dir\"/iTunesArtwork\", to the 'Payload/iTunesArtwork', rewriting files if necessary.", "cmd": "cp -f \"$project_dir\"/iTunesArtwork Payload/iTunesArtwork"}, {"invocation": "Find all *.txt files under current directory and copy them to ./tmp", "cmd": "find . -type f -name '*.txt' | sed 's/'\"'\"'/\\'\"'\"'/g' | sed 's/.*/\"&\"/'  | xargs -I{} cp -v {} ./tmp/"}, {"invocation": "Copy all files below the current directory whose names contain \"FooBar\" to directory foo/bar/ in user's home directory.", "cmd": "find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"}, {"invocation": "Save the date 222 days before today to the variable 'date_222days_before_TodayDay'", "cmd": "date_222days_before_TodayDay=$(date --date=\"222 days ago\" +\"%d\")"}, {"invocation": "find all the files in the folder /work which belong to the user \"olivier\"", "cmd": "find /work -user olivier -print"}, {"invocation": "Find files under current directory that contains the string '/bin/ksh'", "cmd": "find . -type f -exec grep -iH '/bin/ksh' {} \\;"}, {"invocation": "Create a copy of the current working directory structure in the usr/project directory,", "cmd": "find . -type d -print|sed 's@^@/usr/project/@'|xargs mkdir"}, {"invocation": "Find all MP3s in the /home directory tree", "cmd": "find /home -type f -name '*.mp3'"}, {"invocation": "Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files", "cmd": "find .git -type f -print0 | xargs -0 sed -i 's/subdomainB\\.example\\.com/subdomainA.example.com/g'"}, {"invocation": "Make directory \"dir\" and do not cause an error if it exists", "cmd": "mkdir -p dir"}, {"invocation": "Find all .gz archives in the current directory tree and check if they are valid", "cmd": "find . -name *.gz -exec gunzip '{}' \\;"}, {"invocation": "find all the files in the current directory which have the size 40 bytes in the current disk partition.", "cmd": "find . -size -40 -xdev -print"}, {"invocation": "Split standard input into files with at most 75 lines each", "cmd": "split --lines=75"}, {"invocation": "print disk usage of files or folders in current directory", "cmd": "du -sh *"}, {"invocation": "List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory", "cmd": "find /home/jassi/ -name \"aliencoders.[0-9]+\" |& xargs ls -lrt | awk '{print $9}'"}, {"invocation": "display all the text files  in the current folder", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "Removes 5 oldest files in the current folder.", "cmd": "ls -t *.log | tail -$tailCount | xargs rm -f"}, {"invocation": "find all of the files that are readable", "cmd": "find / -readable"}, {"invocation": "Print lines 15967 to 16224 in file \"dump.txt\"", "cmd": "cat dump.txt | head -16224 | tail -258"}, {"invocation": "Gets a current job back to the foreground.", "cmd": "fg"}, {"invocation": "Write to standard error a trace for each command after it expands the command and before it executes it", "cmd": "set -x"}, {"invocation": "Merge content of decompressed files \"$part0\", \"$part1\", and so on", "cmd": "sort -m <(zcat $part0 | sort) <(zcat $part1 | sort) ..."}, {"invocation": "Find all files matching pattern '.#*' in the current directory tree", "cmd": "find -iname '.#*'"}, {"invocation": "Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "display all the files in the usr folder which have been modified after Feburary 1st", "cmd": "find /usr -newermt \"Feb 1\""}, {"invocation": "Display differences between list of files in /bin and /usr/bin.", "cmd": "diff <(ls /bin) <(ls /usr/bin)"}, {"invocation": "Find the directory with least modification time under current directory", "cmd": "find -type d -printf '%T+ %p\\n' | sort | head -1"}, {"invocation": "Search the current directory tree recursively for the regular file named \"myfile\" ignoring \"work\" and \"home\" directories", "cmd": "find .  \\( -name work -o -name home \\)  -prune -o -name myfile -type f -print"}, {"invocation": "Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers", "cmd": "find . -name '*.axvw' -exec grep -n 'some string' {} +"}, {"invocation": "Display differences between /tmp/test1 and /tmp/test2 side-by-side.", "cmd": "diff -y /tmp/test1  /tmp/test2"}, {"invocation": "find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.", "cmd": "find * -type f -print -o -type d -prune"}, {"invocation": "compresses all the files in the current folder with default depth", "cmd": "find . -depth -print | cpio -dump /backup"}, {"invocation": "force create hard link between $GIT_DIR/../apresentacao/apresentacao.pdf and $GIT_DIR/../capa/apresentacao.pdf", "cmd": "ln -f $GIT_DIR/../apresentacao/apresentacao.pdf $GIT_DIR/../capa/apresentacao.pdf"}, {"invocation": "find regular files in the current directory, without descending into sub-directories and display as a null separated list.", "cmd": "find -maxdepth 1 -type f -printf '%f\\000'"}, {"invocation": "Search the /usr/bin directory tree for regular files accessed more than 100 days ago", "cmd": "find /usr/bin -type f -atime +100"}, {"invocation": "Counts lines of 'file' file.", "cmd": "wc -l file"}, {"invocation": "search for the regular/normal file \"foo.bar\" and force delete it", "cmd": "find /home -name foo.bar -type f -exec rm -f \"{}\" ';'"}, {"invocation": "Find all mysong.ogg files/directories under your home directory", "cmd": "find $HOME -name 'mysong.ogg'"}, {"invocation": "Force create a symbolic link named \"currentDir\" to \"newDir\" without dereferencing \"currentDir\"", "cmd": "ln -sfn newDir currentDir"}, {"invocation": "Find all *.txt files under / and print their sizes and paths", "cmd": "find / -name '*.txt' -exec du -hc {} \\;"}, {"invocation": "Change directory to the alphabetically last path under the current directory", "cmd": "cd \"$(find . -print0 | sort -z | tr '\\0' '\\n' | tail -1)\""}, {"invocation": "Lists all subdirectories in a current folder, removing trailing slash.", "cmd": "ls -d */|sed 's|[/]||g'"}, {"invocation": "Verbosely compresses all files on third and fourth depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*"}, {"invocation": "display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set", "cmd": "find / -path /proc -prune -o -type f -perm +6000 -ls"}, {"invocation": "searches through the root filesystem (\"/\") for the file named Chapter1.", "cmd": "find / -name Chapter1 -type f -print"}, {"invocation": "find all regular files  then display the number of occurrences of banana without lines not proper end", "cmd": "find . -type f -print0| xargs -0 grep -c banana| grep -v \":0$\""}, {"invocation": "change the permissions of all the files ending with \"fits\" in the folder \"/store/01\" and save the output file names to a log file", "cmd": "find /store/01 -name \"*.fits\" -exec chmod -x+r {} \\; -exec ls -l {} \\; | tee ALL_FILES.LOG"}, {"invocation": "Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths", "cmd": "find /path/to/folder -path \"*/ignored_directory\" -prune -o -name fileName.txt -print"}, {"invocation": "Display the number of regular files under current directory tree", "cmd": "find . -type f -exec echo {} \\; | wc -l"}, {"invocation": "Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way", "cmd": "find MyApp.app -name Headers -type d -prune -exec rm -rf {} +"}, {"invocation": "find file named foo.txt under current directory.", "cmd": "find . -name foo.txt"}, {"invocation": "Delete all hidden files/directories under $some_directory including $some_directory", "cmd": "find $some_directory '.*' -delete"}, {"invocation": "Find all $2 files in $1 path and search for the regex expanded by $3 in those files", "cmd": "find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;"}, {"invocation": "list all *.java files under the src directory", "cmd": "find src -name \"*.java\""}, {"invocation": "Copy \"/Users/username/path/on/machine/\" to \"username@server.ip.address.here:/home/username/path/on/server/\" and convert encoding from UTF-8-MAC to UTF-8", "cmd": "rsync --iconv=UTF-8-MAC,UTF-8 /Users/username/path/on/machine/ 'username@server.ip.address.here:/home/username/path/on/server/'"}, {"invocation": "Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir'", "cmd": "find olddir -name script.sh -printf \"%p\\0\" -printf \"newdir/%P\\0\" | xargs -0L2 cp -n"}, {"invocation": "Remove all .sh files in the current directory tree whose names begin with \"new\"", "cmd": "find . -name \"new*.sh\" -exec rm -f '{}' \\;"}, {"invocation": "List all files in the \"test\" directory tree except those with '/invalid_dir/' in the pathnames", "cmd": "find test -print | grep -v '/invalid_dir/'"}, {"invocation": "Correct permissions for files in the web directory", "cmd": "find /your/webdir -type f | xargs chmod 644"}, {"invocation": "Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.", "cmd": "find ~ -atime +100 -delete"}, {"invocation": "Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.", "cmd": "find ~/dir_data -type d -exec chmod a+xr,u+w {} \\;"}, {"invocation": "Report file system containing /example disk usage in kilobytes.", "cmd": "df -k /example"}, {"invocation": "prints last part of a logfile since timestamp 423", "cmd": "tac file.log | awk '{ if ($1 >= 423) print; else exit; }' | tac"}, {"invocation": "Execute \"ls -l\" on host \"something\" as user \"root\"", "cmd": "ssh root@something 'ls -l'"}, {"invocation": "Prints long recursive listing of all content of a root folder, appending output to 'output.file'.", "cmd": "ls -lR / | tee -a output.file"}, {"invocation": "Find all files in  /mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible", "cmd": "find /mydir -type f -exec sed -i 's/<string1>/<string2>/g' {} +"}, {"invocation": "Append the date and command ran to \"/tmp/trace\" after every command", "cmd": "PROMPT_COMMAND='echo \"$(date +\"%Y/%m/%d (%H:%M)\") $(history 1 |cut -c 7-)\" >> /tmp/trace'"}, {"invocation": "change group of the file myfile to group friends", "cmd": "chown :friends myfile"}, {"invocation": "Copies all files like \"*foo*\" under the current directory to the '/your/dest' directory.", "cmd": "find . -name \"*foo*\" | sed -e \"s/'/\\\\\\'/g\" -e 's/\"/\\\\\"/g' -e 's/ /\\\\ /g' | xargs cp /your/dest"}, {"invocation": "Change the ownership of \"/home/bob\" to \"root\"", "cmd": "sudo chown root /home/bob"}, {"invocation": "Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under the current directory and below ignoring SVN files", "cmd": "find . \\( ! -regex '.*/\\..*' \\) -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'"}, {"invocation": "Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 100MB in size", "cmd": "find $HOME -iname '*.ogg' -size +100M"}, {"invocation": "Print line, word and byte count for each file recursively and also show the total counts", "cmd": "wc `find`"}, {"invocation": "Execute \"ls -l\" every 2 seconds and highlight the differences in runs", "cmd": "watch -d ls -l"}, {"invocation": "display the contents of all the text files in the current directory", "cmd": "find . -name  '*.txt' -exec cat {} \\;"}, {"invocation": "Find all *.rb (regular) files under current directory", "cmd": "find . -name \"*.rb\" -type f"}, {"invocation": "Find all files that are exactly 50 bytes", "cmd": "find / -size 50c"}, {"invocation": "View line 500 to line 1000 in gzipped file \"bigfile.z\"", "cmd": "zcat bigfile.z | sed -ne '500,1000 p'"}, {"invocation": "Find all hard links to file1 under /home directory", "cmd": "find /home -xdev -samefile file1"}, {"invocation": "Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.", "cmd": "find / -type f -name *.zip -size +100M -exec rm -i {} \\;"}, {"invocation": "Save the directory of the full path to the current script in variable \"dir\"", "cmd": "dir=$(dirname $(readlink -m $BASH_SOURCE))"}, {"invocation": "Archive \"directory\" preserving hard links from host \"remote\" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made", "cmd": "rsync -aPSHiv remote:directory ."}, {"invocation": "Search /dev/shm and /tmp for regular files not changed in two weeks", "cmd": "find /dev/shm /tmp -type f -ctime +14"}, {"invocation": "Show filename and filetype description of all PHP files in current directory whose name or filetype description includes \"UTF\"", "cmd": "file *.php | grep UTF"}, {"invocation": "Counts all lines in $i file.", "cmd": "cat $i | wc -l"}, {"invocation": "display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2", "cmd": "find . -type d -regextype posix-egrep -regex '\\./processor[[:digit:]]*/10\\.(1|2)'"}, {"invocation": "Split \"t.txt\" into files with at most 30000000 lines each and use a prefix \"t\" and numeric suffixes of length 2", "cmd": "split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t"}, {"invocation": "Extract path and query part from URL", "cmd": "echo \"$url\" | cut -d'/' -f4-"}, {"invocation": "remove all the \"core\" files in the current folder which have not been changed in the last 4 days.", "cmd": "find . -name core -ctime +4 -exec /bin/rm -f {} \\;"}, {"invocation": "insert \"e\" when it's pressed", "cmd": "bind '\"e\":self-insert'"}, {"invocation": "Remove all .txt files from the /full/path/dir directory tree", "cmd": "find /full/path/dir -name '*.txt' -print0 | xargs -0 rm"}, {"invocation": "Find all regular files whose names contain \"@\" in directory tree ~/$folder", "cmd": "find ~/$folder -name \"*@*\" -type f"}, {"invocation": "Find all files/directories under current directory with a Depth-First search", "cmd": "find dir -depth"}, {"invocation": "Uncomment every entry in current user's cron job list which contains \"test.sh\"", "cmd": "crontab -l | sed '/# *\\([^ ][^ ]*  *\\)\\{5\\}[^ ]*test\\.sh/s/^# *//' | crontab -"}, {"invocation": "change the permission of all the regular files in the folder /home to 700", "cmd": "find /home -type f -perm 0777 -print -exec chmod 700 {} \\;"}, {"invocation": "Save the full path of command \"~/f\" to variable \"foo\"", "cmd": "foo=`which ~/f`"}, {"invocation": "Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames", "cmd": "find . -name * -print0  | xargs -0 grep -iH \"String\""}, {"invocation": "display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems", "cmd": "find / -nouser \\( -fstype jfs -o -fstype jfs2 \\) -ls"}, {"invocation": "Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format.", "cmd": "du -ksh * | sort -n -r"}, {"invocation": "Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters", "cmd": "cd \"/cygdrive/c/Program Files (x86)\""}, {"invocation": "Finds name of a current month and saves it in a 'month' variable.", "cmd": "month=$(cal | head -1 | grep -oP \"[A-Za-z]+\")"}, {"invocation": "Copy recursively \"/source/backup\" to \"/destination\" preserving symbolic links, modification times, and permissions", "cmd": "rsync -rtvpl /source/backup /destination"}, {"invocation": "Remove all files whose names start with spam-", "cmd": "find . -name 'spam-*' | xargs rm"}, {"invocation": "display all the text files and hidden files in the home folder", "cmd": "find ~ -name \"*.txt\" \u2014 print -o -name \".*\" \u2014 print"}, {"invocation": "Find directories in /proc and show only those that doesn't match the regex '/proc/[0-9]*($|/)'", "cmd": "find /proc -type d | egrep -v '/proc/[0-9]*($|/)' | less"}, {"invocation": "List all *.txt files/directories under /etc", "cmd": "find /etc -name \"*.txt\" | xargs -I {} ls -l {}"}, {"invocation": "Find files that don\u2019t have 644 permissions", "cmd": "find / -type f ! -perm 644"}, {"invocation": "Find all directories under current directory and change their permission to 500", "cmd": "find . -type d -exec chmod 500 {} \\;"}, {"invocation": "Search the current directory recursively for regular files last accessed less than 2 days ago", "cmd": "find . type -f -atime -2"}, {"invocation": "Compare the contents of \"/bin\" and \"/usr/bin\" line by line", "cmd": "diff <(ls /bin) <(ls /usr/bin)"}, {"invocation": "List all regular files in entire file system", "cmd": "find / -type f -exec echo {} \\;"}, {"invocation": "Split \"$SOURCE_FILE\" into files of at most 100 lines each", "cmd": "split -l 100 \"$SOURCE_FILE\""}, {"invocation": "Find all the Sticky Bit files whose permission are 551", "cmd": "find / -perm 0551"}, {"invocation": "Display the named characters in \"Test\\rTesting\\r\\nTester\\rTested\"", "cmd": "echo -e \"Test\\rTesting\\r\\nTester\\rTested\" | awk '{ print $0; }' | od -a"}, {"invocation": "display all files in current folder using regular expression", "cmd": "find -regex \"$rx\""}, {"invocation": "Print files created/modified in the last day", "cmd": "find /directory -newermt $(date +%Y-%m-%d -d '1 day ago') -type f -print"}, {"invocation": "find all the files in the folder \"myfiles\" which have not been accessed in the last 30 days", "cmd": "find /myfiles -atime +30"}, {"invocation": "Find all the files in file system which are modified in last 1 hour", "cmd": "find / -mmin -60"}, {"invocation": "Find all directories in maximum 2 levels down the /tmp directory", "cmd": "find /tmp -maxdepth 2 -mindepth 1 -type d"}, {"invocation": "Replace \"string1\" with \"string2\" in all regular files in the current directory tree", "cmd": "find ./ -type f -exec sed -i 's/string1/string2/g' {} \\;"}, {"invocation": "Find all regular files in the \"$dir\" directory", "cmd": "find $dir -maxdepth 1 -type f"}, {"invocation": "Print the list of all files except files named BBB", "cmd": "find . \\! -name BBB -print"}, {"invocation": "find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.", "cmd": "find . -type f -atime +30 -print"}, {"invocation": "Change every directory under \"/var/www/html/\" to have permissions 775", "cmd": "sudo  find /var/www/html/ -type d -exec chmod 775 {} \\;"}, {"invocation": "Search for 'mystring' in all *.txt (case insensitive) files under current directory", "cmd": "find . -iname *.txt -exec egrep mystring \\{\\} \\;"}, {"invocation": "find all the files that are modified in the last 7 days", "cmd": "find -daystart -mtime -7"}, {"invocation": "Remove all regular files under '/var/log/remote' directory tree that have not been modified in the last 14 days where day count starts from today", "cmd": "find /var/log/remote/ -daystart -mtime +14 -type f -exec rm {} \\;"}, {"invocation": "Split \"file.txt\" excluding the first line into files of at most 4 lines each and with a prefix \"split_\"", "cmd": "tail -n +2 file.txt | split -l 4 - split_"}, {"invocation": "Forcefully delete all files in the current directory", "cmd": "find . -name '*' | xargs rm"}, {"invocation": "Lists all directories in the current folder.", "cmd": "ls -d ./*/"}, {"invocation": "Find all foo.mp4 files in the current directory tree", "cmd": "find ./ -name \"foo.mp4\" -exec echo {} \\;"}, {"invocation": "Find all directories named 'local' in entire file system", "cmd": "find / -name local -type d"}, {"invocation": "Force create a symbolic link without dereferencing named \"alpha\" to \"alpha_2\"", "cmd": "ln -nsf alpha_2 alpha"}, {"invocation": "Get a detailed list of all files on the system larger than 10MB", "cmd": "find / -size +10M -printf \u201c%12s %t %h/%fn\u201d"}, {"invocation": "Make \"bar\" executable", "cmd": "chmod +x bar"}, {"invocation": "Find \"file.xml\" under the current directory and change directory to its parent", "cmd": "cd `find . -name file.xml -exec dirname {} \\;`"}, {"invocation": "Find all files/directories under $something directory", "cmd": "find $something"}, {"invocation": "Find files using file-name", "cmd": "find -iname \"MyCProgram.c\""}, {"invocation": "Silently and recursively change the ownership of all files in the current directory to \"www-data\"", "cmd": "sudo chown -Rf www-data *"}, {"invocation": "find all files in the current directory which are bigger than 4MB", "cmd": "find . -size +4096k -print"}, {"invocation": "Unzip \"bigfile.txt.gz\" to standard output, search for patterns in \"patterns.txt\", and list the unique matches", "cmd": "gunzip -c bigfile.txt.gz | grep -f patterns.txt | sort | uniq -c"}, {"invocation": "find all the jpg files in current folder and sort them", "cmd": "find . -type f|grep -i \"\\.jpg$\" |sort"}, {"invocation": "Search for files with \"sitesearch\" in their names and \"demo\" in their path names", "cmd": "find . -iname '*sitesearch*' | grep demo"}, {"invocation": "display all files in current folder which have not been modified in the last 60 minutes", "cmd": "find -mmin +60"}, {"invocation": "Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\\.[A-Za-z]+$' from the current directory tree", "cmd": "find -regex '^.*/[A-Za-z]+-[0-9]+x[0-9]+\\.[A-Za-z]+$' | xargs echo rm -f"}, {"invocation": "Change to folder where the oracle binary is.", "cmd": "cd $(dirname $(which oracle))"}, {"invocation": "Remove the passphrase from user's ssh key without prompting.", "cmd": "echo | ssh-keygen -P ''"}, {"invocation": "Find *.html files in the /usr/src/linux directory tree", "cmd": "find /usr/src/linux -name \"*.html\""}, {"invocation": "search for the file \"name_to_find\" in the home folder", "cmd": "find ~ -name \"name_to_find\""}, {"invocation": "Search for 'Text To Find' in all regular files under current directory tree and show the matched files", "cmd": "find ./ -type f -exec grep -l \"Text To Find\" {} \\;"}, {"invocation": "find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions", "cmd": "find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq"}, {"invocation": "Search the home directory tree for regular files modified yesterday", "cmd": "find ~ -daystart -type f -mtime 1"}, {"invocation": "print all files in the current directory and all subdirectories", "cmd": "find ."}, {"invocation": "Counts the number of lines in *.php and *.inc files in a current folder and subfolders.", "cmd": "find . -name '*.php' -o -name '*.inc' | xargs wc -l"}, {"invocation": "Report file systems disk usage human-readable using POSIX output format.", "cmd": "df -Ph"}, {"invocation": "Find files on the system whose names begin with either x or X", "cmd": "find / -name \"[Xx]*\""}, {"invocation": "List *.txt files under current directory that have 'mystring' in their name", "cmd": "find . -name *.txt | egrep mystring"}, {"invocation": "Gets IP address of 'en1' network interface.", "cmd": "ifconfig en1 | sed -n '/inet addr/s/.*addr.\\([^ ]*\\) .*/\\1/p'"}, {"invocation": "display all files in current folder which are bigger than 100KB but are less than 500KB", "cmd": "find . -size +100k -a -size -500k"}, {"invocation": "Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree", "cmd": "find teste2 -type f -iname \"$srchfor\"|wc -l"}, {"invocation": "Getting a detailed list of files/dirs", "cmd": "find  / -name \"apt\" -ls"}, {"invocation": "Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.", "cmd": "chgrp -R GROUP /path/to/repo"}, {"invocation": "Find all regular files on the system whose size is greater than 20000k and print their names and sizes", "cmd": "find / -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}, {"invocation": "Recursively change the owner and group of all files in the current directory to \"apache\"", "cmd": "find . -maxdepth 1 -not -name \".\" -print0 | xargs --null chown -R apache:apache"}, {"invocation": "Remove all .php files in the /var/www/ directory", "cmd": "find /var/www/*.php -type f -exec rm {} \\;"}, {"invocation": "Find all directories under '.cache/chromium/Default/Cache' that are bigger than 100 MB in size excluding single letter directory names", "cmd": "find .cache/chromium/Default/Cache/ -type d -print0 | du -h | grep '[0-9]\\{3\\}M' | cut -f2 | grep -v '^.$'"}, {"invocation": "Find all the SUID files in the current directory tree", "cmd": "find . -perm /u=s"}, {"invocation": "Search the current directory recursively for regular files modified 2 days ago", "cmd": "find . type -f -mtime 2"}, {"invocation": "display all the directories in the current folder", "cmd": "find . -type d -print"}, {"invocation": "Find all *.mp3 files in file system with more than 10MB and delete them using rm command", "cmd": "find / -type f -name *.mp3 -size +10M -exec rm {} \\;"}, {"invocation": "Display file type information for all instances of \"file\" in the current PATH.", "cmd": "which file | xargs file"}, {"invocation": "Print a welcome message with the current user's user name", "cmd": "echo \"Welcome `whoami`!\""}, {"invocation": "Find all regular files under current directory non-recursively that have execute permission set for all (user, group and other)", "cmd": "find . -maxdepth 1 -type f -perm -uga=x"}, {"invocation": "display all the files in the kat folder", "cmd": "find kat -printf \"%f\\n\""}, {"invocation": "Find all directories in maximum 1 level down the current directory and remove the . entry from the output", "cmd": "find . -maxdepth 1 -type d | sed '/^\\.$/d'"}, {"invocation": "search for the file test in the current folder", "cmd": "find . -name test"}, {"invocation": "Execute python script \"test.py\" with \"LD_PRELOAD=./linebufferedstdout.so\" and write the output to console and append to \"test.out\"", "cmd": "LD_PRELOAD=./linebufferedstdout.so python test.py | tee -a test.out"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs", "cmd": "find var/log/ -iname anaconda.* | xargs tar -cvf file1.tar"}, {"invocation": "show all the files in the entire file system which are bigger than 1.1GB", "cmd": "find / -size +1.1G"}, {"invocation": "find all sqlite files in the current directory.", "cmd": "find ./ -name \"*.sqlite\""}, {"invocation": "Counts lines of all *.txt files in a current folder.", "cmd": "cat *.txt | wc -l"}, {"invocation": "Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf '", "cmd": "find /var/www/html/ -type d -name \"build*\" | sort | tail -n +5 | xargs -I % echo -rf %"}, {"invocation": "Find all files/directories under current directory bypassing file hierarchies in lexicographical order", "cmd": "find -s"}, {"invocation": "split result of the command \"tar [your params]\" into pieces per 500 mb named as \"output_prefixNNN\"", "cmd": "tar [your params] |split -b 500m - output_prefix"}, {"invocation": "Use \"/var/log/wtmp\" and print IPs and search for \"^msw.*127.0.0.1\"", "cmd": "who --ips /var/log/wtmp | grep '^msw.*127.0.0.1'"}, {"invocation": "Find all files/directories that do not belong to any user under '/home' directory tree", "cmd": "find /home -nouser -print"}, {"invocation": "Find all files in and below all subdirectories of the current directory", "cmd": "find . -mindepth 2"}, {"invocation": "display files in current folder ending with \"pdf\" or \"PDF\"", "cmd": "find . -name '*.pdf' -or -name '*.PDF'"}, {"invocation": "Output the variable \"filename\" without the last dot-separated section.", "cmd": "echo ${filename%.*}"}, {"invocation": "Archive showing progress \"sourcefolder\" to \"/destinationfolder\" excluding \"thefoldertoexclude\"", "cmd": "rsync -av --progress sourcefolder /destinationfolder --exclude thefoldertoexclude"}, {"invocation": "wait 2 seconds and then print \"hello\"", "cmd": "echo \"hello `sleep 2 &`\""}, {"invocation": "Recursively change ownership of \"~/.npm\" to the current user", "cmd": "sudo chown -R `whoami` ~/.npm"}, {"invocation": "display all executable files in the folder /home", "cmd": "find /home -perm /a=x"}, {"invocation": "Copy file or folder linked to by \"file\" to \"file\"", "cmd": "cp -rf --remove-destination `readlink file` file"}, {"invocation": "Search the current directory tree for files whose names start with \"f\"", "cmd": "find . -name f* -print"}, {"invocation": "display all the files in the current folder which are in the path ending with the folder f", "cmd": "find .  -path '*f'"}, {"invocation": "Find all files/directories under current directory and set their permission to 775", "cmd": "find . -type f -exec chmod 775 {} \\;"}, {"invocation": "Find and remove all .mp3 regular files under the current directory and below", "cmd": "find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}, {"invocation": "Find all files under ~/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last : (colon)", "cmd": "find ~/code -name '.*' -prune -o -type f -a -perm /u+x -print | sed 's@/[^/]\\+$@:@' | sort | uniq | tr -d '\\n' | sed 's/^/:/; s/:$//'"}, {"invocation": "print all files in the directories except the ./src/emacs directory", "cmd": "find . -wholename './src/emacs' -prune -o -print"}, {"invocation": "List all leaf directories (directories which don't contain any sub-directory) under current directory", "cmd": "find -depth -type d |sed 'h; :b; $b; N; /^\\(.*\\)\\/.*\\n\\1$/ { g; bb }; $ {x; b}; P; D'"}, {"invocation": "Check if \"$file\" contains DOS line endings", "cmd": "od -t x2 -N 1000 $file | cut -c8- | egrep -m1 -q ' 0d| 0d|0d$'"}, {"invocation": "Hunting down files with at least one banana", "cmd": "find . -type f -print0| xargs -0 grep -c banana| grep -v \":0$\""}, {"invocation": "find all files that have been used more than two days since their status was last changed", "cmd": "find -used +2"}, {"invocation": "Print the input \"hello world\" followed by a swap of the first two awk fields", "cmd": "echo hello world | tee  >(awk '{print $2, $1}')"}, {"invocation": "Find files/directories in entire file system that were modified a day ago", "cmd": "find / -mtime 1"}, {"invocation": "Find all hidden files", "cmd": "find /tmp -type f -name \".*\""}, {"invocation": "Find all files that are set user ID to root", "cmd": "find . -user 0 -perm -4000 -print"}, {"invocation": "Display the 5 largest files in the current directory and its sub-directories.", "cmd": "find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}, {"invocation": "Measure the disk space taken up by all *.txt files in the current directory tree", "cmd": "find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1"}, {"invocation": "Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 58", "cmd": "ping 8.8.8.8 | awk '{split($7,a,\"[=.]\");if (a[2]>58) print a[2], strftime()}'"}, {"invocation": "find all the files in the home folder which end with \".tex\"", "cmd": "find ~ -iname '*.tex'"}, {"invocation": "Numerically sort file \"table\" by the fourth character of the second field, ignoring leading spaces", "cmd": "sort -b -n -k2.4 table"}, {"invocation": "Find all files/directories named 'articles.jpg' under 'images' directory tree", "cmd": "find images -name \"articles.jpg\""}, {"invocation": "Find files and directories modified in last 7 days", "cmd": "find . -mtime -7"}, {"invocation": "Find every vim undo file under current directory", "cmd": "find -type f -iname '*.un~'"}, {"invocation": "Set permissions for files in `foldername' and its subdirectories to 644", "cmd": "find foldername -type f -exec chmod 644 {} \";\""}, {"invocation": "Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress no more than 10 at a time", "cmd": "find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}, {"invocation": "Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with \"no-match\", and output the second field from standard input and the second and third field from file1.txt", "cmd": "join -t, -o 1.2,2.2,2.3 -a 1 -e 'no-match' - <(sort file1.txt)"}, {"invocation": "Create intermediate directories as required and directory  /my/other/path/here", "cmd": "mkdir -p /my/other/path/here"}, {"invocation": "Report file systems inode usage.", "cmd": "df -i"}, {"invocation": "Make directories to \"/tmp/boostinst\" as needed and print a message for each created directory", "cmd": "mkdir -pv /tmp/boostinst"}, {"invocation": "search for the file centos in /usr folder ( case insenstive search )", "cmd": "find /usr -iname centos"}, {"invocation": "Print the current directory tree with the date of last modification for each file or directory", "cmd": "tree -D"}, {"invocation": "list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3", "cmd": "find . -name '*.js' | grep -v excludeddir | grep -v excludedir2 | grep -v excludedir3"}, {"invocation": "Find all regular files with name pattern $filename under $fileloc directory tree", "cmd": "find \"$fileloc\" -type f -prune -name \"$filename\" -print"}, {"invocation": "Pops the top directory of dirs stack and changes to it.", "cmd": "popd"}, {"invocation": "Find all files/directories named 'query' under current directory tree", "cmd": "find -name \"query\""}, {"invocation": "display all the regular/normal files in the current folder excluding the files \"bbb\" and \"yyy\"", "cmd": "find . \\( -name bbb -o -name yyy \\) -prune -o -type f -print"}, {"invocation": "search in the current folder for the file with the name \"test\" ( case insensitive search )", "cmd": "find . -iname test"}, {"invocation": "Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding *.js files/directories under /home/jul/here/exclude/* paths", "cmd": "find /home/jul/here -type f -iname \"*.php\" -o -iname \"*.js\" ! -path \"/home/jul/here/exclude/*\""}, {"invocation": "Read a line from standard input into variable \"i\" with the prompt \" Again? Y/n \"", "cmd": "read -p \" Again? Y/n \" i"}, {"invocation": "Continuously send \"y\" to all prompts of command \"rm\"", "cmd": "yes | rm"}, {"invocation": "Find all files/directories named 'file' without descending into directories with the same name under current directory tree", "cmd": "find -name file -prune"}, {"invocation": "Remove all regular files from the current directory tree that were modified a day ago", "cmd": "find . -type f -mtime 1 -exec rm {} +"}, {"invocation": "Read a line from standard input into variable \"ENTERED_PASSWORD\" without echoing the input", "cmd": "read -s ENTERED_PASSWORD"}, {"invocation": "Do not immediately exit the shell if a command fails", "cmd": "set +e"}, {"invocation": "Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names", "cmd": "find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +"}, {"invocation": "Execute \"wget -qO-  http://fake.link/file.txt\" every 5 seconds", "cmd": "watch -n 5 wget -qO-  http://fake.link/file.txt"}, {"invocation": "Search \"input.txt\" for regex patterns only matching those listed in \"ignore.txt\", list the unique lines and prefix with the number of occurrences", "cmd": "grep -of ignore.txt input.txt | sort | uniq -c"}, {"invocation": "Exit the shell immediately if an error is encountered", "cmd": "set -o errexit"}, {"invocation": "List all files under and below the directory given as variable $ARCH1", "cmd": "find $ARCH1 -ls"}, {"invocation": "Delete all hidden files in the directory tree given as variable $FOLDER", "cmd": "find $FOLDER -name \".*\" -delete"}, {"invocation": "search for the directory \"uploads\" in current folder and change the permission of the folder and all the files to 755", "cmd": "find . -type d -name 'uploads' -print0 | xargs -0 chmod -R 755"}, {"invocation": "Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning", "cmd": "find / -cmin -60 | head"}, {"invocation": "List all files/directories under current directory", "cmd": "find -ls"}, {"invocation": "find all the file which name end with c or h and content contain 'thing'", "cmd": "find . -name '*.[ch]' | xargs grep -l thing"}, {"invocation": "Prints path to folder that contains file \"/path/to/vm.vmwarevm/vm.vmx\".", "cmd": "dirname \"/path/to/vm.vmwarevm/vm.vmx\""}, {"invocation": "SSH into \"localhost\" with forced pseudo-terminal allocation, execute \"$heredoc\", and save the output to variable \"REL_DIR\"", "cmd": "REL_DIR=\"$(ssh -t localhost \"$heredoc\")\""}, {"invocation": "find files in /dir/path/look/up directory that names are dir-name-here", "cmd": "find /dir/path/look/up -name \"dir-name-here\""}, {"invocation": "Search history for \"part_of_the_command_i_still_remember_here\"", "cmd": "history | grep 'part_of_the_command_i_still_remember_here'"}, {"invocation": "Gets IP addresses of all network interfaces.", "cmd": "ifconfig | grep ad.*Bc | cut -d: -f2 | awk '{ print $1}'"}, {"invocation": "change owner and group of the current directory and all files into it to user and group andrew", "cmd": "chown -R andrewr:andrewr *"}, {"invocation": "Take first text field from file 'file.txt' as a domain name and get short A record for this one.", "cmd": "cut -d' ' -f1 file.txt | xargs dig +short"}, {"invocation": "Remove all .sh files in the current directory tree whose names begin with \"t\"", "cmd": "find . -name \"t*.sh\" -exec rm -vf '{}' \\;"}, {"invocation": "Remove files erroneously named `-F'", "cmd": "find . -name \"-F\" -exec rm {} \\;"}, {"invocation": "Print the last white space separated field of every line in \"file.txt\" as a \", \" separated list", "cmd": "awk '{print $NF}' file.txt | paste -sd, | sed 's/,/, /g'"}, {"invocation": "Find all files/directories with 777 permission under current directory tree", "cmd": "find . -perm 777 -print"}, {"invocation": "Find all files/directories under /home/feeds/data directory", "cmd": "find /home/feeds/data"}, {"invocation": "Make directory \"alpha_real\"", "cmd": "mkdir alpha_real"}, {"invocation": "Removes any empty folder that matches pattern ed*.", "cmd": "rmdir ed*"}, {"invocation": "Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree", "cmd": "find /path/to/look/in/ -type d -name '.texturedata' -exec chmod 000 {} \\; -prune"}, {"invocation": "Search for all files in the current directory recursively whose names contain \"linkin park\", ignoring the case", "cmd": "find . -iname \"*linkin park*\""}, {"invocation": "Find all files/directories under '/usr/local' containing 'blast' (case insensitive) in their names", "cmd": "find /usr/local -iname \"*blast*\""}, {"invocation": "find all files in the file system which belong to the user pat and having the word \"filename\" in their name.", "cmd": "find / -user pat -iname \"filename\""}, {"invocation": "Create all directories in the path specified by variable $javaUsrLib as super user", "cmd": "sudo mkdir -p $javaUsrLib"}, {"invocation": "Save a comma separated list of all $MY_DIRECTORY/*/ directories to variable 'FOLDER'", "cmd": "FOLDERS=`ls -dm $MY_DIRECTORY/*/ | tr -d ' '`"}, {"invocation": "Locate all files named 'restore.php' in the current directory and 3 levels below", "cmd": "find . -maxdepth 4 -name 'restore.php'"}, {"invocation": "find all the files that have been modified in the last 7 days,", "cmd": "find . -mtime -7 -print"}, {"invocation": "For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first.", "cmd": "join -o 1.1,1.2,1.3,1.4 -t, file1.csv file2.txt"}, {"invocation": "Enables shell option 'lastpipe'.", "cmd": "shopt -s lastpipe"}, {"invocation": "Find all directories under current directory", "cmd": "find . -type d -print"}, {"invocation": "Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter", "cmd": "find \"$GIVEN_DIR\" -type d -mindepth 1 -print0"}, {"invocation": "display all the jpg files in the current folder and do not search in sub directories", "cmd": "find . -maxdepth 1 -mindepth 1 -iname '*.jpg' -type f"}, {"invocation": "Unzip every \".gz\" file in the current directory tree", "cmd": "find . -name \"*.gz\" | xargs gunzip"}, {"invocation": "change the permission of all directories in current folder to 755.", "cmd": "find . -type d -exec chmod 755 {} \\;"}, {"invocation": "Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates.", "cmd": "uniq -w12 -c file"}, {"invocation": "Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\\|#hyphenate' in their contents", "cmd": "find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"}, {"invocation": "Remove files that are less than 1MB in size under current directory", "cmd": "find . -type f -size -1M -exec rm {} +"}, {"invocation": "list the details of all the directories in the current folder", "cmd": "find . -type d -exec ls -ld {} \\;"}, {"invocation": "Show all files that have not been accessed in the $HOME directory for 30 days or more", "cmd": "find $HOME -atime +30"}, {"invocation": "Search the bla directory recursively for *.so files", "cmd": "find bla -name \"*.so\""}, {"invocation": "List directories in the current working directory and remove the trailing \"/\"", "cmd": "ls -d */|sed 's|[/]||g'"}, {"invocation": "Find all regular files under and below /home/user/demo/", "cmd": "find /home/user/demo -type f -print"}, {"invocation": "Change permissions of \".git/hooks/prepare-commit-msg\" to 777", "cmd": "sudo chmod 777 .git/hooks/prepare-commit-msg"}, {"invocation": "Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.", "cmd": "find . -type f -name \".*\" -newer .cshrc -print"}, {"invocation": "Find all files and directories under current directory", "cmd": "find ."}, {"invocation": "Save only the digits in \"$filename\" to variable \"number\"", "cmd": "number=$(echo $filename | tr -cd '[[:digit:]]')"}, {"invocation": "display the file name and the file type of all the files in the current directory", "cmd": "find . -printf \"%y %p\\n\""}, {"invocation": "Save \"$N\" number of '.' characters in variable \"myvar\"", "cmd": "myvar=`seq 1 $N | sed 's/.*/./' | tr -d '\\n'`"}, {"invocation": "Log into \"ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com\" using identity file \"~/path/mykeypair.pem\"", "cmd": "ssh -i ~/path/mykeypair.pem ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com"}, {"invocation": "Finds IP addresses of all network interfaces.", "cmd": "ifconfig | sed -n 's/.*inet addr:\\([0-9.]\\+\\)\\s.*/\\1/p'"}, {"invocation": "List the combined path of the current working directory and \"file.txt\"", "cmd": "ls \"`pwd`/file.txt\""}, {"invocation": "Find all the files in entire file system which are greater than 50MB and less than 100MB.", "cmd": "find / -size +50M -size -100M"}, {"invocation": "Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'", "cmd": "rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1"}, {"invocation": "Overwrite a file 'my-existing-file' with random data to hide its content", "cmd": "shred my-existing-file"}, {"invocation": "Recursively finds and compresses all files in a current folder.", "cmd": "find . -type f -exec bzip2 {} +"}, {"invocation": "Change every reference to the colour red to green in all CSS files", "cmd": "find . -name \"*.css\" -exec sed -i -r 's/#(FF0000|F00)\\b/#0F0/' {} \\;"}, {"invocation": "Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script.", "cmd": "dig @ns1.hosangit.com djzah.com +noall +authority +comments | awk -f script.awk"}, {"invocation": "get all the files that are exactly 30 days old", "cmd": "find . -mtime 30 -print"}, {"invocation": "Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR'", "cmd": "find /usr/ports/ -name Makefile\\* -exec grep -l QTDIR '{}' '+' | wc -l"}, {"invocation": "change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found", "cmd": "find /the/path -type f -name '*.abc' -execdir rename 's/\\.\\/(.+)\\.abc$/version1_$1.abc/' {} \\;"}, {"invocation": "Rename all *.txt regular files in the current directory tree to *.abc", "cmd": "find . -type f -iname '*.txt' -print0 | xargs -0 rename .txt .abc"}, {"invocation": "find all the files ending with \"clj\" in the current folder and search for a pattern", "cmd": "find . -name '*.clj' -exec grep -r resources {} \\;"}, {"invocation": "Run a \"rm\" process to recursively remove \"cache\", making it immune to all SIGHUP signals sent to it.", "cmd": "nohup rm -rf cache &"}, {"invocation": "find all the files in the home folder that are modified day before yesterday", "cmd": "find $HOME -mtime -2 -mtime +1"}, {"invocation": "Read a single line from standard input and save to variable \"line\"", "cmd": "read line"}, {"invocation": "Recursively copies '$1' directory to '$2' directory.", "cmd": "cp -r $1 $2"}, {"invocation": "Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago", "cmd": "find $backup_path/*.sql -mtime +5 -exec rm -f {} \\;"}, {"invocation": "Make 3 directories named \"~/Labs/lab4a/folder\" followed by the number 1, 2, or 3", "cmd": "mkdir ~/Labs/lab4a/folder{1,2,3}"}, {"invocation": "Find all empty directories under $somedir and copy /my/configfile into those directories", "cmd": "find \"$somedir\" -type d -empty -exec cp /my/configfile {} \\;"}, {"invocation": "Find all files/directories named 'query' (case insensitive) under current directory", "cmd": "find -iname \"query\""}, {"invocation": "Show all files in /etc that are owned by root have been modified within the last minute", "cmd": "find /etc/ -user root -mtime 1"}, {"invocation": "Make directories \"tmp/real_dir1\" and \"tmp/real_dir2\" as needed", "cmd": "mkdir -p tmp/real_dir1 tmp/real_dir2"}, {"invocation": "split the file \"file\" into pieces per 2 lines", "cmd": "split -n2 infile"}, {"invocation": "Search the directories matching pattern \"/path/to/some/dir/*[0-9]\" for level 1 subdirectories", "cmd": "find /path/to/some/dir/*[0-9] -type d -maxdepth 1"}, {"invocation": "Find all files in the /usr directory tree that are owned by group `staff'", "cmd": "find /usr -group staff"}, {"invocation": "Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names", "cmd": "find ../../$name-module -print0 -name 'Name*' -type f | xargs -0 rename \"s/Name/$Name/\""}, {"invocation": "find all the files in the folder /opt which have been modified exactly 20 days ago", "cmd": "find /opt -mtime 20"}, {"invocation": "Set permissions to 700 for directories under var/", "cmd": "find var/ -type d -exec chmod 700 {} \\;"}, {"invocation": "Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them", "cmd": "find /storage -name \"*.mp4\" -o -name \"*.flv\" -type f | sort | head -n500"}, {"invocation": "Delete all empty directories in the \"test\" directory tree", "cmd": "find test -depth -type d -empty -delete"}, {"invocation": "Find .java files in the current directory tree that contain 'TODO', and print their pathnames", "cmd": "find . -name \"*.java\" -exec grep -Hin TODO {} + | cut -d \":\" -f 1"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f | sed 's/.*/\"&\"/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1"}, {"invocation": "Recursively changes group ownership of every folder in a current directory to the name of that folder.", "cmd": "find . -type d | sed -e 's/^\\.\\///g' | awk '{print $1, $1}' | xargs chgrp"}, {"invocation": "list in long format all files from / whose filename ends in \"jbd\", not descending into directories that are not readable while searching, and not descending into directories on other filesystems", "cmd": "find / -mount \\! -readable -prune  -o  -path /dev -prune  -o  -name '*.jbd' -ls"}, {"invocation": "Find all files under the current directory whose pathnames do not end with \"Video\", ignoring the case", "cmd": "find . -maxdepth 1 -not -iwholename '*Video'"}, {"invocation": "find all the \".jpg\" files in current folder and display their count", "cmd": "find ./ -name '*.jpg' -type f | wc -l"}, {"invocation": "Search for all the files in man pages and return the manual page for grep", "cmd": "find /usr/share/man/ -regex .*/grep*"}, {"invocation": "Get domain name with 'google' from address $1", "cmd": "dig -x \"$1\" | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}, {"invocation": "Unzip and untar \"file.tar.gz\"", "cmd": "zcat file.tar.gz |tar x"}, {"invocation": "Create a compressed archive of \"/home\" and split the contents into files with at most 4000 MiB each and use prefix \"/media/DRIVENAME/BACKUPNAME.tgz\"", "cmd": "tar --one-file-system -czv /home | split -b 4000m - /media/DRIVENAME/BACKUPNAME.tgz"}, {"invocation": "Gets IP address of first network interface which name matches pattern \"venet0:0\\|eth0\".", "cmd": "ifconfig | grep -A2 \"venet0:0\\|eth0\" | grep 'inet addr:' | sed -r 's/.*inet addr:([^ ]+).*/\\1/' | head -1"}, {"invocation": "Create a symbolic link in target directory \"~/newlinks\" to \"$source\"", "cmd": "ln -s \"$source\" -t ~/newlinks"}, {"invocation": "List the current directory recursively ignoring the \"dir1\" subdirectory's content", "cmd": "find . -print -name dir -prune"}, {"invocation": "Clean up all zombie processes by sending SIGTERM signal to their parent process, which requests them to terminate.", "cmd": "kill $(ps -A -ostat,ppid | awk '/[zZ]/{print $2}')"}, {"invocation": "remove all the \".core\" files in the file system", "cmd": "find / -name \"*.core\" | xargs rm"}, {"invocation": "Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names", "cmd": "find /abs/path/to/directory -maxdepth 1 -name '.*invalidTemplateName.*'"}, {"invocation": "Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune -o -name CVS -prune \\) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d \":\" -f1"}, {"invocation": "Print all '-' separated digits in file 'infile' as dot ('.') separated digits", "cmd": "grep -Eo '([0-9]+-){3}[0-9]+' infile | tr - ."}, {"invocation": "copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old", "cmd": "find . -type f -mtime +30 -name \"*.log\" -exec cp {} old \\;"}, {"invocation": "Print unique lines of sorted file \"second.txt\" compared to sorted file \"first.txt\"", "cmd": "comm -13 first.txt second.txt"}, {"invocation": "A no-op on filename with sed", "cmd": "sed -i \"s/\\\\\\\\\\n//g\" filename"}, {"invocation": "Compress all *.img files using bzip2", "cmd": "find ./ -name \"*.img\" -exec bzip2 -v {} \\;"}, {"invocation": "Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension", "cmd": "find /path/to/directory/* -maxdepth 0 -type d -printf \"%P\\n\" -exec sudo tar -zcpvf {}.tar.gz {} \\;"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}, {"invocation": "display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins", "cmd": "find ./ -name \"*.dat\" -type f -cmin +60 -exec basename {} \\;"}, {"invocation": "change the permission of all the normal/regular files from 777 to 755 in the folder \"/home/user/demo\"", "cmd": "find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\\{1,2\\}'", "cmd": "find . -regextype sed -regex '.*myfile[0-9]\\{1,2\\}'"}, {"invocation": "Find all .txt files in the user's home directory and below.", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "display all directories which have not been accessed in the last 24*3 hours", "cmd": "find -type d -and -atime +3"}, {"invocation": "Print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern \"node_modules\".", "cmd": "diff -rqyl folder1 folder2 --exclude=node_modules"}, {"invocation": "Find all regular non-hidden files in the current directory and its subdirectories", "cmd": "find . -not -path '*/\\.*' -type f \\( ! -iname \".*\" \\)"}, {"invocation": "Find all files under current directory that were modified more than 7 days ago and delete them", "cmd": "find . -type f -mtime +7 -print0 | xargs    -0 rm"}, {"invocation": "download contents from \"https://www.npmjs.com/install.sh\" and execute", "cmd": "curl https://www.npmjs.com/install.sh | sh"}, {"invocation": "Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'", "cmd": "FOO_NO_WHITESPACE=\"$(echo -e \"${FOO}\" | tr -d '[[:space:]]')\""}, {"invocation": "Search the current directory, except the subdirectory tree \".svn\", for files whose name is \"foo.cpp\"", "cmd": "find . -name 'foo.cpp' '!' -path '.svn'"}, {"invocation": "List all files/directories under /myfiles directory", "cmd": "find /myfiles -exec ls -l {} ;"}, {"invocation": "find all the files in the folder /opt which have been accessed exactly 20 days ago", "cmd": "find /opt -atime 20"}, {"invocation": "Edit the cron job list for user 'wwwrun' using default editor specified by the EDITOR environment variable, or /usr/bin/editor if no default editor is specified.", "cmd": "sudo crontab -u wwwrun -e"}, {"invocation": "Compress from standard input with gzip", "cmd": "gzip"}, {"invocation": "search for a word in all the php files in the current folder and display the matching lines", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\;"}, {"invocation": "Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set", "cmd": "find / -type f -user root -perm -4000 -exec ls -l {} \\;"}, {"invocation": "Gets back to the foreground a job with number 2.", "cmd": "fg 2"}, {"invocation": "Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory", "cmd": "find %s -iname *.css | xargs sed -i s/[Ff][Oo][Oo]/bar/g"}, {"invocation": "Find all files/directories matching the regex .*sql.*", "cmd": "find -regex .*sql.*"}, {"invocation": "display the count of number html files in the current folder", "cmd": "find . -name \"*.html\" -print | xargs -l -i wc {}"}, {"invocation": "Find all *.php files under current directory and change their permission to 640", "cmd": "chmod 640 $(find . -name *.php)"}, {"invocation": "move all files in the current folder another folder and do not move the files in the sub folder", "cmd": "find . -name \"*\" -maxdepth 1 -exec mv -t /home/foo2/bulk2 {} +"}, {"invocation": "find all the files in the home folder which have been modified in the last 7 days", "cmd": "find $HOME -mtime -7"}, {"invocation": "display all files in the current folder along with their last accessed timestamps", "cmd": "find . -printf \"%h/%f : dernier acc\u00e8s le %AA %Ad %AB %AY \u00e0 %AH:%AM:%AS\\n\""}, {"invocation": "Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'", "cmd": "output=$(echo $input | fold -w4 | tac | tr -d \\\\n)"}, {"invocation": "Unpack all *.gz archives in the current directory tree", "cmd": "find . -name '*.gz' -print0 | xargs -0 gunzip"}, {"invocation": "find the file \"httpd.log\" in the folder /home/web-server/", "cmd": "find /home/web-server/ -type f -name httpd.log"}, {"invocation": "Prints yesterday's date information", "cmd": "date --date yesterday \"+%a %d/%m/%Y\""}, {"invocation": "display all the files in the current folder that have been modified in the last 24 hours", "cmd": "find  -mtime -1"}, {"invocation": "find files in home directory that accessed more than 100 days ago", "cmd": "find ~ -atime 100"}, {"invocation": "Read two bytes from \"/dev/urandom\" and print them as an unsigned integer", "cmd": "od -A n -N 2 -t u2 /dev/urandom"}, {"invocation": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.", "cmd": "cat /boot/config-`uname -r` | grep IP_MROUTE"}, {"invocation": "Get IP address of your SSH session", "cmd": "who am i --ips|awk '{print $5}' #ubuntu 14"}, {"invocation": "search for all the regular/normal files in the current folder which start with \"my\"", "cmd": "find . -name 'my*' -type f"}, {"invocation": "Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in file \"index.html\" and make a backup with suffix \"bak\" on OSX", "cmd": "sed -i bak -e s/STRING_TO_REPLACE/REPLACE_WITH/g index.html"}, {"invocation": "Query SRV records for domain '_kerberos._udp.foo.com'", "cmd": "dig -t SRV _kerberos._udp.foo.com"}, {"invocation": "find all the files in the home folder that have not been modified in the last one year", "cmd": "find $HOME -mtime +365"}, {"invocation": "Print the grand total file system disk space usage with block sizes in units of TiB", "cmd": "df --total -BT | tail -n 1"}, {"invocation": "display long listing of all regular/normal files whose size is less than 50 bytes.", "cmd": "find /usr/bin -type f -size -50c -exec ls -l '{}' ';'"}, {"invocation": "search for the files in the current folder which begin with the word \"kt\" followed by a digit", "cmd": "find . -name 'kt[0-9] '"}, {"invocation": "Print content of each file under the current directory followed by that file name", "cmd": "find . -type f -exec cat {} \\; -print"}, {"invocation": "Find files and directories modified within the last 7 days", "cmd": "find . -mtime -7"}, {"invocation": "find all normal/regular files in current folder and display the total lines in them", "cmd": "find . -type f -print0 | xargs -0 wc -l"}, {"invocation": "List all files/directories under /data1/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago", "cmd": "find /data1/Marcel -size +1024 \\( -mtime +365 -o -atime +365 \\) -ls"}, {"invocation": "Print the top 10 commands with their use count", "cmd": "history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head"}, {"invocation": "Read a single character from standard input into variable \"key\" without backslash escapes, with a timeout of 5 seconds, and with the prompt \"Press any key in the next five seconds...\"", "cmd": "read -t5 -n1 -r -p 'Press any key in the next five seconds...' key"}, {"invocation": "change the permissions of all regular/normal files in the current directory", "cmd": "find . -type f -exec chmod 664 {} \\;"}, {"invocation": "Gets IP addresses of all active network interfaces.", "cmd": "ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'"}, {"invocation": "Change owner to \"root\" and group to \"wheel\" of \"bin\"", "cmd": "sudo chown root:wheel bin"}, {"invocation": "Find all readme.txt files/directories under your home directory", "cmd": "find ~ -name readme.txt"}, {"invocation": "Find all files/directories named 'query' (case insensitive) under current directory tree", "cmd": "find -iname \"query\""}, {"invocation": "Find all .gz archives in the /path/to/dir directory tree", "cmd": "find /path/to/dir -name \"*.gz\" -type f"}, {"invocation": "Count all the mp3 files in the music user's home and subdirs.", "cmd": "find ~music -type f -iname *.mp3 | wc -l"}, {"invocation": "move all the files in the current folder  to temp folder and search atleast in one subfolder", "cmd": "find . -mindepth 1 -print0|xargs -0 -I, mv , /tmp"}, {"invocation": "Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file.", "cmd": "join -a1 -a2 <(sed s/^Gene/00ne/ S43.txt | sort) <(sed s/^Gene/00ne/ S44.txt | sort) | column -t | sed s/^00ne/Gene/"}, {"invocation": "Gets domain name from dig reverse lookup.", "cmd": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*"}, {"invocation": "Executes 'true'. then makes 'xargs' fail executing 'false' and return 123 exit code.", "cmd": "true | xargs false"}, {"invocation": "Delete characters in columns 36 through 40 from the output of \"finger\"", "cmd": "finger |  sed 's/\\(.\\{35\\}\\)...../\\1/'"}, {"invocation": "Change directory to the directory containing file path \"$1\"", "cmd": "cd \"$(dirname \"$1\")\""}, {"invocation": "Change the owner of all files in the directory tree \"dir_to_start\" excluding directory \"dir_to_exclude\" to \"owner\"", "cmd": "find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner"}, {"invocation": "display all the regular/normal files in current directory", "cmd": "find . -type f"}, {"invocation": "find all the direcories in the current folder", "cmd": "find -type d"}, {"invocation": "Gets list of IP addresses of all network interfaces.", "cmd": "ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'"}, {"invocation": "List all directories in maximum 1 level down the current directory", "cmd": "find . -maxdepth 1 -type d -exec ls -dlrt {} \\;"}, {"invocation": "extract archive stored in $1", "cmd": "tar -zxvf $1"}, {"invocation": "Search the current directory tree for executable regular files", "cmd": "find . -executable -type f"}, {"invocation": "display the long listing detials of all the files in the folder junk which is in home folder.", "cmd": "find ~/junk   -name \"*\" -exec ls -l {} \\;"}, {"invocation": "Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree", "cmd": "find /usr/bin -name '*vim*' -type l"}, {"invocation": "delete a hard link and create a symbolic link to file named \"$link\"", "cmd": "ln -sf \"$(readlink -f \"$link\")\" \"$link\""}, {"invocation": "Enables shell option 'nullglob'.", "cmd": "shopt -s execfail"}, {"invocation": "Take the section of variable \"FILE\" between the last slash and the following dot, if any, and store that section in variable \"NAME\".", "cmd": "NAME=`basename \"$FILE\" | cut -d'.' -f-1`"}, {"invocation": "Copies '[MacVim_source_folder]/src/MacVim/mvim' to the  '/usr/local/bin', printing info message on each operation.", "cmd": "cp -v [MacVim_source_folder]/src/MacVim/mvim /usr/local/bin"}, {"invocation": "Check if current shell is running within a 'screen' process.", "cmd": "pstree --show-parents -p $$ | head -n 1 | sed 's/\\(.*\\)+.*/\\1/' | wc -l"}, {"invocation": "Continuously answer \"y\" to any prompt from \"mv ...\"", "cmd": "yes | mv ..."}, {"invocation": "find all files ending with \"js.compiled\" in current folder (print0 is used to handle files with newlines in their names)", "cmd": "find ./js/ -name \"*.js.compiled\" -print0"}, {"invocation": "find all files in the current folder which have been modified after /etc/passwd", "cmd": "find -newer /etc/passwd"}, {"invocation": "Find all empty files in the current directory and delete them", "cmd": "find . -empty -maxdepth 1 -exec rm {} \\;"}, {"invocation": "This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search", "cmd": "find . -type f -iname \"*.py\""}, {"invocation": "Search the /myfiles directory tree for files that are 5 512 byte blocks in size", "cmd": "find /myfiles -size 5"}, {"invocation": "Prepend the reverse history number to the output of the history command with arguments \"$@\"", "cmd": "history \"$@\" | tac | nl | tac"}, {"invocation": "Search the files under and below /directory/containing/files for \"pattern_to_search\"", "cmd": "find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +"}, {"invocation": "Change the timestamp of symbolic link \"somesymlink\" to current date/time", "cmd": "touch -h somesymlink"}, {"invocation": "Remove all regular files under and below directory \"$DIR\" that were last accessed more than 5 days ago", "cmd": "find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}, {"invocation": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names excluding the files that contain 'generated' or 'deploy' in their paths", "cmd": "find . -regextype posix-egrep -regex '.+\\.(c|cpp|h)$' -print0 | grep -vzZ generated | grep -vzZ deploy | xargs -0 ls -1Ld"}, {"invocation": "Print the user name of the current user", "cmd": "whoami"}, {"invocation": "get all files in a current directory modified in the last 7 days", "cmd": "find . -mtime -7 -print0 | xargs -0 tar -rf /foo/archive.tar"}, {"invocation": "Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree", "cmd": "find /path/to/look/in/ -type d -name '.texturedata' -prune"}, {"invocation": "Find all directories under 'test' directory tree that match the regex '[course*]' in their paths", "cmd": "find test -regex \"[course*]\" -type d"}, {"invocation": "Replace all newlines except the last with a comma in \"test.txt\"", "cmd": "sed -i ':a;N;$!ba;s/\\n/,/g' test.txt"}, {"invocation": "Find all files under /home/username/public_html/sites/all/modules and set their permission to 640", "cmd": "find /home/username/public_html/sites/all/modules -type f -exec chmod 640 {} +"}, {"invocation": "find all jpg files in the folder which are in the path \"/201111/\" and sort them based on name", "cmd": "find */201111/* -name \"*.jpg\" | sort -t '_' -nk2"}, {"invocation": "list all the directories in the folder httpdocs", "cmd": "find httpdocs -type d"}, {"invocation": "Create a symbolic link named \"~/bin/subl\" to \"/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\"", "cmd": "ln -s \"/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\" ~/bin/subl"}, {"invocation": "Finds all users logged in via ssh.", "cmd": "w | grep ssh"}, {"invocation": "Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my'", "cmd": "find /usr/local/man /opt/local/man -name 'my*'"}, {"invocation": "display all the files in the current folder along with the change time and display file names of the last 10 changed files", "cmd": "find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}, {"invocation": "Find all empty files under /tmp", "cmd": "find /tmp -type f -empty"}, {"invocation": "Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name", "cmd": "find . -print -name SCCS -prune"}, {"invocation": "Removes all files from current folder but 5 newest ones.", "cmd": "find . -maxdepth 1 -type f -printf '%T@ %p\\0' | sort -r -z -n | awk 'BEGIN { RS=\"\\0\"; ORS=\"\\0\"; FS=\"\" } NR > 5 { sub(\"^[0-9]*(.[0-9]*)? \", \"\"); print }' | xargs -0 rm -f"}, {"invocation": "Find all *.foo files under current directory and print their contents", "cmd": "cat $(find . -name '*.foo')"}, {"invocation": "forcibly and verbosely create symbolic links in directory \"~/Library/LaunchAgents\" to all files located in /usr/local/opt/mongodb/ and that have filename extension \".plist\"", "cmd": "ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents"}, {"invocation": "Read a line of standard input into variable \"input_cmd\" with prompt \"command : \"", "cmd": "read -p \"command : \" input_cmd"}, {"invocation": "Strip all '\\' and newlines from $output and save the result to variable 'output'", "cmd": "output=$(echo \"$output\" | tr -d '\\' | tr -d '\\n')"}, {"invocation": "Display the named characters in \"line1\\r\\nline2\"", "cmd": "echo -e \"line1\\r\\nline2\" | awk '{ print $0; }' | od -a"}, {"invocation": "Print 1 to 10 by separating them with colon (':')", "cmd": "echo {1..9}: 10 | tr -d ' '"}, {"invocation": "Find all 15MB files in entire file system", "cmd": "find / -size 15M"}, {"invocation": "find all the regular/normal files in the /path folder and delete them", "cmd": "find /path -type f -exec rm '{}' \\;"}, {"invocation": "List all files that have not been read in thirty days or more", "cmd": "find . -type f -atime +30 -print"}, {"invocation": "Recursively copy /path/foo on host \"prod\" to local directory \"/home/user/Desktop\", connecting as ssh username corresponding to local username.", "cmd": "scp -r prod:/path/foo /home/user/Desktop"}, {"invocation": "Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.", "cmd": "find . -name \"*.txt\" \\( -exec echo {} \\; -o -exec true \\; \\) -exec grep banana {} \\;"}, {"invocation": "Search the current directory tree for all files except SVN ones", "cmd": "find .  ! -regex \".*[/]\\.svn[/]?.*\""}, {"invocation": "Get domain \"$domain\" IP address", "cmd": "dig +short \"$domain\""}, {"invocation": "Prints full path to files in a current folder.", "cmd": "ls -d -1 $PWD/**"}, {"invocation": "display all regular files in current folder which have spaces in their name", "cmd": "find -type f -name \"* *\""}, {"invocation": "Prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs.", "cmd": "crontab"}, {"invocation": "find all directories in the current folder and do not search in sub directories", "cmd": "find . -type d -maxdepth 1"}, {"invocation": "display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word \"kt\" followed by a digit", "cmd": "find . -path './kt[0-9] '"}, {"invocation": "Find all *.txt files under current directory and print their timestamps and paths", "cmd": "find . -name \"*.txt\" -printf \"%T+ %p\\n\""}, {"invocation": "Show manual page for the find utility", "cmd": "man find"}, {"invocation": "Remount \"/media/Working/\" with a umask of 000", "cmd": "mount /media/Working/ -oremount,umask=000"}, {"invocation": "Print help on 'cat' command usage", "cmd": "cat --help"}, {"invocation": "prints top 10 commands used", "cmd": "history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}, {"invocation": "Clears terminal screen.", "cmd": "echo `clear`"}, {"invocation": "Find all *.ogg files on the system ignoring the case", "cmd": "find / -iname '*.ogg'"}, {"invocation": "Find directories named `doc' in /usr and below", "cmd": "find /usr \\( -name doc -and -type d \\)"}, {"invocation": "find all the files in the file system which have been modified in the last 60 minutes", "cmd": "find / -mmin -60"}, {"invocation": "Search for all non-hidden files", "cmd": "find . -name '*'"}, {"invocation": "delete all the empty files(files with size 0 bytes) in the current folder", "cmd": "find . -empty -delete -print"}, {"invocation": "Prints dates of $m month in $y year, preceded by month number and slash like ' 10/1'.", "cmd": "cal $m $y | sed -e '1,2d' -e 's/^/ /' -e \"s/ \\([0-9]\\)/ $m\\/\\1/g\""}, {"invocation": "Print the first line of \"seq 1 10000\"", "cmd": "seq 1 10000 | head -1"}, {"invocation": "find all files that are readable and writable by their owner", "cmd": "find . -perm -600 -print"}, {"invocation": "Search all files in the current directory tree, except GIT files, for \"string-to-search\"", "cmd": "find . -name .git -prune -o -print | xargs grep \"string-to-search\""}, {"invocation": "Save the contents of \"numbers.txt\" to variable \"f\"", "cmd": "f=$(cat numbers.txt)"}, {"invocation": "Find all files in the current directory tree except .html, ignoring .svn directories", "cmd": "find . \\( -type d -name '.svn' -o -type f -name '*.html' \\) -prune -o -print0"}, {"invocation": "Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.", "cmd": "find ./ -type f -name '*.r*' -delete -printf \"%h\\0\" | xargs -0 rmdir"}, {"invocation": "search for the file filename in the entire file system", "cmd": "find / -name filename"}, {"invocation": "display a long list of all the files in the directory \"/mydir\" which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours", "cmd": "find /mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}, {"invocation": "Make directories and parent directories as needed of \"$1\" with \"\\r\" removed", "cmd": "mkdir -p $(echo -e $1 |sed $'s/\\r//')"}, {"invocation": "delete all the trace files (\".trc\") which have not been been accessed in the last 30*24 hours", "cmd": "find /dirpath \\( -name \\*.trc -a -mtime +30 \\) -exec rm {} \\;"}, {"invocation": "Sort \"file1.txt\" and output the result to \"file1.txt\"", "cmd": "sort -o file1.txt file1.txt"}, {"invocation": "Display who is logged on and what they are doing", "cmd": "w"}, {"invocation": "change the permissions of all the regular/normal files in the folder \"/path/to/someDirectory\" to 644", "cmd": "sudo find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644"}, {"invocation": "Search the regular files from directory tree 'folder_name' for \"your_text\"", "cmd": "find folder_name -type f -exec grep your_text  {} \\;"}, {"invocation": "Find \".c\" and \".h\" files in the current directory tree and print line numbers and lines containing \"#include\"", "cmd": "tree -if | grep \\\\.[ch]\\\\b | xargs -n 1 grep -nH \"#include\""}, {"invocation": "Prints message info about filename and location of the current script", "cmd": "echo \"The script you are running has basename `basename $0`, dirname `dirname $0`\""}, {"invocation": "Set permissions for all regular files under /var/www to 755", "cmd": "find /var/www -type f -print0 | xargs -0 chmod 644"}, {"invocation": "display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/", "cmd": "find /usr/local/apache/logs/ -type f -name \"*_log\"|xargs du -csh"}, {"invocation": "Sort numerically and compare files \"ruby.test\" and \"sort.test\"", "cmd": "diff <(sort -n ruby.test) <(sort -n sort.test)"}, {"invocation": "find all the files and folder that were created in 2012 on Friday of every month", "cmd": "find / -daystart -mtime +41 -mtime -408 \\   -printf \"%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h/%f\\n\" | awk '($7==\"Fri\"){print}'"}, {"invocation": "Search directories /res/values-en-rUS and /res/xml for XML files", "cmd": "find /res/values-en-rUS /res/xml -iname '*.xml'"}, {"invocation": "find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*'", "cmd": "find . ! -path \"*/test/*\" -type f -name \"*.js\" ! -name \"*-min-*\" ! -name \"*console*\""}, {"invocation": "Write \"deb blah ... blah\" to standard output and append to \"/etc/apt/sources.list\" as root", "cmd": "echo 'deb blah ... blah' | sudo tee --append /etc/apt/sources.list"}, {"invocation": "find directory names starts with 'bar'", "cmd": "find . -path './bar*' -print"}, {"invocation": "Locates bzip2 command in a system.", "cmd": "which bzip2"}, {"invocation": "Make $WEEKS_TO_SAVE+1 directories named \"weekly.N\" where N ranges from 0 to \"$WEEKS_TO_SAVE\"", "cmd": "mkdir -p $(seq -f \"weekly.%.0f\" 0 $WEEKS_TO_SAVE)"}, {"invocation": "Remove all files with a txt extension under current directory", "cmd": "find . -type f -name \"*.txt\" -print|xargs rm"}, {"invocation": "Sort all directory names matching folder_* and go to the last one.", "cmd": "cd $(find . -maxdepth 1 -type d -name \"folder_*\" | sort -t_ -k2 -n -r | head -1)"}, {"invocation": "Find all files whose names end with \"~\" in the /home/peter directory tree, following symlinks, and delete them", "cmd": "find -L /home/peter -name *~ -exec rm '{}' +"}, {"invocation": "Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755", "cmd": "find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Find all files whose names end with \"~\" in the /home/peter directory tree, following symlinks, and delete them", "cmd": "find -L /home/peter -name *~ -print0 |xargs -0 -r -n1000 rm"}, {"invocation": "Change the permission to 644 for all files under current directory", "cmd": "find . -type f | xargs -I{} chmod -v 644 {}"}, {"invocation": "Change permissions to 700 for directories at the current level and deeper", "cmd": "find . -mindepth 1 -type d | xargs chmod 700"}, {"invocation": "find all files in the folder /etc which have been modified after /tmp/foo", "cmd": "find /etc -newer /tmp/foo"}, {"invocation": "Find all files, folders, symlinks, etc in the current directory recursively", "cmd": "find ."}, {"invocation": "Create a symbolic link named \"$1/link\" to the current working directory", "cmd": "ln -s \"`pwd`\" $1/link"}, {"invocation": "Find all build* directories under current directory and reverse sort them", "cmd": "find . -type d -name \"build*\" | sort -r"}, {"invocation": "Delete all files with '.old' extension under current directory tree", "cmd": "find . -name \u201c*.old\u201d -print | xargs rm"}, {"invocation": "find regular files under the current directory and execute an md5sum command on each one", "cmd": "find -type f -exec md5sum {} +"}, {"invocation": "Find all empty directories in the current one and delete them", "cmd": "find . -type d -maxdepth 1 -empty -print0 | xargs -0 /bin/rmdir"}, {"invocation": "display a long listing of all the files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime -1 | xargs ls -ld"}, {"invocation": "Run command 'su whoami' on host 'remotehost'", "cmd": "echo \"su whoami\" |ssh remotehost"}, {"invocation": "Replace all instances of \"string\" with \"longer_string\" in file \"input.txt\" and re-align", "cmd": "cat input.txt | sed 's/string/longer_string/g' | column -t"}, {"invocation": "Move files from $sourcePath to $destPath that have not been modified in the last 10 days", "cmd": "find $sourcePath -type f -mtime +10 -name \"*.log\" -exec mv {} $destPath \\;"}, {"invocation": "Extract the second-to-last slash-separated path component, ie. \"90_2a5\" in this case.", "cmd": "echo 'test/90_2a5/Windows' | xargs dirname | xargs basename"}, {"invocation": "Find all files under /mountpoint and below which have hard links", "cmd": "find /mountpoint -type f -links +1"}, {"invocation": "Find all files/directories under /proc and run ls command on each.", "cmd": "find /proc -exec ls '{}' \\;"}, {"invocation": "Print the last command in history", "cmd": "history | tail -1 | awk '{print $1}'"}, {"invocation": "Remove duplicate lines in \"file_name\" and print the output on stdout", "cmd": "awk '{print(NR\"\\t\"$0)}' file_name | sort -t$'\\t' -k2,2 | uniq -u --skip-fields 1 | sort -k1,1 -t$'\\t' | cut -f2 -d$'\\t'"}, {"invocation": "find all the html files which are modified in the last 7 days", "cmd": "find . -mtime -7 -name \"*.html\""}, {"invocation": "find the file \"filename.txt\" in the entire file system", "cmd": "find / -name filename.txt -print"}, {"invocation": "Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended", "cmd": "tree -afispugD --inodes | awk '{FS=\"./\"; ORS=\"\"; printf(\"%-60s%s\\n\",$NF,$0)}'"}, {"invocation": "display list of all the hidden directories in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search/ -type d -iname \".*\" -ls"}, {"invocation": "Print appended data in \"/var/log/syslog\" as the file grows", "cmd": "tail -f /var/log/syslog"}, {"invocation": "Rename file with inode number 31467125 to new_name.html", "cmd": "find . -type f -inum 31467125 -exec /bin/mv {} new_name.html \\;"}, {"invocation": "Remove leading and trailing spaces or tabs from \"$string\"", "cmd": "echo \"$string\" | sed -e 's/^[ \\t]*//' | sed -e 's/[ \\t]*$//'"}, {"invocation": "See what files are executable by the file's owner and group", "cmd": "find -type f -perm -110"}, {"invocation": "Search the current directory tree for all files matching either pattern \"*.rb\" or pattern \"*.py\"", "cmd": "find . -name \"*.rb\" -or -name \"*.py\""}, {"invocation": "find *.gif files under the currently directory and sub-directories and list them using the ls command", "cmd": "find . -name *.gif -exec ls {} \\;"}, {"invocation": "Find and delete all hard links in the /home directory tree to file1", "cmd": "find /home -xdev -samefile file1 | xargs rm"}, {"invocation": "Print each unique entry in \"ip_addresses\" followed by a count", "cmd": "cat ip_addresses | sort | uniq -c | sort -nr | awk '{print $2 \" \" $1}'"}, {"invocation": "Print the list of files and directories of the /etc directory", "cmd": "find /etc/. ! -name . -prune"}, {"invocation": "find directories  that have been modified in the last seven days", "cmd": "find . -mtime -7 -type d"}, {"invocation": "Look up for 'myip.opendns.com' in server 'resolver1.opendns.com' and save the terse output in 'IP' variable", "cmd": "IP=$(dig +short myip.opendns.com @resolver1.opendns.com)"}, {"invocation": "Search for 'It took' in all $srch1* (case insensitive) files under current directory", "cmd": "find . -iname \"$srch1*\" -exec grep \"It took\" {} \\; -print"}, {"invocation": "Make a new directory \"new-dir\" in every directory in the current working directory non-recursively", "cmd": "find . -maxdepth 1 -type d | xargs -I \"{x}\" mkdir \"{x}\"/new-dir"}, {"invocation": "List all files/directories in entire file system", "cmd": "find / -print"}, {"invocation": "find all the files in the current folder which belong to the user root.", "cmd": "find . -user root -perm -4000 -print"}, {"invocation": "Search all files in the current directory tree whose names end in \"1\" for string \"1\"", "cmd": "find . -name \"*1\" -print0 |xargs -0 grep \"1\""}, {"invocation": "Archive all \".txt\" files in the current directory to \"/path/to/dest\" keeping partially transferred files", "cmd": "rsync -aP --include=*/ --include=*.txt --exclude=* . /path/to/dest"}, {"invocation": "Find files in the current directory recursively that are not readable by all", "cmd": "find -type f ! -perm -444"}, {"invocation": "Display the count of regular files for which the owner has read and execute permission under 'home/magie/d2' directory tree", "cmd": "find home/magie/d2 -type f -perm -u+rx | wc -l"}, {"invocation": "Prints server name from SOA record for domain yahoo.com", "cmd": "dig +noall +answer soa yahoo.com | awk '{sub(/.$/,\"\",$5);print $5}'"}, {"invocation": "Print a hex dump of \"$DIREC\" as characters", "cmd": "echo \"$DIREC\" | od -c"}, {"invocation": "Print each line in parallel in files \"tmp/sample-XXX.tim\" and \"tmp/sample-XXX.log\"", "cmd": "paste tmp/sample-XXXX.{tim,log}"}, {"invocation": "Read a single character from standard input into variable \"doit\" with prompt \"Do that? [y,n]\"", "cmd": "read -n1 -p \"Do that? [y,n]\" doit"}, {"invocation": "split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines", "cmd": "split -n 1000000 /etc/gconf/schemas/gnome-terminal.schemas"}, {"invocation": "Replace \"_\" with newlines in \"Testing\\r\\nTested_Hello_World\" and display the named characters", "cmd": "echo -e \"Testing\\r\\nTested_Hello_World\" | awk -v RS=\"_\" '{ print $0; }' | od -a"}, {"invocation": "delete all files that have the extension \"bam\" in current directory", "cmd": "find . -name \"*.bam\" | xargs rm"}, {"invocation": "find all the files in the folder \"/mp3-collection\" which are bigger than 10MB excluding those that start with the word Metallica", "cmd": "find /mp3-collection -size +10000k ! -name \"Metallica*\""}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find . -name test -type d -print0|xargs -0 rm -r --"}, {"invocation": "Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1", "cmd": "rsync --recursive --prune-empty-dirs --include=\"*.txt\" --filter=\"-! */\" dir_1 copy_of_dir_1"}, {"invocation": "Find user daniel's files of type jpeg without `autumn' in the name", "cmd": "find . -user daniel -type f -name *.jpg ! -name autumn*"}, {"invocation": "Find all *.txt files of user Tecmint under /home directory", "cmd": "find /home -user tecmint -iname \"*.txt\""}, {"invocation": "Find files owned by no user", "cmd": "find / -nouser"}, {"invocation": "Find all directories with 755 permission and change the permission to 700", "cmd": "find . -type d -perm 755 -exec chmod 700 {} \\;"}, {"invocation": "find all the directories in the current folder that are empty(size 0 bytes)", "cmd": "find -type d -empty"}, {"invocation": "Print calendar for February, March and April of year 2009 side-by-side", "cmd": "paste <(cal 2 2009) <(cal 3 2009) <(cal 4 2009)"}, {"invocation": "Find empty files under test directory", "cmd": "find test -empty"}, {"invocation": "create directory TestProject", "cmd": "mkdir TestProject"}, {"invocation": "find all the empty files and folders in your system", "cmd": "find / -empty"}, {"invocation": "Print the contents of \"file\" in reverse order", "cmd": "nl file | sort -nr | cut -b8-"}, {"invocation": "print apparent size rather than disk usage", "cmd": "du -B1 --apparent-size /tmp/foo.txt"}, {"invocation": "search for files in the current folder ending with \".au\"", "cmd": "find -type f -name '*.au'"}, {"invocation": "Find the top 5 biggest files", "cmd": "find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}, {"invocation": "search for the word error in all the xml files in the current folder", "cmd": "find . -name \"*.xml\" -exec grep \"ERROR\" /dev/null '{}' \\+"}, {"invocation": "Find all files/directories under /var/www/some/subset and change their owner and group to www-data", "cmd": "sudo find /var/www/some/subset -print0 | xargs -0 chown www-data:www-data"}, {"invocation": "Split a file \"file.tar.gz\" into pieces named as \"file.tar.gz.part-NNN\" with size 1024 MB where NNN is a numeric suffix", "cmd": "split -b 1024m \"file.tar.gz\" \"file.tar.gz.part-\""}, {"invocation": "Display all files in the folder home which are owned by the group test.", "cmd": "find /home -group test"}, {"invocation": "Copy *.mp3 files to /tmp/MusicFiles", "cmd": "find . -type f -name \"*.mp3\" -exec cp {} /tmp/MusicFiles \\;"}, {"invocation": "Change owner to \"$user\" and group to \"$group\" of \"$file\"", "cmd": "chown -- \"$user:$group\" \"$file\""}, {"invocation": "search for a word in all the regular/normal files in the current folder and display the filename along with the matched text", "cmd": "find . -type f -exec grep -l linux {} \\;"}, {"invocation": "search for files in current folder using regular expressions", "cmd": "find ./ -regex '.*\\..*'"}, {"invocation": "Enables 'nullglob' shell option.", "cmd": "shopt -s nullglob"}, {"invocation": "Recursively add \".jpg\" to all files without an extension in the directory tree \"/path\"", "cmd": "find /path -type f -not -name \"*.*\" -exec mv \"{}\" \"{}\".jpg \\;"}, {"invocation": "search for a word in all the files in the current directory and display the list of matched files.", "cmd": "find . -type f -exec grep -l 'needle' {} \\;"}, {"invocation": "Prints what day it was 222 days ago", "cmd": "date --date=\"222 days ago\" +\"%d\""}, {"invocation": "search for \"specified string\" in all the php files in the current folder", "cmd": "find . -name \u201c*.[php|PHP]\u201d -print | xargs grep -HnT \u201cspecified string\u201d"}, {"invocation": "Find all files under /path and below writable by `group' and `other'", "cmd": "find /path -perm -g+w,o+w"}, {"invocation": "Search all files in the current directory tree for \"SearchString\", ignoring .html files and skipping .svn directories", "cmd": "find . \\( -name '*.svn*' -prune  -o ! -name '*.html' \\) | xargs -d '\\n' grep -Hd skip 'SearchString'"}, {"invocation": "Check if content of all top-level *.txt files in the current directory contain only unique lines", "cmd": "cat *.txt | sort | sort -u -c"}, {"invocation": "display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files", "cmd": "find . -type f \\( ! -iname \".*\" \\) -mtime +500 -exec ls {} \\;"}, {"invocation": "Compare each .xml file under the current directory with a file of the same name in \"/destination/dir/2\"", "cmd": "find . -name *.xml -exec diff {} /destination/dir/2/{} \\;"}, {"invocation": "Find files ending in \"*macs\"", "cmd": "find -name '*macs'"}, {"invocation": "Locate all \"copyright\" files under and below /usr/share/doc", "cmd": "find /usr/share/doc -name \"copyright\""}, {"invocation": "find all the files in the current folder which do not have the execute permission", "cmd": "find . -type d ! -perm -111"}, {"invocation": "display all instances  of the file tkConfig.sh in the folder /usr", "cmd": "find /usr -name tkConfig.sh"}, {"invocation": "Shows status of a shell option 'nullglob'.", "cmd": "shopt nullglob"}, {"invocation": "Force delete all the regular/normal files in the current folder and do not search in the sub folders", "cmd": "find . -maxdepth 1 -type f -exec rm -f {} \\;"}, {"invocation": "Synchronize \"/path/to/dir_b\" with files in \"/path/to/dir_a/\" if the files are newer", "cmd": "rsync -rtuv /path/to/dir_a/* /path/to/dir_b"}, {"invocation": "Removes 55, adds a 10-digit line number, and rearranges the date for each line in \"input\" on OSX", "cmd": "nl -nrz -w10 -s\\; input | sed -E 's/55//; s/([0-9]{2})-([0-9]{2})-([0-9]{4})/\\3\\2\\1/'"}, {"invocation": "Locate OGG files under the home directory smaller than 100 megabytes", "cmd": "find $HOME -iname '*.ogg' -type f -size -100M"}, {"invocation": "Copy loadable kernel module \"mymodule.ko\" to the drivers in modules directory matchig current kernel.", "cmd": "sudo cp mymodule.ko /lib/modules/$(uname -r)/kernel/drivers/"}, {"invocation": "Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only", "cmd": "find . -name \"*.txt\" -printf \"%T+ %p\\n\" | sort | tail -1"}, {"invocation": "Finds file 'Subscription.java' and changes to containing folder.", "cmd": "cd $(find . -name Subscription.java | xargs dirname)"}, {"invocation": "Remove all files in and below the current directory whose names begin with \"not\"", "cmd": "find . -name not\\* -print0 | xargs -0 rm"}, {"invocation": "Look for \"testfile.txt\" in the \"/\" directory and 1 level below", "cmd": "find / -maxdepth 2 -name testfile.txt"}, {"invocation": "Prefix each non-blank line in \"filename\" with a line number", "cmd": "nl filename"}, {"invocation": "Follows symbolic link $BASH_SOURCE, and prints path to its target.", "cmd": "$(dirname $(readlink -f $BASH_SOURCE))"}, {"invocation": "Make directory \"~/temp\"", "cmd": "mkdir ~/temp"}, {"invocation": "List all *.txt files/directories under /etc", "cmd": "find /etc -name \"*.txt\" -exec ls -l {} \\;"}, {"invocation": "Find all *.py files/directories under current directory", "cmd": "find . -name *.py"}, {"invocation": "List all files/directories under current directory", "cmd": "find ."}, {"invocation": "Clean up all zombie processes by instantly killing their parent process with SIGKILL signal.", "cmd": "kill -9 $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"}, {"invocation": "Removes all files but 5 newest ones from current folder.", "cmd": "ls -tp | grep -v '/$' | tail -n +6 | xargs -I {} rm -- {}"}, {"invocation": "Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits", "cmd": "find . -perm -664"}, {"invocation": "Search the current directory recursively for files containing \"string\"", "cmd": "find . -type f -exec grep -l 'string' {} \\;"}, {"invocation": "Extract two semicolon-separated fields from specified strings, output them separated by a space.", "cmd": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'"}, {"invocation": "Remove all files matching the pattern *[+{;\"\\\\=?~()<>&*|$ ]* under current directory", "cmd": "find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -exec rm -f '{}' \\;"}, {"invocation": "Locate files not owned by any user or group", "cmd": "find / -path /proc -prune -o -nouser -o -nogroup"}, {"invocation": "Find all files under /somefolder matching the extended regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths", "cmd": "find -E /somefolder -type f -regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$'"}, {"invocation": "Find all *company* files/directories under /root/of/where/files/are directory", "cmd": "find /root/of/where/files/are -name *company*"}, {"invocation": "Read a line from standard input with prompt \"Continue (y/n)?\" and save response in variable \"choice\"", "cmd": "read -p \"Continue (y/n)?\" choice"}, {"invocation": "Calculate the md5 sum of the contents of \"$FILES\"", "cmd": "cat $FILES | md5sum"}, {"invocation": "Subtract all columns in \"File2\" from \"File1\" except the first", "cmd": "awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1 | rev | column -t | rev"}, {"invocation": "Write output of \"ls -a\" to standard output and to \"output.file\"", "cmd": "ls -a | tee output.file"}, {"invocation": "Answer \"y\" to all \"Are you sure?\" prompts from command \"cp * /tmp\"", "cmd": "yes | cp * /tmp"}, {"invocation": "check the type of files in the folder /usr/bin", "cmd": "find /usr/bin | xargs file"}, {"invocation": "Recursively finds all files with any cased text \"Text\" in a current folder, and precedes found string with its number in file.", "cmd": "grep -inr \"Text\" folder/to/be/searched/"}, {"invocation": "Execute all arguments to a shell script and write the output to console and \"$FILE\"", "cmd": "$@ | tee $FILE"}, {"invocation": "Recursively changes group ownership of everything within current folder to 'git'.", "cmd": "chgrp -R git ./"}, {"invocation": "Find files that are 100k", "cmd": "find -size 100k"}, {"invocation": "Search the home directory tree for .tar.gz files newer than file \"filename\"", "cmd": "find ~/ -name *.tar.gz -newer filename"}, {"invocation": "find files in root directory that names are game", "cmd": "find / -name game"}, {"invocation": "display all the regular/normal files in the /root folder which are bigger than 500MB", "cmd": "find /root -type f -size +500M -printf \"The %p file is greater than 500MB\\n\""}, {"invocation": "Find the \"param1\" string in regular files under and below /var", "cmd": "find /var -type f  | xargs grep \"param1\""}, {"invocation": "Find all hidden directories starting from the current directory", "cmd": "find . -type d -name \".*\""}, {"invocation": "display a long list of all the directories which have files ending with \".todo\"", "cmd": "find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n' | uniq | xargs ls -l"}, {"invocation": "long list all the files in the curent folder starting with \"Tes\"", "cmd": "find . -type f -name \"Tes*\" -exec ls -l {} \\;"}, {"invocation": "Find all files under path_to_dir", "cmd": "find path_to_dir -type f"}, {"invocation": "Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories", "cmd": "find . -type f |sed '/.\\/dir[12]\\/[^/]*$/d'"}, {"invocation": "Make directorie(s) 'es/LC_MESSAGES' as needed in the current directory", "cmd": "mkdir -p es/LC_MESSAGES"}, {"invocation": "Report file system containing path to /some/dir disk usage in kilobytes.", "cmd": "df -k /some/dir"}, {"invocation": "Find file size in bytes", "cmd": "du -b FILE"}, {"invocation": "Continuously send ping requests to broadcast address \"10.10.0.255\" and print the IP addresses who respond", "cmd": "ping -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }'"}, {"invocation": "Remove the path $1 from the PATH environment variable", "cmd": "PATH=$(echo $PATH | tr \":\" \"\\n\" | grep -v $1 | tr \"\\n\" \":\")"}, {"invocation": "Set the 'pipefail' shell variable causing bash to return true only if all commands in a pipeline return true.", "cmd": "set -o pipefail"}, {"invocation": "Save the user name in upper case of the current user in variable \"v\"", "cmd": "v=$(whoami | tr [:lower:] [:upper:])"}, {"invocation": "Remove sequence like '\\xEF\\xBB\\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.", "cmd": "find . -iname *.js -type f -exec sed 's/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;"}, {"invocation": "Send at most 3 ping requests to \"8.8.8.8\" with a timeout of 3 seconds on interface \"eth9\"", "cmd": "ping 8.8.8.8 -I eth9 -c 3 -w 3"}, {"invocation": "execute command \"who\" when key \"\\eW\" is pressed", "cmd": "bind -x '\"\\eW\":\"who\"'"}, {"invocation": "create directories foo and bar", "cmd": "mkdir foo bar"}, {"invocation": "find all files in the current folder with the permission 777 and modify the permissions as 755.", "cmd": "find . -type f -perm 777 -exec chmod 755 {} \\;"}, {"invocation": "Remount \"/system\" as read only", "cmd": "mount -o remount,ro /system"}, {"invocation": "Change permissions of all directories from the current directory tree to 644", "cmd": "find . -type d -exec chmod 755 {} +"}, {"invocation": "Save the directory of the full path to the current script in variable \"dir\"", "cmd": "dir=$(dirname $(readlink /proc/$$/fd/255))"}, {"invocation": "change the permissions of all the regular files in the current folder", "cmd": "find . -type f -exec chmod 500 {} ';'"}, {"invocation": "search for the word \"foo\" in all the regular/normal files with the name \"file-pattern\" in the directory \"/path/to/dir\"", "cmd": "find /path/to/dir/ -type f -name \"file-pattern\" -print0 | xargs -I {} -0 grep -l \"foo\" \"{}\""}, {"invocation": "Print the IP addresses for the current host name", "cmd": "hostname -I | awk '{print $1}'"}, {"invocation": "search  in root ( / ) directory downwards all files which  have exactly 2 links.", "cmd": "find /  -links 2 -print"}, {"invocation": "Resolve any symlinks in working directory, and go to resulting pathname.", "cmd": "cd \"`pwd -P`\""}, {"invocation": "Recursively remove all \"*.txt\" files and answer \"y\" to any prompt", "cmd": "yes | rm -r *.txt"}, {"invocation": "find all files in the entire file system whose size is more than 100MB", "cmd": "find / -size +100M"}, {"invocation": "find all the cpp files in current folder", "cmd": "find -name \"*.cpp\""}, {"invocation": "Remove last two underscore-delimited fields and following characters in \"t1_t2_t3_tn1_tn2.sh\" keeping only \"t1_t2_t3\"", "cmd": "echo t1_t2_t3_tn1_tn2.sh | rev | cut -d_ -f3- | rev"}, {"invocation": "change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.", "cmd": "find . \\( -type f -exec sudo chmod 664 \"{}\" \\; \\) , \\( -type d -exec sudo chmod 775 \"{}\" \\; \\)"}, {"invocation": "Finds shell options with 'login' in name.", "cmd": "shopt | grep login"}, {"invocation": "Split \"/usr/bin/gcc\" into 100000 files of about equal size", "cmd": "split -n 100000 /usr/bin/gcc"}, {"invocation": "Find all files/directories under current directory that are 10MB in size", "cmd": "find . -size 10M"}, {"invocation": "Show version information of the find utility", "cmd": "find -version"}, {"invocation": "Delete empty lines from standard input", "cmd": "sed -n \"s/^$//;t;p;\""}, {"invocation": "Print summary of new/missing files, and which files differ between dir_one and dir_two, sorted alphabetically.", "cmd": "diff -qr dir_one dir_two | sort"}, {"invocation": "Send reverse requests to get domain name for each address in 'my_ips' list", "cmd": "cat my_ips | xargs -i dig -x {} +short"}, {"invocation": "Find all files and directories starting from the current directory and excluding hidden files and directories", "cmd": "find . \\( ! -regex '.*/\\..*' \\) | sed 's/^..//'"}, {"invocation": "Report available space on the file system containing /tmp in kilobytes.", "cmd": "df -k /tmp | tail -1 | awk '{print $4}'"}, {"invocation": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"", "cmd": "comm -23 a.txt b.txt | wc -l"}, {"invocation": "From the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count.", "cmd": "grep -Ff list1.txt list2.txt | sort | uniq -c | sort -n"}, {"invocation": "display a list of all files in the folder passed as argument to a script", "cmd": "find $@ -ls"}, {"invocation": "Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree", "cmd": "find . -name \"*.txt\" | sed \"s/\\.txt$//\" | xargs -i echo mv {}.txt {}.bak | sh"}, {"invocation": "find all the files in the /usr folder which have modification date less than or equal to the file \"/FirstFile\"", "cmd": "find /usr ! -newer /FirstFile -print"}, {"invocation": "Find all directories under $1/.hg and set their SGID bit", "cmd": "find $1/.hg -type d -exec chmod g+s {} \\;"}, {"invocation": "Search the file system for regular files whose names are shorter than 25 characters", "cmd": "find / -type f | egrep '.*/.{1,24}$'"}, {"invocation": "Copy file header.shtml to directories dir1, dir2, dir3, and dir4", "cmd": "find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}, {"invocation": "search for the word echo all the bash files(files ending with .bash) in the current folder", "cmd": "find . -name \"*.bash\" |xargs grep \"echo\""}, {"invocation": "Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$'", "cmd": "find . -\\( -name \"myfile[0-9][0-9]\" -o -name \"myfile[0-9]\" \\)"}, {"invocation": "Creates temporary file, replacing XXXXXXXXXXXXXXXXXXXXXXX with equal length suffix.", "cmd": "mktemp /tmp/banana.XXXXXXXXXXXXXXXXXXXXXXX.mp3"}, {"invocation": "Print the output of history without line numbers", "cmd": "history|awk '{$1=\"\";print substr($0,2)}'"}, {"invocation": "Select everything selected by * without descending into any directories", "cmd": "find * -maxdepth 0"}, {"invocation": "recursively change owner and group of the directory  /vol/html and all files into it to user ec2-user and group apache", "cmd": "sudo chown -R ec2-user:apache /vol/html"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder, printing info message about each action.", "cmd": "find . -name \"*.pyc\" | xargs -I {} rm -v \"{}\""}, {"invocation": "Calculate md5 sum of files $source_file and $dest_file", "cmd": "md5sum \"$source_file\" \"$dest_file\""}, {"invocation": "Copy all directories recursively from \"source/\" to \"destination/\" excluding all files", "cmd": "rsync -a --include='*/' --exclude='*' source/ destination/"}, {"invocation": "Interpret in the current shell all lines in config.sh which contain the word \"marker\"", "cmd": "source <( grep \"marker\" config.sh )"}, {"invocation": "Print lines in file 'file' that do not match any word specified in file 'blacklist' (one word per line)", "cmd": "grep -w -v -f blacklist file"}, {"invocation": "find all the files in the current folder which end with \"ext1\" or \"ext2\" or \"ext3\"", "cmd": "find -E . -regex \".*ext1|.*ext2|.*ext3\""}, {"invocation": "find all the files in the home folder which have been modified after a file", "cmd": "find $HOME -newer ~joeuser/lastbatch.txt"}, {"invocation": "find all the files that have been changed exactly 24 hours ago", "cmd": "find . -ctime 1 -type f"}, {"invocation": "Print the list of the current directory's subdirectories", "cmd": "find . -type d -maxdepth 1"}, {"invocation": "find all files in the file system which belong to no user or which have no user", "cmd": "find / -nouser"}, {"invocation": "Find files with 777 permissions and change them to 755", "cmd": "find / -type f -perm 0777 -print -exec chmod 755 {} \\;"}, {"invocation": "Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern", "cmd": "echo MYVAR | grep -oE '/[^/]+:' | cut -c2- | rev | cut -c2- | rev"}, {"invocation": "Print the full path of a 'file.txt' file in the current folder.", "cmd": "ls \"`pwd`/file.txt\""}, {"invocation": "Silently read a single character into variable \"REPLY\"", "cmd": "read -n1 -s"}, {"invocation": "Find all executable files under current directory and reverse sort them", "cmd": "find . -perm -111 -type f | sort -r"}, {"invocation": "Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in \"index.html\" and write the output to standard output and \"index.html\"", "cmd": "sed s/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g index.html | tee index.html"}, {"invocation": "List all *.txt files/directories under current directory ensuring white space safety", "cmd": "find . -name '*.txt' -print0|xargs -0 -n 1 echo"}, {"invocation": "Read a line from standard input into variable \"REPLY\" with prompt \"$*\"", "cmd": "read -p \"$*\""}, {"invocation": "display all the java script files in the current folder", "cmd": "find . -name \"*.js\""}, {"invocation": "Creates temporary file and saves path to it in a 'tmpfile' variable.", "cmd": "tmpfile=`mktemp`"}, {"invocation": "Search .c and .h files in the current directory tree for \"expr\"", "cmd": "find . -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Create a new RSA key for ssh with no passphrase, store it in ~/.ssh/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen.", "cmd": "echo -e  'y\\n'|ssh-keygen -q -t rsa -N \"\" -f ~/.ssh/id_rsa"}, {"invocation": "display all the regular files in the current folder that are modified after the file \"file.log\"", "cmd": "find . -type f -newer file.log"}, {"invocation": "Saves index number of file 'script.sh' in the 'inode' variable.", "cmd": "inode=`ls -i ./script.sh | cut -d\" \" -f1`"}, {"invocation": "Find recursively all Python files in the current directory tree and count the number of lines in them", "cmd": "find . -name '*.py' | xargs wc -l"}, {"invocation": "Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file.", "cmd": "join -o 1.1,1.2,1.3,2.1,2.2,2.3 -j2 <(sort -k2 file1) <(sort -k2 file2)"}, {"invocation": "Find all Makefile's in the current directory tree and print the line 235 of each of them", "cmd": "find . -type f -name Makefile -print -exec sed -n '235p' {} \\;"}, {"invocation": "Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.", "cmd": "is_nullglob=$( shopt -s | egrep -i '*nullglob' )"}, {"invocation": "remove all core files in the file system", "cmd": "find / -name \"*.core\" | xargs rm"}, {"invocation": "Print lines 16225 to 16482 in file \"file\"", "cmd": "cat file | head -n 16482 | tail -n 258"}, {"invocation": "delete all the regular files in the temp folder which have not been changed in the last 15*24 hours", "cmd": "find /tmp/ -ctime +15 -type f -exec rm {} \\;"}, {"invocation": "Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files", "cmd": "find /path/to/directory/folder{?,[1-4]?,50} -name '*.txt'"}, {"invocation": "Find all *~ files/directories under dir and  print an rm command for each of them for deletion", "cmd": "find dir -name \\*~ | xargs echo rm"}, {"invocation": "Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago", "cmd": "find /home/backups -type f -iregex '.*\\.t?gz$' -mtime +60 -exec rm {} \\;"}, {"invocation": "Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }' on compressed files \"input1.vcf.gz\" and \"input2.vcf.gz\"", "cmd": "gzip -dc input1.vcf.gz input2.vcf.gz | awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }'"}, {"invocation": "Find all SGID set files in the file system", "cmd": "find / -perm /g=s"}, {"invocation": "find all the swap files (files ending with ~) in the current folder and delete them", "cmd": "find . -name \"*~\" -exec rm {} \\;"}, {"invocation": "Make directories \"foo/bar/baz\" as needed and do not cause an error if it exists", "cmd": "mkdir -p foo/bar/baz"}, {"invocation": "Search the /root directory recursively for the regular file named \"myfile\"", "cmd": "find /root/ -name myfile -type f"}, {"invocation": "Connect to host \"${HOSTNAME}\" as user \"${USERNAME}\" and execute \"${SCRIPT}\" non-interactively", "cmd": "ssh -l ${USERNAME} ${HOSTNAME} \"${SCRIPT}\""}, {"invocation": "Find PHP files containing 2 or more classes", "cmd": "find . -type f -name \"*.php\" -exec grep --with-filename -c \"^class \" {} \\; | grep \":[2-99]\" | sort -t \":\" -k 2 -n -r"}, {"invocation": "create directory /etc/cron.5minute", "cmd": "mkdir /etc/cron.5minute"}, {"invocation": "recursively change owner of the directory /usr/lib/node_modules/ to the current user", "cmd": "sudo chown -R $(whoami) /usr/lib/node_modules/"}, {"invocation": "exclude vendor and app/cache dir, and search name which suffixed with php", "cmd": "find . -name *.php -or -path \"./vendor\" -prune -or -path \"./app/cache\" -prune"}, {"invocation": "Search every directory except the subdirectory excluded_path for a regular file 'myfile'", "cmd": "find / -path excluded_path -prune -o -type f -name myfile -print"}, {"invocation": "Query about which keys invoke the named function", "cmd": "bind -q complete"}, {"invocation": "Append *.java files from the current directory tree to tar archive `myfile.tar'", "cmd": "find . -type f -name \"*.java\" | xargs tar rvf myfile.tar"}, {"invocation": "Sort and remove duplicate lines in the output of \"finger\"", "cmd": "finger | sort -u"}, {"invocation": "Print file system disk space usage and grand total for the root file system with sizes in powers of 1000", "cmd": "df -H --total /"}, {"invocation": "Find all *.jpg (case insensitive) files under current directory", "cmd": "find . -iname '*.jpg'"}, {"invocation": "List the directory paths of all file.ext files under present working directory", "cmd": "find . -name \"file.ext\" -execdir pwd ';'"}, {"invocation": "find all *.java files/directories under current directory", "cmd": "find . -name  \\*.java"}, {"invocation": "Recursively changes group ownership of everything in a '/home/user1/project/dev' folder to 'project_dev'.", "cmd": "chgrp -R project_dev /home/user1/project/dev"}, {"invocation": "create a symbolic link named \"test\" to file \".bashrc\"", "cmd": "ln -s .bashrc test"}, {"invocation": "Make directories \"es/LC_MESSAGES\" as needed and do not error if it exists", "cmd": "mkdir -p es/LC_MESSAGES"}, {"invocation": "find all the files that have not been modified in the last 2 days", "cmd": "find -mtime +2"}, {"invocation": "Change directory to the directory containing the \"oracle\" executable", "cmd": "cd \"$(dirname $(which oracle))\""}, {"invocation": "Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"", "cmd": "find \"$HOME\" -name '*.txt' -type f -not -path \"$HOME/newdir/*\" -print0 | xargs -0 cp -t \"$HOME/newdir\""}, {"invocation": "Use \"$BYTES\" amount of RAM for \"$SECONDS\" seconds with no output", "cmd": "cat <(yes | tr \\\\n x | head -c $BYTES) <(sleep $SECONDS) | grep n"}, {"invocation": "Wrap each line in \"file.txt\" to fit in 80 characters", "cmd": "cat file.txt | fold"}, {"invocation": "Search for files/directories which are writable by both their owner and their group", "cmd": "find . -perm -g+w,u+w"}, {"invocation": "find all txt files under the current folder except ./directory folder", "cmd": "find -name \"*.js\" -not -path \"./directory/*\""}, {"invocation": "display a list of all regular/normal files in the current folder", "cmd": "find . -type f -ls"}, {"invocation": "display all files in current folder which have been modified in the last 60 minutes", "cmd": "find -mmin 60"}, {"invocation": "Prints last modified file in a current folder.", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}, {"invocation": "delete all the normal files in the current directory whcih have the word \"gui\" in their content.", "cmd": "find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}, {"invocation": "Print the contents of \"foo.txt\" starting with line 2", "cmd": "tail -n +2 foo.txt"}, {"invocation": "Print relative path of device of disk with UUID \"b928a862-6b3c-45a8-82fe-8f1db2863be3\"", "cmd": "readlink /dev/disk/by-uuid/b928a862-6b3c-45a8-82fe-8f1db2863be3"}, {"invocation": "Print only group names from /etc/group.", "cmd": "cut -d: -f1 /etc/group"}, {"invocation": "create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory", "cmd": "find . -depth -print | cpio -o -O /target/directory"}, {"invocation": "Mount remote \"smbfs\" filesystem \"//username@server/share\" on \"/users/username/smb/share\" as soft", "cmd": "mount -t smbfs -o soft //username@server/share /users/username/smb/share"}, {"invocation": "Search the /usr/ directory tree for files newer than file /tmp/stamp", "cmd": "find /usr -newer /tmp/stamp"}, {"invocation": "Counts all top-level files in a current folder.", "cmd": "ls -1 | wc -l"}, {"invocation": "Prints current directory name", "cmd": "pwd | sed 's#.*/##'"}, {"invocation": "Search the xargstest/ directory recursively for files matching pattern 'file??'", "cmd": "find xargstest/ -name 'file??'"}, {"invocation": "List first 20 files under current directory", "cmd": "find . -type f |xargs ls -lS |head -20"}, {"invocation": "search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents", "cmd": "find /home/you -iname \"*.txt\" -mtime -60 -exec cat {} \\;"}, {"invocation": "Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the ./C directory and below", "cmd": "find ./C -name \"*.c\" | xargs -n1  echo cp xyz.c"}, {"invocation": "Find all files with '.jpg' extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz", "cmd": "find . -maxdepth 1 -iname \"*.jpg\" | xargs tar -czvf jpeg.tgz"}, {"invocation": "Set the modification timestamp of file 'filename' to specified date/time.", "cmd": "touch -m --date=\"Wed Jun 12 14:00:00 IDT 2013\" filename"}, {"invocation": "Show the date in default format for tomorrow + 2 days + 10 minutes", "cmd": "date -d tomorrow+2days-10minutes"}, {"invocation": "Remove all directories called \"test\" from the /path/to/dir directory tree", "cmd": "find /path/to/dir -name \"test\" -type d -delete"}, {"invocation": "Save IP address of your SSH session in variable \"WORKSTATION\"", "cmd": "WORKSTATION=`who -m|awk '{print $5}'|sed 's/[()]//g'`"}, {"invocation": "Print paths to all subdirectories inside of a directory", "cmd": "du | awk '{print $2}'"}, {"invocation": "Sets shell options 'extglob' and 'nullglob'.", "cmd": "shopt -s nullglob extglob"}, {"invocation": "Prints process tree with command line arguments of a process having id $PID.", "cmd": "pstree -a \"$PID\""}, {"invocation": "Find all directories under 'A' directory tree excluding paths containing the directory 'a'", "cmd": "find A -type d \\( ! -wholename \"A/a/*\" \\)"}, {"invocation": "Search the files from the current directory tree for \"chrome\"", "cmd": "find . -exec grep chrome {} \\;"}, {"invocation": "find all files in the current folder that end with \",txt\"", "cmd": "find . -name \"*,txt\""}, {"invocation": "Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.", "cmd": "rm /var/www/html/**/_* /var/www/html/**/.DS_Store"}, {"invocation": "Find all the files in file system which are greater than 50MB and less than 100MB", "cmd": "find / -size +50M -size -100M"}, {"invocation": "Find empty files/directories under test directory", "cmd": "find test -empty"}, {"invocation": "Find all directories by the name `httpdocs' on the system", "cmd": "find / -type d -name httpdocs"}, {"invocation": "Find \"*.dat\" files recursively in the current directory, print the lines starting on line 5 to the console and save to \"concat.txt\"", "cmd": "find . -type f \\( -name \"*.dat\" \\) -exec tail -n+5 -q \"$file\" {} + |tee concat.txt"}, {"invocation": "Find files/directories named 'filename' in the entire filesystem", "cmd": "find / -name filename -print"}, {"invocation": "List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later", "cmd": "find -newermt \"mar 03, 2010\" -ls"}, {"invocation": "List all files and directories in long list format with a time style of \"long-iso\" and sort from oldest modifed to newest modified", "cmd": "ls -l --time-style=long-iso | sort -k6"}, {"invocation": "Shows status of a shell option 'compat31'.", "cmd": "shopt compat31"}, {"invocation": "Print the minimum transmission time of 10 ping requests to \"google.com\" from cygwin", "cmd": "ping google.com -n 10 | grep Minimum | awk '{print $3}' | sed s/,//"}, {"invocation": "Print all files in the current directory tree as a comma separated list", "cmd": "find . -type f -print0 | tr '\\0' ','"}, {"invocation": "display all the files in the folder a", "cmd": "find a"}, {"invocation": "Prints top-ten of most used utilities from history.", "cmd": "history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}, {"invocation": "Counts lines in file 'filename' ignoring empty lines and lines with spaces only.", "cmd": "cat 'filename' | grep '[^ ]' | wc -l"}, {"invocation": "Find and remove zero bytes files from user's directories .", "cmd": "find /usr/* -size 0c -exec rm {} \\;"}, {"invocation": "Print numbers from 1 to 5 without separating spaces and without a newline", "cmd": "seq 5 | awk '{printf \"%s\", $0}'"}, {"invocation": "remove all the files in the current folder which have not been changed in the last 30*24 hours", "cmd": "find ./ -ctime +30 -type f -exec rm -f {} \\;"}, {"invocation": "Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory", "cmd": "find $HOME -iname '*.ogg' -o -iname '*.mp3'"}, {"invocation": "Decompress \"path/to/test/file.gz\" to standard output and save all lines matching \"my regex\" and not matching \"other regex\" to files with a 1000000 line limit", "cmd": "gzip -dc path/to/test/file.gz | grep -P 'my regex' | grep -vP 'other regex' | split -dl1000000 - file"}, {"invocation": "List all IP addresses assigned to current hostname, pausing for user interaction after each page.", "cmd": "more /etc/hosts | grep '[[:space:]]*'`hostname`'[[:space:]]*' | awk '{print $1}'"}, {"invocation": "Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames", "cmd": "find ~/Documents -type f -print0 | xargs -0 grep -il birthday"}, {"invocation": "find files in /dir/path/look/up directory that names are dir-name-here", "cmd": "find /dir/path/look/up -name \"dir-name-here\" -print"}, {"invocation": "Delete all files under and below the current directory", "cmd": "find -mindepth 1 -delete"}, {"invocation": "Set shell option 'checkwinsize'.", "cmd": "shopt -s checkwinsize"}, {"invocation": "Calculate md5 sum of empty string", "cmd": "echo -n | md5sum"}, {"invocation": "Gets MAC address of eth0 network interface.", "cmd": "ifconfig eth0 | grep HWaddr | cut -d ' ' -f 9"}, {"invocation": "Find all regular files starting from level 3 of directory tree ~/container and move them one level up", "cmd": "find ~/container -mindepth 3 -type f -execdir mv \"{}\" ./.. \\;"}, {"invocation": "Print the contents of \"file\" with \" | \" appended to each line", "cmd": "echo `sed -e 's/$/\\ |\\ /g' file`"}, {"invocation": "Print the names and sizes of regular files residing in the \"tmp\" directory tree", "cmd": "find tmp -type f -printf \"%s %p\\n\" | awk '{sub(/^[^ ]+/,sprintf(\"f %10d\",$1))}1'"}, {"invocation": "Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.", "cmd": "join -1 2 -2 1 -t, BigFile.csv LittleFile.csv"}, {"invocation": "Finds all user session in system, and shows sorted user names with number of sessions of each user.", "cmd": "w | sed '1,2d' | cut -f1 -d' ' | sort | uniq -c"}, {"invocation": "List files larger than 10MB under /var/log", "cmd": "find /var/log -size +10M -ls"}, {"invocation": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension", "cmd": "find . -regextype sed -regex \"./test[0-9]\\{2\\}.txt\""}, {"invocation": "Write \"suspend\" to standard output and to file \"/sys/bus/usb/devices/usb3/power/level\"", "cmd": "echo suspend | sudo tee /sys/bus/usb/devices/usb3/power/level"}, {"invocation": "Search the /usr/bin directory tree for regular files modified or created less than 10 days ago", "cmd": "find /usr/bin -type f -mtime -10"}, {"invocation": "Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\"", "cmd": "echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"}, {"invocation": "Save the last modified time of file 'file_name' to variable 'STAMP'", "cmd": "STAMP=`date -r file_name`"}, {"invocation": "renames all \".htm\" files to \".html\" files", "cmd": "find . -name \"*.htm\" -exec mv '{}' '{}l' \\;"}, {"invocation": "Remove all files with names like \"vmware-*.log\" from the current directory tree", "cmd": "find . -name \"vmware-*.log\" -exec rm '{}' \\;"}, {"invocation": "display all the directories in the current folder excluding those that have the name \"node_modules\"", "cmd": "find . ! -name \"node_modules\" -type d"}, {"invocation": "find all the wav files in the current folder and do not search in the sub directories", "cmd": "find . -name '*.wav' -maxdepth 1"}, {"invocation": "List each unique character in \"file\" prefixed by number of occurrences and sorted from most frequent to least frequent", "cmd": "grep -o . filename | sort | uniq -c | sort -nr"}, {"invocation": "Print the second line of output of \"ls -l\"", "cmd": "ls -l | tail -n +2 | head -n1"}, {"invocation": "Remove regular files whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$' from the current directory tree", "cmd": "find -type f |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | xargs rm"}, {"invocation": "Find files/directories under '/usr' directory tree that are newer than /tmp/stamp$$ by modification time", "cmd": "find /usr -newer /tmp/stamp$$"}, {"invocation": "Mark variables and function which are modified or created for export to the environment of subsequent commands", "cmd": "set -a"}, {"invocation": "Find regular files that have SUID or SGID set", "cmd": "find / -perm +6000 -type f"}, {"invocation": "Report total size of the root filesystem disk usage in powers of 1000.", "cmd": "df -H --total /"}, {"invocation": "Check if the directory tree whose name is given as variable $somedir contains no regular files", "cmd": "find \"$somedir\" -type f -exec echo Found unexpected file {} \\;"}, {"invocation": "add read,write permissions to all the files in the current folder which have the permission 600", "cmd": "find . -perm 600 -print | xargs chmod 666"}, {"invocation": "Search the `research' directory and one level below for directories that are not owned by group `ian'", "cmd": "find -L research -maxdepth 2 -type d ! -group ian"}, {"invocation": "Find all .txt files in current  directory and rename with  .html .", "cmd": "find  . -type f -name \"*.txt\" -exec mv {} `basename {} .html` .html \\;"}, {"invocation": "Copy \"src/prog.js\" and \"images/icon.jpg\" to \"/tmp/package\" keeping relative path names", "cmd": "rsync -R src/prog.js images/icon.jpg /tmp/package"}, {"invocation": "Send SIGTERM signal to first process sent to background by the current shell.", "cmd": "kill %1"}, {"invocation": "Find all *.jpg files/directories under current directory", "cmd": "find . -name '*.jpg'"}, {"invocation": "Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories", "cmd": "find \"$1\" -perm -u+x -print0 | xargs chmod g+x"}, {"invocation": "Continuously send \"y\" as input to \"cat\" which outputs to \"more\"", "cmd": "yes | cat | more"}, {"invocation": "Subtract each column in File2 from matching column in File1, output the result in a similarly formatted table", "cmd": "awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1 | rev | column -t | rev"}, {"invocation": "start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found", "cmd": "find . -wholename './src/emacs' -prune -print -o -print"}, {"invocation": "Compare \"fastcgi_params\" and \"fastcgi.conf\" line by line, output 3 lines of unified context, and print the C function the change is in", "cmd": "diff -up fastcgi_params fastcgi.conf"}, {"invocation": "Removes all listed folders with content in sudo mode.", "cmd": "sudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules"}, {"invocation": "find all files under \"/usr\"", "cmd": "find /usr -print"}, {"invocation": "Remove empty directories from directory tree /srv/abc", "cmd": "find /srv/abc/ -type d -empty -exec rmdir {} \\;"}, {"invocation": "Find all files/directories named file in minimum 4 levels down the current directory", "cmd": "find -mindepth 4 -name file"}, {"invocation": "display all the files in the current folder excluding those that are present in the path \"./etc\"", "cmd": "find . ! -wholename \"./etc*\""}, {"invocation": "List all empty files under the current directory", "cmd": "find . -maxdepth 1 -empty"}, {"invocation": "Clear the terminal's search history", "cmd": "history -c"}, {"invocation": "Saves logged in users names in 'tmp' variable.", "cmd": "tmp=$(w | awk '{print $1}')"}, {"invocation": "Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours", "cmd": "find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}, {"invocation": "Copies file 'test' to each of directories like './fs*/*'.", "cmd": "echo ./fs*/* | xargs -n 1 cp test"}, {"invocation": "Find all regular files in the current directory tree ignoring GIT and SVN directories", "cmd": "find . \\( -type d -regex '^.*/\\.\\(git\\|svn\\)$' -prune -false \\) -o -type f -print0"}, {"invocation": "Update the archived copy of the home directory, \"alldata.tar\"", "cmd": "find ~/ -newer alldata.tar -exec tar uvf alldata.tar {} ;"}, {"invocation": "find all the files in the current folder which do not belong to any user", "cmd": "find . -nouser -ls"}, {"invocation": "Print the characters in $b that match with any character in $a without printing any newline", "cmd": "echo \"$b\" | grep -o \"[$a]\" | tr -d '\\n'"}, {"invocation": "Find all files starting from the current directory which are owned by the user tommye", "cmd": "find . -user tommye"}, {"invocation": "display all regular files in the folder image-folder", "cmd": "find image-folder/ -type f"}, {"invocation": "Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'", "cmd": "find /home/u20806/public_html -maxdepth 1 -mmin +25 -type f -name \"*.txt\" -delete"}, {"invocation": "Saves list of logged in users in system together with 'USER' header in the 'b' variable.", "cmd": "b=`w|cut -d' ' -f1`;"}, {"invocation": "Find all *.c files in /usr/src bigger than 100k", "cmd": "find /usr/src -name '*.c' -size +100k -print"}, {"invocation": "Remove all vmware-*.log files under current directory", "cmd": "find . -name \"vmware-*.log\" -exec rm '{}' \\;"}, {"invocation": "find all the symbolic links in the current folder and follow to the original file", "cmd": "find -L . -type l"}, {"invocation": "Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree", "cmd": "find /tmp -type f -name '*' -mtime +7 -print0 | xargs -0 rm -f"}, {"invocation": "long list the detials of all the shell scripts in current directory", "cmd": "find . -name \"*.sh\" -exec ls -ld {} \\;"}, {"invocation": "find all the files in the current directory and change the permissions to 775.", "cmd": "find . -exec chmod 775 {} \\;"}, {"invocation": "search for files which are writable by either their owner or their group", "cmd": "find . -perm /220"}, {"invocation": "Print unique lines in \"file1\" compared to \"file2\" in the order they appear", "cmd": "comm -23 <(sort file1) <(sort file2)|grep -f - file1"}, {"invocation": "Find all files/directories with '.in' extension in the directory $directory and its subdirectories", "cmd": "du -a $directory | awk '{print $2}' | grep '\\.in$'"}, {"invocation": "find the oldest normal file in the current directory", "cmd": "find . -type f -print0 | xargs -0 ls -ltr | head -n 1"}, {"invocation": "Display kernel release name.", "cmd": "uname -r"}, {"invocation": "Display inputfile all on one line (replace newlines by spaces)", "cmd": "awk 1 ORS=' ' file"}, {"invocation": "Locate symlinks in directory trees lpi104-6 and research/lpi104-6", "cmd": "find lpi104-6 research/lpi104-6 -type l"}, {"invocation": "find all the files in the current folder that have been modified exactly 24*3 hours ago", "cmd": "find ./ -mtime 3"}, {"invocation": "find all the directories with the name \"uploads\" in current folder", "cmd": "find . -type d -name 'uploads'"}, {"invocation": "Search the directory tree given as variable $dir for regular files", "cmd": "find $dir -type f"}, {"invocation": "Recursively prints all folders in a current folder that contain files like \"*.class\".", "cmd": "find . -name \"*.class\" -print0 | xargs -0 -n1 dirname | sort --unique"}, {"invocation": "Verbosely compresses all files on second and third depth level keeping original files in place.", "cmd": "bzip2 -kv */*"}, {"invocation": "Search the current directory tree for symbolic links to files matching pattern '*test*'", "cmd": "find . -lname '*test*'"}, {"invocation": "Get domain name with 'google' from dig reverse lookup.", "cmd": "dig -x 8.8.8.8| awk '/PTR[[:space:]]/ && /google/ {print $NF}'"}, {"invocation": "Print current shell using process ID", "cmd": "ps  -ef | grep $$ | grep -v grep"}, {"invocation": "Find all executable files under the current directory and below", "cmd": "find . -perm /a=x"}, {"invocation": "Find files in entire file system that are writable by group or other", "cmd": "find / -perm /g=w,o=w"}, {"invocation": "find all files ending with \"js.compiled\" in current folder", "cmd": "find . -type f -name \"*.js.compiled\""}, {"invocation": "Try to determine the type of contents in \"myfile\" located in user's home directory.", "cmd": "file ~/myfile"}, {"invocation": "Gets IP addresses of all network interfaces.", "cmd": "ifconfig | grep -E \"([0-9]{1,3}\\.){3}[0-9]{1,3}\" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d:"}, {"invocation": "Find all the files which are modified in last 1 hour", "cmd": "find / -mmin -60"}, {"invocation": "Pushes current folder to the directory stack.", "cmd": "pushd ."}, {"invocation": "Show logged in users with idle time of each one", "cmd": "w | tr -s \" \" | cut -d\" \" -f1,5 | tail -n+3"}, {"invocation": "Print command history", "cmd": "history"}, {"invocation": "find all the css files", "cmd": "find -name '*.css'"}, {"invocation": "Save $line line in history", "cmd": "history -s \"$line\""}, {"invocation": "Find the first file/directory in ... directory and quit", "cmd": "find ... -print -quit"}, {"invocation": "find md5sum of 'string to be hashed'", "cmd": "md5 -s 'string to be hashed'"}, {"invocation": "Print the boot time in standard date format", "cmd": "who -b | awk '{$1=\"\"; $2=\"\"; print $0}' | date -f -"}, {"invocation": "Print \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" and append to file \"/etc/apt/sources.list\"", "cmd": "echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | tee -a /etc/apt/sources.list"}, {"invocation": "Remove all regular files found in and below /path", "cmd": "find /path -type f -exec rm '{}' \\;"}, {"invocation": "Report file system '/dev/disk0s2' disk usage", "cmd": "df | grep /dev/disk0s2"}, {"invocation": "change the permissions of all the regular/normal files in the current folder", "cmd": "sudo find . -type f -exec chmod 644 {} +"}, {"invocation": "Enables shell option 'histappend'.", "cmd": "shopt -s histappend"}, {"invocation": "Find all files/directories that do not contain 'photo' in their names under current directory tree", "cmd": "find . ! -name \"*photo*\""}, {"invocation": "Make directory \"foo\" and do not cause an error if it exists", "cmd": "mkdir -p foo"}, {"invocation": "change owner of the file my_test_expect.exp to user el", "cmd": "sudo chown el my_test_expect.exp     //make el the owner."}, {"invocation": "display all the c files and the header files in the path /some/dir and do not search in sub directories", "cmd": "find /some/dir -maxdepth 1 \\( -name '*.c' -o -name '*.h' \\) -print"}, {"invocation": "Change to folder where the oracle binary is.", "cmd": "cd \"$(dirname \"$(which oracle)\")\""}, {"invocation": "Print a list of unique users who are logged in", "cmd": "who | cut -d' ' -f1 | sort | uniq"}, {"invocation": "Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME/Library/Safari/Icons directory tree", "cmd": "find $HOME/Library/Safari/Icons -type f -atime +30 -name \"*.cache\" -print -delete"}, {"invocation": "Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.", "cmd": "find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}, {"invocation": "find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has", "cmd": "find .  \\( ! -path \"./output/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach"}, {"invocation": "create a compressed archive in my_dir directory matching '.[^.]* ..?*' glob pattern", "cmd": "tar -C my_dir -zcvf my_dir.tar.gz .[^.]* ..?* *"}, {"invocation": "search for a function in all python files in the current folder", "cmd": "find . -name '*.py' | xargs grep some_function"}, {"invocation": "Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak", "cmd": "find . -type f -name INPUT.txt -print0 | xargs -0 -I {}  sed -i.bak '/^#/d' {}"}, {"invocation": "Push the current directory path to the dirs stack", "cmd": "pushd `pwd`"}, {"invocation": "Search the .VER files from the current directory tree for string \"Test_Version='", "cmd": "find . -name \"*.VER\" -exec grep 'Test_Version=' '{}' ';' -print;"}, {"invocation": "Delete all files in the /myDir directory tree that were last modfied 7 days ago", "cmd": "find /myDir -mindepth 1 -mtime 7 -exec rm -rf {} \\;"}, {"invocation": "Removes 55, adds a 10-digit line number, and rearranges the date for each line in \"input\"", "cmd": "nl -nrz -w10 -s\\; input | sed -r 's/55//; s/([0-9]{2})-([0-9]{2})-([0-9]{4})/\\3\\2\\1/'"}, {"invocation": "Enables shell option 'compat31'.", "cmd": "shopt -s compat31"}, {"invocation": "display all the files in the home folder", "cmd": "find $HOME -print"}, {"invocation": "Copy directory hierarchy from \"$sourceDir\" to \"$targetDir\"", "cmd": "find \"$sourceDir\" -type d | sed -e \"s?$sourceDir?$targetDir?\" | xargs mkdir -p"}, {"invocation": "display all text files in a folder", "cmd": "find $target -type f -iname \"*.txt\""}, {"invocation": "Abort the shell or script on the first failed command", "cmd": "set -e"}, {"invocation": "Print \"Total generated: \" followed by the number of unique lines in \"$generated_ports\"", "cmd": "echo \"Total generated: $(echo \"$generated_ports\" | sort | uniq | wc -l).\""}, {"invocation": "Report root file system disk usage human-readable.", "cmd": "df -h /"}, {"invocation": "Count number of users logged in", "cmd": "who | awk -F' ' '{print $1}' | sort -u | wc -l"}, {"invocation": "Changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'.", "cmd": "sudo chgrp gpio /sys/class/gpio/export /sys/class/gpio/unexport"}, {"invocation": "find all the backup files in the current folder and delete them", "cmd": "find . -type f -name \"*.bak\" -exec rm -f {} \\;"}, {"invocation": "Case-insensitive search all existing environment variables and their values for \"shell\".", "cmd": "env | grep -i shell"}, {"invocation": "Create a directory named 'alpha_real' in the current directory", "cmd": "mkdir alpha_real"}, {"invocation": "Gets MAC addresses of all IP4 network interfaces.", "cmd": "ifconfig -a | awk '/^[a-z]/ { iface=$1; mac=$NF; next } /inet addr:/ { print mac }' | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}, {"invocation": "Get A record for domain $domain", "cmd": "dig -t A $domain"}, {"invocation": "Reports count of characters in the value of ${FOO} variable as follows:  \"length(FOO)==<counted number of characters>\"", "cmd": "echo -e \"length(FOO)==$(echo -ne \"${FOO}\" | wc -m)\""}, {"invocation": "Remove all files in and below the current directory whose names begin with \"not\"", "cmd": "find . -name not\\* | xargs -d '\\n' rm"}, {"invocation": "Displays calendar for a previous, current and next month.", "cmd": "cal -3"}, {"invocation": "Overwrites file $FILE with random content, then truncates and deletes it.", "cmd": "shred -u $FILE"}, {"invocation": "List all files/directories under current directory by replacing all spaces with commas (,)", "cmd": "find . -ls | tr -s ' ' ,"}, {"invocation": "Print a line of 99 '=' characters", "cmd": "seq -s= 100|tr -d '[:digit:]'"}, {"invocation": "find all directory list which have empty list in /tmp directory .", "cmd": "find /tmp -type d -empty"}, {"invocation": "Give all directories in the /path/to/base/dir tree read and execute privileges", "cmd": "find /path/to/base/dir -type d -exec chmod 755 {} +"}, {"invocation": "Merge already sorted files in the current directory starting with \"_tmp\" and write the output to \"data.tsv.sorted\"", "cmd": "sort -m _tmp* -o data.tsv.sorted"}, {"invocation": "Print IP addresses of the current host", "cmd": "hostname -I|cut -d\" \" -f 1"}, {"invocation": "Decompresses each of \"*bz2\" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.", "cmd": "find . -name \"*.bz2\" -print0 | xargs -I{} -0 bzip2 -dc {} | cut -f, -d4"}, {"invocation": "Find all files that have the SUID bit set", "cmd": "find / -perm -u+s -print"}, {"invocation": "Search all Python files in the current directory tree for string \"import antigravity\"", "cmd": "find . -name \"*.py\" | xargs grep 'import antigravity'"}, {"invocation": "replaces the last occurrence of 'a' with 'c'", "cmd": "tac | sed '0,/a/ s/a/c/' | tac"}, {"invocation": "List the names of all file.ext files/directories under present working directory", "cmd": "find `pwd` -name \"file.ext\" -printf \"%f\\n\""}, {"invocation": "Print DISPLAY of \"orschiro\" user", "cmd": "who | sed -e '/orschiro/! d; /pts/! d; s/^.*\\(:[0-9.]\\+\\).*$/\\1/p;d' | head -n1"}, {"invocation": "Print \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" and append to file \"/etc/apt/sources.list\"", "cmd": "echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | tee -a /etc/apt/sources.list"}, {"invocation": "Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames", "cmd": "find . -name '*.txt' -exec grep 'sometext' '{}' \\; -print"}, {"invocation": "Split \"/usr/bin/cat\" into 10000 files of about equal size", "cmd": "split -n 10000 /usr/bin/cat"}, {"invocation": "Replace \"dummyvalue\" with the system IP address in \"filename\"", "cmd": "sed -i s/'dummyvalue'/$(hostname -I | head -n1 | awk '{print $1;}')/g filename"}, {"invocation": "List all regular files matching the name pattern \"$1*\" (where $1 is a positional parameter) under '/usr', '/bin', '/sbin' and '/opt' directory tree", "cmd": "find /usr /bin /sbin /opt -name \"$1*\" -type f -ls"}, {"invocation": "Execute `echo' for each file found", "cmd": "find . | xargs -n 1 echo"}, {"invocation": "Archive all filepattern-*2009* files/directories under data/ into 2009.tar", "cmd": "find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar"}, {"invocation": "Remove regular files changed more than 15 days ago from the /tmp directory tree", "cmd": "find /tmp/ -ctime +15 -type f -exec rm {} \\;"}, {"invocation": "find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old", "cmd": "find . -mtime +30 -a -mtime -7 -print0"}, {"invocation": "display all the directories in the current folder for the files which have not been accessed in the last 48 hours", "cmd": "find . -type d -atime +2"}, {"invocation": "print lines from last match of ^Statistics until end of file", "cmd": "tac INPUTFILE | sed '/^Statistics |/q' | tac"}, {"invocation": "Print  \"Cannot acquire lock - already locked by \" followed by content of $lockfile file", "cmd": "echo \"Cannot acquire lock - already locked by $(cat \"$lockfile\")\""}, {"invocation": "Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name", "cmd": "find . -type d | sed -e 's/\\.\\///g' | awk '{print $1, $1}' | xargs chgrp"}, {"invocation": "Rename all .txt files to .bak in the current directory tree", "cmd": "find . -name \"*.txt\" | sed \"s/\\.txt$//\" | xargs -i echo mv {}.txt {}.bak | sh"}, {"invocation": "Prints running process that has id 'pid' with command line arguments.", "cmd": "pstree -a pid"}, {"invocation": "Delete everything in the current directory", "cmd": "find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf"}, {"invocation": "Find all files in the home directory tree that are owned by another user and change their ownership to the current user", "cmd": "find ~ ! -user $USER -exec sudo chown ${USER}:\"{}\" \\;"}, {"invocation": "Make directory and parents as needed for each unique mime type in the current directory", "cmd": "mkdir -p `file -b --mime-type *|uniq`"}, {"invocation": "display all regular/normal files in the current folder which are accessed in the last 7*24 hours", "cmd": "find . -type f -atime -7"}, {"invocation": "search for text files in the folders /home/hobbes/ /home/calvin/", "cmd": "find /home/hobbes/ /home/calvin/ -name \u201c*.txt\u201d"}, {"invocation": "Find all directories under '/nas' directory tree", "cmd": "find /nas -type d"}, {"invocation": "Print a tab separated table in \"table.txt\" with cell borders", "cmd": "sed -e 's/\\t/_|/g' table.txt |  column -t -s '_' | awk '1;!(NR%1){print \"-----------------------------------------------------------------------\";}'"}, {"invocation": "remove all the files in the current folder which have not been modified in the last 10 days", "cmd": "find . -mtime +10 | xargs rm"}, {"invocation": "search for all the files in the folder /home/user1 which end with \".bin\"", "cmd": "find /home/user1 -name \"*.bin\""}, {"invocation": "Split \"file.txt\" into files of at most 1 MiB in size with a numeric suffix, prefix \"file\", and additional suffix \".txt\"", "cmd": "split -b 1M -d  file.txt file --additional-suffix=.txt"}, {"invocation": "Remove all .mpg files in the /home/luser directory tree", "cmd": "find /home/luser -type f -name '*.mpg' | tr \"\\n\" \"\\000\" | xargs -0 rm -f"}, {"invocation": "Search the /path/to/dir directory tree for .c files", "cmd": "find /path/to/dir -name \\*.c"}, {"invocation": "Remove all CVS directories in the current directory tree", "cmd": "find . -type d -name CVS -exec rm -r {} \\;"}, {"invocation": "Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree", "cmd": "find . -name '*$VERSION*'"}, {"invocation": "display all php,xml and phtml files in current folder", "cmd": "find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'"}, {"invocation": "Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories", "cmd": "find /home/baumerf/public_html/ -mmin -60 -not -name error_log"}, {"invocation": "Get a list of all files in the /home directory tree and their coressponding inode numbers", "cmd": "find /home -type f -printf \"%i@%p\\n\""}, {"invocation": "Find all *.txt files/directories under your home directory", "cmd": "find ~ -name \"*.txt\" -print"}, {"invocation": "display all the files having spaces in the current folder", "cmd": "find . -name \"filename including space\" -print0"}, {"invocation": "Identify CMS version/releases accross all your Wordpress websites", "cmd": "find /home/*/public_html/ -type f -iwholename \"*/wp-includes/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}, {"invocation": "Replace all spaces with underscores in file paths under current directory.", "cmd": "find -name \"* *\" -type f | rename 's/ /_/g'"}, {"invocation": "display long listing of all files in the current directory whose size is 24 or 25 bytes.", "cmd": "find . -size -26c -size +23c -ls"}, {"invocation": "Save the canonical path of \"$dir/$file\" in variable \"path\"", "cmd": "path=`readlink --canonicalize \"$dir/$file\"`"}, {"invocation": "count the lines of java code for all the java files in the current directory", "cmd": "find . -name \"*.java\" -print0 | xargs -0 wc"}, {"invocation": "print all filenames of files under current dir containing 'foo', case-insensitive", "cmd": "find . -type f -exec grep -il 'foo' {} \\;"}, {"invocation": "Treat references to unset variables as errors", "cmd": "set -o nounset"}, {"invocation": "Remove all directories in and below the current directory", "cmd": "find \\! -name . -type d -print0 | xargs -0 rmdir"}, {"invocation": "Recursively change the owner of all files in \"testproject/\" to \"ftpuser\"", "cmd": "chown ftpuser testproject/ -R"}, {"invocation": "Find all files under /home/username/public_html/themes and set their permission to 640", "cmd": "find /home/username/public_html/themes -type f -exec chmod 640 {} +"}, {"invocation": "Create a ssh tunnel on local port 2222 through \"bridge.example.com\" to \"remote.example.com\" port 22 without executing any commands and run in the background", "cmd": "ssh -N -L 2222:remote.example.com:22 bridge.example.com&"}, {"invocation": "find all the html files in the current folder which have not been modified in the last 7 days", "cmd": "find . -mtime +7 -name \"*.html\" -print"}, {"invocation": "Saves hostname that matches ${ip_address} in 'host' variable, without trailing dot.", "cmd": "host=$(dig +short -x \"${ip_address}\" | sed 's/\\.$//g')"}, {"invocation": "Rename \"file0001.txt\" to \"1.txt\"", "cmd": "mv file0001.txt 1.txt"}, {"invocation": "simulate a full login of user builder", "cmd": "su -l builder"}, {"invocation": "Create ssh tunnel through \"genja.org\" connecting localhost port 4444 to \"raptor.lan\" port 22", "cmd": "ssh -L 4444:raptor.lan:22 genja.org"}, {"invocation": "list *.pdf files under the /home/user/Desktop directory.", "cmd": "find /home/user/Desktop -name '*.pdf'"}, {"invocation": "Remove all *.log files from the current directory tree", "cmd": "find -name '*.log' -delete"}, {"invocation": "list all the sqlite files in the current folder", "cmd": "find ./ -name \"*.sqlite\" -ls"}, {"invocation": "Find all files/directories in all paths expanded by the glob pattern *", "cmd": "find *"}, {"invocation": "Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' recursively that have not been modified from the start of the day", "cmd": "find /tmp/test/* -daystart -mtime +0"}, {"invocation": "Open all files named 'filename' with 'nano' editor in the entire filesystem", "cmd": "find / -name filename -exec nano '{}' \\;"}, {"invocation": "Save the user name in all capitals of the current user to variable \"v\"", "cmd": "v=$(whoami | awk '{print toupper($0)}')"}, {"invocation": "Copy all files from the current directory tree to /path/to/destination/dir preserving their times, permissions, and ownership", "cmd": "find . | cpio -pdumv /path/to/destination/dir"}, {"invocation": "Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment", "cmd": "env $(cat .env | xargs) rails"}, {"invocation": "Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.", "cmd": "find /       \\( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\\n' \\) , \\              \\( -size +100M -fprintf /root/big.txt  '%-10s %p\\n' \\)"}, {"invocation": "Replace all spaces with underscores in directory names under current directory.", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename 's/ /_/g' \"{}\" \\;"}, {"invocation": "Lists all files in a current folder, separating names with comma.", "cmd": "ls -1 | paste -sd \",\" -"}, {"invocation": "Add read and execute permission to command \"node\"", "cmd": "sudo chmod +rx $(which node)"}, {"invocation": "find all the files in the current directory which have been modified in the last 30 days and display the contents.", "cmd": "find . -atime +30 -exec ls \\;"}, {"invocation": "Print file size and user name with color support for each file in the current directory tree", "cmd": "tree -Csu"}, {"invocation": "Set the 'verbose' shell option causing bash to print shell input lines as they are read", "cmd": "set -v"}, {"invocation": "Print argument \"$1\" \"$number\" times", "cmd": "yes $1 | head -$number"}, {"invocation": "Go to first directory specified in PATH which contains the command 'oracle'", "cmd": "cd $(dirname $(which ls))"}, {"invocation": "Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty", "cmd": "find project -maxdepth 1 -mindepth 1 -regextype posix-egrep ! -iregex  $PATTERN  ! -empty -type d"}, {"invocation": "find all files under the /etc directory and display any IP address patterns in them", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "find all the regular/normal files in the /path folder and delete them", "cmd": "find /path -type f -delete"}, {"invocation": "Create intermediate directories ~/foo/bar/ as required and directories baz, bif, bang", "cmd": "mkdir -p ~/foo/bar/baz ~/foo/bar/bif ~/foo/boo/bang"}, {"invocation": "find files under the current directory called \"foo\" or \"bar\"", "cmd": "find . \\( -name \"foo\" -o -name \"bar\" \\)"}, {"invocation": "Find all files/directories under current directory that were accessed 30 minutes ago", "cmd": "find -amin 30"}, {"invocation": "find all files in the file system which belong to the group users and having the word \"filename\" in their name.", "cmd": "find / -group users -iname \"filename\""}, {"invocation": "List recursively all files and directories in /var/www and pass the result to the `more' pager", "cmd": "find /var/www | more"}, {"invocation": "Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories", "cmd": "find . -type f -exec chmod ug=rw,o= {} \\;"}, {"invocation": "Saves path to the $SCRIPT file in the SCRIPTPATH variable.", "cmd": "set SCRIPTPATH=`dirname \"$SCRIPT\"`"}, {"invocation": "Search the *.code files from the current directory tree for string 'pattern'", "cmd": "find . -name '*.code' -print0 | xargs -0 grep -H 'pattern'"}, {"invocation": "Search for ERROR in all btree*.c files under current directory", "cmd": "grep ERROR $(find . -type f -name 'btree*.c')"}, {"invocation": "search for all regular files in the current directory which have the extension \"c\" or \"asm\"", "cmd": "find . -type f \\( -iname \"*.c\" -or -iname \"*.asm\" \\)"}, {"invocation": "Find all regular files in the current directory tree whose names end with \".DS_Store\" and delete them", "cmd": "find . -type f -name '*.DS_Store' -ls -delete"}, {"invocation": "List all files in the current directory tree larger than 1000 kb", "cmd": "find . -size +1000k"}, {"invocation": "Save number of processors in system to 'NP' variable", "cmd": "NP=`cat /proc/cpuinfo | grep processor | wc -l`"}, {"invocation": "Find all symbolic links under '/some/directory' driectory tree", "cmd": "find /some/directory -type l -print"}, {"invocation": "Find all the Sticky Bit set files in entire file system whose permission are 551", "cmd": "find / -perm 0551"}, {"invocation": "Find all *.txt files/directories under current directory discarding 'Permission denied' errors", "cmd": "find . -name \"*.txt\" -print | grep -v 'Permission denied'"}, {"invocation": "Force create a symbolc link named \"/usr/local/bin/fpt\" to \"/usr/local/bin/findpdftext\"", "cmd": "sudo ln -s -f \"/usr/local/bin/findpdftext\" \"/usr/local/bin/fpt\""}, {"invocation": "Displays the count of of each unique line read from standard input", "cmd": "sort | uniq -c"}, {"invocation": "Delete all broken symbolic links under '/usr/ports/packages' directory tree", "cmd": "find -L /usr/ports/packages -type l -exec rm -- {}\t+"}, {"invocation": "SSH with trusted X11 forwarding into \"user@remoteToRemote_IP\" from SSH connection \"user@remote_IP\"", "cmd": "ssh -XY -t user@remote_IP 'ssh -XY -t user@remoteToRemote_IP'"}, {"invocation": "recursively change owner of the directory testproject and all files into it to user ftpuser", "cmd": "chown ftpuser testproject/ -R"}, {"invocation": "Change all directories under \"./bootstrap/cache/\" to owner \"apache\" and group \"laravel\"", "cmd": "sudo find ./bootstrap/cache/ -type d -exec chown apache:laravel {} \\;"}, {"invocation": "Shuffles strings of text received by 'awk' command on the input.", "cmd": "awk 'BEGIN{srand();} {printf \"%06d %s\\n\", rand()*1000000, $0;}' | sort -n | cut -c8-"}, {"invocation": "Copies file '/boot/config-`uname -r`' to the  '.config', printing info message and prompting before owerwriting files.", "cmd": "cp -vi /boot/config-`uname -r` .config"}, {"invocation": "Create a symbolic link named \".bash_profile\" to \".bashrc\"", "cmd": "ln -s .bashrc .bash_profile"}, {"invocation": "Find all directories under /home/username/public_html/themes and set their permission to 750", "cmd": "find /home/username/public_html/themes -type d -exec chmod 750 {} +"}, {"invocation": "Print comma separated gaps in file \"file\" that contains new line separated ordered numbers", "cmd": "seq $(tail -1 file)|diff - file|grep -Po '.*(?=d)'"}, {"invocation": "count the total number of lines that are present in all the normal/regular files", "cmd": "find . -type f -exec wc -l {} \\; | awk '{total += $1} END{print total}'"}, {"invocation": "Creates temporary folder within a $mnt_dir folder and saves path to it in a 'rsync_src' variable.", "cmd": "rsync_src=`mktemp -d -p $mnt_dir`"}, {"invocation": "Moves file '$2' to the folder where '$1' file is located.", "cmd": "mv \"$2\" \"`dirname $1`\""}, {"invocation": "Change the ownership of all files in the current directory tree from root to www-data", "cmd": "find -user root -exec chown www-data {} \\;"}, {"invocation": "Print the line number of each matching \"<phrase>\" in \"<filename>\"", "cmd": "nl -b a \"<filename>\" | grep \"<phrase>\" | awk '{ print $1 }'"}, {"invocation": "Page through the contents of 'input_file_name' hexdumped with space-separated 2-byte units.", "cmd": "od -xcb input_file_name | less"}, {"invocation": "forcibly create a symbolic link named \"linkname\" to file \"new_destination\"", "cmd": "ln -sf new_destination linkname"}, {"invocation": "Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories", "cmd": "find . -type d -exec chmod ug=rwx,o= {} \\;"}, {"invocation": "Find all files/directories named 'date' under /usr", "cmd": "find /usr -name date"}, {"invocation": "Find all *.html files under current directory", "cmd": "find . -type f -name '*.html'"}, {"invocation": "Show the value of variable \"list\", discarding consecutive duplicates and adding number of occurrences at the beginning of each line.", "cmd": "echo \"$list\" | uniq -c"}, {"invocation": "Find all the files in file system which are accessed in last 1 hour", "cmd": "find / -amin -60"}, {"invocation": "Move all files and directories in the current directory to \"somewhere/\"", "cmd": "mv `ls` somewhere/"}, {"invocation": "Print characters in variable \"$a\" that exist in variable \"$b\"", "cmd": "echo \"$(comm -12 <(echo \"$a\" | fold -w1 | sort | uniq) <(echo \"$b\" | fold -w1 | sort | uniq) | tr -d '\\n')\""}, {"invocation": "Find all 100MB files in file system and delete them using rm command", "cmd": "find / -size +100M -exec rm -rf {} \\;"}, {"invocation": "Archive \"/path/to/files\" to \"user@targethost:/path\"", "cmd": "rsync -av /path/to/files user@targethost:/path"}, {"invocation": "find all the files which end with \".deb\" and display their base name (strip the extension)", "cmd": "find . -name '*.deb' | xargs -n1 basename"}, {"invocation": "Search the current directory tree for *bash* files", "cmd": "find . -name \"*bash*\""}, {"invocation": "display all the regular files in the current folder and do not search in sub folders", "cmd": "find \"$dir\" -maxdepth 1 -type f"}, {"invocation": "find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them", "cmd": "find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}, {"invocation": "Move all files from the `sourceDir' directory to the `destDir' directory", "cmd": "find sourceDir -mindepth 1 -maxdepth 1 -exec mv --target-directory=destDir '{}' +"}, {"invocation": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script", "cmd": "find $1 -name \"$2\" | grep -v '/proc' | xargs grep -Hn \"$3\" {} \\;"}, {"invocation": "display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec)", "cmd": "find . -name \"*.txt\" -exec ls -la {} +"}, {"invocation": "delete all the files in the file system which belong to the user edwarda", "cmd": "find / -user edwarda -exec rm \"{}\" \\;"}, {"invocation": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/\"", "cmd": "chown amzadm.root -R /usr/lib/python2.6/site-packages/"}, {"invocation": "Print the names and sizes of regular files residing in the \"dir\" directory tree", "cmd": "find dir -type f -printf \"f %s %p\\n\""}, {"invocation": "Find all files named `file1' starting from /", "cmd": "find / -name file1"}, {"invocation": "List all regular files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -type f -mmin -60 | xargs -r ls -l"}, {"invocation": "Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments", "cmd": "find . -type f -iname '*'\"${1:-}\"'*' -exec ${2:-file} {} \\;"}, {"invocation": "displays all the files in the current folder", "cmd": "find ."}, {"invocation": "Find and remove multiple *.txt files", "cmd": "find . -type f -name \"*.txt\" -exec rm -f {} \\;"}, {"invocation": "Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories", "cmd": "find . -type d -exec chmod u=rwx,g=rx,o=x {} \\;"}, {"invocation": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them", "cmd": "find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\\n' | sort | uniq | tr -d '\\n'"}, {"invocation": "display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2", "cmd": "find . -type d -regextype posix-egrep -regex '\\./processor[0-9]*/10\\.(1|2)'"}, {"invocation": "find all the files in the current directory that have the word \"lib\" in them", "cmd": "find . -wholename '/lib*'"}, {"invocation": "List first 5 files named 'something' that are found under current directory", "cmd": "find . -name something -print | head -n 5"}, {"invocation": "delete all the broken symbolic links from the folder /usr/ports/packages", "cmd": "find -L /usr/ports/packages -type l -exec rm -- {} +"}, {"invocation": "Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter", "cmd": "find /mnt/naspath \\! \\(-name .snapshot -prune\\) -type f -mtime 0 -print0"}, {"invocation": "Find all files under current directory and print only the filenames (not paths)", "cmd": "find . -type f -execdir echo '{}' ';'"}, {"invocation": "display all files in the current folder along with their last access timestamps", "cmd": "find . -printf \"%h/%f : dernier acc\u00e8s le %Ac\\n\""}, {"invocation": "Find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter", "cmd": "find /basedir/ -iname '*company*' -print0"}, {"invocation": "Prints first found folder that contains 'ssh' file and has 'bin' in path.", "cmd": "dirname `find / -name ssh | grep bin | head -1`"}, {"invocation": "Create symbolic links in current directory for all files located in \"dir\" directory and have filename extension \"jpg\"", "cmd": "find dir -name '*.jpg' -exec ln -s \"{}\" \\;"}, {"invocation": "Change file permissions on all regular files within a directory", "cmd": "find /path/to/directory -type f -exec chmod 644 {} +"}, {"invocation": "Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05", "cmd": "find . -type f -name \"*\" -newermt 2013-12-04 ! -newermt 2013-12-05 | xargs -I {} tar -czvf files.tar.gz {}"}, {"invocation": "Prints strings with text \"texthere\" in all files recursively in a current folder.", "cmd": "grep -r \"texthere\" ."}, {"invocation": "display all the files in the current folder which have are bigger than 1KB", "cmd": "find . -size +1024 -print"}, {"invocation": "Find all 777 permission files in entire file system and set permissions to 644", "cmd": "find / -type f -perm 0777 -print -exec chmod 644 {} \\;"}, {"invocation": "Search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.", "cmd": "find /mydir | xargs -I{} basename {}"}, {"invocation": "Finds IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep 'inet addr:' | awk '{print $2}' | awk -F ':' '{print $2}'"}, {"invocation": "find all the png files in current folder which are present in the pattern list file \"search.txt\"", "cmd": "find . -name '*.png' | grep -f <(sed s/^/[0-9]_[0-9]_[0-9]_/ search.txt)"}, {"invocation": "display long listing of all the text files in the current folder", "cmd": "find . -name \"*.txt\" -exec ls -la {} \\;"}, {"invocation": "display files ending with \".ext\" in current folder excluding those that are present in the list list.txt", "cmd": "find -type f -name '*.ext' | grep -vFf list.txt"}, {"invocation": "Sets shell options 'globstar' and 'nullglob'.", "cmd": "shopt -s globstar nullglob"}, {"invocation": "find all php files in the folder  /var/www/", "cmd": "find /var/www/ -type f -iname \"*.php\" -print"}, {"invocation": "Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.", "cmd": "find /usr -name \"Chapter*\" -type f"}, {"invocation": "display the change owner command for all the regular files in the current folder.", "cmd": "find . -type f -exec echo chown username {} \\;"}, {"invocation": "Find all SGID files in entire file system", "cmd": "find / -perm +2000"}, {"invocation": "Simulate a full login", "cmd": "su -"}, {"invocation": "Find PHP files with abstract classes", "cmd": "find . -type f -name \"*.php\" -exec grep --with-filename -c \"^abstract class \" {} \\; | grep \":[^0]\""}, {"invocation": "change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html", "cmd": "find /home/nobody/public_html -type f -exec chmod 644 {} \\;"}, {"invocation": "Print 10 \"#\" characters in a row", "cmd": "yes '#' | head -n 10 | tr -d '\\n'"}, {"invocation": "display all the trace files (\".trc\") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours", "cmd": "find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7"}, {"invocation": "create symbolic links in current directory to all files located in directory \"/original\" and have filename extension \".processname\"", "cmd": "find /original -name '*.processme' -exec echo ln -s '{}' . \\;"}, {"invocation": "display all the files in current folder which have been changed in the last 24 hours", "cmd": "find . -ctime -1 -print"}, {"invocation": "Pipe content of 'somedata.txt' file to the input of command \"$outfile\"", "cmd": "cat somedata.txt | \"$outfile\""}, {"invocation": "Repeat \"image.png\" 10 times on a single line", "cmd": "echo $(yes image.png | head -n10)"}, {"invocation": "Find files in the current directory tree which are larger than 5 MB in size", "cmd": "find . -size +5000k -type f"}, {"invocation": "bind word \"foobar\" to key code \"\\e[24~\"", "cmd": "bind '\"\\e[24~\":\"foobar\"'"}, {"invocation": "Remove all *.swp files under current directory", "cmd": "find . -name \"*.swp\"|xargs rm"}, {"invocation": "display list of all the files in the current folder which are empty.", "cmd": "find . -size 0 -ls"}, {"invocation": "Search for directory foo ignoring case", "cmd": "find . -iname foo -type d"}, {"invocation": "Print lines in the sorted contents of \"second.txt\" that are not in the sorted contents of \"first.txt\"", "cmd": "comm -13 <(sort first.txt) <(sort second.txt)"}, {"invocation": "Locate file \"file1\"", "cmd": "find -name file1"}, {"invocation": "Search the current directory tree for symbolic links named \"link1\"", "cmd": "find . -type l -name link1"}, {"invocation": "List all regular files in the current directory tree", "cmd": "find . -type f -print0 | xargs -0 ls -l"}, {"invocation": "search for all Scala files under the current directory that contain the string null", "cmd": "find . -type f -name \"*.scala\" -exec grep -B5 -A10 'null' {} \\;"}, {"invocation": "List all files in the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 |xargs ls -l"}, {"invocation": "display all the text and pdf files in the current folder", "cmd": "find . -regex \".*\\(\\.txt\\|\\.pdf\\)$\""}, {"invocation": "find all the files in the entire filesystem which belong to the group root and display the ten files.", "cmd": "find / -group root | head"}, {"invocation": "Find all $1 files/directories under current directory and enter into the parent directory of the first one found", "cmd": "cd $(dirname $(find . -name $1 | sed 1q))"}, {"invocation": "Replace spaces in file names with underscores for all files in the current directory tree", "cmd": "find -name \"* *\" -type f | rename 's/ /_/g'"}, {"invocation": "Append the contents of \".cwdhist\" file to the current in-memory history list", "cmd": "history -r .cwdhist"}, {"invocation": "Print sorted list of strings from 'ip_addresses' file, with number of occurrences of each string.", "cmd": "sort ip_addresses | uniq -c"}, {"invocation": "find file which case-insensitive name is foo in current directory.", "cmd": "find . -iname foo"}, {"invocation": "Finds recursively all files having extension .c, .h in '/path/' that contain 'pattern', and prints matched strings with string number and file name.", "cmd": "grep --include=\\*.{c,h} -rnw '/path/to/somewhere/' -e \"pattern\""}, {"invocation": "Recursively copy \"original_dir\" to \"copy_dir\" preserving file/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files.", "cmd": "rsync -Prt --size-only original_dir copy_dir"}, {"invocation": "Copy the entire \"/lib\" and \"/usr\" directory including symlinks from \"pi@192.168.1.PI\" to \"$HOME/raspberrypi/rootfs\" and delete files after the transfer", "cmd": "rsync -rl --delete-after --safe-links pi@192.168.1.PI:/{lib,usr} $HOME/raspberrypi/rootfs"}, {"invocation": "Prints the Nth line of output from 'ls -1'", "cmd": "ls -1 | tail -n +N | head -n1"}, {"invocation": "Print full path of command \"python2.7\"", "cmd": "which python2.7"}, {"invocation": "Print the calendar for February 1956", "cmd": "cal 02 1956"}, {"invocation": "find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes", "cmd": "find . \\( -iname \"*photo*\" -or -name \"*picture*\" \\) -and ! -type d -and -mmin -30"}, {"invocation": "split file input.txt into pieces per 1 line named output.NNNNN", "cmd": "split --lines=1 --suffix-length=5 input.txt output."}, {"invocation": "Set permissions to 700 for every subdirectory of the current directory", "cmd": "find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700"}, {"invocation": "Records the number of occurences of 'needle' in the array 'haystack' into the variable 'inarray'", "cmd": "inarray=$(echo ${haystack[@]} | grep -o \"needle\" | wc -w)"}, {"invocation": "Finds recursively and following symlinks from root folder all files that contain \"text-to-find-here\" and prints files names.", "cmd": "grep -Ril \"text-to-find-here\" /"}, {"invocation": "Execute `find -type f | egrep -i \"(jpg|bmp|png|gif)$\"` every 300 seconds and display without title", "cmd": "watch -n 300 -t `find -type f | egrep -i \"(jpg|bmp|png|gif)$\"`"}, {"invocation": "find all files in the home folder which have been modified between 72 and 96 hours before", "cmd": "find ~ -mtime 2 -mtime -4 -daystart"}, {"invocation": "Find all files/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep", "cmd": "find . -mindepth 1 -name 'onlyme*'"}, {"invocation": "find all text files in current folder and delete all the files that have the word foo in their name", "cmd": "find . -name \".txt\" | grep \"foo\" | xargs rm"}, {"invocation": "Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.", "cmd": "find / -user olduser  -type f  -exec chown newuser {} \\"}, {"invocation": "Find all PHP files under current directory that contain only one line", "cmd": "find . -type f -name '*.php' -exec wc -l {} \\; | egrep \"^\\s*1\\s\""}, {"invocation": "Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match", "cmd": "find project -name '*.php' -type f -print0 | xargs -0 grep -l ireg"}, {"invocation": "Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents", "cmd": "find . -not -name '*.png' -o -type f -print | xargs grep -icl \"foo=\""}, {"invocation": "Find all the *.c files at any level of directory Programming under any 'src' directory", "cmd": "find ~/Programming -path '*/src/*.c'"}, {"invocation": "Display source and mount point of the file system containing /some/path.", "cmd": "df '/some/directory' | awk '{print $1, $6}'"}, {"invocation": "Remove the last 3 characters from 987654321, keeping only 987654", "cmd": "echo 987654321 | rev | cut -c 4- | rev"}, {"invocation": "Finds users with X session in system and puts the result in USERS variable.", "cmd": "USERS=$(w | awk '/\\/X/ {print $1}')"}, {"invocation": "Recursively copy \"dir_b\" to \"dir_a\" and delete any new files in \"dir_a\"", "cmd": "rsync -u -r --delete dir_b dir_a"}, {"invocation": "search for php files  in current directory and search for a word in all these files", "cmd": "find -name '*.php' -exec grep -iq \"fincken\" {} \\; -exec grep -iq \"TODO\" {} \\; -print"}, {"invocation": "Find .java files in the current directory tree that contain 'TODO', and print their names", "cmd": "find . -name \"*.java\" -exec grep -Hin TODO {} + | basename `cut -d \":\" -f 1`"}, {"invocation": "Copies all files under the current directory like any-cased '*foobar*' to the '~/foo/bar' directory.", "cmd": "find . -iname \"*foobar*\" -exec cp \"{}\" ~/foo/bar \\;"}, {"invocation": "Join comma-separated information in 4 files", "cmd": "join -t, <(sort test.1) <(sort test.2) | join -t, - <(sort test.3) | join -t, - <(sort test.4)"}, {"invocation": "Recursively change the owner and group of \"subdir2\" to \"user2\"", "cmd": "chown user2:user2 -R subdir2"}, {"invocation": "Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.", "cmd": "awk 'NR==16224, NR==16482-1; NR==16482 {print; exit}' file"}, {"invocation": "Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'", "cmd": "MOD_DATE1=$(date -d \"$MOD_DATE\" +%s)"}, {"invocation": "Rename \"/usr/bin/php\" to \"/usr/bin/~php\"", "cmd": "sudo mv /usr/bin/php /usr/bin/~php"}, {"invocation": "List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory", "cmd": "find /home/jassi/ -name \"aliencoders.[0-9]+\" | xargs -r ls -lrt | awk '{print $9}'"}, {"invocation": "change cgi files to mode 755 under htdocs or cgi-bin directories", "cmd": "find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}, {"invocation": "Find all xx* files/directories excluding 'xxx' files/directories under your home directory", "cmd": "find ~ -name 'xx*' -and -not -name 'xxx'"}, {"invocation": "Format output of 'file' content to columns with wide not less than 80 pixels", "cmd": "cat file | column -c 80"}, {"invocation": "Calculate md5 checksum of $line and save to variable 'md5'", "cmd": "md5=$(echo \"$line\"|md5sum)"}, {"invocation": "Move all files listed in $i file to dir.$count directory", "cmd": "cat $i | xargs mv -t dir.$count"}, {"invocation": "Stores system load average number in the 'proc_load_average' variable.", "cmd": "proc_load_average=`w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.'`"}, {"invocation": "Search for the extended regex expanded by\"$MONTH\\/$YEAR.*GET.*ad=$ADVERTISER HTTP\\/1\" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile", "cmd": "find /var/log/apache2/access*.gz -type f -newer ./tmpoldfile ! -newer ./tmpnewfile \\ | xargs zcat | grep -E \"$MONTH\\/$YEAR.*GET.*ad=$ADVERTISER HTTP\\/1\" -c"}, {"invocation": "Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.", "cmd": "find foo -type f ! -name '*Music*' -exec cp {} bar \\;"}, {"invocation": "Find regular files modified within the last 7 days", "cmd": "find . -mtime -7 -type f"}, {"invocation": "Print \"new.txt\" with line numbers prepended and line 2 or any line containing \"2\" deleted", "cmd": "cat new.txt  | nl | sed  \"/2/d\""}, {"invocation": "Recursively change the owner and group of \"~/.ssh/\" to \"dev_user\"", "cmd": "chown \"dev_user\".\"dev_user\" -R ~/.ssh/"}, {"invocation": "List all regular files in and below the home directory that were modified more than 5 years ago", "cmd": "find ~ -type f -mtime +1825 |xargs -r ls -l"}, {"invocation": "find all files in the current folder which have not been modified today and whose file name is of length 1", "cmd": "find . -name \\? -mtime +0"}, {"invocation": "find all the files which have size 0 bytes in temp folder", "cmd": "find /tmp -type f -empty"}, {"invocation": "Print the list of non-hidden directories in the current directory", "cmd": "find -type d -maxdepth 1 ! -name \".*\" -printf \"%f\\n\""}, {"invocation": "Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days", "cmd": "find \"$DIR_TO_CLEAN\" -mtime +$DAYS_TO_SAVE -exec rm {} \\;"}, {"invocation": "tar all files in the current folder and ask for user confirmation before creating the tar ball", "cmd": "find . -ok tar rvf backup {} \\;"}, {"invocation": "find all files in the file system which are modified after the file /tmp/checkpoint", "cmd": "find / -newer /tmp/checkpoint"}, {"invocation": "find the file arrow.jpg in the entire file system", "cmd": "find / -name arrow.jpg"}, {"invocation": "Find all .less files in the current directory tree", "cmd": "find . -name *.less"}, {"invocation": "find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder", "cmd": "find . -name \"*.txt\" -type f -daystart -mtime -4 -mtime +0|xargs -i cp {} /home/ozuma/tmp"}, {"invocation": "Write \"Australia/Adelaide\" to standard output and to \"/etc/timezone\"", "cmd": "echo \"Australia/Adelaide\" | sudo tee /etc/timezone"}, {"invocation": "Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"0\" [1]=\"0\" [2]=\"1\" [3]=\"0\" [4]=\"1\")'", "cmd": "true | true | false | true | false"}, {"invocation": "Count all files under \"/DIR\"", "cmd": "find /DIR -type f -print0 | tr -dc '\\0' | wc -c"}, {"invocation": "Save the absolute path of \"$path\" to variable \"fullpath\"", "cmd": "fullpath=`readlink -f \"$path\"`"}, {"invocation": "Find all 400 permission files under /data directory with null character as the delimiter", "cmd": "find /data -type f -perm 400 -print0"}, {"invocation": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories", "cmd": "find . -name foo.mp4 | sed 's|/[^/]*$||'"}, {"invocation": "Rename file ~/junk/cart1 to ~/junk/A", "cmd": "find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \\;"}, {"invocation": "Search the \"your/dir\" directory for empty subdirectories", "cmd": "find your/dir -mindepth 1 -prune -empty"}, {"invocation": "Find the password file between sub-directory level 2 and 4", "cmd": "find -mindepth 3 -maxdepth 5 -name passwd"}, {"invocation": "Find all regular files under $d directory tree and change their permissions to 777", "cmd": "find \"$d/\" -type f -print0 | xargs -0 chmod 777"}, {"invocation": "display all directories in the folder Symfony", "cmd": "find Symfony -type d"}, {"invocation": "Report total disk usage info on root file system, printing all sizes as power of 1000", "cmd": "df -H --total /"}, {"invocation": "Report file systems disk usage in kilobytes.", "cmd": "df -k"}, {"invocation": "Sends current job to the background.", "cmd": "bg"}, {"invocation": "Save the FQDN host name of the system in variable \"hnd\"", "cmd": "hnd=$(hostname -f)"}, {"invocation": "display a long listing of all the xls or csv files in the entire file system", "cmd": "find / -regex \".*\\.\\(xls\\|csv\\)\""}, {"invocation": "Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree", "cmd": "find -name file -ok echo '-ok is an action so an implicit -print is not applied' \\;"}, {"invocation": "Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively", "cmd": "grep -rl \"needle text\" my_folder | tr '\\n' '\\0' | xargs -r -0 file | grep -e ':[^:]*text[^:]*$' | grep -v -e 'executable'"}, {"invocation": "Print every 3 characters of standard input as a line", "cmd": "fold -w3"}, {"invocation": "Find all directories under minimum 2 levels down the mydir directory", "cmd": "find mydir -mindepth 2 -type d"}, {"invocation": "create directory tata", "cmd": "mkdir tata"}, {"invocation": "find all the pdf files in the current directory and display only the directory name in which the pdf file is present", "cmd": "find . -type f -name '*.pdf' |sed 's#\\(.*\\)/.*#\\1#' |sort -u"}, {"invocation": "Print the contents of \"Little_Commas.TXT\"", "cmd": "cat Little_Commas.TXT"}, {"invocation": "Find all 400 permission files under /data directory and print 'Modifying ' appended with file path for each of them", "cmd": "find /data -type f -perm 400 -exec echo Modifying {} \\;"}, {"invocation": "Find all regular files with space in their names under current directory and rename them by replacing all spaces with _", "cmd": "find -name \"* *\" -type f | rename 's/ /_/g'"}, {"invocation": "Remove \"-\" from the contents of \"/proc/sys/kernel/random/uuid\" and save output to variable \"comment\"", "cmd": "comment=$(cat /proc/sys/kernel/random/uuid | sed 's/\\-//g')"}, {"invocation": "Delete all files with '.old' extension under current directory tree", "cmd": "find . -name \u201c*.old\u201d -exec rm {} \\;"}, {"invocation": "Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree", "cmd": "find . -name \"*.andnav\" | rename \"s/\\.andnav$/.tile/\""}, {"invocation": "display all the files on the current folder excluding those that are present in the folder \"./src/emacs\"", "cmd": "find . -path ./src/emacs -prune -o -print"}, {"invocation": "Search /etc for files modified within the last 10 minutes", "cmd": "find /etc -type f -mmin -10"}, {"invocation": "find all the directories in the file system which have read, write and execute to all the users", "cmd": "find / \\( -type d -a -perm -777 \\) -print"}, {"invocation": "keep only read access to all the files in a directory.", "cmd": "find /path/to/dir/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644"}, {"invocation": "Recursively unzip files to stdout in \"/some/dir/here\" and search for \"blah\"", "cmd": "zcat -r /some/dir/here | grep \"blah\""}, {"invocation": "Remove all files under /home/user/Maildir/.SPAM/cur", "cmd": "find /home/user/Maildir/.SPAM/cur -type f -exec rm -f '{}' '+'"}, {"invocation": "Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them", "cmd": "find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}, {"invocation": "Search my_folder recursively for text files containing \"needle text\"", "cmd": "find my_folder -type f -exec grep -l \"needle text\" {} \\; -exec file {} \\; | grep text"}, {"invocation": "Print file system disk space usage with a grand total", "cmd": "df --total"}, {"invocation": "Make directory \"/etc/cron.minute\"", "cmd": "mkdir /etc/cron.minute"}, {"invocation": "Find files with 002 permission in entire file system with the null character as the delimiter", "cmd": "find / -type f -perm -002 -print0"}, {"invocation": "Set permissions for directories in `foldername' and its subdirectories to 755", "cmd": "find foldername -type d -exec chmod 755 {} \";\""}, {"invocation": "Search the current directory tree for all files except SVN ones", "cmd": "find . | grep -v \\.svn"}, {"invocation": "Search the current directory tree for regular files that were changed $FTIME days ago", "cmd": "find . -type f -ctime $FTIME"}, {"invocation": "split content of the file inputfile except lines started with \"^t:\" into pieces per 200 lines", "cmd": "cat inputfile | grep \"^t\\:\" | split -l 200"}, {"invocation": "Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x", "cmd": "find . -type d -exec chmod u=rwx,g=rx,o=x {} \\;"}, {"invocation": "Convert \";\" separated list \"luke;yoda;leila\" to new line separated list", "cmd": "echo \"luke;yoda;leila\" | tr \";\" \"\\n\""}, {"invocation": "Find all the files in entire file system  which are accessed 50 days back", "cmd": "find / -atime 50"}, {"invocation": "Print only common strings in sorted content of files 'file1' and 'file2'", "cmd": "comm -1 -2 <(sort file1) <(sort file2)"}, {"invocation": "Find all '*~' files under current directory", "cmd": "find ./ -name '*~'"}, {"invocation": "display all files in the current folder which end with extension \"myfile\" followed by two digits", "cmd": "find . -regex '.*myfile[0-9][0-9]?'"}, {"invocation": "Set up a local SSH tunnel from port 80 to port 3000", "cmd": "ssh $USERNAME@localhost -L 80:localhost:3000 -N"}, {"invocation": "Display differences between directories dir1 and dir2.", "cmd": "diff -r dir1 dir2"}, {"invocation": "Find all regular files with 755 permission under current directory tree and change their permission to 644", "cmd": "find . -type f -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "find all the text files in current folder and move all these to another folder appending \".bar\" at the end of these files", "cmd": "find . -name \"*.txt\" | xargs -I '{}' mv '{}' /foo/'{}'.bar"}, {"invocation": "display a long listing of all the files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime -1 -ls"}, {"invocation": "List files smaller than 9kB residing in the current directory and below", "cmd": "find . -size -9k"}, {"invocation": "find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)", "cmd": "find . -type f -daystart -mtime 1"}, {"invocation": "Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory", "cmd": "find \"$musicdir\" -type f -print | egrep -i '\\.(mp3|aif*|m4p|wav|flac)$'"}, {"invocation": "Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename 's/ /_/g' \"{}\" \\;"}, {"invocation": "find all the text files in the current folder and display the results pagewise", "cmd": "find . -name \"*.txt\" -print | less"}, {"invocation": "Create intermediate directories \"tmp\" as required and directories real_dir1 and real_dir2", "cmd": "mkdir -p tmp/real_dir1 tmp/real_dir2"}, {"invocation": "Search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes", "cmd": "find /home/pankaj -maxdepth 1 -cmin -5 -type f"}, {"invocation": "find all the files which have been changed after the modification of a file.", "cmd": "find -cnewer /etc/fstab"}, {"invocation": "Find all directories in maximum 2 levels down the /tmp/test directory", "cmd": "find /tmp/test/ -maxdepth 2 -mindepth 1 -type d"}, {"invocation": "Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree", "cmd": "find -O3 \"$save_path\" -depth -mindepth 1 -name 'sess_*' -ignore_readdir_race -type f -cmin \"+$gc_maxlifetime\" -delete"}, {"invocation": "Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.", "cmd": "find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm '{}' +"}, {"invocation": "find all directories with the name root in the entire file system.", "cmd": "find / -type d -name root"}, {"invocation": "display all the regular/normal files in current folder which have been modified exactly 60 minutes before", "cmd": "find . -mmin 60 -type f"}, {"invocation": "Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found", "cmd": "find /tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'"}, {"invocation": "Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days", "cmd": "find /var/adm -mtime +3 -print"}, {"invocation": "Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir", "cmd": "find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.", "cmd": "comm -23 <(ls) <(ls *Music*)"}, {"invocation": "Type unique list of all directories contiaining each file named 'myfile' under the /home directory", "cmd": "find /home/ -name 'myfile' -type f | rev | cut -d \"/\" -f2- | rev | sort -u"}, {"invocation": "Go to directory named \"~\" (not home directory)", "cmd": "cd `echo -n \"~\"`"}, {"invocation": "Set variable 'path' to name of current directory (without the containing directories).", "cmd": "path=$(basename $(pwd))"}, {"invocation": "Display file.txt with lines numbered, and page interactively through the result.", "cmd": "cat -n file.txt | less"}, {"invocation": "List the unique parent directories of all .class files found in the entire filesystem", "cmd": "find / -name *.class -printf '%h\\n' | sort --unique"}, {"invocation": "Archive \"./htmlguide\" to \"~/src/\" with resolved symbolic links and delete any extraneous files from \"~/src/\" not found in \"./htmlguide\"", "cmd": "rsync -av --copy-dirlinks --delete ../htmlguide ~/src/"}, {"invocation": "Search for 'invalidTemplateName' in all regular files in directories/files taken from the glob pattern './online_admin/*/UTF-8/*' and show the matched lines with the filenames", "cmd": "find ./online_admin/*/UTF-8/* -type f -exec grep -H \"invalidTemplateName\" {} \\;"}, {"invocation": "Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).", "cmd": "find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}, {"invocation": "find all the normal/regular files in the folder \"pathfolder\" which are 2 levels deep, excluding all hidden files and display the count", "cmd": "find pathfolder -mindepth 2 -maxdepth 2 -type f -not -path '*/\\.*' | wc -l"}, {"invocation": "Count the number of lines in every regular .rb file in the current directory tree", "cmd": "find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;"}, {"invocation": "Search the current directory recursively for regular files with the read permission set for everybody", "cmd": "find -type f ! -perm -444"}, {"invocation": "Go to directory named \"~\" (not home directory)", "cmd": "cd \"~\""}, {"invocation": "find all the word press configuration php files in the folder /var/www", "cmd": "find /var/www/ -name wp-config.php"}, {"invocation": "Find all *.* files under current directory", "cmd": "find . -type f -a -name '*.*'"}, {"invocation": "Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.", "cmd": "find . -depth -name .svn -exec rm -fr {} \\;"}, {"invocation": "Remount \"/dev/stl12\" on \"/system\" as read only", "cmd": "mount -o ro,remount /dev/stl12 /system"}, {"invocation": "split all files in directory \"posns \" into pieces per 10000 lines", "cmd": "find posns -type f -exec split -l 10000 {} \\;"}, {"invocation": "Add line numbers to each non-blank line in \"file\" starting with number 1000001", "cmd": "nl -v1000001 file"}, {"invocation": "display all the \"C\" files in the current folder", "cmd": "find . -name \"*.c\""}, {"invocation": "Creates temporary folder, and saves current folder path   joined with created temporary folder path in 'tdir' variable.", "cmd": "tdir=\"$(pwd)/$(mktemp -d)\""}, {"invocation": "search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them", "cmd": "find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"}, {"invocation": "search all the \".sh\" files in the /usr folder and follow the symbolic links to their original file", "cmd": "find /usr -follow -name '*.sh'"}, {"invocation": "Print the average round trip time of 5 pings to \"google.com\"", "cmd": "ping -q -c 5 google.com | tail -n 1 | cut -f 5 -d '/'"}, {"invocation": "Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.", "cmd": "find ~/ -newer alldata.tar \t-exec tar uvf alldata.tar {} \\;"}, {"invocation": "Print nothing because B.txt is compared with itself.", "cmd": "comm -2 -3 <(sort -n B.txt) <(sort -n B.txt)"}, {"invocation": "List the largest file in long list format of all the files under the current directory", "cmd": "find . -type f -ls | sort -nrk7 | head -1 #unformatted"}, {"invocation": "find all the files in the file system which have read permission to the user and display the ten files", "cmd": "find / -perm /u=r | head"}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | awk '/inet addr/{sub(\"addr:\",\"\"); print $2}'"}, {"invocation": "Find files that were modified second last week and archive them", "cmd": "find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date \u2018+%d%m%Y\u2019_archive.tar`"}, {"invocation": "Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*'", "cmd": "find /tmp/test/* -daystart -mtime +1"}, {"invocation": "find all the regular files in the current directory which do not have a read permission", "cmd": "find -type f ! -perm -444"}, {"invocation": "find all the files in the current folder that end with the word bar", "cmd": "find -name *bar"}, {"invocation": "Find all regular files in the current directory tree and print a command to move them to the current directory", "cmd": "find . -type f -exec echo mv -t . {} +"}, {"invocation": "Adjust the timestamp of file $filename by subtracting 2 hours from it", "cmd": "touch -d \"$(date -r \"$filename\") - 2 hours\" \"$filename\""}, {"invocation": "Return 0 if at least one \"abc\" file in the current directory tree contains text \"xyz\"", "cmd": "find . -name 'abc' -type f -exec grep -q xyz {} +"}, {"invocation": "Move all files from the `sourceDir' directory tree to the `destDir' directory", "cmd": "find sourceDir -mindepth 1 -exec mv \"{}\" --target-directory=destDir \\;"}, {"invocation": "Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension \".mbox\" to all and create directories named 'Messages' inside them", "cmd": "find /path/to/folders/* -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox/Messages \\;"}, {"invocation": "Count all directories under current directory", "cmd": "find . -type d -exec ls -dlrt {} \\; | wc --lines"}, {"invocation": "Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree", "cmd": "find $DIR -type f -mtime +60w -exec rm {} \\;"}, {"invocation": "SSH into \"myhost.com\" as user \"myname\" with a check every 60 seconds that the server is still alive", "cmd": "ssh -o ServerAliveInterval=60 myname@myhost.com"}, {"invocation": "Represent the current time as seconds since epoch and save it to variable 'TODAY'", "cmd": "TODAY=$(date  -d \"$(date +%F)\" +%s)"}, {"invocation": "Find all regular files named 'Chapter1' under current directory tree", "cmd": "find . -name Chapter1 -type f -print"}, {"invocation": "Convert \"595a\" into characters and then print the hexadecimal and printable characters of each byte", "cmd": "echo 595a | awk -niord '$0=chr(\"0x\"RT)' RS=.. ORS= | od -tx1c"}, {"invocation": "Replace 'company' with 'newcompany' in all files under current directory", "cmd": "find ./ -type f -exec sed -i 's/company/newcompany/' {} \\;"}, {"invocation": "Removes files 'junk1', 'junk2', 'junk3'.", "cmd": "rm junk1 junk2 junk3"}, {"invocation": "Search for 'pattern' in file 'file' and print the matched lines by separating them with spaces instead of newlines", "cmd": "grep pattern file | tr '\\n' ' '"}, {"invocation": "Prints process tree of the current command process.", "cmd": "pstree -p $$"}, {"invocation": "Display the biggest file sizes only", "cmd": "find -type f -exec du -Sh {} + | sort -rh | head -n 5"}, {"invocation": "Change directory to the download directory specified in the current user's user-dirs.dirs file", "cmd": "cd \"$(grep DOWNLOAD $HOME/.config/user-dirs.dirs | cut -f 2 -d \"=\" | tr \"\\\"\" \"\\n\")\""}, {"invocation": "Find files that are 0 bytes in size in the current directory and remove them", "cmd": "find . -maxdepth 1 -size 0c -exec rm {} \\;"}, {"invocation": "Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers", "cmd": "find ./ -type f -exec grep -Hn \"Text To Find\" {} \\;"}, {"invocation": "replace \"exp_to_find_for_replacement\" with \"exp_to_replace\" for all the files in the current folder", "cmd": "find -name \u2018*exp_to_find_in_folders*\u2019 -exec rename \u201cs/exp_to_find_for_replacement/exp_to_replace/\u201d {} \\;"}, {"invocation": "Find all files/directories named '\u0438\u043c\u044f_\u0444\u0430\u0439\u043b\u0430' in the entire filesystem", "cmd": "find / -name \"\u0438\u043c\u044f_\u0444\u0430\u0439\u043b\u0430\""}, {"invocation": "Append the contents of \"file.txt\" to the current in-memory history list", "cmd": "history -r file.txt"}, {"invocation": "Print a random number from 2000 to 65000", "cmd": "seq 2000 65000 | sort -R | head -n 1"}, {"invocation": "find all regex  \".*/[a-f0-9\\-]\\{36\\}\\.jpg\" files", "cmd": "find . -regextype sed -regex \".*/[a-f0-9\\-]\\{36\\}\\.jpg\""}, {"invocation": "Remove the \"^M\" characters from all *.ext files under /home directory", "cmd": "find /home -type f -name \"*.ext\" -exec sed -i -e 's/^M$//' {} \\;"}, {"invocation": "Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths", "cmd": "find \"$1\" -path \"*/.*\" -prune -o \\( -type f -print0 \\)"}, {"invocation": "find the depth of all the files in current folder and display the depth and file name", "cmd": "find folder1/ -depth -type f -printf \"%d\\t%p\\n\""}, {"invocation": "Run an awk program on every TXT file found in the current directory tree", "cmd": "find . -name \"*.txt\" -print -exec awk '$9 != \"\" && n < 10 {print; n++}' {} \\;"}, {"invocation": "Resolve symbolic link of file \"/foo/bar/baz\"", "cmd": "readlink -e /foo/bar/baz"}, {"invocation": "display all files in the current folder which do not match the regular expression", "cmd": "find . -not -regex \".*test.*\""}, {"invocation": "Add prefix like number and \"^M${LOGFILE}> \" to every non-blank line received on standard input", "cmd": "nl -s\"^M${LOGFILE}>  \""}, {"invocation": "Find all files/directories that contain 'target' (case insensitive) in their names under current directory no-recursively", "cmd": "find -maxdepth 1 -iname \"*target*\""}, {"invocation": "Print the mount point of the last mounted drive", "cmd": "mount | tail -1 | sed -e \"s/^[^/]*\\(.*\\) type .*$/\\1/g\""}, {"invocation": "Archive \"/path/to/copy\" to \"/path/to/local/storage\" on host \"host.remoted.from\" as user \"user\" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission", "cmd": "rsync -chavzP --stats /path/to/copy user@host.remoted.from:/path/to/local/storage"}, {"invocation": "display all the .sh scripts and perl files in the current folder", "cmd": "find . -type f \\( -iname \"*.sh\" -or -iname \"*.pl\" \\)"}, {"invocation": "Delete files with inode number 782263 under current directory", "cmd": "find . -inum 782263 -exec rm -i {} \\;"}, {"invocation": "Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION}", "cmd": "find ${INPUT_LOCATION}/ -name \"*.pdf.marker\" | xargs -I file mv file $(basename file .marker) ${OUTPUT_LOCATION}/."}, {"invocation": "Print the real path of \"$F\" where each symbolic link component must exist", "cmd": "echo \"$(dirname $(readlink -e $F))/$(basename $F)\""}, {"invocation": "Delete files older than 31 days", "cmd": "find ./ -mtime +31 -delete"}, {"invocation": "Forward port 16186 on hello.com to 8888 on localhost using private key \"privatekeystuffdis88s8dsf8h8hsd8fh8d\" for login", "cmd": "ssh -N -i <(echo \"privatekeystuffdis88s8dsf8h8hsd8fh8d\") -R 16186:localhost:8888 hello.com"}, {"invocation": "find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.", "cmd": "find ./ | grep -E 'foo|bar'"}, {"invocation": "Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter", "cmd": "find . -name \"*.$1\" -exec rm {} \\;"}, {"invocation": "Find all files/directories named 'my.txt' in the entire filesystem", "cmd": "find / -name \"my.txt\""}, {"invocation": "display all html files  in  current folder", "cmd": "find -name \"*.htm\" -print"}, {"invocation": "Print a list of all duplicate case insensitive file paths in the current directory tree", "cmd": "find . | sort -f | uniq -i -d"}, {"invocation": "Search the current directory tree for regular files omitting directory `omit-directory'", "cmd": "find . -name omit-directory -prune -o -type f  -print"}, {"invocation": "Count the number of lines in \"/dir/file.txt\"", "cmd": "cat /dir/file.txt | wc -l"}, {"invocation": "delete all the files ending with \"~\" in current folder", "cmd": "find -name '*~' -print0 | xargs -0 rm"}, {"invocation": "Search for 'specific string' in all files matching the name pattern '\u201c*.[txt|TXT]\u201d' under current directory tree", "cmd": "find . -name \u201c*.[txt|TXT]\u201d -print | xargs grep \u201cspecific string\u201d"}, {"invocation": "Get a sorted list of the longest line with line number for each file under current directory", "cmd": "find . -iname '*.page' -exec awk '{if(length($0) > L) { LINE=NR;L = length($0)}} END {print L\"|\"FILENAME\":\"LINE}' {} \\; | sort"}, {"invocation": "Print numbers from 1 to 100", "cmd": "seq 1 100"}, {"invocation": "Find all regular files in the current directory tree that do not contain a whitespace", "cmd": "find . -type f \\( -exec grep -q '[[:space:]]' {} \\; -o -print \\)"}, {"invocation": "Print the files in the current directory as a list of comma separated values", "cmd": "ls -1 | tr '\\n' ',' | sed 's/,$/\\n/'"}, {"invocation": "Find all files/directories with inode number 16187430 and move them to 'new-test-file-name'", "cmd": "find -inum 16187430 -exec mv {} new-test-file-name \\"}, {"invocation": "create a backup of all the files in the home folder on a partition and save the log to a file", "cmd": "find /home -depth -print | cpio -ov -0 /dev/rmt0 | tee -a tape.log"}, {"invocation": "Find all *conf* files recursively under current directory", "cmd": "find . -name *conf*"}, {"invocation": "list any files modified since /bin/sh was last modified", "cmd": "find . -newer /bin/sh"}, {"invocation": "find all the files that have been modified today", "cmd": "find . -type f -mtime 0"}, {"invocation": "Remove all libGLE* files from the current directory tree", "cmd": "find . -name libGLE* | xargs rm -f"}, {"invocation": "Count the number of lines in \"testfile\" wrapped to fit in a width of \"$COLUMNS\" characters", "cmd": "fold -w \"$COLUMNS\" testfile | wc -l"}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep -oP '(?<= inet addr:)[^ ]+'"}, {"invocation": "using exec in find command to dispaly the searched files", "cmd": "find . ... -exec cat {} \\; -exec echo \\;"}, {"invocation": "Output the standard input followed by the line number until line 786", "cmd": "nl -ba | sed 786q | grep . | awk '{print $2$1}'"}, {"invocation": "Copy all files in the current directory tree matching \"textToSearch\" to \"$destination_path\"", "cmd": "find . -type f | xargs grep -l \"textToSearch\" | cpio -pV $destination_path"}, {"invocation": "Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension", "cmd": "find /home/john/scripts -type f -not -name \"*.ksh\" -print"}, {"invocation": "Delete every second line from output of \"seq 10\"", "cmd": "seq 10 | sed '0~2d'"}, {"invocation": "Find all files in the current directory tree and replace string $1 with string $2 in them", "cmd": "find ./ -type f -exec sed -i \"s/$1/$2/\" {} \\;"}, {"invocation": "Find files/directories in entire file system that were accessed in less than a day ago", "cmd": "find / -atime -1"}, {"invocation": "Copy \"src/prog.js\" and \"images/icon.jpg\" to \"/tmp/package/\" keeping relative path names", "cmd": "rsync -Rv src/prog.js images/icon.jpg /tmp/package/"}, {"invocation": "find all files in current folder having the name pattern \"some_pattern\" and move them to folder target_location (GNU VERSION)", "cmd": "find . -name some_pattern -print0 | xargs -0 -I % mv % target_location"}, {"invocation": "Print the list of the subdirectories of the current directory", "cmd": "find . -mindepth 1 -maxdepth 1 -type d -printf \"%P\\n\""}, {"invocation": "find all the files starting with \"config\" in the folder Symfony ( case insensitive search)", "cmd": "find Symfony -iname '*config*';"}, {"invocation": "Print unique lines in sorted file \"A\" when compared to sorted files \"B\", \"C\", and \"D\"", "cmd": "comm -2 -3 A B | comm -2 -3 - C | comm -2 -3 - D"}, {"invocation": "Display an amount of processes running with a certain name", "cmd": "ab=`ps -ef | grep -v grep | grep -wc processname`"}, {"invocation": "display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search)", "cmd": "find /home/you -iname \"*.txt\" -mtime -60 -print"}, {"invocation": "Print last day of April, 2009", "cmd": "cal 4 2009 | tr ' ' '\\n' | grep -v ^$ | tail -n 1"}, {"invocation": "display all the .sh scripts in the folder /usr", "cmd": "find /usr -name '*.sh'"}, {"invocation": "change the permissions of all the directories in the current folder", "cmd": "chmod 751 `find ./ -type d -print`"}, {"invocation": "Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory", "cmd": "find ${userdir}/${i}/incoming -mtime +2 -type f -ls"}, {"invocation": "Find regular files that are bigger than 500 MB in size under current directoryt tree", "cmd": "find . -type f -size +500M"}, {"invocation": "Print every two lines in \"file\" on a single line separated by a space", "cmd": "cat file | paste -d' ' - -"}, {"invocation": "recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number", "cmd": "find /data/bin/test -type d -mtime +10 -name \"[0-9]*\" -exec rm -rf {} \\;"}, {"invocation": "Move all *.emlx files/directories under /path/to/folders/ to ./Messages/ directory", "cmd": "find /path/to/folders/ -name \\*.emlx -print0 | xargs -0 -I {} mv {} ./Messages/"}, {"invocation": "Verbosely compresses all files on seventh and eighth depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*/*/*/*/*/*"}, {"invocation": "Change the owner of \"/var/www/html/mysite/images/\" to \"nobody\"", "cmd": "sudo chown nobody /var/www/html/mysite/images/"}, {"invocation": "Change permissions to 0755 for all directories in the /path directory tree", "cmd": "find /path -type d -exec chmod 0755 \"{}\" \\;"}, {"invocation": "Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.", "cmd": "find / -name \"*~\" | grep -v \"/media\""}, {"invocation": "Prints only first ten characters of each string of file $file.", "cmd": "cat $file | cut -c 1-10"}, {"invocation": "Infinitely print \"1\" then \"0\"", "cmd": "yes 0 | sed '1~2s/0/1/'"}, {"invocation": "Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago", "cmd": "find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30"}, {"invocation": "Find all directories named \"0\" in the current directory tree and create a single tar archive of their RS* subdirectories", "cmd": "find . -type d -name \"0\" -execdir tar -cvf ~/home/directoryForTransfer/filename.tar RS* \\;"}, {"invocation": "Find all 'test' directories in the current directory tree and remove them", "cmd": "find -type d -a -name test|xargs rm -r"}, {"invocation": "Remove all but 5 last comma-separated fields from each line in 'data.csv'", "cmd": "cat data.csv | rev | cut -d, -f-5 | rev"}, {"invocation": "Recursively change the owner to \"ec2-user\" and group to \"apache\" of all files in \"/vol/html\"", "cmd": "sudo chown -R ec2-user:apache /vol/html"}, {"invocation": "find all files that belong to root user", "cmd": "find . -uid 0 -print"}, {"invocation": "Give all directories in the /path/to/base/dir tree read and execute privileges", "cmd": "find /path/to/base/dir -type d -print0 | xargs -0 chmod 755"}, {"invocation": "replace the word foo to bar in all the regular/normal files in the current folder (does not update the file)", "cmd": "find . -type f -exec sed -i 's/foo/bar/g' {} +"}, {"invocation": "Recursively removes all files and folders named '.svn' in a current folder.", "cmd": "find . -name .svn -exec rm -rf {} \\;"}, {"invocation": "Search the .css files in the /starting/directory tree for \".ExampleClass\"", "cmd": "find /starting/directory -type f -name '*.css' | xargs -ti grep '\\.ExampleClass' {}"}, {"invocation": "find all the files (under root file system /) that were changed within the last 24 hours", "cmd": "find / -ctime -1"}, {"invocation": "Find all OGG files in the home directory larger than 20 megabytes", "cmd": "find $HOME -iname '*.ogg' -size +20M"}, {"invocation": "file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.", "cmd": "join -t, file1 file2 | awk -F, 'BEGIN{OFS=\",\"} {if ($3==$8 && $6==$9 && $7==$10) print $1,$2,$3,$4,$6,$7}'"}, {"invocation": "Append \".txt\" to all filenames in the current directory tree", "cmd": "find -type f | xargs -I {} mv {} {}.txt"}, {"invocation": "Removes all empty folders under path '/thepath', printing info message on each operation.", "cmd": "find /thepath -type d -empty -print0 | xargs -0 rmdir -v"}, {"invocation": "Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded", "cmd": "find \"${searchpath}\" -type f -print0 | xargs -0 grep -l -E \"${string1}\".*\"${string2}\".*\"${string3}\""}, {"invocation": "find all the files that have been modified exactly 24 hours ago", "cmd": "find . -type f -mtime 1"}, {"invocation": "Search the current directory tree for regular files whose names end with \"keep.${SUFFIX}\", where $SUFFIX is a shell variable", "cmd": "find . -type f -name \"*keep.${SUFFIX}\""}, {"invocation": "prints the last non-empty line of a file", "cmd": "tac FILE |egrep -m 1 ."}, {"invocation": "Delete all the files found in the current directory tree whose names begin with \"heapdump\"", "cmd": "find . -name heapdump*|xargs rm"}, {"invocation": "Print the list of files in directory /tmp/a1 recursively", "cmd": "find /tmp/a1"}, {"invocation": "Backup all PHP files under the current directory tree", "cmd": "find -name \"*.php\" \u2013exec cp {} {}.bak \\;"}, {"invocation": "Prints full path to files in a current folder.", "cmd": "ls -1 | awk  -vpath=$PWD/ '{print path$1}'"}, {"invocation": "Find all 400 permission files under /data directory and change their permission to 755", "cmd": "find /data -type f -perm 400 -print | xargs chmod 755"}, {"invocation": "Find all of jzb's files", "cmd": "find -user jzb"}, {"invocation": "Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css'", "cmd": "find . -path \u2018*/1/lang/en.css\u2019 -print"}, {"invocation": "Prints real path of the folder containing $0 file.", "cmd": "$(readlink -f $(dirname \"$0\"))"}, {"invocation": "list PID of a group leader", "cmd": "jobs -lp"}, {"invocation": "Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.", "cmd": "pushd -2"}, {"invocation": "Determine the user associated with stdin", "cmd": "who -m"}, {"invocation": "Sort file \"foo.txt\" by line to standard output", "cmd": "sort foo.txt"}, {"invocation": "count amount of jobs running", "cmd": "jobs | wc -l"}, {"invocation": "Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.", "cmd": "pstree | grep MDSImporte | less -SEX"}, {"invocation": "Print file type of the executable file of command \"file\"", "cmd": "file `which file`"}, {"invocation": "Filter the cron list of user \"user\" through \"my_wonderful_sed_script\" and re-apply the resulting output.", "cmd": "crontab -u user -l | sed \"$my_wonderful_sed_script\" | crontab -u user -"}, {"invocation": "Find all files under minimum 1 level down the current directory", "cmd": "find .  -mindepth 1 -type f"}, {"invocation": "Print content of 'filename' file, showing all non-printing characters and displaying $ at the end of each line.", "cmd": "cat -v -e filename"}, {"invocation": "Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes", "cmd": "find /etc -name \"*.conf\" -mmin -30"}, {"invocation": "Search the /path directory tree for files lacking the group writable bit", "cmd": "find /path ! -perm /020"}, {"invocation": "Find all files named \"foo_bar\" in the current directory recursively", "cmd": "find -name foo_bar"}, {"invocation": "Format bash array \"${arr}\" in columns", "cmd": "echo \" ${arr[@]/%/$'\\n'}\" | sed 's/^ //' | column"}, {"invocation": "Remove all *.mp3 files in tmp directory but not in it's subdirectories", "cmd": "find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    -n1 rm"}, {"invocation": "Find all directories under foldername directory and set their permission to 755", "cmd": "sudo find foldername -type d -exec chmod 755 {} \";\""}, {"invocation": "display all the files in the file system which are present in nfs system", "cmd": "find / -fstype nfs -print"}, {"invocation": "display all files in the current folder ($@ contains the variables passed as argument to the function)", "cmd": "find . -iname \"*$@*\" -or -iname \".*$@*\""}, {"invocation": "ssh into default vagrant host without running \"vagrant ssh\" by passing the configuration parameters vagrant uses for ssh", "cmd": "ssh vagrant@127.0.0.1 -p 2222 -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -i ~/.vagrant.d/less_insecure_private_key -o ForwardAgent=yes"}, {"invocation": "Search the .log files in the current directory tree for string \"The SAS System\"", "cmd": "find `pwd` -name \"*.log\" -exec grep \"The SAS System\" {} \\;"}, {"invocation": "Change the permission to 0644 for all files under current directory", "cmd": "find . -type f -exec chmod 0644 {} +"}, {"invocation": "SSH into host \"server\" as user \"user\"", "cmd": "ssh user@server"}, {"invocation": "Copies all files under the current folder like \"file.ext\" with \"FooBar\" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.", "cmd": "find . -name \"file.ext\"| grep \"FooBar\" | xargs -i cp -p \"{}\" ."}, {"invocation": "find all the text files in the current folder", "cmd": "find . -name \"*.txt\" -print"}, {"invocation": "Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/' directory with new names constructed by prepending 'copy' in their names", "cmd": "find  /home/mine -iname \"*.png\" -printf \"%P\\n \" | xargs  -I % -n1 cp %  /home/mine/pngcoppies/copy%"}, {"invocation": "Displays process tree of a process with id 'PID', showing parent process and processes id.", "cmd": "pstree -p -s PID"}, {"invocation": "change the permissions of al the directories in the current folder", "cmd": "sudo find . -type d -exec chmod 755 {} +"}, {"invocation": "Print the sizes of all files from the current directory tree", "cmd": "find . -iname '*.jpg' -type f -printf +%b"}, {"invocation": "Find all .gz archives in the current directory tree and check if they are valid", "cmd": "find . -name '*.gz' | xargs gunzip -vt"}, {"invocation": "Count the number of files named `file1'", "cmd": "find -name file1 | wc -l"}, {"invocation": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files", "cmd": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;"}, {"invocation": "search for the word \"foo\" in all the regular/normal files in the directory \"/path/to/dir\"", "cmd": "find /path/to/dir -type f -print0 | xargs -0 grep -l \"foo\""}, {"invocation": "Send 5 pings to broadcast address \"10.10.0.255\" and print the unique IPs who responded", "cmd": "ping -c 5 -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }' | sort | uniq"}, {"invocation": "Find all files in the current directory tree whose size is greater than 1MB", "cmd": "find . -size +1M"}, {"invocation": "Archive \"src\" to \"dst\" without overwriting existing files in \"dst\"", "cmd": "rsync -a -v --ignore-existing src dst"}, {"invocation": "Replace all newlines from standard input except the last with spaces", "cmd": "sed ':a;N;$!ba;s/\\n/ /g'"}, {"invocation": "search for the word hello in all the text files in the temp folder and delete them", "cmd": "find /tmp -type f -name \u2018*.txt*\u2019 | sed -e \u2018s/.*/\\\u201d&\\\u201d/\u2019 |xargs -n 1 grep -l hello|sed -e \u2018s/.*/\\\u201d&\\\u201d/\u2019|xargs -n 1 rm -f"}, {"invocation": "find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000", "cmd": "find . -uid +500 -uid -1000 -type f"}, {"invocation": "Filter contents of 'file' through awk commands written in script.awk, display the result.", "cmd": "awk -f script.awk file"}, {"invocation": "Move all files that contain \"Subject: \\[SPAM\\]\" to \"DIR\"", "cmd": "grep -L -Z -r 'Subject: \\[SPAM\\]' . | xargs -0 -I{} mv {} DIR"}, {"invocation": "forcibly and verbosely create a symbolic link named \"target\" to file \"source\"", "cmd": "ln -sfvn source target"}, {"invocation": "Display each line in file.txt backwards", "cmd": "rev file.txt"}, {"invocation": "Removes empty folder 'symlink'.", "cmd": "rm -d symlink"}, {"invocation": "Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree", "cmd": "find \"$DIR\" -type f -exec grep \"$SEARCH\" {} \\;"}, {"invocation": "Sort file pointed by variable $filename, removing duplicate entries but ignoring the last N characters of each line.", "cmd": "rev $filename | sort | uniq -f=N | rev"}, {"invocation": "search for all regular/normal files in current folder and display all the files which contain 16 lines", "cmd": "find . -type f -print0 | xargs -0 grep -cH '.' | grep ':16$'"}, {"invocation": "Delete all empty directories in the current directory tree", "cmd": "find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}, {"invocation": "Locates 'gcc' executable file, strips last two parts of the full path, adds '/lib' to the end and saves result in 'libdir' variable.", "cmd": "libdir=$(dirname $(dirname $(which gcc)))/lib"}, {"invocation": "Merge already sorted files \"*.txt\" and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix \"output\"", "cmd": "sort -m *.txt | split -d -l 1000000 - output"}, {"invocation": "Search the /Path directory tree for files matching pattern \"file_name*\"", "cmd": "find /Path -name \"file_name*\""}, {"invocation": "Find all regular files whose names do not end in \"*.html\"", "cmd": "find . -type f -not -name \"*.html\""}, {"invocation": "Find all files in the current directory tree that were last changed $minutes minutes ago", "cmd": "find . -cmin $minutes -print"}, {"invocation": "Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files", "cmd": "find $d -type f -exec chmod ug=rw,o= '{}' \\;"}, {"invocation": "Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files", "cmd": "find .  -type f -name \"CDC*\" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \\;"}, {"invocation": "Locate files whose status was changed less than 1 day ago", "cmd": "find . -ctime -1 -print"}, {"invocation": "Print file information of the executable file of command \"g++\"", "cmd": "ls `which g++` -al"}, {"invocation": "Find files in the current directory tree whose size is 24000 bytes", "cmd": "find . -size 24000c"}, {"invocation": "Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago", "cmd": "find ./work/ -type f -name \"*.sh\" -mtime -20 | xargs -r ls -l"}, {"invocation": "Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding \"*\"  before it's passed to find.", "cmd": "find . -name \\*.pdf -print"}, {"invocation": "Recursively copies \"$appname.app\", preserving symlinks as symlinks to the 'Payload' directory.", "cmd": "cp -Rp \"$appname.app\" Payload/"}, {"invocation": "Find files under /some/path that are not executable", "cmd": "find /some/path -type f ! -perm -111 -ls"}, {"invocation": "display all the regular/normal files in the folder \"/home/user/demo\" which have the permission 777.", "cmd": "find /home/user/demo -type f -perm 777 -print"}, {"invocation": "find foo, Foo, FOo, FOO, etc.", "cmd": "find . -iname foo"}, {"invocation": "Extract host name part from URL.", "cmd": "echo \"$url\" | cut -d'/' -f3"}, {"invocation": "Find all files owned by group `root' in the current directory tree and change their user to `temp'", "cmd": "find . -group root -print | xargs chown temp"}, {"invocation": "find all the files in the current directory which have been modified after a file", "cmd": "find . -newer file"}, {"invocation": "Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.", "cmd": "find . -name \"a\" -type d | xargs rmdir"}, {"invocation": "Copies files 'src/prog.js' and 'images/icon.jpg' with fully-defined path to '/tmp/package' directory.", "cmd": "cp --parents src/prog.js images/icon.jpg /tmp/package"}, {"invocation": "display the contents of all the files in the current folder which start with test (case insensitive search)", "cmd": "find . -iname '*test*' -exec cat {} \\;"}, {"invocation": "find all the files in the entire file system which have been modified in the last 5 days", "cmd": "find / -mtime -5 -print"}, {"invocation": "change permission of all the files in the entire file system which have permissions 777.", "cmd": "find / -type f -perm 0777 -print -exec chmod 644 {} \\;"}, {"invocation": "Set the host name to \"myServersHostname\"", "cmd": "hostname myServersHostname"}, {"invocation": "Find all C source code files from the current directory tree that contain \"keyword\" in their pathnames, ignoring the case", "cmd": "find . -type f \\( -iname \u201c*.c\u201d \\) |grep -i \u201ckeyword\u201d"}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find -name \"test\" -type d -delete"}, {"invocation": "Replace spaces in directory names with underscores for all directories in the current directory tree", "cmd": "find -name \"* *\" -type d | rename 's/ /_/g'"}, {"invocation": "Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern", "cmd": "find . -name 'test*' -prune"}, {"invocation": "find all the normal/regualar files in the current folder which have a size of 10KB and display a long listing details of them.", "cmd": "find . -type f -size +10000 -exec ls -al {} \\;"}, {"invocation": "Counts all files in a current folder and subfolders.", "cmd": "find . -type f | wc -l"}, {"invocation": "Count non-blank lines in a file 'foo.c'", "cmd": "sed '/^\\s*$/d' foo.c | wc -l"}, {"invocation": "Silently read a line from standard input into variable \"REPLY\" without backslash escapes and using the prompt $'Press enter to continue...\\n'", "cmd": "read -rsp $'Press enter to continue...\\n'"}, {"invocation": "Find all regular files in the current director and set their permissions to '644'.", "cmd": "find ./ -type f -exec chmod 644 {} \\;"}, {"invocation": "Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.", "cmd": "scp -qv $USER@$HOST:$SRC $DEST"}, {"invocation": "Delete all regular files under current directory", "cmd": "find . -type f -print0 | xargs -0 /bin/rm"}, {"invocation": "Print flow of random data, showing all non-printing characters", "cmd": "cat -v /dev/urandom"}, {"invocation": "Saves bytes count of the value of '$each' variable.", "cmd": "a=$(echo $each | wc -c)"}, {"invocation": "Cuts off last part from the path $dir, and deletes resulted folder if empty.", "cmd": "rmdir \"$(dirname $dir)\""}, {"invocation": "Find all files/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~/foo/bar", "cmd": "find . -iname \"*foobar*\" -exec cp \"{}\" ~/foo/bar \\;"}, {"invocation": "Counts all *.mod files in a /boot/grub/ folder.", "cmd": "ls -l /boot/grub/*.mod | wc -l"}, {"invocation": "Answer \"y\" to any prompts in the interactive recursive removal of \"dir1\", \"dir2\", and \"dir3\"", "cmd": "yes y | rm -ir dir1 dir2 dir3"}, {"invocation": "Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago", "cmd": "find . -maxdepth 1 -ctime +1 -name file"}, {"invocation": "Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache'", "cmd": "find /var/www -group root -o -nogroup -print0 | xargs -0 chown :apache"}, {"invocation": "Recursively finds string 'class foo' in all *.c files from current folder.", "cmd": "grep \"class foo\" **/*.c"}, {"invocation": "Unzip \"file.gz\", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent", "cmd": "zcat file.gz | cut -f1 -d, | sort | uniq -c | sort -n"}, {"invocation": "Delete the 4th tab separated column from the output of \"finger\"", "cmd": "finger | awk -F\"\\t\" -v 'OFS=\\t' '{ $4=\"\"; print $0}' | sed 's/\\t\\{2,\\}/\\t/'"}, {"invocation": "Print all string from file 'file2.txt' matching pattern in file 'file1.txt'", "cmd": "grep \"$(cat file1.txt)\" file2.txt"}, {"invocation": "Search the /path directory recursively for TXT files", "cmd": "find /path -type f -iname \"*.txt\""}, {"invocation": "Display a long list of all the files/directories named \".todo\" under $STORAGEFOLDER directory tree", "cmd": "find $STORAGEFOLDER -name .todo  -exec ls -l {} \\;"}, {"invocation": "Find files named \"ppp.conf\" in the /etc directory tree", "cmd": "find /etc -name ppp.conf"}, {"invocation": "Remove all vmware-*.log files under current directory ensuring white space safety in filename", "cmd": "find . -name vmware-*.log -print0 | xargs -0 rm"}, {"invocation": "Look for files with the name 'search' under current directory", "cmd": "find . -name \"search\""}, {"invocation": "find all the png files in current folder which are present in the pattern list file \"search.txt\" and copy them to another directory", "cmd": "find . -name '*.png' | grep -f <(sed s?^?/[0-9]_[0-9]_[0-9]_? search.txt) | xargs -i{} cp {} /path/to/dir"}, {"invocation": "Display permissions, user, group, and full path for each file in the current directory tree", "cmd": "tree -p -u -g -f"}, {"invocation": "Move the directory named \"some-dir\" and residing under the current one to x/", "cmd": "find ./ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x/"}, {"invocation": "Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755", "cmd": "find /path/to/base/cache /path/to/base/tmp /path/to/base/logs -type d -exec chmod 755 {} +"}, {"invocation": "Search all .java files residing in the current directory tree and modified at least 7 days ago for string \"swt\"", "cmd": "find . -name '*.java' -mtime +7 -print0 | xargs -0 grep 'swt'"}, {"invocation": "Find all files/directories that are not newer than Jul 01 by modification time", "cmd": "find /file/path ! -newermt \"Jul 01\""}, {"invocation": "display all regular/normal files in the current folder with the name dummy", "cmd": "find -type f -name dummy"}, {"invocation": "display all the regular/normal files in the current folder that are not accessed in the last 10 minutes", "cmd": "find . -type f -amin +10"}, {"invocation": "Delete all files under root whose status were changed more than 30 minutes ago", "cmd": "find root -type -f -cmin +30 -delete"}, {"invocation": "find all the files ending with jpg in current folder and display their count ( case insensitive )", "cmd": "find ./ -type f -regex \".*\\.[Jj][Pp][gG]$\" | wc -l"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn -delete"}, {"invocation": "remove all the DS_Store files in the current directory", "cmd": "find . -name .DS_Store -exec rm {} \\;"}, {"invocation": "Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter", "cmd": "find . -name .snapshot -prune -o \\( -type f -mtime 0 -print0 \\)"}, {"invocation": "Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores", "cmd": "find /tmp/ -depth -name \"* *\" -execdir rename 's/ /_/g' \"{}\" \\;"}, {"invocation": "Run 'chmod 0755' on all directories in the current directory tree", "cmd": "find . -type d -exec chmod 0755 {} \\;"}, {"invocation": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree", "cmd": "find  /root -type f -iname \"*linux*\""}, {"invocation": "Archive showing progress all files in \"/media/2TB\\ Data/data/music/\" to \"/media/wd/network_sync/music/\" excluding files matching \"*.VOB\", \"*.avi\", \"*.mkv\", \"*.ts\", \"*.mpg\", \"*.iso\", \"*ar\", \"*.vob\", \"*.BUP\", \"*.cdi\", \"*.ISO\", \"*.shn\", \"*.MPG\", \"*.AVI\", \"*.DAT\", \"*.img\", \"*.nrg\", \"*.cdr\", \"*.bin\", \"*.MOV\", \"*.goutputs*\", \"*.flv\", \"*.mov\", \"*.m2ts\", \"*.cdg\", \"*.IFO\", \"*.asf\", and \"*.ite\"", "cmd": "rsync -av --progress --exclude=*.VOB --exclude=*.avi --exclude=*.mkv --exclude=*.ts --exclude=*.mpg --exclude=*.iso --exclude=*ar --exclude=*.vob --exclude=*.BUP --exclude=*.cdi --exclude=*.ISO --exclude=*.shn --exclude=*.MPG --exclude=*.AVI --exclude=*.DAT --exclude=*.img --exclude=*.nrg --exclude=*.cdr --exclude=*.bin --exclude=*.MOV --exclude=*.goutputs* --exclude=*.flv --exclude=*.mov --exclude=*.m2ts --exclude=*.cdg --exclude=*.IFO --exclude=*.asf --exclude=*.ite /media/2TB\\ Data/data/music/* /media/wd/network_sync/music/"}, {"invocation": "List all files/directories with spaces in their names under ~/Library directory", "cmd": "find ~/Library -name '* *' -exec ls {} \\;"}, {"invocation": "Recursively copies everything from '/zzz/zzz/' to the '/xxx/xxx' overwriting the existing files and answering 'yes' on each request for overwriting.", "cmd": "yes | cp -rf /zzz/zzz/* /xxx/xxx"}, {"invocation": "List all files in /home/bozo/projects directory tree that were modified within the last day.", "cmd": "find /home/bozo/projects -mtime -1"}, {"invocation": "find all the files in the home folder which have been modified in the last 30 minutes", "cmd": "find $HOME -mmin -30"}, {"invocation": "Perform white space safe deletion of files named core under /tmp", "cmd": "find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f"}, {"invocation": "remove all subdirectories named \"CVS\" under current dir", "cmd": "find . -type d -name CVS -exec rm -r {} \\;"}, {"invocation": "Show a long listing of files not modified in over 20 days or not accessed in over 40 days", "cmd": "find /mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}, {"invocation": "Print file system disk space usage in human readable format of the root filesystem", "cmd": "df -h /"}, {"invocation": "Lists content of the current folder.", "cmd": "$ ls"}, {"invocation": "Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and prints location of such files.", "cmd": "diff -qr directory directory.original | cut -d' ' -f2 | xargs dirname | uniq"}, {"invocation": "Find all php files whose name is tecmint.php in a current working directory", "cmd": "find . -type f -name tecmint.php"}, {"invocation": "Calculate the md5sum of each \".py\" file under \"/path/to/dir/\", sort the output, and calculate the md5sum of that", "cmd": "find /path/to/dir/ -type f -name \"*.py\" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}, {"invocation": "Calculate the md5 sum of all *.py files in the current directory", "cmd": "cat *.py | md5sum"}, {"invocation": "search the word \"MySearchStr\" in all the regular/normal files in the current folder and display the line number and the file name", "cmd": "find . -type f -print0 | xargs -0 -e grep -nH -e MySearchStr"}, {"invocation": "Search all files under and below /etc for IP addresses", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "display all the files in the current folder", "cmd": "find ."}, {"invocation": "find non-hidden files (ones that do not start with the period \".\" chartacter) that were are modified in the last 15 minutes.", "cmd": "find . -mmin -15 \\( ! -regex \".*/\\..*\" \\)"}, {"invocation": "Print unique lines of \"a\" and \"b\"", "cmd": "comm -3 a b"}, {"invocation": "Find broken symlinks in current directory", "cmd": "find . -type l -xtype l"}, {"invocation": "Change permissions to 644 for all files in the current directory tree", "cmd": "find . -type f | xargs chmod -v 644"}, {"invocation": "Display only line numbers listed in 'file_of_line_numbers\" from file 'source'.", "cmd": "sed 's/$/p/' file_of_line_numbers | sed -nf - source"}, {"invocation": "Find all .txt files of user Tecmint under /home directory", "cmd": "find /home -user tecmint -iname \"*.txt\""}, {"invocation": "Search the /tmp/ directory recursively for files matching regular expression \".*file[0-9]+$\"", "cmd": "find /tmp -regex \".*file[0-9]+$\""}, {"invocation": "display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories", "cmd": "find . -maxdepth 1 -name \"*.jpg\" -size -50k | xargs echo rm -f"}, {"invocation": "Search for \"CONFIG_64BIT\" in gzip compressed file \"/proc/config.gz\"", "cmd": "zcat /proc/config.gz | grep CONFIG_64BIT"}, {"invocation": "Lists all subdirectories in current directory with a trailing slash", "cmd": "ls -d ./*/                     ### more reliable BSD ls"}, {"invocation": "List all .svn files/directories under current directory", "cmd": "find . -name .svn -exec ls {} \\;"}, {"invocation": "Find all regular files under current directory tree without descending into './dir1' (except './dir1/subdir1*' pattern) and './dir2' directories", "cmd": "find . \\( -path './dir1/*' -and -not -path './dir1/subdir1*' -or -path './dir2' \\) -prune -or -type f -print"}, {"invocation": "Get a two column list of all regular .rb files residing in the current directory tree", "cmd": "find . -name \"*.rb\" -type f -print0 | xargs -0 -n 2 echo"}, {"invocation": "Split \"INPUT_FILE_NAME\" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix \"input.part.\"", "cmd": "split -b 500M -d -a 4 INPUT_FILE_NAME input.part."}, {"invocation": "create directory /data/db", "cmd": "sudo mkdir /data/db"}, {"invocation": "find all configuration files in a folder", "cmd": "find /home/pat -iname \"*.conf\""}, {"invocation": "Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result", "cmd": "join -o 1.2,1.3,2.4,2.5,1.4 <(cat -n file1) <(cat -n file2)"}, {"invocation": "find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command)", "cmd": "find . -type f -exec file {} \\+;"}, {"invocation": "display long listing of first 10 directories in the current folder", "cmd": "find . -type d -ls | head"}, {"invocation": "Find all files/directories under _CACHE_* directories", "cmd": "find _CACHE_*"}, {"invocation": "Search the current directory for files whose names start with \"messages.\" ignoring SVN files", "cmd": "find \\( -name 'messages.*' ! -path \"*/.svn/*\" \\) -exec grep -Iw uint {} +"}, {"invocation": "find all empty files", "cmd": "find / -empty"}, {"invocation": "Extract 8 bytes as an unsigned integer that is \"$o\" offset into \"$rpm\"", "cmd": "set `od -j $o -N 8 -t u1 $rpm`"}, {"invocation": "display all the tex files in the current folder", "cmd": "find . -name \\*.tex"}, {"invocation": "Print A record for domain 'domain.' from 'ns2.newnameserver' nameserver", "cmd": "dig @ns2.newnameserver domain. a"}, {"invocation": "Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension", "cmd": "find . -regex \".*/(test)[0-9][0-9]\\.txt\""}, {"invocation": "Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'", "cmd": "echo 0a.00.1 usb controller some text device 4dc9 | rev | cut -b1-4 | rev"}, {"invocation": "search for the file test2 in the current folder", "cmd": "find -name test2"}, {"invocation": "Find files in the current directory whose names begin with \"file\" and remove them", "cmd": "find . -name file* -maxdepth 1 -exec rm {} \\;"}, {"invocation": "Find all files in the current directory tree that are not newer than some_file", "cmd": "find . ! -newer some_file"}, {"invocation": "Page through the contents of file 'file_name', positioning the view at the first occurrence of regular expression 'regex'.", "cmd": "less -p regex file_name"}, {"invocation": "Search for the regex \"+\\S\\+\" in file 'in.txt' and print the matches by replacing newlines with comma (',')", "cmd": "grep -o \"+\\S\\+\" in.txt | tr '\\n' ','"}, {"invocation": "display the count of total number of empty files in the current folder", "cmd": "find . -type f -empty | wc -l"}, {"invocation": "Remount \"extX\" filesystem \"/dev/hdaX\" on \"/\" without writing in \"/etc/mtab\"", "cmd": "mount -n -o remount -t extX /dev/hdaX /"}, {"invocation": "Copy all files and directories under the current directory into \"../new\" preserving relative paths", "cmd": "find -print0 | sort -z | cpio -pdv0 ../new"}, {"invocation": "Search  all files & directoy from root directory which  are greater then 100M and delete them .", "cmd": "find /  -size +100M -exec rm -rf {} \\;"}, {"invocation": "find all the files in the home folder which are less than 42 Bytes", "cmd": "find / -size 42"}, {"invocation": "Search for files only that end with .php and look for the string $test inside those files", "cmd": "find . -name \\*.php -type f -print0 | xargs -0 grep -Hn '$test'"}, {"invocation": "Change permissions of directory \"/home/sshtunnel/\" to 555", "cmd": "chmod 555 /home/sshtunnel/"}, {"invocation": "Print a count of each unique line in \"ip_addresses\"", "cmd": "sort ip_addresses | uniq -c"}, {"invocation": "Find and remove all .txt regular files under the current directory and below", "cmd": "find . -type f -name \"*.txt\" -exec rm -f {} \\;"}, {"invocation": "List all defined bash functions", "cmd": "set | egrep '^[^[:space:]]+ [(][)][[:space:]]*$' | sed -r -e 's/ [(][)][[:space:]]*$//'"}, {"invocation": "start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found", "cmd": "find . -wholename './src/emacs' -prune -o -print"}, {"invocation": "Find all files in the current directory tree ignoring the \".git\" directory", "cmd": "find . -type d -name '.git*' -prune -o -type f -print"}, {"invocation": "Recursively changes group ownership on everything in the 'public_html' folder to 'website' group.", "cmd": "chgrp --recursive website public_html"}, {"invocation": "Find all files/directories that are newer than 'ttt' by modification time or owned by the user 'wnj' in the entire filesystem", "cmd": "find / \\( -newer ttt -or -user wnj\t\\) -print"}, {"invocation": "Print the file 'text1;text2;text3' replacing each space(\" \") with a newline", "cmd": "cat \"text1;text2;text3\" | sed -e 's/ /\\n/g'"}, {"invocation": "Find all files matching \"abc*\" in the current directory and append a column with \"OK\"", "cmd": "find . -name 'abc*' -exec echo {}' OK' \\; | column -t"}, {"invocation": "Find files in the current directory tree whose names are of the form \"cxx_data.txt\" where xx is a number from 40 to 70", "cmd": "find . -regextype posix-egrep -regex \"./c(([4-6][0-9])|70)_data.txt\""}, {"invocation": "Counts lines with all-cased word 'null' in file 'myfile.txt'.", "cmd": "grep -n -i null myfile.txt | wc -l"}, {"invocation": "Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals.", "cmd": "kill -0 $PID"}, {"invocation": "Counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder.", "cmd": "grep -v '^\\s*$' *.py | wc"}, {"invocation": "Create a symbolic link in the current directory to \"$file\"", "cmd": "ln -s \"$file\""}, {"invocation": "Print file extension assuming there is only one dot in the file name.", "cmd": "echo \"$FILE\" | cut -d'.' -f2"}, {"invocation": "Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding *.log files/directories", "cmd": "find /home/baumerf/public_html/ -mmin -60 -not -name \\*.log"}, {"invocation": "Calculate the md5sum of the executable file of command \"gcc\"", "cmd": "md5sum $(which gcc)"}, {"invocation": "Fix files to default permissions 755", "cmd": "find . -type d -exec chmod 755 {} \\;"}, {"invocation": "find all the files in the current folder which have set guid bit on and list the top 10 files.", "cmd": "find . -perm /g+s | head"}, {"invocation": "find all the normal/regular files in current folder and search for a pattern", "cmd": "find . -type f -print0 | xargs -0 grep pattern"}, {"invocation": "Execute awk script \"script.awk\" on \"File2\" and \"File1\" and format output as a table", "cmd": "awk -f script.awk File2 File1 | rev | column -t | rev"}, {"invocation": "find all the files that have been modified today(from the strart of the day)", "cmd": "find . -type f -daystart -mtime 0"}, {"invocation": "List all files in a current folder, separating names with comma", "cmd": "ls -1 | tr '\\n' ','"}, {"invocation": "Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed", "cmd": "find ~ -used +365 -ok rm '{}' ';'"}, {"invocation": "Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/", "cmd": "find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \\; | xargs rm"}, {"invocation": "Count the total number of lines in all HTML files under /usr/src that contain string \"foo\"", "cmd": "find /usr/src -name \"*.html\" -execdir /usr/bin/grep -H \"foo\" {} ';' | wc -l"}, {"invocation": "Recursively finds all files and prints all strings with 'text-to-find-here' from that files.", "cmd": "find / -type f | xargs grep 'text-to-find-here'"}, {"invocation": "Sort the lines of the file 'temp.txt' and change it in-place", "cmd": "sort temp.txt -o temp.txt"}, {"invocation": "Set permissions for all direcotries under /var/www to 755", "cmd": "find /var/www -type d -print0 | xargs -0 chmod 755"}, {"invocation": "Recursively prints .txt files in current directory", "cmd": "find $(pwd) -name \\*.txt -print"}, {"invocation": "Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format", "cmd": "find -type f -name \"*.htm\" | sed 's@^./@@g;s@/@-@g' | awk -F'-' '{print $1 \"-\" $2 \"-\" $3 \"-\" substr($4, 5, 2) \"-\" $5}'"}, {"invocation": "SSH into \"hostname\" on port 22 as user \"myName\"", "cmd": "ssh -p 22 myName@hostname"}, {"invocation": "List *.txt files residing in the current directory tree", "cmd": "find . -name *.txt -exec ls {} ;\\"}, {"invocation": "Delete all files in the current directory tree whose names end with ~", "cmd": "find . -name \"*~\" -delete"}, {"invocation": "create directory /etc/cron.minute", "cmd": "mkdir /etc/cron.minute"}, {"invocation": "Append all *.mp3 files modified within the last 180 days to tar archive `music.tar'", "cmd": "find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar"}, {"invocation": "Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory", "cmd": "find \"$path_to_folders\" -name 'm?' -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox/Messages \\; -exec sh -c \"mv {}.mbox/*.emlx {}.mbox/Messages\" \\;"}, {"invocation": "Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat", "cmd": "$ find . \\( -name D -prune \\) -o -name hi.dat"}, {"invocation": "ERROR - Probably means -pgoDt (capital D)", "cmd": "sudo rsync -pgodt /home/ /newhome/"}, {"invocation": "Report file system containing path to the current working directory disk usage in kilobytes.", "cmd": "df -k ."}, {"invocation": "Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths", "cmd": "find /var/www/html/zip/data -type d -mtime +90 | uniq"}, {"invocation": "find all files in current folder having the name pattern \"some_pattern\" and move them to the folder target_location (GNU VERSION)", "cmd": "find . -name some_pattern -print0 | xargs -0 -i mv {} target_location"}, {"invocation": "Fetch 'stackoverflow.com' domain IP addresses from dig DNS lookup", "cmd": "dig stackoverflow.com | grep -e \"^[^;]\" | tr -s \" \\t\" \" \" | cut -d\" \" -f5"}, {"invocation": "Delete all files/directories named 'FILE-TO-FIND' under current directory tree", "cmd": "find . -name \"FILE-TO-FIND\" -exec rm -rf {} \\;"}, {"invocation": "Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf", "cmd": "find /etc/apache-perl -newer /etc/apache-perl/httpd.conf"}, {"invocation": "Make directory \"dirname\" with permissions set to 777", "cmd": "mkdir -m 777 dirname"}, {"invocation": "Search the 'tmp' directory for .mp3 files", "cmd": "find tmp -maxdepth 1 -name '*.mp3'"}, {"invocation": "get the root user access", "cmd": "sudo su"}, {"invocation": "Find *.pl files/directories under /users/tom", "cmd": "find /users/tom -name \"*.pl\""}, {"invocation": "find all directories in the current folder", "cmd": "find -type d"}, {"invocation": "Search /usr/local recursively for directories whose names end with a number 0-9", "cmd": "find /usr/local -type d -name '*[0-9]'"}, {"invocation": "Print summary of files present only in dir1.", "cmd": "diff -rq dir1 dir2 | grep 'Only in dir1/'"}, {"invocation": "Print first field from semicolon-seprated line $string.", "cmd": "echo $string | cut -d';' -f1"}, {"invocation": "create directory foo", "cmd": "mkdir -p foo"}, {"invocation": "Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.", "cmd": "find . -name \"*.php\" -not -path \"./tests*\" | xargs wc -l"}, {"invocation": "change owner and group of the file script.sh to user root", "cmd": "chown root:root script.sh"}, {"invocation": "List all directories found in the current directory and below.", "cmd": "find . -type d"}, {"invocation": "Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions", "cmd": "find -x /var -inum 212042"}, {"invocation": "Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under /home/www and below", "cmd": "find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'"}, {"invocation": "Print the list of files modified within a fortnight ago removing the leading ./ from the file names", "cmd": "find .  -mtime -14 | sed -e 's/^\\.\\///'"}, {"invocation": "find all the files in the home folder which have not been modified in the last 1 year.", "cmd": "find $HOME -mtime +365"}, {"invocation": "Print a list of all files and directories in the /var/log directory tree", "cmd": "find /var/log/"}, {"invocation": "Remount \"/system\" with read and write permission", "cmd": "mount -o rw,remount /system"}, {"invocation": "find all the files in the home folder that have been modified between 24 to 48 hours", "cmd": "find $HOME -mtime -2 -mtime +1"}, {"invocation": "Unzip every \".gz\" file in the current directory", "cmd": "gunzip *.gz"}, {"invocation": "Find all regular files named postgis-2.0.0 under your home directory", "cmd": "find ~/ -type f -name \"postgis-2.0.0\""}, {"invocation": "Print amount of space available on the file system containing path to the current working directory in megabytes.", "cmd": "df . -B MB | tail -1 | awk {'print $4'} | grep  .[0-9]*"}, {"invocation": "Lists the pids of all processes that have process '1782' as their parent.", "cmd": "pstree -p 1782 | sed 's/-/\\n/g' | sed -n -e 's/.*(\\([0-9]\\+\\)).*/\\1/p'"}, {"invocation": "Find all files under current directory and change their permission to 400", "cmd": "find . -type f -exec chmod 400 {} \\;"}, {"invocation": "Removes all files from current folder but 5 newest ones.", "cmd": "ls -C1 -t| awk 'NR>5'|xargs rm"}, {"invocation": "Recursively removes all files named '.svn' in a current folder, and prints messages on each action.", "cmd": "find . -name .svn -exec rm -v {} \\;"}, {"invocation": "start 2 sleep processes in the background", "cmd": "sleep 100 | sleep 200 &"}, {"invocation": "Find all files that have wrong permission", "cmd": "find / \\( -perm -006 -o -perm -007 \\) \\( ! -type -l \\) -ls"}, {"invocation": "Search the .java files from the current directory tree for TODO lines", "cmd": "find . -name \"*.java\" -exec grep -Hin TODO {} \\;"}, {"invocation": "Rename file \"edited_blah.tmp\" to \"/etc/blah\"", "cmd": "sudo mv edited_blah.tmp /etc/blah"}, {"invocation": "Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames", "cmd": "find . -name * | xargs grep -iH \"string\""}, {"invocation": "Find all files under current directory whose file type description contains \"image\", display only path to each file.", "cmd": "find . -type f -exec file {} \\; | awk -F: '{ if ($2 ~/[Ii]mage|EPS/) print $1}'"}, {"invocation": "Rename \"file.txt\" in directories \"v_1\", \"v_2\", and \"v_3\" each to \"v_1.txt\", \"v_2.txt\", and \"v_3.txt\" respectively and print the conversion", "cmd": "rename -v 's#/file##' v_{1,2,3}/file.txt"}, {"invocation": "Enables shell option 'lithist'.", "cmd": "shopt -s lithist"}, {"invocation": "Find all regular files in current directory and /home/www directory", "cmd": "find * /home/www -type f"}, {"invocation": "Exclude directory from find . command", "cmd": "find . -name '*.js' | grep -v excludeddir"}, {"invocation": "search for the directory \"mysql\" in the entire file system", "cmd": "find / -name mysql -type d"}, {"invocation": "Delete all empty directories in minimum 1 level down the directory 'directory'", "cmd": "find directory -mindepth 1 -type d -empty -delete"}, {"invocation": "Print the base name of the current working directory", "cmd": "basename $(pwd)"}, {"invocation": "Find all *.txt files under /foo and print their total size", "cmd": "find /foo -name \"*.txt\" -exec du -hc {} + | tail -n1"}, {"invocation": "Find and print the names of all files found in the current directory and all of its sub-directories", "cmd": "find . -print"}, {"invocation": "Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 20MB in size", "cmd": "find $HOME -iname '*.ogg' -size +20M"}, {"invocation": "Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.", "cmd": "egrep -R \"word-1|word-2\u201d directory-path"}, {"invocation": "find all the files that have been modified exactly 2 days ago", "cmd": "find -mtime 2"}, {"invocation": "List environment variables whose name matches '^\\w*X\\w*'", "cmd": "set | grep -oP '^\\w*X\\w*(?==)'"}, {"invocation": "create a symbolic link named \"-pdf-kundendienst\" to \"local--pdf-kundendienst\" file", "cmd": "ln -s -- ./local--pdf-kundendienst -pdf-kundendienst"}, {"invocation": "Find all directories under minimum 1 level down the  $GIVEN_DIR directory", "cmd": "find \"$GIVEN_DIR\" -type d -mindepth 1"}, {"invocation": "Print which files differ in \"PATH1/\" and \"PATH2/\" recursively excluding any files that match any pattern in \"file1\"", "cmd": "diff PATH1/ PATH2/ -rq -X file1"}, {"invocation": "Create a symbolic link named \".profile\" to \"git-stuff/home/profile\" without dereferencing \".profile\"", "cmd": "ln -sn git-stuff/home/profile .profile"}, {"invocation": "Find all files under current directory and print only the filenames (not paths)", "cmd": "find . -type f -printf \"%f\\n\""}, {"invocation": "display all the files in the current folder along with the hidden files with the depth", "cmd": "find . \u2014 name \"*\" \u2014 print -\u043e -name \".*\" \u2014 print -depth"}, {"invocation": "find all the files in the file system which are bigger than 3 bytes", "cmd": "find / -size +3 -print"}, {"invocation": "Print the path names of all regular .rb files prefixing them with string \"Hello, \"", "cmd": "find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"}, {"invocation": "Convert *.au files to *.wav files using `sox'", "cmd": "find -type f -name '*.au' | awk '{printf \"sox %s %s\\n\",$0,$0\".wav\" }' | bash"}, {"invocation": "Find all *.gz files/directories under asia and emea directory", "cmd": "find asia emea -name \\*.gz"}, {"invocation": "Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree", "cmd": "find ~/Library/ -iname \"com.apple.syncedpreferences.plist\""}, {"invocation": "Search the current directory tree for files whose names contain \"bills\"", "cmd": "find . -name '*bills*' -print"}, {"invocation": "displays all files in the current directory", "cmd": "find ."}, {"invocation": "List all nfs mount points on the system", "cmd": "mount -l | grep 'type nfs' | sed 's/.* on \\([^ ]*\\) .*/\\1/'"}, {"invocation": "Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place", "cmd": "find . -type f -exec sed -i \"s/1\\.2\\.3\\.4/5.6.7.8/g\" {} \\"}, {"invocation": "Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames", "cmd": "find /proc/scsi/ -path '/proc/scsi/usb-storage*' -type f | xargs grep -l 'Attached: Yes'"}, {"invocation": "execute a command in 10 seconds", "cmd": "true | sleep 10"}, {"invocation": "Unzip \"daily_backup.sql.gz\" and search for lines matching \"'x'|/x/\"", "cmd": "zcat daily_backup.sql.gz| grep -E \"'x'|/x/\""}, {"invocation": "Remove everything in a current folder prompting user on each action.", "cmd": "rm -ri *"}, {"invocation": "Print content of all files found regarding seach options '[whatever]'", "cmd": "find [whatever] -exec cat {} +"}, {"invocation": "Mount partition with label \"WHITE\" on \"/mnt/WHITE\" with read and write permission and have it accessible by user and group \"test\"", "cmd": "mount -L WHITE /mnt/WHITE -o rw,uid=test,gid=test"}, {"invocation": "Find all files that are modified in last 3 days", "cmd": "find . -type f -mtime -3"}, {"invocation": "Save the short system host name to variable \"hostname\"", "cmd": "hostname=`hostname -s`"}, {"invocation": "Find all files under and below /dir that were modified less than 60 minutes ago", "cmd": "find /dir -mmin -60"}, {"invocation": "Identify CMS version/releases accross all your PHPBB installations", "cmd": "find /home/*/public_html/ -type f -wholename *includes/constants.php -exec grep -H \"PHPBB_VERSION\" {} \\;"}, {"invocation": "Search the current directory tree for files containing \"album\" and \"vacations\" in their names and not containing \"2015\"", "cmd": "find . -name \"*album*\" -a -name \"*vacations*\" -a -not -name \"*2015*\""}, {"invocation": "List .html files in the current directory tree that contain string \"base\\-maps\" but do NOT contain string \"base\\-maps\\-bot\"", "cmd": "find . -name \"*.html\" -exec grep -lR 'base\\-maps' {} \\; | xargs grep -L 'base\\-maps\\-bot'"}, {"invocation": "Print unique lines of sorted file \"a\" and \"b\" and remove leading tabs", "cmd": "comm -3 a b | sed 's/^\\t//'"}, {"invocation": "find all directories that names are 'project.images' and display details", "cmd": "find  / -type d -name \"project.images\" -ls"}, {"invocation": "Move all 10*jpg files under /path to 2010*jpg files under the same directory", "cmd": "find /path -type f -name \"10*jpg\" | sed 's/.*/mv &/' | sed 's/mv \\(.*\\/\\)\\(.[^/]*\\)/& \\120\\2/' | sh"}, {"invocation": "remove all the pdf files in the current folder and do not delete those in the sub folders", "cmd": "find . -name \"*.pdf\" -maxdepth 1 -print0 | xargs -0 rm"}, {"invocation": "Format \"file.txt\" as space separated columns 28 characters in width", "cmd": "cat file.txt | column -c 28 -s \"\\ \""}, {"invocation": "find all the files which end with \".deb\" and display their base name (strip the extension)", "cmd": "find . -name '*.deb' -exec basename {} \\;"}, {"invocation": "Find all the files whose permissions are 777", "cmd": "find . -type f -perm 0777 -print"}, {"invocation": "Find all files/directories that are owned by user 'takuya' under current directory tree", "cmd": "find -user takuya"}, {"invocation": "Create a symbolic link named \"/usr/local/bin/subl\" to \"/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\"", "cmd": "sudo ln -s \"/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/subl"}, {"invocation": "Find all files named \"test2\" in the current directory tree", "cmd": "find -name test2"}, {"invocation": "Display inputfile all on one line (replace newlines by spaces)", "cmd": "awk '{printf \"%s \", $0}' inputfile"}, {"invocation": "search for the directory testdir in the folder /home", "cmd": "find /home -type d -name testdir"}, {"invocation": "Find links to file path/to/foo.txt", "cmd": "find -L / -samefile path/to/foo.txt"}, {"invocation": "find all files in current folder which have been accessed exactly 10 minutes ago", "cmd": "find . -amin 10"}, {"invocation": "Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents", "cmd": "find /path/to/files -type d -name '.git' -exec dirname {} +"}, {"invocation": "Search the current directory tree for all files matching regular expression \".*\\.rb$\"", "cmd": "find . -regex \".*\\\\.rb$\""}, {"invocation": "Search the current directory tree for files whose names end in \"rb\" or \"js\"", "cmd": "find . -regextype posix-egrep -regex \".*(rb|js)$\""}, {"invocation": "Find all *fstab* files under and below /etc", "cmd": "find /etc -name *fstab*"}, {"invocation": "Search *.txt files under and below /directory/containing/files for \"pattern_to_search\"", "cmd": "find /directory/containing/files -type f -name \"*.txt\" -exec grep -H 'pattern_to_search' {} +"}, {"invocation": "find all the directories in the current folder and replace the", "cmd": "find -type d|sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\\./mkdir -p &/}'"}, {"invocation": "Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them", "cmd": "find . -type d -ls | awk '{print $4 - 2, $NF}' | sort -rn | head"}, {"invocation": "Remove all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\" -print0 | xargs -0 rm"}, {"invocation": "Set 644 permission to all regular files under current directory", "cmd": "chmod 644 `find -type f`"}, {"invocation": "Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp", "cmd": "find / ! -newer /tmp/timestamp -exec touch {} \\;"}, {"invocation": "Removes all files from current folder but 5 newest ones, ignoring folders in a files list.", "cmd": "find . -maxdepth 1 -type f | xargs -x ls -t | awk 'NR>5' | xargs -L1 rm"}, {"invocation": "Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/", "cmd": "find -name '*.ISOLATE.quantifier.txt' -maxdepth 1 -exec mv {} ISOLATE/ +"}, {"invocation": "Enables shell option 'cdable_vars'.", "cmd": "shopt -s cdable_vars"}, {"invocation": "Find all files under current directory excluding hidden directories", "cmd": "find -name '.?*' -prune -o \\( -type f -print0 \\)"}, {"invocation": "Print all user names and terminals of users who are logged in", "cmd": "who | cut -d \" \" -f1,2"}, {"invocation": "Copy the executable \"python2.7\" in $PATH to \"myenv/bin/python\"", "cmd": "cp `which python2.7` myenv/bin/python"}, {"invocation": "Dump \"FILENAME\" as 2 byte wide hexadecimal numbers", "cmd": "od -tx2 FILENAME"}, {"invocation": "Remove all vmware-*.log files/directories under current directory", "cmd": "find . -name vmware-*.log | xargs -i rm -rf {}"}, {"invocation": "Print all lines of \"seq 10\" except the last 3", "cmd": "seq 10 | tac | sed '1,3d' | tac"}, {"invocation": "Print the last line of the alphabetically sorted lines in file \"set\"", "cmd": "tail -1 <(sort set)"}, {"invocation": "find files with the extension .conf in the /etc directory", "cmd": "find /etc -name '*.conf'"}, {"invocation": "Print the drive and mount point of the last mounted drive", "cmd": "mount | tail -1 | sed 's/^.* on \\(.*\\) ([^)]*)$/\\1/'"}, {"invocation": "Search the files of the current directory tree for string \"searched-string\"", "cmd": "find . | xargs grep \"searched-string\""}, {"invocation": "List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety", "cmd": "find . -print0 | grep --null 'FooBar' | xargs -0"}, {"invocation": "Use \"vagrant-ssh\" as the config file and ssh into \"default\" host", "cmd": "ssh -F vagrant-ssh default"}, {"invocation": "force delete all the directories the folder \"test folder\"", "cmd": "find 'Test Folder' -type d -print0 | xargs -0 rm -rf"}, {"invocation": "Find all *.cgi files/directories under current directory and change their permission to 775", "cmd": "find . -name '*.cgi' -print0 | xargs -0 chmod 775"}, {"invocation": "Determine DISPLAY variable for the session when logged in via SSH", "cmd": "who am i | awk '{print $5}' | sed 's/[()]//g' | cut -f1 -d \".\" | sed 's/-/./g'"}, {"invocation": "Find all directories under htdocs directory and set their permission to 775", "cmd": "find htdocs -type d -exec chmod 775 {} +"}, {"invocation": "display list of all the hidden regular/normal files in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search/ -type f -iname \".*\" -ls"}, {"invocation": "Find all files under /path and below writable by `group' or `other'", "cmd": "find /path -perm /g+w,o+w"}, {"invocation": "Search the home directory for files accessed more than 10 days ago", "cmd": "find ~/ -atime +10"}, {"invocation": "Find files in the /var/log folder which were modified between 60 minutes and 10 minutes ago", "cmd": "find /var/log/ -mmin -60 -mmin +10"}, {"invocation": "display all the html files in the current folder", "cmd": "find . -name \"*.html\" -print"}, {"invocation": "Remove all *.bak files under current directory", "cmd": "find . -type f -name \\*.bak -print0 | xargs -0 rm -v"}, {"invocation": "Find all files that were last accessed more than 7 days ago under /home", "cmd": "find /home -atime +7"}, {"invocation": "List all .jpg files in the home directory tree", "cmd": "find . -name \"*.jpg\" -print0 | xargs -0 ls"}, {"invocation": "Make directory \"aaa/bbb\"", "cmd": "mkdir aaa/bbb"}, {"invocation": "Compress \"hello world\" and save to variable \"hey\"", "cmd": "hey=$(echo \"hello world\" | gzip -cf)"}, {"invocation": "Print source directory of bash script", "cmd": "dirname \"$(readlink -f \"$0\")\""}, {"invocation": "Print the list of files from the \"/zu/durchsuchender/Ordner\" directory tree whose names begin with \"beispieldatei\" and which contain string \"Beispielinhalt\"", "cmd": "find \"/zu/durchsuchender/Ordner\" -name \"beispieldatei*\" -print0 | xargs -0 grep -l \"Beispielinhalt\""}, {"invocation": "find all files  that names are 'apt'", "cmd": "find  / -name \"apt\""}, {"invocation": "Recursively change the group ownership to \"laravel\" in \"./storage\"", "cmd": "sudo chown -R :laravel ./storage"}, {"invocation": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search", "cmd": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;"}, {"invocation": "Copy file linked to by \"file\" to \"file\"", "cmd": "cp --remove-destination `readlink file` file"}, {"invocation": "Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8", "cmd": "find sort_test -type f | env -i LC_COLLATE=en_US.UTF-8 sort"}, {"invocation": "Removes trailing and starting newlines from file", "cmd": "tac file | sed -e '/./,$!d' | tac | sed -e '/./,$!d'"}, {"invocation": "Execute 'echo -e \"\\tHello World\"' every 2 seconds", "cmd": "watch 'echo -e \"\\tHello World\"'"}, {"invocation": "Set 644 permission to all regular files under current directory", "cmd": "find . -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Save the system host name in variable \"HOSTNAME\"", "cmd": "HOSTNAME=$(hostname)"}, {"invocation": "Find and copy all log files in the current directory tree to /tmp/log-files", "cmd": "find . -name \\*.log -print0 | xargs -I{} -0 cp -v {} /tmp/log-files"}, {"invocation": "Display 798 backwards", "cmd": "echo 798|rev"}, {"invocation": "Compress all files with '.txt' extension under current directory", "cmd": "echo *.txt | xargs gzip -9"}, {"invocation": "Remove files from the file system that are owned by nobody", "cmd": "find / -nouser -exec rm {} +"}, {"invocation": "Find all 1US* files/directories under current directory", "cmd": "find . -name '1US*'"}, {"invocation": "Find files whose pathnames contain \"string\" and print these pathnames replacing 'search string' with 'new string'", "cmd": "find . |xargs grep search string | sed 's/search string/new string/g'"}, {"invocation": "Find all HTML files starting with letter 'a' in the current directory and below ignoring the case", "cmd": "find . -iname a\\*.html"}, {"invocation": "find all the regular/normal files in the /path folder and delete them", "cmd": "find /path -type f -print0 | xargs -0 rm"}, {"invocation": "Print the current date followed by \": $line\"", "cmd": "echo \"$(date): \" $line"}, {"invocation": "find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1", "cmd": "find . -name \\? -daystart -mtime +0 -mtime -3"}, {"invocation": "Non-recursively finds all '*.pdf' files in a current folder and removes them.", "cmd": "find . -maxdepth 1 -name \"*.pdf\" -print0 | xargs -0 rm"}, {"invocation": "remove all the core files in the current directory", "cmd": "/bin/find -name \"core\" \u2014 exec rm {} \\;"}, {"invocation": "Find all directories in the current directory tree excluding hidden directories and create them in \"../demo_bkp\"", "cmd": "find . -not -path \\*/.\\* -type d -exec mkdir -p -- ../demo_bkp/{} \\;"}, {"invocation": "Execute \"date\" every second", "cmd": "watch -n 1 date"}, {"invocation": "Display an infinite number of lines consisting of \"y\", until the user presses the Q key.", "cmd": "yes | more"}, {"invocation": "Allow anyone to run command \"Xvfb\" as the owner of \"Xvfb\"", "cmd": "sudo chmod u+s `which Xvfb`"}, {"invocation": "Recursively print all files and directories in the directory tree \"$absolute/path/of/your/dir\"", "cmd": "tree $absolute/path/of/your/dir"}, {"invocation": "Attempt to connect as root to localhost and copy /home/reportuser/dailyReport.doc to directory /root/dailyReports/20150105/ - this will normally fail because ssh won't accept root connections by default.", "cmd": "scp -p /home/reportuser/dailyReport.doc root@localhost:/root/dailyReports/20150105/"}, {"invocation": "Find all files with the name \"MyProgram.c\" in the current directory and all of it's sub-directories.", "cmd": "find -name \"MyCProgram.c\""}, {"invocation": "Find all *.ogg (case insensitive) files/directories in entire file system", "cmd": "sudo find / -iname '*.ogg'"}, {"invocation": "find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .", "cmd": "find .  -type f  -exec ls -lrt {} \\; |awk -F' ' '{print $9}'"}, {"invocation": "Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree", "cmd": "find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'"}, {"invocation": "Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+'", "cmd": "find /home/folder1/*.txt -type f -exec ln -s {} \"folder1_\" +\\;"}, {"invocation": "Print a list of all regular files residing in the current directory", "cmd": "find . -maxdepth 1 -type f -print0"}, {"invocation": "Assign permissions 755 to directories in the current directory tree", "cmd": "find . -type d -print0 | xargs -0 chmod 755"}, {"invocation": "Print the contents of \"filename\"", "cmd": "cat filename"}, {"invocation": "Search only for regular files", "cmd": "find -type f"}, {"invocation": "Find all files/directories owned by user 'joebob' under '/some/directory' directory tree", "cmd": "find /some/directory -user joebob -print"}, {"invocation": "Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one", "cmd": "echo -e \"$(TZ=GMT+30 date +%Y-%m-%d)\\n$(TZ=GMT+20 date +%Y-%m-%d)\" | grep -v $(date +%Y-%m-%d) | tail -1"}, {"invocation": "Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.", "cmd": "find foo -type f ! -name '*Music*' -exec cp {} bar \\;"}, {"invocation": "Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory", "cmd": "find . -name $1 -type f -exec grep -i $2 '{}' \\;"}, {"invocation": "display a long listing of the files in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 -type f -exec ls -l {} +"}, {"invocation": "Search for \"vid=123\" in all compressed files found under \"/my_home\" matching \"*log.20140226*\"", "cmd": "zcat `find /my_home -name '*log.20140226*'`|grep 'vid=123'"}, {"invocation": "Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter", "cmd": "find . -name \"*.$1\" -delete;"}, {"invocation": "Delete all files/directories named 'file' under current directory tree", "cmd": "find -name file -delete"}, {"invocation": "Find all files named 'aaa.txt' under current directory tree and display their contents", "cmd": "cat `find . -name aaa.txt`"}, {"invocation": "Append the current date in '%Y%m%d_%H%M' format with the basename of $0 and save it to variable 'LOGNAME'", "cmd": "LOGNAME=\"`basename \"$0\"`_`date \"+%Y%m%d_%H%M\"`\""}, {"invocation": "Decompress and extract 'archive.tar.gz' into '/destination'", "cmd": "gzip -dc archive.tar.gz | tar -xf - -C /destination"}, {"invocation": "Print list of files that are only in directory /dir1 and not their sub directories and only their file names.", "cmd": "diff -q /dir1 /dir2 | grep /dir1 | grep -E \"^Only in*\" | sed -n 's/[^:]*: //p'"}, {"invocation": "Search in the current directory and all sub-directories except ./D for the file named hi.dat.", "cmd": "find . \\( -name D -prune \\) -o -name hi.dat"}, {"invocation": "Receive pattern to search for on the standard input and print only matching part of lines from file 'f.html'", "cmd": "cat f.html | grep -o \\"}, {"invocation": "Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today", "cmd": "find /tmp/test/* -mtime -0"}, {"invocation": "display a list of all java or jsp files in the current folders", "cmd": "find . \\( -name '*jsp' -o -name '*java' \\) -type f -ls"}, {"invocation": "find all the files in the folder \"/usr/app/etl/01/OTH/log/tra\" which have been modified  in the last 240 hours  excluding hidden files and those with the name \"/usr/app/etl/01/CLE/par/files_to_skip.par\"", "cmd": "find /usr/app/etl/01/OTH/log/tra -type f ! -name \".*\" -mtime -10 | egrep -vf /usr/app/etl/01/CLE/par/files_to_skip.par"}, {"invocation": "Print the most recently modified file", "cmd": "ls -1tr * | tail -1"}, {"invocation": "Find a 400 permission file under /data directory", "cmd": "find /data -type f -perm 400 -print -quit"}, {"invocation": "Search files \"file-containing-can't\" in the current directory tree for the string \"can't\"", "cmd": "find . -name \"file-containing-can't\" -exec grep \"can't\" '{}' \\; -print"}, {"invocation": "Print the minimum transmission time of 10 ping requests to \"google.com\" from cygwin", "cmd": "ping google.com -n 10 | awk '/Minimum =/ { sub(\",\",\"\",$3); print $3 }'"}, {"invocation": "Search in the current directory and all sub-directories except ./D for the file named hi.dat", "cmd": "find -path ./D -prune -o -name hi.dat -print"}, {"invocation": "display all regular/normal files in the current folder ending with the word ummy", "cmd": "find -type f -name *ummy"}, {"invocation": "Find every vim undo file in the current directory tree", "cmd": "find -type f -iname '*.un~'"}, {"invocation": "find all the files that were modified two days ago", "cmd": "find . -daystart -ctime 1 -type f"}, {"invocation": "List the directory paths of all file.ext files under present working directory", "cmd": "find `pwd` -name file.ext |xargs -l1 dirname"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found", "cmd": "find /var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \\;"}, {"invocation": "Search the /var/www/ tree for files not owned by user `apache'", "cmd": "find /var/www ! -user apache -print0 | xargs -0"}, {"invocation": "Look for SUID files and directories", "cmd": "find / -perm +4000"}, {"invocation": "Find all files/directories with '.js' extension under current directory tree excluding paths that contain the directory './directory'", "cmd": "find -name \"*.js\" -not -path \"./directory/*\""}, {"invocation": "change the owner of all the regular/normal files which belong to the root user to \"tom\" in the current folder", "cmd": "find .-type f -user root -exec chown tom {} \\;"}, {"invocation": "Prints day of first Tuesday in a month.", "cmd": "cal | awk 'NR==2 {for (i=1;i<=NF;i++) {sub(/ /,\"\",$i);a[$i]=i}} NR>2 {if ($a[\"Tu\"]~/[0-9]/) {printf \"%02d\\n\",$a[\"Tu\"];exit}}' FIELDWIDTHS=\"3 3 3 3 3 3 3 3\""}, {"invocation": "For each line in 'file', print \"result = \" followed by the line backwards.", "cmd": "rev file | awk '{print \"result =\",$0}'"}, {"invocation": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3", "cmd": "find / -iname \"*.mp3\" -type f | xargs -I '{}' mv {} /mnt/mp3"}, {"invocation": "display all the directories in the current folder excluding those that are present in the aa directory tree", "cmd": "find . -type d -name aa -prune -o -print"}, {"invocation": "List all files under and below the directory given as variable $FULFILLMENT", "cmd": "find $FULFILLMENT -ls"}, {"invocation": "Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them", "cmd": "find ./ -type f -name \"$2\" -exec sed -i \"s/$3/$4/g\" {} \\;"}, {"invocation": "List all files in current directory whose name or file type description contains the word \"ASCII\".", "cmd": "file * | grep ASCII"}, {"invocation": "Find directories owned by user news with permissions 775", "cmd": "find / -user news -type d -perm 775 -print"}, {"invocation": "View history using \"more\"", "cmd": "history | more"}, {"invocation": "Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*", "cmd": "find /path/to/directory/* -maxdepth 0 -type d"}, {"invocation": "create a hard link as directory named \"new_hard_link\" to the directory \"existing_dir\" as root", "cmd": "sudo  ln  -d  existing_dir  new_hard_link"}, {"invocation": "Print the file names along with their sizes under current directory tree", "cmd": "find . -type f -printf \"%f %s\\n\""}, {"invocation": "Find all image.pdf files under ./polkadots", "cmd": "find ./polkadots -type f -name \"image.pdf\""}, {"invocation": "find  symbolic link file that name match  '*sysdep.c'", "cmd": "find . -lname '*sysdep.c'"}, {"invocation": "Search the /Path directory tree for files whose pathnames match pattern \"/Path/bar*\" and whose names match pattern \"file_name*\"", "cmd": "find /Path -path \"/Path/bar*\" -name \"file_name*\""}, {"invocation": "Measure the disk space taken up by all TXT files in the current directory tree", "cmd": "find . -iname \"*.txt\" -exec du -b {} + | awk '{total += $1} END {print total}'"}, {"invocation": "Remove all tmp/*.mp3 files", "cmd": "find tmp -maxdepth 1 -name *.mp3 -print0 | xargs -0 rm"}, {"invocation": "find all the files with the name september ( case insensitive )", "cmd": "find -iname september"}, {"invocation": "Find all hidden regular files starting from the current directory", "cmd": "find . -type f -name \".*\""}, {"invocation": "Print history with the first field removed", "cmd": "history | awk '{sub($1, \"\"); sub(/^[ \\t]+/, \"\"); print}'"}, {"invocation": "Remove all a.out, *.o, and core files under the current directory", "cmd": "find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}, {"invocation": "For each line in 'file', print \"result = \" followed by the line backwards.", "cmd": "awk '{print \"result =\",$0}' <(rev file)"}, {"invocation": "Search the current directory recursively for regular files last changed less than 2 days ago", "cmd": "find . type -f -ctime -2"}, {"invocation": "Copy directory structure from directory 'olddir' to 'newdir'", "cmd": "find olddir -type d -printf \"newdir/%P\\0\" | xargs -0 mkdir -p"}, {"invocation": "Finds if environment variable like 'DUALCASE' exists in environment.", "cmd": "env | grep DUALCASE"}, {"invocation": "Changes group ownership of '/etc/btsync/[prefered conf name].conf' to 'btsync'.", "cmd": "chgrp btsync /etc/btsync/[prefered conf name].conf"}, {"invocation": "Find all 777 permission directories under current directory and  set permissions to 755", "cmd": "find . -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Display a long listing of all files/directories named 'file' under current directory tree", "cmd": "find -name file -ls"}, {"invocation": "Copy all files in current directory that do not match */not-from-here/* in their paths to /dest", "cmd": "find . -type f -not -path '*/not-from-here/*' -exec cp '{}' '/dest/{}' \\;"}, {"invocation": "display all the hidden directories in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search -path '*/.*' -print"}, {"invocation": "List the entire cron job list of user \"apache\".", "cmd": "crontab -u apache -l"}, {"invocation": "find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified", "cmd": "find -newer /etc/passwd"}, {"invocation": "Search the CSS files found in the current directory tree for string \"foo\"", "cmd": "find . -name \\*.css -print0 | xargs -0 grep -nH foo"}, {"invocation": "replace the word foo to bar in the current folder in all the regular/normal files which have execute permission  (does not update the file)", "cmd": "find . -type f -executable -exec sed -i 's/foo/bar/g' {} +"}, {"invocation": "Print the file content of command \"f\"", "cmd": "cat \"$(which f)\""}, {"invocation": "Print the file content of command \"f\"", "cmd": "cat `which f`"}, {"invocation": "change owner and group of the file dir1 to user root and group  specialusers", "cmd": "chown root:specialusers dir1"}, {"invocation": "find the count of text files that are present in the current working directory.", "cmd": "find . -maxdepth 1 -name \\*.txt -print0 | grep -cz ."}, {"invocation": "Create the directory '.npm-global' in the user's home directory(~).", "cmd": "mkdir ~/.npm-global"}, {"invocation": "Print 10 lines of a single \"x\"", "cmd": "yes x | head -n 10"}, {"invocation": "Removes all files like 'A*.pdf' from current folder without prompting.", "cmd": "rm -f A*.pdf"}, {"invocation": "Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play", "cmd": "find /tmp/ -ctime -1 -name \"x*\" -exec mv '{}' ~/play/"}, {"invocation": "Remove all files with a txt extension under current directory", "cmd": "find . -type f -name \"*.txt\" -exec rm {} \\; -print"}, {"invocation": "Create intermediate directories \"full\", \"path\" as required and directory \"to\"", "cmd": "mkdir -p `dirname /full/path/to/file.txt`"}, {"invocation": "Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them", "cmd": "find /etc -print0 | grep -azZ test | xargs -0 file"}, {"invocation": "List files in the current directory tree using echo", "cmd": "find . -exec echo {} ;"}, {"invocation": "find all the header files in /usr/include which have been modified in the last 400 days", "cmd": "find /usr/include -type f -mtime -400 -name \"*.h\""}, {"invocation": "Mount \"device_name\" on \"mount_point\"", "cmd": "sudo mount device_name mount_point"}, {"invocation": "This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1", "cmd": "find /root/Maildir/ -mindepth 1 -type f -mtime +14 | xargs rm"}, {"invocation": "Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago", "cmd": "find /home/dm/Video -mtime +10"}, {"invocation": "Copy the current directory tree to \"newdirpathname\" preserving directory hierarchy", "cmd": "find ./ -depth -print | cpio -pvd newdirpathname"}, {"invocation": "Find all directories in current directory without going into sub-directories", "cmd": "find . -type d -maxdepth 1"}, {"invocation": "Find files whose pathnames end in \"config\"", "cmd": "find .  -path '*/*config'"}, {"invocation": "Search for the regex ^catalina in the first line of each file under current directory", "cmd": "find -type f | xargs head -v -n 1 | grep -B 1 -A 1 -e '^catalina'"}, {"invocation": "search all the files in the current folder and assign them to a variable", "cmd": "files=`find .`"}, {"invocation": "Silently read a single character from standard input into variable \"REPLY\" without backslash escapes, with a timeout of 5 seconds, and using the prompt $'Press any key or wait 5 seconds to continue...\\n'", "cmd": "read -rsp $'Press any key or wait 5 seconds to continue...\\n' -n 1 -t 5"}, {"invocation": "Print the host name", "cmd": "hostname"}, {"invocation": "Print full path of command \"programname\"", "cmd": "which programname"}, {"invocation": "Change to folder where the oracle binary is.", "cmd": "cd $(dirname `which oracle`)"}, {"invocation": "Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers", "cmd": "find . \\( -name \"*.php\" -o -name \"*.html\" \\) -print0 | xargs -0 grep -Hin \"joomla\""}, {"invocation": "Find all files that were last accessed less than7 days ago under /home", "cmd": "find /home -mtime -7"}, {"invocation": "Print the base name of the current working directory", "cmd": "basename \"`pwd`\""}, {"invocation": "Search for file \"file\" between level 2 and 3 of the directory tree", "cmd": "find -mindepth 2 -maxdepth 3 -name file"}, {"invocation": "Stores system load average number in the 'proc_load_average' variable.", "cmd": "proc_load_average=$(w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.')"}, {"invocation": "Copy all files in \"/var/spool/mail\" to \"/home/username/mail\" preserving the directory hierarchy and modification times", "cmd": "find /var/spool/mail -type f | cpio -pvdmB /home/username/mail"}, {"invocation": "Search the current directory tree for files whose name is \".note\", case insensitive", "cmd": "find . -iname '.note' | sort -r"}, {"invocation": "Output line number and lines 200000000 through 200000005 from the infinite input of \"y\"", "cmd": "yes | sed -n '200000000,${=;p};200000005q'"}, {"invocation": "Find all files in the /home/ directory tree that are owned by bob", "cmd": "find /home -user bob"}, {"invocation": "Remove files under current directory that contains white space in their name", "cmd": "find . -name \"* *\" -exec rm -f {} \\;"}, {"invocation": "Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them", "cmd": "find . -type f -iname '*'\"$*\"'*' -ls"}, {"invocation": "find all the files in the entire filesystem which belong to the user root and display the ten files.", "cmd": "find / -user root | head"}, {"invocation": "Print history with the first field removed", "cmd": "history | awk '{sub($1, \"\", $0); sub(/^[ \\t]+/, \"\", $0); print}'"}, {"invocation": "display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names", "cmd": "find /var/log -name \"*.log\" -print0"}, {"invocation": "Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory", "cmd": "find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's/jpg$/jpeg/i' {} +"}, {"invocation": "Prints path to the folder that contains target of symbolic link ../../../../etc/passwd.", "cmd": "$(dirname $(readlink -e ../../../../etc/passwd))"}, {"invocation": "Set the host name to the contents of \"/etc/hostname\"", "cmd": "hostname $(cat /etc/hostname)"}, {"invocation": "Copies all files like \"*FooBar*\" under the current directory to the '~/foobar' directory.", "cmd": "find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +"}, {"invocation": "Sort lines in \"set1\" and \"set2\" to standard output preserving only unique lines", "cmd": "sort -u set1 set2"}, {"invocation": "Create symbolic link \"$1/link\" to the absolute path of \"$2\"", "cmd": "ln -s \"$(readlink -e \"$2\")\" \"$1/link\""}, {"invocation": "find all files in the current directory do not display the files which do not have read permission to all users", "cmd": "find . ! -perm -g+r,u+r,o+r -prune"}, {"invocation": "Find all files in directory tree \"dirname\"", "cmd": "find dirname -exec echo found {} \\;"}, {"invocation": "Search the current directory recursively for directories with the execute permission set for everybody", "cmd": "find -type d ! -perm -111"}, {"invocation": "Look for files in the current directory tree to which the group users have full access", "cmd": "find . -perm -070 -print"}, {"invocation": "search for a word in all the php files in the current folder and display the count of all matching lines.", "cmd": "find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test' | wc -l"}, {"invocation": "Find directories modified within the last 7 days", "cmd": "find . -mtime -7 -type d"}, {"invocation": "Print content of 'whatever' file", "cmd": "cat whatever | egrep 'snozzberries|$'"}, {"invocation": "Print short DNS lookup for each domain name in a file 'list'", "cmd": "dig +short -f list"}, {"invocation": "Find and delete the file with inode number 1316256", "cmd": "find ./ -inum 1316256 -delete"}, {"invocation": "Find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6", "cmd": "find lpi104-6 -samefile lpi104-6/file1"}, {"invocation": "Create a symbolic link to file \"/usr/bin/perl\" named with escaped characters \"/usr/local/bin/perl\\r\\n\"", "cmd": "sudo ln -s /usr/bin/perl /usr/local/bin/perl`echo -e '\\r'`"}, {"invocation": "Change permissions to u=rw,g=r,o= for all files inside the current directory tree", "cmd": "find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}, {"invocation": "Number every line of standard input as zero padded to 6 characters followed by \"-\"", "cmd": "nl -s- -ba -nrz"}, {"invocation": "Saves folder path where target of symbolic link $file file is located in 'base' variable.", "cmd": "base=$(dirname $(readlink $file))"}, {"invocation": "Find all links to path/to/file", "cmd": "find -L -samefile path/to/file"}, {"invocation": "List environment variables whose name contains \"X\"", "cmd": "set | grep -oP '^\\w*(?==)' | grep X"}, {"invocation": "Recursively change the ownership of all files in \"/Users/xxx/Library/Developer/Xcode/Templates\" to \"xxx\"", "cmd": "sudo chown -R xxx /Users/xxx/Library/Developer/Xcode/Templates"}, {"invocation": "Create directorie(s) 'some/path' as required in the current directory", "cmd": "mkdir -p ./some/path"}, {"invocation": "Create a gzip archive file ($tarFile) of all *.log files under $sourcePath", "cmd": "find $sourcePath -type f -name \"*.log\" -exec tar -uvf $tarFile {} \\;"}, {"invocation": "Set timestamp of all PHP files in current directory to date specified.", "cmd": "touch -d '30 August 2013' *.php"}, {"invocation": "Find files/directories under current directory that are modified exactly one hour ago", "cmd": "find . -mtime 1"}, {"invocation": "Unzip and untar \"myarchive.tar.gz\" and check for corruption", "cmd": "gunzip -c myarchive.tar.gz | tar -tvf -"}, {"invocation": "display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .", "cmd": "find . -size -26c -size +23c -exec ls -l '{}' \\;"}, {"invocation": "Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"0\" [1]=\"1\" [2]=\"0\")'", "cmd": "true | false | true"}, {"invocation": "Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir", "cmd": "find . -type d -mtime 0 -exec mv {} /path/to/target-dir \\;"}, {"invocation": "Display the named characters in \"line1\\r\\nline2\"", "cmd": "echo -e \"line1\\r\\nline2\" | od -a"}, {"invocation": "Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree", "cmd": "find /path/to/look/in/ -type d | grep .texturedata"}, {"invocation": "Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree", "cmd": "find /var/log -group adm -name \"*.log\""}, {"invocation": "Print each unique line that is duplicated in files \"file1\" and \"file2\" combined", "cmd": "sort file1 file2 | uniq -d"}, {"invocation": "Mount the \"vboxsf\" filesystem \"myFileName\" on \"~/destination\"", "cmd": "sudo mount -t vboxsf myFileName ~/destination"}, {"invocation": "Print the file paths and their sizes for all files under full_path_to_your_directory", "cmd": "find full_path_to_your_directory -type f -printf '%p %s\\n'"}, {"invocation": "Print out the contents of all *.txt files in the home directory", "cmd": "find ~ -name '*.txt' -print0 | xargs -0 cat"}, {"invocation": "Save the user name of the current user to variable \"whoami\"", "cmd": "whoami=$(whoami)"}, {"invocation": "Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from \"${@:3}\" array slice", "cmd": "diff \"${@:3}\" <(sort \"$1\") <(sort \"$2\")"}, {"invocation": "Print the names of all files and directories in the current directory tree", "cmd": "find . -print"}, {"invocation": "Find all empty directories under /tmp", "cmd": "find /tmp -type d -empty"}, {"invocation": "Finds strings with text \"searched-string\" recursively in all files of current folder.", "cmd": "grep -r \"searched-string\" ."}, {"invocation": "Search appended data in \"logfile.log\" for \"something\" with a timeout of 3 seconds", "cmd": "tail -f logfile.log | grep --line-buffered \"something\" | read -t 3"}, {"invocation": "Print host name without a newline", "cmd": "echo -n `hostname`"}, {"invocation": "Print variable \"$module\" in formatted columns with at most 80 characters per line", "cmd": "echo $modules | column -t | fold | column -t"}, {"invocation": "change the ownership of all the files in the file system from edwarda to earnestc", "cmd": "find / -user edwarda -print | xargs chown earnestc"}, {"invocation": "Count the number of regular files in the current directory tree", "cmd": "find . -type f | wc -l"}, {"invocation": "Prints long listing of content in the current folder with C-style escapes for nongraphic characters", "cmd": "ls -lb"}, {"invocation": "display all directories in the folder \"/myfiles\"", "cmd": "find /myfiles -type d"}, {"invocation": "find all files in the current folder which have only the write permission for the others", "cmd": "find . -perm -0002 -print"}, {"invocation": "delete all the directories empty directories in the current folder", "cmd": "find . -type d -empty -delete"}, {"invocation": "Delete all files in the /TBD directory that were modified more than 1 day ago", "cmd": "find /TBD/* -mtime +1 -exec rm -rf {} \\;"}, {"invocation": "Search /etc for files modified within the last day", "cmd": "find /etc -type f -ctime -1"}, {"invocation": "Find all *.mp3 (case insensitive) files/directories under /tmp and remove them", "cmd": "find /tmp -iname '*.mp3' -print0 | xargs -0 rm"}, {"invocation": "Descend into every directory under /etc and print the file/directory names with relative paths", "cmd": "find /etc -execdir echo \"{}\" ';'"}, {"invocation": "Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them", "cmd": "find . -perm 0644 | head"}, {"invocation": "Print only common file names in sorted listings of directory 'dir1' and 'dir2'", "cmd": "comm -1 -2 <(ls /dir1 | sort) <(ls /dir2 | sort)"}, {"invocation": "Format tab separated fields in \"FILE\" as a table", "cmd": "column -t -s $'\\t' FILE"}, {"invocation": "Print as many dots as there are files named \"file.ext\" in the /home/kibab directory tree", "cmd": "find /home/kibab -name file.ext -exec echo . ';'"}, {"invocation": "Find all files in the current directory tree named 'FILES.EXT'", "cmd": "find . -name \"FILES.EXT\""}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find -xtype l"}, {"invocation": "Search the current directory tree for files that are less than 50kb", "cmd": "find . -size -50k"}, {"invocation": "Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones", "cmd": "comm abc def"}, {"invocation": "Search for all files with either \"sitesearch\" or \"demo\" in their path names", "cmd": "find . -ipath '*sitesearch*' -ipath '*demo*'"}, {"invocation": "find regular files in the \"mail\" folder under the user's home directory, displaying filenames and lines that contain the text \"Linux\"", "cmd": "find ~/mail -type f | xargs grep \"Linux\""}, {"invocation": "SSH login in 'middle.example.org' via port 2222 as user 'deviceuser' using a private key file './device_id.pem'", "cmd": "ssh -i ./device_id.pem deviceuser@middle.example.org:2222"}, {"invocation": "find files in current folder using name patterns and sort the display the file names in the sorted order", "cmd": "find . -name \"S1A*1S*SAFE\" | awk -F/ '{print $NF\"/\"$0}' | sort -t_ -k 5,5 | cut -d/ -f 2-"}, {"invocation": "Make directories \"a/b/c\" as needed without causing an error if it exists", "cmd": "mkdir -p a/b/c"}, {"invocation": "List all SGID and SUID files in entire file system", "cmd": "find / -type f \\( -perm -4000 -o -perm -2000 \\) -ls"}, {"invocation": "Print the IP addresses of the host name", "cmd": "hostname -I"}, {"invocation": "Save the absolute path of the current script to variable \"SELF\"", "cmd": "script=\"`readlink -f \"${BASH_SOURCE[0]}\"`\""}, {"invocation": "find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file", "cmd": "find / -name *.mp3 -fprint nameoffiletoprintto"}, {"invocation": "Find all files in the /home/myuser directory recursively that are older than 7 days", "cmd": "find /home/myuser -mtime +7 -print"}, {"invocation": "create directory foo", "cmd": "mkdir foo"}, {"invocation": "Find all files/directories under $dir directory tree which have been modified in the last 3 days", "cmd": "find $dir -mtime -3"}, {"invocation": "Print each line that is found only once in \"file1\" and \"file2\" combined", "cmd": "sort file1 file2 | uniq -u"}, {"invocation": "Display all lines in 'file' containing 'something', pausing for user input after each page.", "cmd": "grep something file | more"}, {"invocation": "Recursively change owner and group to \"$JBOSS_AS_USER\" of \"$JBOSS_AS_DIR/\"", "cmd": "chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR/"}, {"invocation": "change user and group of the file /usr/bin/aws to user amzadm and group root", "cmd": "chown amzadm.root  /usr/bin/aws"}, {"invocation": "search through only the /usr and /home directories for any file named Chapter1.txt", "cmd": "find /usr /home -name Chapter1.txt -type f"}, {"invocation": "Identify CMS version/releases accross all your Wordpress websites", "cmd": "find /var/www/vhosts/*/httpdocs/ -type f -iwholename \"*/wp-includes/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}, {"invocation": "display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.", "cmd": "find . -perm 777  -mtime 0 -print"}, {"invocation": "Find all PHP files in the current directory recursively", "cmd": "find . -name \\*.php -type f"}, {"invocation": "Print the byte count of all regular files found in the current directory tree", "cmd": "find . -type f | xargs | wc -c"}, {"invocation": "Create compressed archive from \"my_large_file_1\" and \"my_large_file_2\" and split into files of size 1024 MiB with prefix \"myfiles_split.tgz_\"", "cmd": "tar cz my_large_file_1 my_large_file_2 | split -b 1024MiB - myfiles_split.tgz_"}, {"invocation": "Print the names of all regular files in the current directory tree", "cmd": "find . -type f -exec echo {} \\;"}, {"invocation": "Find files under /tmp that are larger than 10KB and smaller than 20KB", "cmd": "find /tmp -size +10k -size -20k"}, {"invocation": "make directory \"/etc/cron.15sec\"", "cmd": "mkdir /etc/cron.15sec"}, {"invocation": "Filters only directories from long file listing of the current directory", "cmd": "ls -l --color=always \"$@\" | egrep --color=never '^d|^[[:digit:]]+ d'"}, {"invocation": "extracts text between pattern1 and pattern2 if and only if the pattern1 is followed by pattern2", "cmd": "tac infile | sed -ne '/pattern2/,/pattern1/ p' | tac -"}, {"invocation": "Search for the string 'device' in all regular files in the entire filesystem", "cmd": "find / -type f -print | xargs grep \"device\""}, {"invocation": "Find files whose data was modified within the given days of the month", "cmd": "find ./ -daystart -mtime -10 -and -mtime +1"}, {"invocation": "search a url in all regular/normal files in a folder.", "cmd": "find ./ -type f -exec grep https://www.ksknet.net {} \\;"}, {"invocation": "Recursively finds all \"file_pattern_name\" files and folders and prints strings with \"pattern\", searching through found folders recursively.", "cmd": "find ./ -name \"file_pattern_name\"  -exec grep -r \"pattern\" {} \\;"}, {"invocation": "Search for utility \"foo\" in PATH, display its file type description.", "cmd": "file $(which foo)"}, {"invocation": "Find all files/directories under current directory tree that contain 'pattern' in their names", "cmd": "find -name \"*pattern*\""}, {"invocation": "List all files under current directory with white space safety in their paths", "cmd": "find . -type f -print0 | xargs -0 ls"}, {"invocation": "List the number of occurrences of each unique character in \"The quick brown fox jumps over the lazy dog\" sorted from most frequent to least frequent", "cmd": "echo \"The quick brown fox jumps over the lazy dog\" | grep -o . | sort | uniq -c | sort -nr"}, {"invocation": "Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names", "cmd": "find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'"}, {"invocation": "Print $d if $d is an empty directory", "cmd": "find \"$d\" -prune -empty -type d"}, {"invocation": "List all files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 | xargs -r ls -l"}, {"invocation": "Search the current directory tree for all files matching pattern \"*.rb\"", "cmd": "find . -name \"*.rb\""}, {"invocation": "Find all 777 permission directories and use chmod command to set permissions to 755", "cmd": "find . -type d -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '", "cmd": "find . -exec echo ' List of files & Direcoty'   {} \\;"}, {"invocation": "Delete all files that have not been accessed in the last 30 days", "cmd": "find . -type f -atime +30 -exec rm {} \\;"}, {"invocation": "display the version of find command", "cmd": "find --version"}, {"invocation": "display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins", "cmd": "find . -maxdepth 1 -name '*.dat' -type f -cmin +60 -exec basename {} \\;"}, {"invocation": "Search for files/directories which are writable by either their owner or their group", "cmd": "find . -perm /220"}, {"invocation": "Search the /myfiles directory tree for files whose names contain \"blue\"", "cmd": "find /myfiles -name '*blue*'"}, {"invocation": "Print \"y\" for each line in \"file2.txt\" found in \"file1.txt\" and a blank newline otherwise", "cmd": "comm -2 file1.txt file2.txt | awk -F'\\t' '{print (NF==2?\"y\":\"\")}'"}, {"invocation": "Create an empty file with a carriage return character in its name.", "cmd": "echo -e \"Icon\\\\r\" | xargs touch"}, {"invocation": "Print content of 'domains.txt' with removed first one of dot-delimited fields", "cmd": "rev domains.txt | cut -d '.' -f 2- | rev"}, {"invocation": "Find recursively all files whose names ends with \"foo\"", "cmd": "find . -name \"*foo\""}, {"invocation": "List all regular files under current directory ensuring white space safety", "cmd": "find . -type f -print0 | xargs -0 -n 1"}, {"invocation": "Print the list of the current directory's subdirectories", "cmd": "find . -maxdepth 1 -mindepth 1 -type d -printf '%f\\n'"}, {"invocation": "Save the system host name to variable \"myHostName\"", "cmd": "myHostName=`hostname`"}, {"invocation": "Print the first 10 files or directories found in the /tmp directory tree by `find'", "cmd": "find /tmp  | head"}, {"invocation": "Recursively change owner of all files in \"folder\" to \"user_name\"", "cmd": "chown -R user_name folder"}, {"invocation": "Creates temporary file in a current folder with name formatted like 'templateXXXXXX', and saves path to it in 'tempfile' variable.", "cmd": "tempfile=$(mktemp $(pwd)/templateXXXXXX)"}, {"invocation": "Print number of lines that equal in files '/home/xyz/a.csv1' and '/home/abc/tempfile'", "cmd": "comm -12 <(sort -u /home/xyz/a.csv1) <(sort -u /home/abc/tempfile) | wc -l"}, {"invocation": "Search the current directory tree for files whose names do not end in \"1\" and \"2\"", "cmd": "find . -type f ! -name \"*1\" ! -name \"*2\" -print"}, {"invocation": "Rename \"fghfilea\" to \"jklfilea\"", "cmd": "mv fghfilea jklfilea"}, {"invocation": "Find all regular files 1 level down the $dir directory", "cmd": "find $dir -maxdepth 1 -type f"}, {"invocation": "List \".java\" files that have the same filename and contents", "cmd": "md5sum *.java | sort | uniq -d"}, {"invocation": "Search the current directory tree for all image files", "cmd": "find . -type f -regex \".*\\.\\(jpg\\|jpeg\\|gif\\|png\\|JPG\\|JPEG\\|GIF\\|PNG\\)\""}, {"invocation": "Print the number of 'processors' (both physical and virtual/hypethereading cores) less 1.", "cmd": "cat /proc/cpuinfo | awk '/^processor/{print $3}' | tail -1"}, {"invocation": "find for the word \"dba_2pc_pending\" in all the files of current fodler having the word \"sql\" in their name", "cmd": "find . -print|grep sql|xargs grep -i dba_2pc_pending"}, {"invocation": "Delete all directories in the /myDir directory tree", "cmd": "find /myDir -type d -delete"}, {"invocation": "find all the files in the current folder which are readable", "cmd": "find . -readable"}, {"invocation": "Search the files in the current directory tree that are named \"string to be searched\" for \"text\"", "cmd": "find . -name \"string to be searched\" -exec grep \"text\" \"{}\" \\;"}, {"invocation": "Find all files/directories named 'foo.rb' under current directory tree", "cmd": "find . -name foo.rb"}, {"invocation": "Find all *.$input_file_type files/directories under $source_dir", "cmd": "find \"$source_dir\" -name *.$input_file_type"}, {"invocation": "Display the number of regular files under current directory tree", "cmd": "find . -type f -print0 | tr -dc '\\0' | wc -c"}, {"invocation": "Wrap each line in \"file\" to fit in 80 characters and count the number of lines", "cmd": "fold file | wc -l"}, {"invocation": "Copies all files under the current directory but ones with '*/not-from-here/*' in path to the '/dest/' directory.", "cmd": "find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'"}, {"invocation": "create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG", "cmd": "find . -cpio /dev/fd0 -print | tee /tmp/BACKUP.LOG"}, {"invocation": "split the result of command \"ping -c 25 google.com | tee \" into pieces per 100000 bytes named as \"/home/user/myLogFile.logNNN\"", "cmd": "ping -c 25 google.com | tee >(split -d -b 100000 - /home/user/myLogFile.log)"}, {"invocation": "Create symlinks to all  /home/folder2/*.txt files with the same name in current directory", "cmd": "find /home/folder2/*.txt -type f -exec ln -s {} \\;"}, {"invocation": "List all directories in current directory, works even if they have weird names or names starting with a dash.", "cmd": "find -maxdepth 1 -type d | awk -F\"./\" '{print $2}'"}, {"invocation": "Find all files on the system that are world writeable", "cmd": "find / -perm -0002"}, {"invocation": "Remove trailing whitespaces in TXT files from the current directory tree", "cmd": "find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\\{1,\\}$//' {} \\+"}, {"invocation": "Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks", "cmd": "find /path/to/dir/* -printf \"%TY%Tm%Td%TH%TM%TS|%p|%l\\n\""}, {"invocation": "Pushes current folder to the directory stack.", "cmd": "pushd $PWD"}, {"invocation": "Find all SGID set files under current directory and show a few lines of output from the beginning", "cmd": "find . -perm /g+s | head"}, {"invocation": "Search for files specifying the minimum depth of the search", "cmd": "find -mindepth num -name query"}, {"invocation": "Create symlinks to all  /home/folder1/*.txt files and 'folder2_' directory with the same name in a target directory named '+'", "cmd": "find /home/folder1/*.txt -type f -exec ln -s {} \"folder2_\" + \\;"}, {"invocation": "Replace \"foo\" with \"bar\" in all files in the current directory tree except hidden ones", "cmd": "find . -type f -not -name \u201c.*\u201d -print | xargs sed -i \u2018s/foo/bar/g\u2019"}, {"invocation": "Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days", "cmd": "find /mydir1 /mydir2 -size +2000 -atime +30 -print"}, {"invocation": "Lists all directories in '/home/alice/Documents/'.", "cmd": "ls -d /home/alice/Documents/*/"}, {"invocation": "Find all files under current directory and print them appending a null character at the end of each file paths", "cmd": "find . -type f -print0"}, {"invocation": "List the directory paths of all file.ext files under present working directory", "cmd": "find `pwd` -name \"file.ext\" -exec dirname {} \\;"}, {"invocation": "Display operating system type, ie. GNU/Linux", "cmd": "uname -o"}, {"invocation": "Exit the shell on the first error encountered", "cmd": "set -o errexit"}, {"invocation": "Search the specified group for the given \"filename", "cmd": "find / -group users -iname \"filename\""}, {"invocation": "Change directory to the \"lib\" directory located two parent directories above the path to command \"perl\"", "cmd": "cd $(dirname $(dirname $(which perl)))/lib"}, {"invocation": "Find all directories under current directory tree that match the case insensitive regex '^\\./course\\([0-9]\\.\\)*[0-9]$' in their paths", "cmd": "find . -type d -iregex '^\\./course\\([0-9]\\.\\)*[0-9]$'"}, {"invocation": "Find all files with the SUID bit set, starting from /", "cmd": "find / -perm -u+s"}, {"invocation": "Find all .txt files in the /home/user1 directory tree and copy them to /home/backup", "cmd": "find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents"}, {"invocation": "perform a case insensitive search", "cmd": "find  / -type d -iname \"apt\" -ls"}, {"invocation": "Search for all files named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.", "cmd": "find . -iname foo -type f"}, {"invocation": "Print only second from the end field from slash-separated string in file 'datafile'", "cmd": "cat datafile | rev | cut -d '/' -f 2 | rev"}, {"invocation": "find all files in the file system which have no user and no group", "cmd": "find / -nouser -nogroup"}, {"invocation": "find all the files ending with \".coffee\" in the current folder and search for the first occurence of the word \"re\" in each line", "cmd": "find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \\;"}, {"invocation": "search for all regular/normal files in current folder and display all the files which contain 16 lines", "cmd": "find . -type f -print0 | xargs -0 grep -cH '' | awk -F: '$2==16'"}, {"invocation": "Print the directory of the full path to the current script", "cmd": "echo $(dirname $(readlink -m $BASH_SOURCE))"}, {"invocation": "Search the current directory recursively for text files containing at least one character", "cmd": "find . -type f -exec grep -Iq . {} \\; -and -print"}, {"invocation": "Write '\"myname=\"Test\"' to the console and append to \"$CONFIG\" as root", "cmd": "echo \"myname=\\\"Test\\\"\" | sudo tee --append $CONFIG"}, {"invocation": "Count the number of areas that differ in \"file1\" and \"file2\" with 0 lines of unified context", "cmd": "diff -U 0 file1 file2 | grep ^@ | wc -l"}, {"invocation": "Create a table from '111 22 3\\n4 555 66\\n' with columns separated by a single space", "cmd": "echo -en '111 22 3\\n4 555 66\\n' | column -t | sed 's/ \\([0-9]\\)/\\1/g'"}, {"invocation": "simulate a full login of user root", "cmd": "su -"}, {"invocation": "display the three largest files by size in current folder", "cmd": "find . -type f -exec ls -s {} + | sort -n -r | head -3"}, {"invocation": "searches through the root filesystem (\"/\") for the file named Chapter1.", "cmd": "find / -name Chapter1 -type f"}, {"invocation": "find all the files in the folder /usr/bin which have been modified in the last 10 days", "cmd": "find /usr/bin -type f -mtime -10"}, {"invocation": "find all the files  in the folder /opt which have been changed in the last 120 minutes", "cmd": "find /opt -cmin -120"}, {"invocation": "find all the files in the entire file system which have been modified in the last 48 hours", "cmd": "find / -mtime -2 -print"}, {"invocation": "Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\"", "cmd": "packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')"}, {"invocation": "find directory which name is Cookbook under /users/al", "cmd": "find /users/al -name Cookbook -type d"}, {"invocation": "Find the \"erl\" executable in $PATH and read the \"RELEASES\" file to extract the erlang release number", "cmd": "awk -F, 'NR==1 {gsub(/\"/,\"\",$3);print $3}' \"$(dirname $(readlink -f $(which erl)))/../releases/RELEASES\""}, {"invocation": "Find all .sql files in the current directory recursively and print their path names separated by zeroes", "cmd": "find . -name '*.sql' -print0"}, {"invocation": "Find all directories under current directory", "cmd": "find -type d"}, {"invocation": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"", "cmd": "find . -name \\*.c -exec grep wait_event_interruptible {} /dev/null \\;"}, {"invocation": "display all text, mpg, jpg files  in the folder /Users/david/Desktop", "cmd": "find /Users/david/Desktop -type f \\( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \\)"}, {"invocation": "get second-to-last comma-separated field of each line in file.txt", "cmd": "cat file.txt | rev | cut -d ',' -f 2 | rev"}, {"invocation": "display table of files with their name, owner, and size in bytes.", "cmd": "find . -printf 'Name: %f Owner: %u %s bytes\\n'"}, {"invocation": "Save long listing of all files listed in file 'filenames.txt' to 'listing' variable", "cmd": "listing=$(ls -l $(cat filenames.txt))"}, {"invocation": "display all the php files in the current folder which do not have the permission 644", "cmd": "find . -type f -name \"*.php\" ! -perm 644"}, {"invocation": "Search the current directory tree for all files except SVN ones", "cmd": "find . -not -iwholename '*.svn*'"}, {"invocation": "Create a symbolc link named \"public_html\" to \"current/app/webroot\" under the current working directory", "cmd": "ln -s `pwd`/current/app/webroot public_html"}, {"invocation": "Find string \"STRING\" in files residing in the current directory tree, case insensitive", "cmd": "find . -type f -print | xargs grep -ni \"STRING\""}, {"invocation": "Display name and value of 'variable' if it exists.", "cmd": "env | grep '^variable='"}, {"invocation": "Merge each line of standard input into a single comma separated line", "cmd": "paste -s -d\",\""}, {"invocation": "find all txt files under the current folder except ./misc folder", "cmd": "find . -path ./misc -prune -o -name '*.txt' -print"}, {"invocation": "Print DISPLAY of \"orschiro\" user", "cmd": "who | awk -F '[()]' '/orschiro/{print $(NF-1)}' | grep -v orschiro | uniq"}, {"invocation": "Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}", "cmd": "find ${INPUT}/ -name \"*.pdf\" -exec mv '{}' '{}'.marker ${OUTPUT} \\;"}, {"invocation": "find the file \"myfile.txt\" in the folder /home/user/myusername/", "cmd": "find /home/user/myusername/ -name myfile.txt -print"}, {"invocation": "Lists all files in a current folder, separating names with comma.", "cmd": "ls -m"}, {"invocation": "file1.txt and file2.txt both contain a name and a number on each line. For each name whose corresponding number does not match in both files, display the \"Age of ... is different\" message.", "cmd": "join file{1,2}.txt | awk '$2 != $3 { print \"Age of \" $1 \" is different\" }'"}, {"invocation": "Search the current directory tree for regular files that contain \"string\"", "cmd": "find . -type f -printf '\"%p\"\\n' | xargs grep string"}, {"invocation": "Create archive \"backup1.tar\" of all subdirectories of the current directory", "cmd": "find . -mindepth 1 -maxdepth 1 -type d | awk 'BEGIN {FS=\"./\"}; {print $2}' | xargs -d '\\n' tar czf backup1.tar"}, {"invocation": "Find all regular files under $FILES_PATH directory tree and save the output to 'FILES' variable", "cmd": "FILES=$(find $FILES_PATH -type f -name \"*\")"}, {"invocation": "List the directory contents of the current working directory", "cmd": "echo $(ls $(pwd))"}, {"invocation": "Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions", "cmd": "find / -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '/./d' {} \\;"}, {"invocation": "Find all regular files under $FOLDER directory tree that start with '\".' and end with '\"' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE", "cmd": "find ${FOLDER} -type f ! -name \\\".*\\\" -mtime -${RETENTION} | egrep -vf ${SKIP_FILE}"}, {"invocation": "display all files in current folder ending with \"~\" or \"#\" using regular expression", "cmd": "find -regex \"^.*~$\\|^.*#$\""}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's/.*/\"&\"/' | xargs ls -l"}, {"invocation": "Find all files/directories that are owned by user 'dave' under current user's home directory tree", "cmd": "find ~ -user dave -print"}, {"invocation": "Remove all files that contain the word GUI in entire file system", "cmd": "find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}, {"invocation": "Find all directories under current directory tree that were modified $FTIME days ago", "cmd": "find . -type d -mtime $FTIME"}, {"invocation": "Search the current directory tree for regular files omitting directory `omit-directory'", "cmd": "find . \\( -name omit-directory -prune \\) -o \\( -type f -print \\)"}, {"invocation": "Create a ssh key of RSA type, and prompt for a filename to store it, presenting the default for this type of key as $HOME/.ssh/id_rsa", "cmd": "ssh-keygen -t rsa"}, {"invocation": "Print the largest 20 files under current directory", "cmd": "find . -type f -printf '%s %p\\n' | sort -rn | head -20"}, {"invocation": "Search the *.code files from the current directory tree for string 'pattern'", "cmd": "find . -name '*.code' -exec grep -H 'pattern' {} +"}, {"invocation": "display all the files in the current folder which have been modified in the last 24 hours excluding all directories", "cmd": "find . \\( -type d ! -name . -prune \\) -o \\( -mtime -1 -print \\)"}, {"invocation": "find all text files in current folder and trim the extra spaces in all lines in these files", "cmd": "find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\\+$//' {} \\+"}, {"invocation": "create directory practice into home directory", "cmd": "mkdir ~/practice"}, {"invocation": "display a long listing of all the directories in the current folder", "cmd": "find . -type d -exec ls -algd {} \\;"}, {"invocation": "Remove any file containing string \"GUI\"", "cmd": "find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}, {"invocation": "Find files in the current directory tree that have one link", "cmd": "find . -links 1"}, {"invocation": "Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree", "cmd": "find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \\;"}, {"invocation": "Send 5 pings to broadcast address \"10.10.0.255\" and print the unique IPs who responded", "cmd": "ping -c 5 -b 10.11.255.255 | sed -n 's/.* \\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\).*/\\1/p' | sort | uniq"}, {"invocation": "recursively change owner of the directory /usr/local/lib/node_modules/ to the current user", "cmd": "sudo chown -R $USER /usr/local/lib/node_modules"}, {"invocation": "Find all files with space in their names under current directory", "cmd": "find . -type f -name '* *'"}, {"invocation": "change owner and group of the all files with group owner vboxusers into home directory to user and group kent", "cmd": "find ~ -group vboxusers -exec chown kent:kent {} \\;"}, {"invocation": "Delete all files in the current directory tree whose names end with ~", "cmd": "find . -name \"*~\" -exec rm {} \\;"}, {"invocation": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script", "cmd": "find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;"}, {"invocation": "Display human-readable file type description of ascii.txt", "cmd": "file ascii.txt"}, {"invocation": "use regex with find command", "cmd": "find . -regextype sed -regex \".*/[a-f0-9\\-]\\{36\\}\\.jpg\""}, {"invocation": "Filters only directories from long file listing of the current directory", "cmd": "ls -l --color=always \"$@\" | grep --color=never '^d'"}, {"invocation": "Recursively finds all '*.pdf' files in a current folder and removes them without prompting.", "cmd": "find . -name '*.pdf' -exec rm -f {} \\;"}, {"invocation": "Search the current directory tree for regular files whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"", "cmd": "find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\""}, {"invocation": "Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them", "cmd": "find /apps/audit -perm -7 -print | xargs chmod o\u2011w"}, {"invocation": "find all files in the file system whose size is exactly 2KB", "cmd": "find / -size 2048c"}, {"invocation": "Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in \".log\"", "cmd": "sudo find / -xdev -type f -size +100000 -name \"*.log\" -exec gzip -v {} \\;"}, {"invocation": "Print the contents of \"$FILE\" starting from line 2", "cmd": "tail -n +2 \"$FILE\""}, {"invocation": "Find all files/directories under current directory with null character as the delimiter", "cmd": "find -print0"}, {"invocation": "Copy all files in \"/mail\" to \"/home/username\" preserving the directory hierarchy and modification times", "cmd": "find /mail -type f | cpio -pvdmB /home/username"}, {"invocation": "display all the header files  and cpp files in the current folder", "cmd": "find . -name \\*.h -print -o -name \\*.cpp -print"}, {"invocation": "Find all \"G*.html\" files modified more than 7 days ago in the current directory tree", "cmd": "find . -mtime +7 -name \"G*.html\""}, {"invocation": "find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"/p/\".", "cmd": "find -mindepth 3 -type d -path '*/p/*' -prune -o -name c -print"}, {"invocation": "Copy the owner and group of \"oldfile\" to \"newfile\"", "cmd": "chown --reference=oldfile newfile"}, {"invocation": "List all files in /home/bozo/projects directory tree that were modified exactly one day ago.", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Displays information about all network interfaces in system, including inactive ones.", "cmd": "ifconfig -a"}, {"invocation": "Find all the *.pl files (Perl files) beneath the current directory.", "cmd": "find . -name \"*.pl\""}, {"invocation": "find all the files in the current folder which are writable", "cmd": "find . -writable"}, {"invocation": "Find files/directories that are bigger than 10000 KB in size uder '/usr/local' directory tree", "cmd": "find /usr/local -size +10000k"}, {"invocation": "List root's regular files with permissions 4000", "cmd": "find / -type f -user root -perm -4000 -exec ls -l {} \\;"}, {"invocation": "Copy \"/home/username/path/on/server/\" to \"username@your.ip.address.here:/Users/username/path/on/machine/\" and convert encoding from UTF-8 to UTF-8-MAC", "cmd": "rsync --iconv=UTF-8,UTF-8-MAC /home/username/path/on/server/ 'username@your.ip.address.here:/Users/username/path/on/machine/'"}, {"invocation": "Find all 'test' directories in the current directory tree", "cmd": "find -type d -a -name test"}, {"invocation": "List all files/directories under current directory using comma (,) as the delimiter for different fields in the output", "cmd": "find . -ls | awk '{printf( \"%s,%s,%s,%s,%s,%s,%s,%s %s %s,%s\\n\", $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11 )}'"}, {"invocation": "Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths", "cmd": "find /home/feeds/data -type f -not -path \"*def/incoming*\" -not -path \"*456/incoming*\""}, {"invocation": "Find all directories under current directory and change their permission to 755", "cmd": "find . -type d -exec chmod 755 {} \\;"}, {"invocation": "display a long listing of all the files in the current folder which are bigger than 10KB", "cmd": "find . -size +10k -exec ls -lh {} \\+"}, {"invocation": "Split \"input_file\" into files of at most 100 lines each with prefix \"output_file\"", "cmd": "split -l 100 input_file output_file"}, {"invocation": "Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.", "cmd": "ls -hal /root/ | sudo tee /root/test.out"}, {"invocation": "find all the files in the current directory that have the word \"bash\" in their name", "cmd": "find . -name \"*bash*\""}, {"invocation": "Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )", "cmd": "find . -maxdepth 1 -type f -print0 | xargs rm -f"}, {"invocation": "Counts lines of myfile.txt file.", "cmd": "cat myfile.txt | wc -l"}, {"invocation": "Unzip all \".gz\" files in the current directory tree to their respective directories", "cmd": "find . -name \"*.gz\" -execdir gunzip '{}' \\;"}, {"invocation": "Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files", "cmd": "find . -type f -name \"*.txt\" -exec sed 's/Linux/Linux-Unix/2' thegeekstuff.txt"}, {"invocation": "Merge lines from \"file_1\" and \"file_2\" and format the output as a table with tab separators", "cmd": "paste file_1 file_2 | column -s $'\\t' -t"}, {"invocation": "Saves printed calendar for $month, $year in positional variables.", "cmd": "set `cal $month $year`"}, {"invocation": "Find all files under /myfiles with 647 permission", "cmd": "find /myfiles -type f -perm -647"}, {"invocation": "display all the \".c\" files which have been modified in the last 10 minutes", "cmd": "find /home/david -amin -10 -name '*.c'"}, {"invocation": "Remove all *.tmp files from the /tmp directory tree", "cmd": "find /tmp -name \"*.tmp\" -print0 | xargs -0 rm"}, {"invocation": "Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules'", "cmd": "find ./ -not -path \"*/node_modules/*\" -name \"*.js\" | xargs grep keyword"}, {"invocation": "Find all files in the current directory tree with extension .html and replace all occurences of \"php\" with \"html\" inside them", "cmd": "find ./ -type f -name *\".html\" | xargs sed -i \"s/php/html/g\""}, {"invocation": "Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago", "cmd": "find /directory/whatever -name '*.tar.gz' -mtime +$DAYS"}, {"invocation": "Remove all .txt files in and below the current directory", "cmd": "find . -name \"*.txt\" -exec rm {} \\;"}, {"invocation": "find all regex \"./[a-f0-9\\-]\\{36\\}\\.jpg\" files", "cmd": "find . -regex \"./[a-f0-9\\-]\\{36\\}\\.jpg\""}, {"invocation": "Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable", "cmd": "full_backup_dir=$(find . -depth \\( -wholename \\./\\.\\* \\) -prune -o -mtime -1 -print)"}, {"invocation": "Search for occurrences of string \"main(\" in the .c files from the current directory tree", "cmd": "find . -name \"*.c\" -print | xargs grep \"main(\""}, {"invocation": "display all the files along with their group name in the folder /home which do not belong to the group test", "cmd": "find /home ! -group test -printf \"%p:%g\\n\""}, {"invocation": "Remove the \"^M\" characters from all *.ext files under /home directory", "cmd": "find /home -type f -name \"*.ext\" -exec sed -i -e \"s/\\x0D$//g\" {} \\;"}, {"invocation": "Print the PIDs of the current user's instances of \"firefox\"", "cmd": "ps -u $(whoami) | grep firefox | awk '{printf $1}'"}, {"invocation": "change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)", "cmd": "find . -type f -print0 | xargs -0 chown username"}, {"invocation": "Display 12345 backwards", "cmd": "echo 12345 | rev"}, {"invocation": "Copy all regular files from the current directory tree to directory `TARGET'", "cmd": "find . -type f -exec cp -t TARGET {} \\+"}, {"invocation": "Replace all newlines from the contents of \"file\" except the last with spaces", "cmd": "sed ':a;N;$!ba;s/\\n/ /g' file"}, {"invocation": "display all the files in the usr folder and those that are in the path local", "cmd": "find /usr/ -path \"*local*\""}, {"invocation": "Find movies over a gigabyte in size", "cmd": "find ~/Movies/ -size +1024M"}, {"invocation": "Find the files that have \"644\" permissions and modify them to have \"664\" permissions", "cmd": "find . -type f -perm 644 -exec chmod 664 {} \\;"}, {"invocation": "Gets MAC address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep -Eo ..\\(\\:..\\){5}"}, {"invocation": "Find all regular files starting from level 3 of directory tree ~/container and move them one level up", "cmd": "find ~/container  -mindepth 3 -type f  -execdir mv \"{}\" $(dirname \"{}\")/.. \\;"}, {"invocation": "Find all files/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive)", "cmd": "find . -iwholename \"*ACK*1\""}, {"invocation": "Find and delete all hard links in the /home directory to file1", "cmd": "find /home -xdev -samefile file1 -exec rm {} +"}, {"invocation": "kill group leader", "cmd": "kill `jobs -lp`"}, {"invocation": "Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.", "cmd": "file=$( basename \"$1\" )"}, {"invocation": "delete all normal/regular files in the current folder which are empty", "cmd": "find . -type f -empty -delete"}, {"invocation": "Prints process tree for the current process with ASCII line drawing characters.", "cmd": "pstree -A -s $$"}, {"invocation": "find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.", "cmd": "find /home/pankaj -maxdepth 1 -cmin -5 -type f"}, {"invocation": "find all the configuration files in /etc folder along with the last access & modification time", "cmd": "find /etc -name \"*.conf\" -printf \"%f %a, %t\\n\""}, {"invocation": "Pair side-by-side content of the 'file' and its side-mirrored content", "cmd": "paste -d ' ' file <(rev file)"}, {"invocation": "Find all .c and .C files in the current directory tree that contain \"main(\" and copy them to directory test1/", "cmd": "find -iname \u201c*.c\u201d -exec grep -l \u2018main(\u2018 {} \\; -a -exec cp {} test1/ \\;"}, {"invocation": "Find all files on the system whose names are 'autoload.php'", "cmd": "find / -name autoload.php"}, {"invocation": "Print bash environment variable array \"fields\" and its values", "cmd": "set | grep ^fields=\\\\\\|^var="}, {"invocation": "Print the directory name of the full real path to the current script", "cmd": "echo \"dirname/readlink: $(dirname $(readlink -f $0))\""}, {"invocation": "Search the current directory tree for files larger than 10MB but smaller than 50MB", "cmd": "find . -size +10M -size -50M -print"}, {"invocation": "find the count of all the regular files in a directory", "cmd": "find /usr -type f | wc -l"}, {"invocation": "display all the text files in the current folder except readme files", "cmd": "find . -type f -name \"*.txt\" ! -name README.txt -print"}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \\;"}, {"invocation": "Find all files, starting from / but ignoring removable media, whose names end with \".rpm\"", "cmd": "find / -xdev -name \"*.rpm\""}, {"invocation": "find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes", "cmd": "find /usr/src -name '*.c' -size +100k -print"}, {"invocation": "Save the first three octets of the current host's IP address to variable \"local\"", "cmd": "local=$(hostname -I | awk '{print $2}' | cut -f1,2,3 -d\".\")"}, {"invocation": "find all the html files in the current folder which have been modified excatly 7 days before", "cmd": "find . -mtime 7 -name \"*.html\" -print"}, {"invocation": "Print a minimal set of differences between files in directories \"teste1\" and \"teste2\", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context", "cmd": "diff -burNad teste1 teste2"}, {"invocation": "lists txt or html files older than 5 days, null separated", "cmd": "find . \\( -name '*.txt' -o -name '*.html' \\) -mtime +5 -print0"}, {"invocation": "Find all directories under $path", "cmd": "find $path -type d"}, {"invocation": "display all the files in the file system which are smaller than 20 bytes", "cmd": "find / -size 20"}, {"invocation": "Search the current directory tree for file `teste.tex'", "cmd": "find -name teste.tex"}, {"invocation": "Change owner of \"folder\" to \"user_name\"", "cmd": "chown user_name folder"}, {"invocation": "Find a directory named 'project.images' in the entire filesystem", "cmd": "find  / -type d -name \"project.images\""}, {"invocation": "Replace \"foo\" with \"bar\" in all files in the current directory tree", "cmd": "find . | xargs sed -i \u2018s/foo/bar/g\u2019"}, {"invocation": "Find all files/directories under minimum 1 level down the $FOLDER directory and sort them", "cmd": "find \"$FOLDER\" -mindepth 1 | sort"}, {"invocation": "Print the list of files in the current directory tree skipping SVN files", "cmd": "find . -type d -name .svn -prune -o -print"}, {"invocation": "Find all *.java files in the current directory tree", "cmd": "find . -name  \\*.java"}, {"invocation": "Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.", "cmd": "cat ip_addresses | sort | uniq -c | sort -nr | awk '{print $2 \" \" $1}'"}, {"invocation": "Find all files of the user with UID=1000", "cmd": "find -uid 1000"}, {"invocation": "Find text in whole directory tree", "cmd": "find . -type f | xargs grep \"text\""}, {"invocation": "list all regular files which path is not dir1 or dir2", "cmd": "find dir -not \\( -path \"dir1\" -prune \\) -not \\( -path \"dir2\" -prune \\) -type f"}, {"invocation": "Move all lines starting with \"Ca\" to the beginning of the file", "cmd": "nl -n rz ca | awk -vOFS=\"\\t\" '/Ca/{$1=\"#\"$2} {$1=$1}1' | sort -k1,1 | cut -f2-"}, {"invocation": "Find all of the character devices on the system", "cmd": "find / -type c"}, {"invocation": "Change the owner of \"/var/www/html/mysite/tmp_file_upload/\" to \"nobody\"", "cmd": "sudo chown nobody /var/www/html/mysite/tmp_file_upload/"}, {"invocation": "Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"", "cmd": "find . -not -name \"*.exe\" -not -name \"*.dll\""}, {"invocation": "Display bash function definition of \"foobar\"", "cmd": "set | grep -A999 '^foobar ()' | grep -m1 -B999 '^}'"}, {"invocation": "Archive \"_vim/\" to \"~/.vim\" suppressing non-error messages and compressing data during transmission", "cmd": "rsync -aqz _vim/ ~/.vim"}, {"invocation": "Find files with group write permission and remove the permission", "cmd": "find . -perm -20 -print | xargs chmod g-w"}, {"invocation": "Display a long listing of all 0777 permission directories under current directory tree", "cmd": "find . -perm 0777 -type d -exec ls -l {} \\;"}, {"invocation": "Display a long listing of all the files/directories under current directory tree that are newer than the file 'Nov' by modification time", "cmd": "find . -newer Nov -ls"}, {"invocation": "Find symbolic links in directory /etc and below", "cmd": "find /etc -type l"}, {"invocation": "Create a symbolic link named \"$SYMLINK\" to \"$ACTUAL_DIR\"", "cmd": "ln -s \"$ACTUAL_DIR\" \"$SYMLINK\""}, {"invocation": "Print numbers from 1 to 10 with 2 values per line", "cmd": "seq 10 | paste -sd\" \\n\" -"}, {"invocation": "Start 'top' to monitor all processes with the default settings.", "cmd": "top"}, {"invocation": "Write out the entire directory hierarchy from the current directory", "cmd": "find . -print"}, {"invocation": "Search for \"ifconfig\" in the output of \"history\" and print 5 lines that precede and follow", "cmd": "history | grep -C 5 ifconfig"}, {"invocation": "Display differences between directories dir1 and dir2.", "cmd": "diff -r dir1/ dir2/"}, {"invocation": "Count all the lines of all '*.c' files in current directory recursively", "cmd": "find . -name \"*.c\" -print0 | xargs -0 cat | wc -l"}, {"invocation": "find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.", "cmd": "find . \u2014 name \"[a\u2011z][a\u2011z][0\u20149][0\u20149].txt\" \u2014 print"}, {"invocation": "Search folder /home/ABCD/ recursively for regular files", "cmd": "find /home/ABCD/ -type f -print"}, {"invocation": "Print a NULL-separated list of all hidden regular files from the home directory", "cmd": "find $HOME -maxdepth 1 -type f -name '.*' -print0"}, {"invocation": "find all the files in the current directory and display them", "cmd": "find . -exec echo {} ;"}, {"invocation": "Keep the last 3 components (directories) of $path", "cmd": "echo $path | rev | cut -d'/' -f-3 | rev"}, {"invocation": "Search the /home/weedly directory tree for regular files named myfile", "cmd": "find /home/weedly -name myfile -type f -print"}, {"invocation": "Mount \"/path/to/device\" on \"/path/to/mount/location\" as a vfat filesystem and a loop back device", "cmd": "mount /path/to/device /path/to/mount/location -o loop -t vfat"}, {"invocation": "find all the normal/regular files in the current folder which are present in the pattern file \"file_list.txt\"", "cmd": "find . type f -print | fgrep -f file_list.txt"}, {"invocation": "Display the output of \"ls\" for an 80 character wide display", "cmd": "ls | column -c 80"}, {"invocation": "Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"", "cmd": "echo \"mpc-1.0.1.tar.gz\" | sed -r 's/\\.[[:alnum:]]+\\.[[:alnum:]]+$//'"}, {"invocation": "From a script, output the name of the script itself, without containing directories.", "cmd": "basename $0"}, {"invocation": "Fetch a script from the web, and interpret it in the current shell.", "cmd": "source <(curl -s http://mywebsite.com/myscript.txt)"}, {"invocation": "display the number of lines in all the header files in the current folder", "cmd": "find . -name \"*.h\" -print | xargs wc -l"}, {"invocation": "Infinitely print \"no\" to the screen", "cmd": "yes no"}, {"invocation": "search for the file \"file\" in the current folder excluding those in the sub directory \".git\"", "cmd": "find . -path ./.git  -prune -o -name file  -print"}, {"invocation": "Find all files owned by user `comp'", "cmd": "find / -user comp"}, {"invocation": "Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg", "cmd": "find /Users/david/Desktop -type f \\( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \\)"}, {"invocation": "Print and save the ping results of 25 requests to \"google.com\" in \"/home/user/myLogFile.log\" containing at most 100000 bytes", "cmd": "ping -c 25 google.com | tee >(split -d -b 100000 - /home/user/myLogFile.log)"}, {"invocation": "Changes group ownership of 'public' and 'private' to 'god'.", "cmd": "chgrp god public private"}, {"invocation": "Find all files under current directory", "cmd": "find \"`pwd`\" -type f"}, {"invocation": "Find all files/directories under '/var/log' directory tree that bave been modified today (from the start of the day)", "cmd": "find /var/log -daystart -mtime 0"}, {"invocation": "display all the normal/regular files in the current folder which are empty", "cmd": "find . -type f -empty"}, {"invocation": "Print file type of the command \"c++\"", "cmd": "file `which c++`"}, {"invocation": "List all regular files under the current directory and below it", "cmd": "find . -type f -print0 | xargs -0 ls -l"}, {"invocation": "Print the list of files in the home directory tree whose names begin with \"Foto\"", "cmd": "find ~ -name 'Foto*'"}, {"invocation": "find all the files in the current directory which have been modified in the  last 6 days.", "cmd": "find . -atime +6"}, {"invocation": "Copy file in current directory of local host to host \"remote\", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.", "cmd": "scp -C file remote:"}, {"invocation": "display the manual page of find", "cmd": "man find"}, {"invocation": "Run command specified by $line, replace space (' ') with newline and save the output to variable 'arr'", "cmd": "arr=$( $line | tr \" \" \"\\n\")"}, {"invocation": "find all the directories in the current folder and create the same directory structure in a remote machine using ssh", "cmd": "find -type d | ssh server-B 'xargs -I% mkdir -p \"/path/to/dir/%\"'"}, {"invocation": "Remove with prompting all files starting in /mydir that have not been accessed in over 100 days", "cmd": "find /mydir -atime +100 -ok rm {} \\;"}, {"invocation": "Remount \"/path/to/chroot/jail/usr/bin\" as read only", "cmd": "mount -o remount,ro /path/to/chroot/jail/usr/bin"}, {"invocation": "Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :", "cmd": "find ~/code -type d | sed '/\\/\\\\./d' | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "Find all .java files under and below the current directory", "cmd": "find . -name '*.java'"}, {"invocation": "Numerically sort file \"files\" by the second \"-\" separated value of each line ordered from least value to highest value", "cmd": "tac files | sort -t- -k2,2 -n"}, {"invocation": "Run script $2 on remote host $1 using interpreter $INTERPRETER with pseudo-terminal allocation", "cmd": "cat $2 | grep -v \"#\" | ssh -t $1 $INTERPRETER"}, {"invocation": "Find \".c\" and \".h\" files in the current directory tree and print lines containing \"#include\"", "cmd": "tree -if | grep \\\\.[ch]\\\\b | xargs -n 1 grep -H \"#include\""}, {"invocation": "find files in the current directory having name \"filename\"", "cmd": "find -iname \"filename\""}, {"invocation": "Sort content of files 'file1' and 'file2' by second of dot-separated fields.", "cmd": "cat file1 file2 |sort -t. -k 2.1"}, {"invocation": "Find files under /some/path that are not executable by the owner", "cmd": "find /some/path -type f ! -perm -100 -ls"}, {"invocation": "Change the owner to \"hduser\" and group to \"hadoop\" of \"{directory path}\"", "cmd": "sudo chown hduser:hadoop {directory path}"}, {"invocation": "Find all SUID files in entire file system", "cmd": "find / -perm +4000"}, {"invocation": "Find all directories at level 3 of directory tree $from_dir", "cmd": "find $from_dir -mindepth 3 -maxdepth 3 -type d"}, {"invocation": "Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory", "cmd": "find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'"}, {"invocation": "Look for any files that have not been modified in the last two days", "cmd": "find -mtime +2"}, {"invocation": "Print the files in the current directory as a list of semicolon separated values", "cmd": "ls -1b | tr '\\n' ';'"}, {"invocation": "Test if a file named 'file' in the current directory is more than 1 hour old", "cmd": "find file -chour +1 -exit 0 -o -exit 1"}, {"invocation": "display all the regular files in the current folder that are exactly 10KB", "cmd": "find . -type f -size 10k"}, {"invocation": "search for a word in all the files in the current directory and display the file paths relative to the current directory", "cmd": "find . -exec grep -l foo {} +"}, {"invocation": "Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree", "cmd": "find /srv/www /var/html -name \"*.?htm*\" -type f"}, {"invocation": "Calculate the md5 sum of the list of files in the current directory", "cmd": "find . -maxdepth 1 -type f | md5sum"}, {"invocation": "Display the last slash-separated part of path, in this case \"example\".", "cmd": "basename /usr/local/svn/repos/example"}, {"invocation": "find files in current directory that names are game", "cmd": "find . -name game"}, {"invocation": "Print the last space separated word from \"Your string here\"", "cmd": "echo \"Your string here\"| tr ' ' '\\n' | tail -n1"}, {"invocation": "Find all regular files recursively in the current directory", "cmd": "find . -type f"}, {"invocation": "display all file names in current folder", "cmd": "find . -printf '%p '"}, {"invocation": "Print /some/dir/ if it's empty", "cmd": "find /some/dir/ -maxdepth 0 -empty"}, {"invocation": "display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB", "cmd": "find . -size +10k -exec ls -ls {} \\+ | sort -nr"}, {"invocation": "display all the text files in the temp folder", "cmd": "find /tmp -name *.txt"}, {"invocation": "Search for all files newer than file /tmp/t", "cmd": "find / -newer /tmp/t"}, {"invocation": "display all the users in the current folder which do not belong to the user root", "cmd": "find . ! -user root"}, {"invocation": "Make directories \"project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}\" as needed and do not cause an error if it exists", "cmd": "mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}"}, {"invocation": "List all files in the current directory tree that were modified 60 minutes ago", "cmd": "find -mmin 60"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory", "cmd": "find var/log/ -iname anaconda.*"}, {"invocation": "find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names", "cmd": "find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'"}, {"invocation": "List all *jsp and *java regular files found in the current directory tree", "cmd": "find . \\( -name '*jsp' -o -name '*java' \\) -type f -ls"}, {"invocation": "Counts lines of /dir/file.txt file.", "cmd": "wc -l /dir/file.txt"}, {"invocation": "Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names", "cmd": "find . -mindepth 1 -name '.*' -prune -o \\( -type d -print \\)"}, {"invocation": "find all the directories in the folder /raid with the extension local_sd_customize.", "cmd": "find /raid -type d -name \".local_sd_customize\" -print"}, {"invocation": "change the group to \"new_group\" and permissions to 770 for all the files in the current folder", "cmd": "find . -name \"*\" -exec chgrp -v new_group '{}' \\; -exec chmod -v 770 '{}' \\;"}, {"invocation": "Find files with inode number 199053", "cmd": "find / -inum 199053"}, {"invocation": "Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.", "cmd": "echo 'test/90_2a5/Windows' | xargs dirname | xargs basename"}, {"invocation": "Counts lines in each *.php file.", "cmd": "wc -l $(find . -name \"*.php\")"}, {"invocation": "Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ", "cmd": "find FOLDER1 -type f -print0 | xargs -0 -I % find FOLDER2 -type f -exec diff -qs --from-file=\"%\" '{}' \\+"}, {"invocation": "Recursively finds all *.txt files and prints strings with \"text_pattern\" ignoring text distincts.", "cmd": "find . -name \"*.txt\" | xargs grep -i \"text_pattern\""}, {"invocation": "List all *.txt files/directories under current directory", "cmd": "find . -name \"*.txt\" -exec $SHELL -c 'echo \"$0\"' {} \\;"}, {"invocation": "Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree", "cmd": "find /home/apache -size 100c -print"}, {"invocation": "Read a line from standard input with prompt \"<Your Friendly Message here> : y/n/cancel\" and save the response to variable \"CONDITION\"", "cmd": "read -p \"<Your Friendly Message here> : y/n/cancel\" CONDITION;"}, {"invocation": "delete all the normal files in the current folder and do not delete those in the subfolders", "cmd": "find . -maxdepth 1 -type f -delete"}, {"invocation": "Set the environment variable \"DISPLAY\" to the system host name followed by \":0 skype\"", "cmd": "env DISPLAY=`hostname`:0 skype"}, {"invocation": "List current directory, waiting for user input at each page.", "cmd": "ls | more"}, {"invocation": "Display the sizes and filepaths of all files/directories with '.undo' extension under current directory tree", "cmd": "find -name *.undo -print0 | du -hc --files0-from=-"}, {"invocation": "Prints shell option 'globstar' with indication of its status.", "cmd": "shopt -p globstar"}, {"invocation": "find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes", "cmd": "find /etc/sysconfig -amin -30 -type f"}, {"invocation": "Output the last slash-separated component of specified path, in this case \"data_report_PD_import_script_ABF1_6\"", "cmd": "basename /EBF/DirectiveFiles/data_report_PD_import_script_ABF1_6"}, {"invocation": "Print mount point of the file system containing $filename.", "cmd": "df \"$filename\" | awk 'NR==1 {next} {print $6; exit}'"}, {"invocation": "Save the greater version number of \"$1\" and \"$2\" into variable \"ver\"", "cmd": "ver=`echo -ne \"$1\\n$2\" |sort -Vr |head -n1`"}, {"invocation": "Lists all files in a current folder, separating names with comma.", "cmd": "ls -1 | tr '\\n' ',' | sed 's/,$/\\n/'"}, {"invocation": "Print each line in \"file1\" and file2\" separated by a space", "cmd": "paste -d'\u00a4' file1 file2 | sed 's,\u00a4, ,g'"}, {"invocation": "display all the files in the current folder for the files which have not been accessed in the last 24 hours", "cmd": "find . -type f -atime +1"}, {"invocation": "kill a number of background jobs", "cmd": "jobs -p | tail -n [number of jobs] | xargs kill"}, {"invocation": "Read a line from standard input into variable \"message\" with escaped prompt \"Please Enter a Message: \\n\\b\"", "cmd": "read -p \"$(echo -e 'Please Enter a Message: \\n\\b')\" message"}, {"invocation": "display all files in the file system which are bigger than 50MB and having size \"filename\" in them", "cmd": "find / -size +50M -iname \"filename\""}, {"invocation": "Set up local port forwards in the background with no terminal or command execution from port 4431 to host \"www1\" port 443 and port 4432 to host \"www2\" port 443 via the host \"colocatedserver\"", "cmd": "ssh -fNT -L4431:www1:443 -L4432:www2:443 colocatedserver"}, {"invocation": "Recursively copy directory or file /something on host \"myServer\" to current directory on local host, connecting as ssh user matching username on local host.", "cmd": "scp -r myServer:/something"}, {"invocation": "Find all files/directories under current directory and append a null character at the end of each path", "cmd": "find -print0"}, {"invocation": "Mount \"/tmp/loop.img\" on \"/mnt/image\" as a loop back device", "cmd": "mount /tmp/loop.img /mnt/image -o loop"}, {"invocation": "Find links to any file that happens to be named `foo.txt'", "cmd": "find / -lname foo.txt"}, {"invocation": "Find files recursively with extension \"ext\"", "cmd": "find . -name \"*.ext\""}, {"invocation": "Disables shell option 'compat31'.", "cmd": "shopt -u compat31"}, {"invocation": "Print and delete all directories named 'work' under '/usr/ports/' directory tree", "cmd": "find /usr/ports/ -name work -type d -print -exec rm -rf {} \\;"}, {"invocation": "Print the first 5 characters followed by the next 5 characters on a new line for each line in \"input_file\" and split the result into files of at most 2000000 lines each with a filename prefix \"out-prefix-\"", "cmd": "sed 's/\\(.....\\)\\(.....\\)/\\1\\n\\2/' input_file | split -l 2000000 - out-prefix-"}, {"invocation": "Prints total number of lines of all *.php files in a current folder and subfolders.", "cmd": "cat `find . -name \"*.php\"` | wc -l"}, {"invocation": "Display the mount point of a device file \"$path\"", "cmd": "mount | grep \"^$path\" | awk '{print $3}'"}, {"invocation": "Find all *.jpg files under current directory", "cmd": "find . -name *.jpg"}, {"invocation": "List files/directories at least three levels down the directory tree", "cmd": "find / -mindepth 3  -name \"*log\""}, {"invocation": "Delete all __temp__* files/directories under current directory tree", "cmd": "find . -depth -name '__temp__*' -exec rm -rf '{}' \\;"}, {"invocation": "Find all regular files in the current directory tree that are not readable by anyone", "cmd": "find . -type f ! -perm -444"}, {"invocation": "Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output", "cmd": "find /tmp -type f -perm -002 | sed '1s/^/Found world write permissions:\\n/'"}, {"invocation": "Count the number of users logged in minus one", "cmd": "who | sed 1d | wc -l"}, {"invocation": "List all regular files in the current directory tree modified within the last 24 hours", "cmd": "find . -mtime 0 -type f -ls"}, {"invocation": "Print content of '1' file", "cmd": "$ cat 1"}, {"invocation": "display all the hidden files in the folder /home", "cmd": "find /home -name \".*\""}, {"invocation": "Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end", "cmd": "find ./ -type f -newer /tmp/date.start ! -newer /tmp/date.end -exec rm {} \\;"}, {"invocation": "Remove files cart4, cart5, cart6 in directory ~/junk", "cmd": "find ~/junk  -name 'cart[4-6]' -exec rm {}  \\;"}, {"invocation": "Mount \"ext4\" filesystem \"/dev/xvdf\" on \"/vol\"", "cmd": "sudo mount /dev/xvdf /vol -t ext4"}, {"invocation": "Find all files under current directory and set read permission for group and other for these files", "cmd": "find . -type f -print0 | xargs -0 chmod go+r"}, {"invocation": "Display the contents of \"text\"", "cmd": "cat text"}, {"invocation": "show all the files in the entire file system which are bigger than 100MB", "cmd": "find / -size +100M"}, {"invocation": "Search for regular expression 'expr' in all .c and .h files from the current directory tree", "cmd": "find -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Save standard input to variable 'stdin' until the first character encoded as '\\004' is read", "cmd": "read -d \"$(echo -e '\\004')\" stdin"}, {"invocation": "Print the MD5 message digest of \"/path/to/destination/file\"", "cmd": "md5sum /path/to/destination/file"}, {"invocation": "Save host name in variable \"thisHOSTNAME\"", "cmd": "thisHOSTNAME=`hostname`"}, {"invocation": "Search the \"test1\" directory recursively for regular files", "cmd": "find test1 -type f -print"}, {"invocation": "display long listing of all the files in the folder \"/myfiles\"", "cmd": "find /myfiles -exec ls -l {} ;"}, {"invocation": "Find all files under ${searchpath} that match the regex '\"${string1}\".*\"${string2}\".*\"${string3}\"' (${string1} ... won't be expanded) in their contents", "cmd": "find `echo \"${searchpath}\"` -type f -print0 | xargs -0 grep -l -E '\"${string1}\".*\"${string2}\".*\"${string3}\"'"}, {"invocation": "Find all *shp* directories under current directory and move '*' (literal) file/directory inside those directories to shp_all", "cmd": "find . -name '*shp*'   -execdir mv '{}/*' shp_all ';'"}, {"invocation": "Copy all directories recursively from \"source/\" to \"destination/\" excluding all files", "cmd": "rsync -a -f\"+ */\" -f\"- *\" source/ destination/"}, {"invocation": "Send a single ping request with a TTL of 1 to \"192.168.1.1\"", "cmd": "ping -c 1 -t 1 192.168.1.1"}, {"invocation": "find all files in the current directory do not display the files which are not readable", "cmd": "find . ! -readable -prune"}, {"invocation": "Sort \"some_data\" by the first and second \";\" delimited entries and stabilizing the sort", "cmd": "sort -k1,1 -k2,2 -t';' --stable some_data"}, {"invocation": "Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.", "cmd": "find -iname example.com | grep -v beta"}, {"invocation": "Find files/directories in entire file system newer than myfile", "cmd": "find / -newer myfile"}, {"invocation": "Recursively add read and directory access to all permissions of all files and directories", "cmd": "chmod -R a+rX *"}, {"invocation": "display all files in the current folder which start with met", "cmd": "find -name met*"}, {"invocation": "Archive \"/media/Incoming/music/\" to \"/media/10001/music/\" on host \"server\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission", "cmd": "rsync -avzru --delete-excluded /media/Incoming/music/ server:/media/10001/music/"}, {"invocation": "Finds recursively all files in '/path/' that contain 'pattern', and prints matched strings with string number and file name.", "cmd": "grep -rnw '/path/' -e 'pattern'"}, {"invocation": "Search user1's home directory tree for *.bin files", "cmd": "find /home/user1 -name \\*.bin"}, {"invocation": "Mount \"vfat\" filesystem \"/dev/sda7\" to \"/mnt/my_partition\" with read and write permission, umask of files and directories set to \"0000\", and save in fstab and allow ordinary users to mount", "cmd": "sudo mount -t vfat -o rw,auto,user,fmask=0000,dmask=0000 /dev/sda7 /mnt/my_partition"}, {"invocation": "Find all files in /dir1 and print only the filenames (not paths)", "cmd": "find ./dir1 -type f -exec basename {} \\;"}, {"invocation": "find all files in the folder /path/to/dir which have been modified between two dates", "cmd": "find /path/to/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls"}, {"invocation": "Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names", "cmd": "find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f"}, {"invocation": "delete all the files in the current folder", "cmd": "find . -delete"}, {"invocation": "Add execute permission to all files ending in \".sh\"", "cmd": "chmod +x *.sh"}, {"invocation": "find all files in current folder which are bigger than 270MB and less than 300MB", "cmd": "find . -size +270M -size -300M"}, {"invocation": "Find all Read Only files in entire file system and show a few lines of output from the beginning", "cmd": "find / -perm /u=r | head"}, {"invocation": "Print position number of day '9' in fourth line of calendar output for September, 2009.", "cmd": "cal 09 2009 | awk 'NR==4{day=\"9\"; col=index($0,day); print col }'"}, {"invocation": "Calculate md5 checksum of '/etc/localtime' and save the first space separated part in variable 'checksum'", "cmd": "checksum=`md5sum /etc/localtime | cut -d' ' -f1`"}, {"invocation": "Check if \"/path/to/dir\" is a nfs mount point", "cmd": "mount -l | grep 'type nfs' | sed 's/.* on \\([^ ]*\\) .*/\\1/' | grep /path/to/dir"}, {"invocation": "Find files that were modified 7 days ago and archive them", "cmd": "find . -type f -mtime 7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}, {"invocation": "Removes 'latest' folder if empty.", "cmd": "rmdir latest"}, {"invocation": "Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row", "cmd": "awk 'FNR==NR { array[$1]++; next } { n = asorti(array,sort); for (i=1; i<=n; i++) if (sort[i] <= $1 + 10 && sort[i] >= $1 - 10 && $1 != sort[i]) line = (line ? line \",\" : line) sort[i]; print $0, line; line = \"\" }' file.txt{,} | column -t"}, {"invocation": "Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago", "cmd": "find -maxdepth 1 -type d -mtime -1"}, {"invocation": "Creates temporary directory with name formatted like .daemonXXXXXXX in /tmp/ folder, and saves path to it in 'TMPDIR' variable.", "cmd": "TMPDIR=$(mktemp -p /tmp -d .daemonXXXXXXX)"}, {"invocation": "Set the setup connection timeout to 3 seconds for connecting to \"user@ip\" via ssh", "cmd": "ssh -o ConnectTimeout=3 user@ip"}, {"invocation": "Find '.git' directories in directory tree /home/madhu/release/workspace", "cmd": "find /home/madhu/release/workspace -type d -name '.git'"}, {"invocation": "Find all *.rb (regular) files under current directory and count their line numbers", "cmd": "find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;"}, {"invocation": "Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt\"", "cmd": "mv -f file.txt /var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt"}, {"invocation": "Print only first line of 'file' content, formatted as 29-symbol wide column", "cmd": "cat file | fold -w29 | head -1"}, {"invocation": "Count the toal number of lines in all .py files in current directory tree", "cmd": "find . -name *.py -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}, {"invocation": "Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'", "cmd": "tac file | awk '/pattern/{print;exit}1' | tac"}, {"invocation": "Make directories for each line in \"folder_list.txt\"", "cmd": "cat folder_list.txt | xargs mkdir"}, {"invocation": "Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory", "cmd": "find . -name CVS -prune -o -exec mv '{}' `echo {} | tr '[A-Z]' '[a-z]'` \\; -print"}, {"invocation": "Find files/directories named 'foo.bar' in the root filesystem partition", "cmd": "find / -name foo.bar -print -xdev"}, {"invocation": "Print the list of all files under the current directory and below", "cmd": "find ."}, {"invocation": "Gets MAC address of p2p0 network interface.", "cmd": "ifconfig p2p0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}, {"invocation": "display all the jpg files in the current folder which belong to the user nobody", "cmd": "find . -name *.jpg -user nobody"}, {"invocation": "Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.", "cmd": "find /Users -type d -iname '*.bak' -print0 | xargs -0 rmdir"}, {"invocation": "List all files with their paths that have identical content.", "cmd": "find * -type f | xargs md5sum | sort | uniq -Dw32"}, {"invocation": "Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"/usr/lib/python2.6/site-packages/awscli/\"", "cmd": "chown amzadm.root -R /usr/lib/python2.6/site-packages/awscli/"}, {"invocation": "display all the \".sh\" files in the current folder", "cmd": "find -name *.sh"}, {"invocation": "Delete all *txt files under current directory", "cmd": "find . -name \"*txt\" -type f -print | xargs rm"}, {"invocation": "display all the empty files in the current folder( files of size 0 bytes)", "cmd": "find . -empty"}, {"invocation": "Find files/directories under current directory that matches './projects/insanewebproject' in their paths", "cmd": "find -ipath './projects/insanewebproject'"}, {"invocation": "find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago.", "cmd": "find . -mmin -720 -mmin +60 -type f -name \"t*\" -exec ls -l '{}' \\;"}, {"invocation": "Print the current working directory with resolved symbolic links", "cmd": "pwd -P"}, {"invocation": "Find all files named 'foo' under current directory tree without descending into directories named 'foo'", "cmd": "find . -name foo -type d -prune -o -name foo -print"}, {"invocation": "display all hidden files in the current folder", "cmd": "find . -type f -name \".*\""}, {"invocation": "display all normal/regular files in current folder", "cmd": "find . -type f -print0"}, {"invocation": "Print the user name of the user running sudo", "cmd": "who -m | awk '{print $1}'"}, {"invocation": "List \".java\" files that have the same contents", "cmd": "md5sum *.java | sort | uniq -d -w32"}, {"invocation": "Find all regular files under $DIR directory tree with \".$TYPE\" extension (case insensitive) where $TYPE expands in the current shell", "cmd": "find $DIR -type f -iname \"*.$TYPE\""}, {"invocation": "Print unique lines of \"second-file-sorted.txt\" compared to \"first-file-sorted.txt\"", "cmd": "comm -23 second-file-sorted.txt first-file-sorted.txt"}, {"invocation": "List unique series of 3 characters in file \"$1\" prefixed by the number of occurrences and sorted from most frequent to least frequent", "cmd": "fold -w3 \"$1\" | sort | uniq -c | sort -k1,1nr -k2"}, {"invocation": "Change to directory listed in file '$HOME/.lastdir'", "cmd": "cd `cat $HOME/.lastdir`"}, {"invocation": "Remove all files from the current directory tree whose names do not match regular expression \"excluded files criteria\"", "cmd": "find . | grep -v \"excluded files criteria\" | xargs rm"}, {"invocation": "Recursively change the owner of all files in \"/home/test\" to \"test\"", "cmd": "sudo chown -R test /home/test"}, {"invocation": "Display a long listing of all regular files with 0777 permission under current directory tree", "cmd": "find . -perm 0777 -type f -exec ls -l {} \\;"}, {"invocation": "Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.", "cmd": "find . -maxdepth 1 -name '*Music*' -prune -o -print0 | xargs -0 -i cp {} dest/"}, {"invocation": "find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt", "cmd": "find /opt \\( -name error_log -o -name 'access_log' -o -name 'ssl_engine_log' -o -name 'rewrite_log' -o  -name 'catalina.out' \\) -size +300000k -a -size -5000000k"}, {"invocation": "Identify CMS version/releases accross all your PHPBB installations", "cmd": "find /var/www/vhosts/*/httpdocs/ -type f -wholename *includes/constants.php -exec grep -H \"PHPBB_VERSION\" {} \\;"}, {"invocation": "find all directories with the name \"lib64\" in the usr folder and replace space with ':'", "cmd": "find /usr -name lib64 -type d|paste -s -d:"}, {"invocation": "Find all regular files under '/home/john' directory tree that start with 'landof' in their names", "cmd": "find /home/john -name \"landof*\" -type f -print"}, {"invocation": "Find all files recursively which end in \".php\"", "cmd": "find . -name \"*.php\" -print"}, {"invocation": "List all the emptry files in thecurrent directory only.", "cmd": "find . -maxdepth 1 -empty"}, {"invocation": "find all the empty directories in current folder and delete them", "cmd": "find ./ -empty -type d -delete"}, {"invocation": "display all the files in the current folder", "cmd": "find . | xargs echo"}, {"invocation": "Print the list of regular files from the current directory that were last modified on November, 22", "cmd": "find . -maxdepth 1 -type f -newermt \"Nov 22\" \\! -newermt \"Nov 23\" -exec echo {} +"}, {"invocation": "remove all \"Foo*\" files under current dir", "cmd": "find . -type f -name \"Foo*\" -exec rm {} \\;"}, {"invocation": "Find all file.ext files/directories under present working directory and print . for each of them", "cmd": "find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}, {"invocation": "Prints sizes of all top-level folders in a current folder with human-readable format and descending order.", "cmd": "du -h --max-depth=1 . | sort -n -r"}, {"invocation": "Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.", "cmd": "find . -name \"FILE-TO-FIND\" -exec rm -rf {} +"}, {"invocation": "Split \"/usr/bin/firefox\" into 1000 files of about equal size", "cmd": "split -n 1000 /usr/bin/firefox"}, {"invocation": "Remove all files and directories called \"test\" from the current directory tree", "cmd": "find . -name test -delete"}, {"invocation": "Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder", "cmd": "find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files"}, {"invocation": "find all files in the folder \"myfiles\" which are exactly 5 bytes", "cmd": "find /myfiles -size 5"}, {"invocation": "View manual page of find utility", "cmd": "man find"}, {"invocation": "Print the files under current directory twice per line", "cmd": "find . -type f -exec echo {} {} \\;"}, {"invocation": "Locate symbolic links in /usr and below", "cmd": "find /usr -type l"}, {"invocation": "Find all directories named '.texturedata' under '/path/to/look/in/' directory tree", "cmd": "find /path/to/look/in/ -type d -name '.texturedata'"}, {"invocation": "Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership", "cmd": "find . | cpio -pdumv /path/to/destination/dir"}, {"invocation": "Report file system containing path to /dir/inner_dir/ disk usage human-readable.", "cmd": "df -h /dir/inner_dir/"}, {"invocation": "Recursively change owner to \"tomcat6\" of \"webapps\", \"temp\", \"logs\", \"work\", and \"conf\"", "cmd": "chown -R tomcat6 webapps temp logs work conf"}, {"invocation": "Report total file systems disk usage.", "cmd": "df --total | tail -n 1"}, {"invocation": "Find all Read Only files", "cmd": "find / -perm /u=r"}, {"invocation": "Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions", "cmd": "find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \\;"}, {"invocation": "Print a sorted list of *.so files in the bla directory tree", "cmd": "find bla -name *.so -print0 | sort -rz"}, {"invocation": "Find all files that aren't owned by user www-data", "cmd": "find -not -user www-data"}, {"invocation": "Count non-blank lines in a file 'foo.c'", "cmd": "cat foo.c | sed '/^\\s*$/d' | wc -l"}, {"invocation": "find all regex  '\\./[a-f0-9\\-]\\{36\\}\\.jpg' files", "cmd": "find . -regex '\\./[a-f0-9\\-]\\{36\\}\\.jpg'"}, {"invocation": "display all files in the folder /usr and its sub directory(do not search beyond the sub directory)", "cmd": "find /usr -maxdepth 1 -print"}, {"invocation": "Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names", "cmd": "find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +"}, {"invocation": "Look for \"filename\" in the current directory and below", "cmd": "find -name filename"}, {"invocation": "find all the png files in current folder which are present in the pattern list file \"search.txt\"", "cmd": "find . -name '*.png' | grep -f <(sed s?^?/[0-9]_[0-9]_[0-9]_? search.txt)"}, {"invocation": "Set the 'xtrace' shell variable", "cmd": "set -x"}, {"invocation": "Find all symbolic links under current directory that are not hard links", "cmd": "find . -type f -links 1 -print"}, {"invocation": "Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.", "cmd": "find . -name \"*.php\" | xargs wc -l"}, {"invocation": "List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'", "cmd": "find ${CURR_DIR} -type f \\( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \\) -printf \"./%P\\n\""}, {"invocation": "Verbosely compresses all files on sixth and seventh depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*/*/*/*/*"}, {"invocation": "Archive \"/top/a/b/c/d\" to host \"remote\" using relative path names", "cmd": "rsync -a --relative /top/a/b/c/d remote:/"}, {"invocation": "Archive the entire file system into tarfile.tar.bz2", "cmd": "find / -print0 | xargs -0 tar cjf tarfile.tar.bz2"}, {"invocation": "Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories", "cmd": "find . -not -path '*/\\.*' -type f -name '*some text*'"}, {"invocation": "Move all Emacs backup files from the current directory tree to ~/backups/", "cmd": "find . -name '*~' -print 0 | xargs -0 -I % cp % ~/backups"}, {"invocation": "Find and remove all .core files", "cmd": "find / -name \"*.core\" | xargs rm"}, {"invocation": "show all files in the current directory and all subdirectories", "cmd": "find ."}, {"invocation": "Calculate the md5 sum of \"exampleString\"", "cmd": "echo -n 'exampleString' | md5sum"}, {"invocation": "Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'", "cmd": "find . -name '*.pl' | xargs grep -L '^use strict'"}, {"invocation": "Look for directory `Cookbook'", "cmd": "find -name Cookbook -type d"}, {"invocation": "Recursively change owner and group of \"/usr/local/rvm/gems/ruby-2.0.0-p481/\" to the current user", "cmd": "sudo chown $(whoami):$(whoami) /usr/local/rvm/gems/ruby-2.0.0-p481/ -R"}, {"invocation": "find all the files in the current folder which are smaller than 9MB", "cmd": "find . -size -9k"}, {"invocation": "Find all directories under current directory and set their permission to 775", "cmd": "find -type d | xargs chmod 775"}, {"invocation": "Archive preserving permissions and ownership files in \"/var/www/\" on host \"user@10.1.1.2\" to local \"/var/www/\"", "cmd": "sudo rsync -az user@10.1.1.2:/var/www/ /var/www/"}, {"invocation": "find all the files older than 30 days", "cmd": "find /tmp -mtime +30 -print"}, {"invocation": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"", "cmd": "find . -iname .svn -exec rm -rf {} \\;"}, {"invocation": "Display the file type description of /bin/bash, ie. symbolic link, ELF executable, etc.", "cmd": "$ file /bin/bash"}, {"invocation": "Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories", "cmd": "find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}, {"invocation": "Find files and directories newer than CompareFile under current directory", "cmd": "find . -newer CompareFile -print"}, {"invocation": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end", "cmd": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"}, {"invocation": "list all processes with its PIDs", "cmd": "jobs -l"}, {"invocation": "From a script, output the name of the script itself, without containing directories - from a shell, output the name of the shell.", "cmd": "basename -- $0"}, {"invocation": "Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'.", "cmd": "ifconfig eth0:fakenfs 192.0.2.55 netmask 255.255.255.255"}, {"invocation": "List all regular files from the current directory tree that were modified less than 60 days ago", "cmd": "find -type f -mtime -60"}, {"invocation": "Change the owner of all files in the current directory tree excluding those who match \"./var/foo*\" to \"www-data\"", "cmd": "find . -not -iwholename './var/foo*' -exec chown www-data '{}' \\;"}, {"invocation": "Find all socket files in the current directory and its sub-directories.", "cmd": "find . -type s"}, {"invocation": "Sort file \"a.csv\" by the first comma separated value of each line and print only unique entries", "cmd": "tac a.csv | sort -u -t, -r -k1,1 |tac"}, {"invocation": "Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees", "cmd": "find ./dir1 ./dir2 -name foo.bar -print"}, {"invocation": "find the oldest normal file in the current directory and display with its timestamp", "cmd": "find ! -type d -printf \"%T@ %p\\n\" | sort -n | head -n1"}, {"invocation": "Set variable \"filename\" to only the name of document specified by URL, in this case \"pic.jpg\"", "cmd": "filename=\"`basename \"http://pics.sitename.com/images/191211/pic.jpg\"`\""}, {"invocation": "search for files with the name \"temp\" in the /usr folder", "cmd": "find /usr -name temp -print"}, {"invocation": "Recursively finds in all folders but \"./output/*\" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.", "cmd": "find .  \\( ! -path \"./output/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach"}, {"invocation": "Find all *.data files under jcho directory", "cmd": "find jcho -name *.data"}, {"invocation": "Mount \"/path/to/device\" on \"/path/to/mount/location\" as a loop back device", "cmd": "mount /path/to/device /path/to/mount/location -o loop"}, {"invocation": "Show the list of files modified more than 31 days ago", "cmd": "find / -mtime +31 -print"}, {"invocation": "Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days", "cmd": "find /mydir1 /mydir2 -size +2000 -atime +30 -print"}, {"invocation": "Print the login time and user of the first person who logged in", "cmd": "who | awk '{print $3 \" \" $4 \" \"$1}' | sort | head -1"}, {"invocation": "Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.", "cmd": "join -t, -o 1.1,1.2,2.3 -a1 in1 in2"}, {"invocation": "find md5sum of string 'hi'", "cmd": "echo -n hi | md5"}, {"invocation": "display a long listing of all the normal/regular files in the current folder and do not search in the sub folders", "cmd": "find . -maxdepth 1 -type f -exec ls -l {} \\; | less"}, {"invocation": "Send SIGTERM signal to last process sent to background by the current shell.", "cmd": "kill $!"}, {"invocation": "find all text files in user/directory/ and display the last line", "cmd": "find /user/directory/* -name \"*txt\" -mtime 0   -type f -exec awk '{s=$0};END{print FILENAME, \": \",s}' {} \\;"}, {"invocation": "Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place", "cmd": "find /myprojects -type f -name '*.cpp' -print0 | xargs -0 -n 1 sed -i 's/previousword/newword/g'"}, {"invocation": "find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory", "cmd": "find /media/New\\ Volume/bhajans -maxdepth 1 -type d | xargs -0 mkdir -p"}, {"invocation": "Make all regular files in the current directory tree world-readable", "cmd": "find . -type f -print0 | xargs -0 chmod go+r"}, {"invocation": "find all the png files in the current folder which are present in the pattern list search .txt", "cmd": "find . -name '*.png' | grep -f search.txt"}, {"invocation": "Save the first line of \"$j\" into variable \"k\" in ksh", "cmd": "echo $j | read k"}, {"invocation": "Count the number of regular files with 755 permission under current directory tree", "cmd": "find . -type f -perm 755 | wc -l"}, {"invocation": "display all regular/normal files in the folder \"dir\" and display the filename along with file size", "cmd": "find dir -type f -printf \"f %s %p\\n\""}, {"invocation": "find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB", "cmd": "find . -atime +7 -o -size +20480 -print"}, {"invocation": "find all the database files in the folder /var/named", "cmd": "find /var/named -type f -name *.db"}, {"invocation": "Find all .gz archives in the current directory tree and check if they are valid", "cmd": "find \"*.gz\" -exec gunzip -vt \"{}\" +"}, {"invocation": "Search for environmental variables with \"HIST\" in their name or contents", "cmd": "set | grep HIST"}, {"invocation": "Save the number of bytes in \"$file\" after decompression into variable \"size\"", "cmd": "size=\"$(zcat \"$file\" | wc -c)\""}, {"invocation": "Replace \"inputfile\" with a sorted unique list of its contents", "cmd": "sort inputfile | uniq | sort -o inputfile"}, {"invocation": "Execute \"ls\" every 2 seconds", "cmd": "watch ls"}, {"invocation": "List all regular files residing in the current directory tree and containing string \"/bin/ksh\"", "cmd": "find . -type f -exec grep -li '/bin/ksh' {} \\;"}, {"invocation": "find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end", "cmd": "find . -wholename \\*.mbox | awk '{new=$0; gsub(\"\\.mbox$\", \"\", new) ; system(\"mv \\\"\" $0 \"\\\" \\\"\" new \"\\\"\") }'"}, {"invocation": "display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter", "cmd": "find . -name \\? -mtime -1"}, {"invocation": "Find files/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem", "cmd": "find / -user tutonics -name \"file.txt\""}, {"invocation": "Search /var/log for logs larger than 10 megabytes", "cmd": "find /var/log -size +10M -ls"}, {"invocation": "Calculate the md5 sum of all the file metadata in the current directory tree excluding \".svn\"", "cmd": "find . -name '.svn' -prune -o -type f -printf '%m%c%p' | md5sum"}, {"invocation": "find all the files that have been modified since the last time we checked", "cmd": "find /etc -newer /var/log/backup.timestamp -print"}, {"invocation": "Recursively removes all files like \"(__pycache__|\\.pyc|\\.pyo$)\" in a current folder.", "cmd": "find . | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf"}, {"invocation": "change the permission of all php files in current folder", "cmd": "find . -name \"*.php\" -exec chmod 755 {} \\;"}, {"invocation": "Shows size of compressed file in .bz2 archive.", "cmd": "bunzip2 -c bigFile.bz2 | wc -c"}, {"invocation": "Opens gawk info manual and goes to command-line options node.", "cmd": "info -O gawk"}, {"invocation": "Find all directories in the current directory tree that are not accessible by all", "cmd": "find -type d ! -perm -111"}, {"invocation": "Returns 0 if user $1 belongs to group $2.", "cmd": "groups $1 | grep -q \"\\b$2\\b\""}, {"invocation": "Raise an error for using uninitialized variables", "cmd": "set -u"}, {"invocation": "Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree", "cmd": "find /home/username/public_html/images -name \"articles.jpg\""}, {"invocation": "Show manual of the find utility", "cmd": "man find"}, {"invocation": "change permissions of all the script files in a directory", "cmd": "find /home/john/script -name \"*.sh\" -type f -exec chmod 644 {} \\;"}, {"invocation": "Recursively removes all files with name like \"*.war\" in  /home/ubuntu/wars folder.", "cmd": "find /home/ubuntu/wars -type f -name \"*.war\" -exec rm {} \\\\;"}, {"invocation": "Print the lines in \"table.txt\" grouped by the first field", "cmd": "cat table.txt | awk '{print $1}' | sort | uniq  | xargs -i grep {} table.txt"}, {"invocation": "find all the regular/normal files in all the directories in the /some/dir and delete them", "cmd": "find /some/dir -type d -exec find {} -type f -delete \\;"}, {"invocation": "Split \"$1\" into files of at most \"$2\" or default 10000 using a numeric suffix of length 6 and suffix \"${tdir}/x\"", "cmd": "split -l ${2:-10000} -d -a 6 \"$1\" \"${tdir}/x\""}, {"invocation": "prints the last non-empty line of a file", "cmd": "tac $FILE | grep -m 1 '.'"}, {"invocation": "display all the files in the current folder expect perl shell and python fiels", "cmd": "find . -not -name \"*.pl\" -not -name \"*.sh\" -not -name \"*.py\""}, {"invocation": "List all files/folders in current directory by separating them with spaces", "cmd": "ls | tr  \"\\n\" \" \""}, {"invocation": "Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19'", "cmd": "find . -name 'some_text_2014.08.19*'"}, {"invocation": "Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/", "cmd": "find /var/spool/postfix/{deferred,active,maildrop,incoming}/ -type f"}, {"invocation": "Print out the names and types of all files in the current directory tree", "cmd": "find . -printf \"%y %p\\n\""}, {"invocation": "Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: \"length(FOO_NO_LEAD_SPACE)==<counted number of characters>\"", "cmd": "echo -e \"length(FOO_NO_LEAD_SPACE)==$(echo -ne \"${FOO_NO_LEAD_SPACE}\" | wc -m)\""}, {"invocation": "Find all files/directories under current directory tree with '.old' extension", "cmd": "find . -name \u201d*.old\u201d -print"}, {"invocation": "find all the files in the current folder which do not have the read permission", "cmd": "find . -type f ! -perm -444"}, {"invocation": "Change the user to daisy for directories and subdirectories owned by harry", "cmd": "find . -type d -user harry -exec chown daisy {} \\;"}, {"invocation": "Move all files including hidden files in \"/path/subfolder/\" to \"/path/\"", "cmd": "mv /path/subfolder/{.,}* /path/"}, {"invocation": "Find all regular files in the /path/to/base/dir tree", "cmd": "find /path/to/base/dir -type f"}, {"invocation": "display all the header files  and cpp files in the current folder", "cmd": "find \\( -name '*.cpp' -o -name '*.h' \\) -print"}, {"invocation": "find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files", "cmd": "find . -type f -ctime -3 | tail -n 5"}, {"invocation": "Remove all characters except \";\" and digits from standard input", "cmd": "tr -cd \";0-9\""}, {"invocation": "Find all files under current directory and show their file information", "cmd": "find . -type f | xargs file"}, {"invocation": "Find all regular files with permissions 777 under and below /home/user/demo/", "cmd": "find /home/user/demo -type f -perm 777 -print"}, {"invocation": "search for all the mp3 files in the file system and move them to the folder /mnt/mp3", "cmd": "find / -iname \"*.mp3\" -exec mv {} /mnt/mp3 \\;"}, {"invocation": "Print what year it was 222 days ago", "cmd": "date '+%Y' --date='222 days ago'"}, {"invocation": "find md5sum of 401", "cmd": "yosemite$ echo -n 401 | md5"}, {"invocation": "Recursively change the group of all files in \"/var/lib/php/session\" to \"lighttpd\"", "cmd": "chown -R :lighttpd /var/lib/php/session"}, {"invocation": "Make directories to \"/my/other/path/here/\" as needed", "cmd": "mkdir -p /my/other/path/here/"}, {"invocation": "Find all *.txt files/directories under current directory", "cmd": "find . -name \"*.txt\""}, {"invocation": "search for perl files in the folder /users/tom", "cmd": "find /users/tom -name \"*.pl\""}, {"invocation": "display all the normal/regular files in the current folder and do not go beyond 3 levels", "cmd": "find . -maxdepth 3 -type f"}, {"invocation": "find the file with the name \"esxcfg-firewall\" in the current folder", "cmd": "find -print | grep esxcfg-firewall"}, {"invocation": "Finds string with text \"string to be searched\" in any cased files like \"*.cs\" recursively in a current folder.", "cmd": "find ./ -type f -iname \"*.cs\" -print0 | xargs -0 grep \"content pattern\""}, {"invocation": "Find files in and below the current directory whose names begin with \"not\" and remove one of them", "cmd": "find . -name not\\* | tail -1 | xargs rm"}, {"invocation": "Return 0 if file system is mounted on '/full/path'", "cmd": "df /full/path | grep -q /full/path"}, {"invocation": "Find all *.srt files under directory named 'working' and show the first one found", "cmd": "find working -type f -name \"*.srt\" | head -1"}, {"invocation": "Archive all filepattern-*2009* files/directories under data/ into 2009.tar", "cmd": "find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;"}, {"invocation": "Gets MAC addresses of all active network interfaces.", "cmd": "ifconfig | awk '$0 ~ /HWaddr/ { print $5 }'"}, {"invocation": "Count the number of differing lines in \"file1\" and \"file2\" with 0 lines of unified context", "cmd": "diff -U 0 file1 file2 | grep -v ^@ | wc -l"}, {"invocation": "display all normal/regular files in current folder which have readable permission", "cmd": "find . -type f -readable"}, {"invocation": "display the number of lines in all the files in the current folder", "cmd": "find . -name '*' | xargs wc -l"}, {"invocation": "Print lines containing string TEXT from all log files in the current directory.", "cmd": "grep -e TEXT *.log | cut -d':' --complement -s -f1"}, {"invocation": "Find all files of the user with UID=1000", "cmd": "find -user 1000"}, {"invocation": "find all the php files in the current folder (discards any directory which has an extension of \".php\")", "cmd": "find . -name \\*.php -type f"}, {"invocation": "Search \"file1\" for lines matching regex patterns listed in \"file2\" and list the unique results (sorted alphabetically)", "cmd": "grep -f file2 file1 | sort -u"}, {"invocation": "Find all files matching shell pattern \"foo/bar\" in the foo directory tree", "cmd": "find foo -path foo/bar -print"}, {"invocation": "Go to previous working directory.", "cmd": "cd -"}, {"invocation": "Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree", "cmd": "find /myprojects -type f -name '*.cpp' -print0 |    xargs -0 echo sed -i 's/previousword/newword/g'"}, {"invocation": "display all the \".mov\" files in the current folder", "cmd": "find . -name \"*.mov\""}, {"invocation": "find all text files in current folder and display all files that have the alphabet a in their name", "cmd": "find . -name \".txt\" | grep a"}, {"invocation": "Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories", "cmd": "find \"$1\" -perm -u+w -print0 | xargs chmod g+w"}, {"invocation": "Delete all directories under '.cache/chromium/Default/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size", "cmd": "find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -delete"}, {"invocation": "find all the files ending with jpg in current folder and display their count ( case insensitive )", "cmd": "find ./ -iname '*.jpg' -type f | wc -l"}, {"invocation": "Search for \"pattern\" in \"file\" and separate each line with '\" \"'", "cmd": "cat file | grep pattern | paste -sd'~' | sed -e 's/~/\" \"/g'"}, {"invocation": "Set permissions to 644 for all regular files under the current directory tree that have permissions 755", "cmd": "find . -type f -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "delete all the mp4 files in the folder /home which are bigger than 10MB", "cmd": "find /home -type f -name *.mp4 -size +10M -exec rm {} \\;"}, {"invocation": "Findx all files having text \"texthere\" recursively in a current folder, and prints only file names with matching strings.", "cmd": "find -type f -exec grep -l \"texthere\" {} +"}, {"invocation": "Show process tree with command-line arguments of a process that has id 20238.", "cmd": "pstree -a -p 20238"}, {"invocation": "Print the contents of \"numbers.txt\"", "cmd": "cat numbers.txt"}, {"invocation": "Remove files from the home directory tree that were last accessed more than 100 days ago", "cmd": "find ~ -atime +100 -delete"}, {"invocation": "display all file in the home folder except \".c\" files", "cmd": "find $HOME -not -iname \"*.c\" -print"}, {"invocation": "Print 'file' file, splitting lines into pieces with no more that 3 words in each one.", "cmd": "cat file | xargs -n3"}, {"invocation": "Print the time of last boot", "cmd": "who -b"}, {"invocation": "Print the list of the current directory's subdirectories", "cmd": "find -maxdepth 1 -type d"}, {"invocation": "Disable wildcard expansion and name globbing", "cmd": "set -f"}, {"invocation": "List environment variable values whose name matches '^\\w*X\\w*'", "cmd": "set | grep -P '^\\w*X\\w*(?==)' | grep -oP '(?<==).*'"}, {"invocation": "Rename all files in current directory to lowerase.", "cmd": "rename 'y/A-Z/a-z/' *"}, {"invocation": "find all the files ending with .ini in the current directory.", "cmd": "find . -name *.ini"}, {"invocation": "List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.", "cmd": "find ./in_save/ -type f -maxdepth 1| more"}, {"invocation": "find a difference between website content of \"http://tldp.org/LDP/abs/html/\" and \"http://www.redhat.com/mirrors/LDP/LDP/abs/html/\"", "cmd": "diff <(curl -s http://tldp.org/LDP/abs/html/) <(curl -s http://www.redhat.com/mirrors/LDP/LDP/abs/html/)"}, {"invocation": "Create a ssh key and store it in the file ~/.ssh/apache-rsync", "cmd": "ssh-keygen -f ~/.ssh/apache-rsync"}, {"invocation": "Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree", "cmd": "/usr/bin/find /home/user/Series/ -iname \"*sample*\" -exec rm {} \\;"}, {"invocation": "Replace all occurrence of \"log_errors = Off\" with \"log_errors = On\" in all 'php.ini' files in the current directory tree", "cmd": "find . -name 'php.ini' -exec sed -i 's/log_errors = Off/log_errors = On/g' \"{}\" \\;"}, {"invocation": "Rename \"file001abc.txt\" to \"abc1.txt\"", "cmd": "mv file001abc.txt abc1.txt"}, {"invocation": "Find the unique owners of all the files in the /bin directory", "cmd": "find /bin -type f -follow | xargs    ls -al | awk ' NF==9 { print $3 }'|sort -u"}, {"invocation": "Count the number of non localhost users", "cmd": "who | grep -v localhost | wc -l"}, {"invocation": "Display the content of YourFile.txt, waiting for user input at each page.", "cmd": "more YourFile.txt"}, {"invocation": "Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile'", "cmd": "tmpfile=$(mktemp $(dirname \"$1\")/XXXXXX)"}, {"invocation": "Write the common third space separated fields in \"file1.sorted\" and \"file2.sorted\" to \"common_values.field\"", "cmd": "comm -12 <(cut -d \" \" -f 3 file1.sorted | uniq) <(cut -d \" \" -f 3 file2.sorted | uniq) > common_values.field"}, {"invocation": "Erase user's cron jobs and add one cron job to run \"script\" every minute.", "cmd": "echo \"* * * * * script\" | crontab -"}, {"invocation": "Send SIGHUP (hangup) signal to all parents of zombie processes.", "cmd": "kill -HUP $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"}, {"invocation": "Removes all empty folders under current path, aged between 'first' and 'last' timestamps.", "cmd": "find . -newer first -not -newer last -type d -print0 |  xargs -0 rmdir"}, {"invocation": "List subdirectories in the current directory", "cmd": "find . -maxdepth 1 -type d -exec ls -ld \"{}\" \\;"}, {"invocation": "Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750", "cmd": "find /home/username/public_html/sites/all/modules -type d -exec chmod 750 {} +"}, {"invocation": "Print TXT record with server`s hostname from nameserver 'server'", "cmd": "dig @server hostname.bind ch txt"}, {"invocation": "Search the entire file system for any file that is writable by other.", "cmd": "find / \u2013 perm -0002"}, {"invocation": "find all files under the current folder except dir1 dir2 dir3  folder", "cmd": "find . -type d \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -o -print"}, {"invocation": "List all files and directories in the /home directory tree whose names are \"Trash\"", "cmd": "find /home -name Trash -exec ls -al {} \\;"}, {"invocation": "List all environment variables (name and value) whose name starts with GOROOT", "cmd": "env | grep '^GOROOT'"}, {"invocation": "Find regular files matching pattern \"*oraenv*\" and excecute the \"file\" utility for each of them", "cmd": "find . -name \"*oraenv*\" -type f -exec file {} \\;"}, {"invocation": "Find all directories under /var/www directory and set their permission to 755", "cmd": "sudo find /var/www -type d -print0 | xargs -0 chmod 755"}, {"invocation": "Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http://example.com", "cmd": "sed -n 's;\\(http://[^/]*\\)/.*;\\1;p'"}, {"invocation": "Find all regular files whose names contain \"@\" in directory tree ~/$folder", "cmd": "find ~/$folder -name \"*@*\" -type f -print0"}, {"invocation": "Connect to host \"server_b\" as ssh user \"user\" and copy local file \"/my_folder/my_file.xml\" to server_b's directory \"/my_new_folder/\".", "cmd": "scp -v /my_folder/my_file.xml user@server_b:/my_new_folder/"}, {"invocation": "Display bash function definition of \"foobar\"", "cmd": "set | sed -n '/^foobar ()/,/^}/p'"}, {"invocation": "Display a long listing of all the regular files under current directory tree that are newer than \u2018Apr 18 23:59:59 EDT 2013\u2019 and older than \u2018Apr 20 00:00:00 EDT 2013\u2019 by modification time", "cmd": "find . -type f -newermt \u2018Apr 18 23:59:59 EDT 2013\u2019 ! -newermt \u2018Apr 20 00:00:00 EDT 2013\u2019 -exec ls -l \u2018{}\u2019 \\;"}, {"invocation": "Displays calendar of a previous, current and next month for December of 2120 year.", "cmd": "cal -3 12 2120"}, {"invocation": "find all directories named build under the current directory", "cmd": "find . -type d -name build"}, {"invocation": "Search the /path/to/directory tree for regular files modified 61 days ago and then remove them", "cmd": "find /path/to/directory -type f -mtime 61 -exec rm -f {} \\;"}, {"invocation": "recursively change owner of the directory /tmp to the current user", "cmd": "sudo chown -R $USER ~/tmp"}, {"invocation": "List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time", "cmd": "find / -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -printf \"%T+\\t%p\\n\" | sort | awk '{print $2}'"}, {"invocation": "Lists all files in a current folder, separating names with comma.", "cmd": "ls | sed '$!s/$/,/' | tr -d '\\n'"}, {"invocation": "Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place", "cmd": "find /myprojects -type f -name *.cpp -print0 | xargs -0 sed -i 's/previousword/newword/g'"}, {"invocation": "Print a single line of numbers from \"001\" to \"100\"", "cmd": "yes | head -n 100 | awk '{printf( \"%03d \", NR )}'"}, {"invocation": "List all *.txt files under current directory that match 'foo=' in their file information", "cmd": "find . -name \"*.txt\" -type f -print | xargs file | grep \"foo=\" | cut -d: -f1"}, {"invocation": "delete all the \"wmv\" \"wma\" files in the currnet folder,", "cmd": "find . \\( -name '*.wmv' -o -name '*.wma' \\) -exec rm {} \\;"}, {"invocation": "Remove all the files and directories that are in /dir1 but not in /dir2.", "cmd": "diff -rq /dir1 /dir2 | grep -E \"^Only in /dir1.*\" | sed -n 's/://p' | awk '{print $3\"/\"$4}' xargs -I {} rm -r {}"}, {"invocation": "List all *fink* files/directories in entire file system", "cmd": "find / \\( -type f -or -type d \\) -name \\*fink\\* -ls"}, {"invocation": "Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.", "cmd": "find ./ -type f -exec grep -H 'text-to-find-here' {} \\;"}, {"invocation": "Brings down network interface eth0.", "cmd": "ifconfig eth0 down"}, {"invocation": "Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/", "cmd": "find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"}, {"invocation": "Find files/directories that are owned by the user 'syslog' in entire filesystem", "cmd": "find / -user syslog"}, {"invocation": "List all .jpg files in the home directory tree in a fast way", "cmd": "find . -name \"*.jpg\" -exec ls {} +"}, {"invocation": "Delete all hidden files/directories under $some_directory", "cmd": "find \"$some_directory\" -name '.*' ! -name '.' ! -name '..' -delete"}, {"invocation": "Print all directories under $root appending a : (colon) at the end of each path", "cmd": "find $root -type d -printf '%p:'"}, {"invocation": "Make \"file.sh\" executable", "cmd": "chmod +x file.sh"}, {"invocation": "find all directories in the current directory which have the name foo and do not have the extension \"bar\"", "cmd": "find . -name '*foo*' ! -name '*.bar' -type d -print"}, {"invocation": "List all *.ogg files under your home directory along with their size", "cmd": "find $HOME -name '*.ogg' -type f -exec du -h '{}' \\;"}, {"invocation": "find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'", "cmd": "find -name '*.js' -not \\( -path './node_modules/*' -o -path './vendor/*' \\)"}, {"invocation": "Find all filename.* files/directories under /root/directory/to/search", "cmd": "find /root/directory/to/search -name 'filename.*'"}, {"invocation": "Print first field from semicolon-seprated line <line>.", "cmd": "echo \"<line>\" | cut -d \";\" -f 1"}, {"invocation": "Print first column of every line in every *.txt separated by a space", "cmd": "paste -d':' *.txt | sed 's/ [^:]*$//;s/ [^:]*:*/ /g;s/://g'"}, {"invocation": "Search the file system for regular files whose names are shorter than 25 characters", "cmd": "find / -type f| egrep -o \"/[^/]{0,24}$\" | cut -c 2-"}, {"invocation": "Remove containing directories and suffix \".wiki\" from specified path, output the result.", "cmd": "basename /home/jsmith/base.wiki .wiki"}, {"invocation": "Make directories and parents as needed to \"${raw_folder}\" and \"${split_folder}\"", "cmd": "mkdir -p ${raw_folder} ${split_folder}"}, {"invocation": "Show all previously typed shell commands, waiting for user interaction after each page of output.", "cmd": "history | more"}, {"invocation": "List the unique file extensions of all files under the current directory", "cmd": "find . -type f | grep -o -E '\\.[^\\.]+$' | sort -u"}, {"invocation": "Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree", "cmd": "find . -iname \"*.txt\" -exec du -b {} +"}, {"invocation": "Go to last directory with name starting with a number, useful for timestamped directory names.", "cmd": "cd \"$(ls -rd [0-9]*/ | tail --lines 1)\""}, {"invocation": "Filters out strings, using the extended regexp pattern '^#|^$|no crontab for|cannot use this program' from \"$USERTAB\"", "cmd": "echo \"$USERTAB\"| grep -vE '^#|^$|no crontab for|cannot use this program'"}, {"invocation": "Find all files/directories that belong to the group 'accts' under '/apps' directory tree", "cmd": "find /apps -group accts -print"}, {"invocation": "find all symbolic links under /usr", "cmd": "find /usr -type l"}, {"invocation": "Set variable \"b\" to the first word of \"a\" converted to lowercase.", "cmd": "b=`echo \"$a\" | awk '{ print tolower($1) }'`"}, {"invocation": "display all the C files or Python files in the folder \"euler\"", "cmd": "find euler/ -iname \"*.c*\" -exec echo {} \\; -or -iname \"*.py\" -exec echo {} \\;"}, {"invocation": "find all the configuration files in the file system", "cmd": "find / -name \"*.conf\""}, {"invocation": "Find all files with 644 permission and change the permission to 664", "cmd": "find . -type f -perm 644 -exec chmod 664 {} \\;"}, {"invocation": "Change directory to the parent of the real path of the current script", "cmd": "cd $(dirname $(readlink -f $0))"}, {"invocation": "Print the list of files in the current directory tree with \"xx\" preceding and following each filename", "cmd": "find . -exec echo xx{}xx \\;"}, {"invocation": "Prints day of first Tuesday in a month.", "cmd": "cal | awk 'NR>2{Sfields=7-NF; if (Sfields == 0 ) {printf \"%02d\\n\",$3;exit}}'"}, {"invocation": "display all scala files in the directory \"src/main\"", "cmd": "find . -type f -path \"*src/main/*\\.scala\""}, {"invocation": "Find SQL files with text `expression'", "cmd": "find . -name \"*.sql\" -print0 -type f | xargs -0 grep \"expression\""}, {"invocation": "Numerically sort each line of standard input", "cmd": "sort -n"}, {"invocation": "Check whether current terminal is opened in a screen session.", "cmd": "pstree --show-parents -p $$ | head -n 1 | sed 's/\\(.*\\)+.*/\\1/' | grep screen | wc -l"}, {"invocation": "Make directorie(s) 'es_MX.utf8/LC_MESSAGES' as needed in the current directory", "cmd": "mkdir --parents ./es_MX.utf8/LC_MESSAGES"}, {"invocation": "Remove the regular files from the current directory tree that were last modified on November, 21", "cmd": "find -type f -newermt \"Nov 21\" ! -newermt \"Nov 22\" -delete"}, {"invocation": "Creates temporary folder and saves path to it in 'td' variable.", "cmd": "td=$( mktemp -d )"}, {"invocation": "Rename all .png files, changing the string \"_h.png\" into \"_half.png\".", "cmd": "rename 's/_h.png/_half.png/' *.png"}, {"invocation": "create a compressed archive \"filename.tar.gz\" with verbose output", "cmd": "tar -cvzf filename.tar.gz folder"}, {"invocation": "Make directory \"/etc/cron.15sec\"", "cmd": "mkdir /etc/cron.15sec"}, {"invocation": "Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths", "cmd": "find . -name \"sample*\" | xargs -i echo program {}-out {}"}, {"invocation": "Decompress ${set1[@]} files with gzip", "cmd": "gzip -d ${set1[@]} &"}, {"invocation": "find regular files and directories that have been modified in the last seven days", "cmd": "find . -mtime -7 -type f"}, {"invocation": "display all non empty directories in current folder", "cmd": "find . \\! -empty -type d"}, {"invocation": "Find all  'custlist*' files under current directory", "cmd": "find . -name custlist\\*"}, {"invocation": "Prints process tree of a process having id $ID with parent processes.", "cmd": "pstree -s $ID"}, {"invocation": "search for all the file sin the current folder which are bigger than 10KB and display them smallest file", "cmd": "find . -size +10k -exec ls -lS {} \\+ | head -1"}, {"invocation": "list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.", "cmd": "find . ! -readable -prune"}, {"invocation": "search for the word foo in all the js files in the current folder", "cmd": "find . -name \"*.js\" -exec grep -iH foo {} \\;"}, {"invocation": "Mount \"ext4\" filesystem \"/dev/xvdf1\" on \"/vol\"", "cmd": "sudo mount /dev/xvdf1 /vol -t ext4"}, {"invocation": "Find files owned by no group", "cmd": "find / -nogroup"}, {"invocation": "List an empty environment (prints nothing)", "cmd": "env -i"}, {"invocation": "Executes tmux commands that are stored in the '$tmux_command' variable, and then attaches to the tmux session.", "cmd": "tmux \"$tmux_command \\; attach\""}, {"invocation": "Change permissions to 644 for all directories under and below /path/to/someDirectory/", "cmd": "find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755"}, {"invocation": "Print the 10 most used commands", "cmd": "history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -n | tail | sort -nr"}, {"invocation": "Go to directory pointed by last element of array \"dirs\" in bash version 4.2", "cmd": "cd \"${dirs[-1]}\""}, {"invocation": "Search for files/directories which have read and write permission for their owner, and group and only read permission for others", "cmd": "find . -perm -664"}, {"invocation": "Recursively removes all empty folders under current folder.", "cmd": "find . -depth -type d -empty -exec rmdir {} \\;"}, {"invocation": "Decompresses file.", "cmd": "bzip2 -d /tmp/itunes20140618.tbz"}, {"invocation": "search for a word in all files in a directory", "cmd": "find /directory/containing/files -type f -print0 | xargs -0 grep \"test to search\""}, {"invocation": "Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here", "cmd": "find root -name '*.rmv' -type f -exec cp {} /copy/to/here \\;"}, {"invocation": "Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege", "cmd": "sudo find /home/user/Series/ -iname sample -exec rm {} \\;"}, {"invocation": "Find the passwd file in the current directory and one level down", "cmd": "find -maxdepth 2 -name passwd"}, {"invocation": "list all regular files under the directory \"$directory\"", "cmd": "find $directory -type f -name '*'"}, {"invocation": "File 'save_pid.txt' contains a process ID, instantly kill this process with SIGKILL signal.", "cmd": "kill -9 `cat save_pid.txt`"}, {"invocation": "find all the html files in the current folder and replace the end of each line with a pattern", "cmd": "find ./ -type f -name '*.html' | xargs sed -i '$s/$/<\\/description>/'"}, {"invocation": "Find all .txt files except README.txt", "cmd": "find . -type f -name \"*.txt\" ! -name README.txt -print"}, {"invocation": "find all \".flac\" files in current folder starting with \"cmn-\"", "cmd": "find . -name 'cmn-*.flac'"}, {"invocation": "Search for \" 000\" in the hex dump of \"file-with-nulls\"", "cmd": "od file-with-nulls | grep ' 000'"}, {"invocation": "Set the 'xtrace' shell option", "cmd": "set -x"}, {"invocation": "Find all files/directories under current directory following symlinks if needed", "cmd": "find -L"}, {"invocation": "find files which do not have all permissions to all the users in the current directory", "cmd": "find . -type f ! -perm 777 | head"}, {"invocation": "Print each line in \"file1\" whose first word does not exist as the first word of any line in \"file2\"", "cmd": "join -v 1 <(sort file1) <(sort file2)"}, {"invocation": "Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today", "cmd": "less `find -maxdepth 1 -type f -daystart -mtime -1`"}, {"invocation": "Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.", "cmd": "fgrep --include='STATUS.txt' -rl 'OPEN' | xargs -L 1 dirname"}, {"invocation": "Find files whose pathnames end in \"f\"", "cmd": "find .  -path '*f'"}, {"invocation": "search for a files \"cart1\" in the folder junk which is in home folder and move the folder to ~/junk/A.", "cmd": "find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \\;"}, {"invocation": "Print the contents of \"${SPOOL_FILE}\" file to the console and append to \"${LOG_FILE}\" file", "cmd": "cat ${SPOOL_FILE}                   | tee -a ${LOG_FILE}"}, {"invocation": "List files and directories one level deep in the current directory tree", "cmd": "tree -L 2"}, {"invocation": "find regular files which modification time is  7 days ago", "cmd": "find . -mtime -7 -type f"}, {"invocation": "Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis", "cmd": "find -maxdepth 1 -type f -exec md5sum {} \\; | sed 's/[^(]*(\\([^)]*\\)) =/\\1/'"}, {"invocation": "Move \"file1\", \"file2\", \"...\" to \"target\" directory", "cmd": "mv -t target file1 file2 ..."}, {"invocation": "Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"", "cmd": "find \"$HOME\" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t \"$HOME/newdir\""}, {"invocation": "find all the video files in the home folder", "cmd": "find ~ -type f -exec file -i {} + | grep video"}, {"invocation": "Remove symbolic links and get absolute path of \"${the_stuff_you_test}\" and save to variable \"DIR_PATH\"", "cmd": "DIR_PATH=`readlink -f \"${the_stuff_you_test}\"`"}, {"invocation": "Print characters 2 through 4 of \"abcdefg\"", "cmd": "echo 'abcdefg'|tail -c +2|head -c 3"}, {"invocation": "delete all the tmp files ( files with the extension tmp ) in the /tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.", "cmd": "find /tmp -name \"*.tmp\" -print0 | xargs -0 rm   find /tmp -name \"*.tmp\" -print0 | xargs -0 rm"}, {"invocation": "Find files/directories under current directory without descending into it", "cmd": "find -maxdepth 0"}, {"invocation": "Read line from file descriptor 4 and store received input in 'line' variable", "cmd": "read -u 4 line"}, {"invocation": "Print all filenames under /proc and below", "cmd": "find /proc | xargs"}, {"invocation": "find all files under the /etc directory and display IP address patterns in them", "cmd": "find /etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' \\ | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}, {"invocation": "create directories mnt and point", "cmd": "mkdir mnt point"}, {"invocation": "recursively change owner of the directory /usr/local to the current user", "cmd": "sudo chown -R `whoami` /usr/local"}, {"invocation": "Find all file1 and file9 files/directories under current directory", "cmd": "find . -name file1 -or -name file9"}, {"invocation": "Find all *.sh files owned by user vivek", "cmd": "find / -user vivek -name \"*.sh\""}, {"invocation": "find all files in the current folder which are of size 0 bytes.", "cmd": "find . -type f -size 0b"}, {"invocation": "Find all files whose names do not begin with \"zsh\" on ext3 file systems", "cmd": "find / -fstype ext3 -name zsh*"}, {"invocation": "Find all hidden files under /tmp", "cmd": "find /tmp -type f -name \".*\""}, {"invocation": "display the count of all the directories in the current folder", "cmd": "find . -type d \u2013print | wc -l"}, {"invocation": "find all the empty regular/normal files in the current folder and delete them", "cmd": "find . -type f -empty -delete"}, {"invocation": "Saves in 'result' variable list of groups which user $line belongs to, and not matching pattern \"_unknown|sciences|everyone|netaccounts\"", "cmd": "result=$(groups \"$line\" | sed 's/ /\\n/g' | egrep -v \"_unknown|sciences|everyone|netaccounts\")"}, {"invocation": "find all the files ending with .mp3 or .jpg", "cmd": "find . \\( -name '*.mp3' -o -name '*.jpg' \\) -print"}, {"invocation": "Returns the single most recent file in a directory", "cmd": "ls -t | head -n1"}, {"invocation": "Copy all files with name pattern $j.sh (case insensitive) under '/tmp/2' directory tree to $i directory", "cmd": "find \"/tmp/2/\" -iname \"$j.sh\" -exec cp {} \"$i\" \\;"}, {"invocation": "Print the full path of a file under the current working directory with inode number specified on standard input", "cmd": "xargs -n 1 -I '{}' find \"$(pwd)\" -type f -inum '{}' -print"}, {"invocation": "Find the total size of *.jpg files within the current directory tree", "cmd": "find . -type f -iname '*.jpg' -print0 | du -c --files0-from=-"}, {"invocation": "Go back to last directory.", "cmd": "cd -"}, {"invocation": "List and remove all regular files named \"core\" under /prog that are larger than 500k", "cmd": "find /prog -type f -size +1000 -print -name core -exec rm {} \\;"}, {"invocation": "Print the date formatted with \"%a %x %X\" followed by the host name", "cmd": "echo `date +\"%a %x %X\"` `hostname`"}, {"invocation": "find all the text files that have modified in the last 2 days and not modified today", "cmd": "find . -name \"*.txt\" -type f -daystart -mtime +0 -mtime -2"}, {"invocation": "Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'", "cmd": "echo $MOUNT_OPTS | tr , \\\\\\n | grep '^acl$' -q"}, {"invocation": "Recursively compresses all files within $2 folder.", "cmd": "find $2 -type f -exec bzip2 {} \\;"}, {"invocation": "Search for all files in the /home directory tree that have the same inode number", "cmd": "find /home -xdev -inum 2655341"}, {"invocation": "display all the files having spaces in the current folder", "cmd": "find . -name \"filename including space\""}, {"invocation": "find all the directories in the current folder excluding search in the sub directories and create these directories in another path", "cmd": "find . -maxdepth 1 -type d | xargs -I X mkdir '/new/directory/X'"}, {"invocation": "Print content of 'file' file reverted characterwise", "cmd": "rev file"}, {"invocation": "SSH into server \"app1\" as the current user", "cmd": "ssh app1"}, {"invocation": "Displays a tree of all process alongside their command line arguments.", "cmd": "pstree -a"}, {"invocation": "Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted.", "cmd": "join -t, in1 in2"}, {"invocation": "check readline bindings for \"\\x61\"", "cmd": "bind -p | grep $'\"\\x61\"'"}, {"invocation": "Print all the file/directory paths under current directory", "cmd": "find | xargs"}, {"invocation": "find all files in current folder which are bigger than 1 MB and move them to another folder", "cmd": "find . -size +1M -exec mv {} files \\+"}, {"invocation": "Make directories \"3/foo\", \"3/bar\", and \"3/baz\"", "cmd": "mkdir 3/foo 3/bar 3/baz"}, {"invocation": "Change permissions of all files ending in \".php\" under the current directory to 755 and print a count of modified files", "cmd": "find . -name \"*.php\" -exec chmod 755 {} \\; -exec /bin/echo {} \\; | wc -l"}, {"invocation": "Enables shell option 'progcomp'.", "cmd": "shopt -s progcomp"}, {"invocation": "Print file information of command \"studio\"", "cmd": "ls -l \"$( which studio )\""}, {"invocation": "Find all executables in the current directory tree", "cmd": "find ./ -executable"}, {"invocation": "Search the /root directory recursively for the regular file named \"myfile\" ignoring \"work\" directories", "cmd": "find /root/ -name 'work' -prune -o -name myfile -type f -print"}, {"invocation": "Search \"mygzfile.gz\" for \"string to be searched\"", "cmd": "gunzip -c mygzfile.gz | grep \"string to be searched\""}, {"invocation": "Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd'", "cmd": "find /etc -newer /etc/motd"}, {"invocation": "show all files in /usr/tom and display only files ending with \".pl\" or \".pm\"", "cmd": "find /usr/tom | egrep '*.pl| *.pm'"}, {"invocation": "find regular file named foo.txt under root / directory.", "cmd": "find / -name foo.txt -type f -print"}, {"invocation": "Print \"$1\" or default 10 random lines from standard input", "cmd": "nl | sort -R | cut -f2 | head -\"${1:-10}\""}, {"invocation": "Search the system for the file \u201ctestfile.txt\u201d ignoring the case", "cmd": "find / -iname \"testfile.txt\""}, {"invocation": "Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\\s from each line of the output", "cmd": "find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | sed -r 's/[0-9]+\\s//g'"}, {"invocation": "Print info about thread number of process with pid 1", "cmd": "cat /proc/1/sched  | head -n 1"}, {"invocation": "Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods", "cmd": "find / \\( -name tmp -o -name '*.xx' \\) -atime +7 -exec rm {} \\;"}, {"invocation": "Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other'", "cmd": "find . -maxdepth 1 ! -perm  -o=r"}, {"invocation": "Interactively create a symbolic link in the current directory for \"$SCRIPT_DIR/$FILE\"", "cmd": "ln --symbolic --interactive $SCRIPT_DIR/$FILE"}, {"invocation": "Make a copy of file1 in dir1, dir2, and dir3.", "cmd": "echo dir1 dir2 dir3 | xargs -n 1 cp file1"}, {"invocation": "Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"", "cmd": "find . -type f \\( -name \"*.shtml\" -or -name \"*.css\" \\)"}, {"invocation": "Print the character representations of 65 to 90", "cmd": "seq 65 90 | awk '{printf(\"%c\",$1)}'"}, {"invocation": "prints a number stored among text in $filename", "cmd": "echo $filename | egrep -o '[[:digit:]]{5}' | head -n1"}, {"invocation": "Print lines in \"file1.txt\" that do not exist in \"file2.txt\"", "cmd": "sort <(sort -u file1.txt) file2.txt file2.txt | uniq -u"}, {"invocation": "Set 644 permission to all regular files under current directory", "cmd": "find . -type f -exec chmod 644 {} \\;"}, {"invocation": "display all the files in the folder /home which do not belong to the group test", "cmd": "find /home -not -group test"}, {"invocation": "Interpret all lines containing an equal sign in myfile (usually, grab all variables from myfile into current shell)", "cmd": "grep \"=\" myfile | source /dev/stdin"}, {"invocation": "Recursively change the owner to \"user\" and group to \"www-data\" of \"yourprojectfoldername\"", "cmd": "chown -R user:www-data yourprojectfoldername"}, {"invocation": "Prints date of first Tuesday in January, 2015", "cmd": "cal 01 2015 | sed -n '1,2b;/^.\\{6\\} \\{0,1\\}\\([0-9]\\{1,2\\}\\) .*/ {s//0\\1/;s/.*\\([0-9]\\{2\\}\\)$/\\1/p;q;}'"}, {"invocation": "find foo, Foo, FOo, FOO, etc., but only dirs", "cmd": "find . -iname foo -type d"}, {"invocation": "Print A record for domain 'domain.' from 'some.other.ip.address' nameserver", "cmd": "dig @some.other.ip.address domain. a"}, {"invocation": "Find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt", "cmd": "find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt"}, {"invocation": "display all the html files in the current folder excluding search in the path ./foo", "cmd": "find . -path \"./foo\" -prune -o -type f -name \"*.html\""}, {"invocation": "Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?'", "cmd": "find . -regex '.*myfile[0-9][0-9]?'"}, {"invocation": "Check if $path_in_question is mount point of filesystem", "cmd": "df $path_in_question | grep \" $path_in_question$\""}, {"invocation": "Do a dry run of renaming file extension '.andnav' to '.tile' for all files/directories under current directory tree", "cmd": "find . -name \"*.andnav\" | rename -vn \"s/\\.andnav$/.tile/\""}, {"invocation": "Find *.c and *.sh files", "cmd": "find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}, {"invocation": "Find all files that were modified later than ordinary_file in the current directory and its sub-directories.", "cmd": "find -newer ordinary_file"}, {"invocation": "Recursively change the owner to \"${JBOSS_USER}\" of \"$JBOSS_LOG_DIR\"", "cmd": "chown -R ${JBOSS_USER}: $JBOSS_LOG_DIR"}, {"invocation": "find and delete all the empty directories in the current folder and all its sub directories too", "cmd": "find . -depth -empty -type d -delete"}, {"invocation": "Remove all *.mp3 files in tmp directory but not in it's subdirectories", "cmd": "rm `find tmp -maxdepth 1 -name '*.mp3'`"}, {"invocation": "Search the current directory recursively for MOV files, following symlinks", "cmd": "find . -iname \"*.mov\" -follow"}, {"invocation": "Delete all files throughout the entire filesystem that are no longer owned by a valid user.", "cmd": "find / -nouser | xargs -0 rm"}, {"invocation": "find all files in the file system with the permissions 777 and having the word \"filename\" in their name.", "cmd": "find / -perm 777 -iname \"filename\""}, {"invocation": "List unique MD5 digests of all files in the current directory ending in .txt", "cmd": "md5sum *.txt | cut -d ' ' -f 1 | sort -u"}, {"invocation": "Find image files and move them to the pictures directory", "cmd": "find ~/Desktop -name \u201c*.jpg\u201d -o -name \u201c*.gif\u201d -o -name \u201c*.png\u201d -print0 | xargs -0 mv \u2013target-directory ~/Pictures"}, {"invocation": "Find all *stat files/directories under /usr", "cmd": "find /usr -name *stat"}, {"invocation": "find the file \"dateiname\" in the entire file system ( case insensitive search)", "cmd": "find / -iname \"Dateiname\""}, {"invocation": "Make hidden directory \".hiddendir\"", "cmd": "mkdir .hiddendir"}, {"invocation": "Search the .java files from the current directory tree for TODO lines", "cmd": "find . -name \"*.java\" -exec grep -i -n TODO {}  \\;"}, {"invocation": "Find file names *blast* in specfied directory", "cmd": "find /usr/local -name \"*blast*\""}, {"invocation": "explicitly list all files in the current directory", "cmd": "find . -print"}, {"invocation": "Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size", "cmd": "find /usr/bin -type f -size -50c"}, {"invocation": "Convert Unix `cal` output to latex table code.", "cmd": "cal -h 02 2012| cut -c4-17 | sed -r 's/(..)\\s/\\0\\t\\&/g' | sed 's/$/\\t\\\\\\\\/' | head -n-1 | tail -n +2"}, {"invocation": "Add a number prefix followed by ')' to each line in \"$string\"", "cmd": "echo \"$string\" | nl -ba -s') '"}, {"invocation": "Find and remove multiple files such as *.mp3 or *.txt under current directory", "cmd": "find . -type f -name \"*.txt\" -exec rm -f {} \\;"}, {"invocation": "Set the variable \"me\" to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as \"-bash\".", "cmd": "me=`basename -- \"$0\"`"}, {"invocation": "Find all the files that are not named \"MyCProgram.c\" in the current directory only and without regards to case.", "cmd": "find -maxdepth 1 -not -iname \"MyCProgram.c\""}, {"invocation": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.", "cmd": "echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f1"}, {"invocation": "Find SUID files", "cmd": "find / -perm +u=s"}, {"invocation": "Find *2011* files and grep for the string 'From: Ralph' in those files", "cmd": "find . -name '*2011*' -print | xargs -n2 grep 'From: Ralph'"}, {"invocation": "Find all regular files in the current directory tree that are not readable by all", "cmd": "find -type f ! -perm -444"}, {"invocation": "Rename the *.so files in the current directory tree prepending their names with \"lib\"", "cmd": "find . -name \"*.so\" -printf \"mv '%h/%f' '%h/lib%f'\\n\" | bash"}, {"invocation": "Recursively set all permissions under \"/whatever/your/directory/is\" to 755", "cmd": "sudo chmod 755 -R /whatever/your/directory/is"}, {"invocation": "Find recursively all regular files changed within the last 5 minutes starting from directory b", "cmd": "find b -type f -cmin -5"}, {"invocation": "Find all files that were last modified less than7 days ago under /home", "cmd": "find /home -mtime -7"}, {"invocation": "File 'mydatafile' has a number on each line, display the sum of these numbers.", "cmd": "awk '{s+=$1} END {print s}' mydatafile"}, {"invocation": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files", "cmd": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0"}, {"invocation": "Replace each newline in input \"1\\n2\\n3\\n4\\n5\" with a comma", "cmd": "echo \"1\\n2\\n3\\n4\\n5\" | paste -s -d, /dev/stdin"}, {"invocation": "Make directories in \"/TARGET_FOLDER_ROOT/\" for each \".mov\" file in the current directory tree", "cmd": "find . -type f -iname \\*.mov -printf '%h\\n' | sort | uniq | xargs -n 1 -d '\\n' -I '{}' mkdir -vp \"/TARGET_FOLDER_ROOT/{}\""}, {"invocation": "display all files in the current folder with the name test excluding those that are present folder test", "cmd": "find . -name test -prune -o -print"}, {"invocation": "search for the file \"job.history\" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern", "cmd": "find /data/SpoolIn -name job.history | xargs grep -o -m 1 -h 'FAIL\\|ABOR' | sort | uniq -c"}, {"invocation": "Print appended data in \"/var/log/some.log\" that match \"foo\" and \"bar\"", "cmd": "tail -f /var/log/some.log | grep --line-buffered foo | grep bar"}, {"invocation": "Copies file 'fileName.txt' to each of directories listed in the 'allFolders.txt' list.", "cmd": "cat allFolders.txt | xargs -n 1 cp fileName.txt"}, {"invocation": "Report file system containing path to the current working directory disk usage human-readable.", "cmd": "df -h ."}, {"invocation": "Opens gcc info manual and selects \"option index\" menu entry.", "cmd": "info gcc \"option index\""}, {"invocation": "Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'", "cmd": "ARGS=\"--ignore `echo ${TO_IGNORE[@]} | tr ' ' ','`\""}, {"invocation": "List all files in the /hometest directory tree whose names are \"Trash\", and their sizes", "cmd": "find /hometest -name Trash -exec ls -s {} \\;"}, {"invocation": "Find every file/directory under /var/spool that was modified more than 60 days ago.", "cmd": "find /var/spool -mtime +60"}, {"invocation": "search for all the files in the current directory which belong to the user \"xuser1\" and change the owner ship of them to \"user2\"", "cmd": "find . -user xuser1 -exec chown -R user2 {} \\;"}, {"invocation": "get year-month-day hour:minute:second from date", "cmd": "date +%Y-%m-%d:%H:%M:%S"}, {"invocation": "find all the files in the current directory which end with orig", "cmd": "find . -name '*.orig'  -exec echo {} \\ ;"}, {"invocation": "Change permissions to 0755 for all directories in the /path directory tree", "cmd": "find /path -type d -exec chmod 0755 {} \\;"}, {"invocation": "Load keybindings from a file ~/.inputrc", "cmd": "bind -f ~/.inputrc"}, {"invocation": "List files in directory \"one\" and \"two\" that do not exist in the other", "cmd": "sort <(ls one) <(ls two) | uniq -u"}, {"invocation": "search for files that are readable for everybody, have at least on write bit set but are not executable for anybody", "cmd": "find . -perm -a+r -perm /a+w ! -perm /a+x"}, {"invocation": "display list of all the regular/normal files in the current folder which start with \"my\"", "cmd": "find . -name 'my*' -type f -ls"}, {"invocation": "Count line numbers on files and record each count along with individual file name.", "cmd": "find /home/my_dir -name '*.txt' | xargs grep -c ^.*"}, {"invocation": "Gets IP address of 'en1' network interface.", "cmd": "my_ip=$(ifconfig en1 | grep 'inet addr' | awk '{print $2}' | cut -d: -f 2)"}, {"invocation": "Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar", "cmd": "find .|grep \"FooBar\"|xargs -I{} cp \"{}\" ~/foo/bar"}, {"invocation": "Change permissions to 644 for all subdirectories", "cmd": "find . -type d -print0|xargs -0 chmod 644"}, {"invocation": "Find apparent size of a target directory", "cmd": "du -hs /path/to/directory"}, {"invocation": "Sets shell option 'nounset'.", "cmd": "shopt -s -o nounset"}, {"invocation": "Find empty files and directories", "cmd": "find . -empty"}, {"invocation": "Archive \"blanktest/\" to \"test/\" deleting any files in the destination not found in the source", "cmd": "rsync -a --delete blanktest/ test/"}, {"invocation": "Find all files more than 700 megabytes", "cmd": "find / -size +700M"}, {"invocation": "Find all *.cls files/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' for each of them where $0 is expanded to the file/directory path", "cmd": "find . -iname \"*.cls\" -exec echo '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' {} \\;"}, {"invocation": "Delete all .pyc files in the current directory tree", "cmd": "find . -name \"*.pyc\" | xargs rm -rf"}, {"invocation": "Find recursively the latest modified .zip file in the current directory", "cmd": "find . -name \"*zip\" -type f | xargs ls -ltr | tail -1"}, {"invocation": "Remove duplicate lines in \"file_name\" and print the output on stdout", "cmd": "awk '{print(NR\"\\t\"$0)}' file_name | sort -t$'\\t' -k2,2 | uniq --skip-fields 1 | sort -k1,1 -t$'\\t' | cut -f2 -d$'\\t'"}, {"invocation": "Print and recursively remove the alphabetically last directory in the current directory", "cmd": "find -mindepth 1 -maxdepth 1 -type d | cut -c 3- | sort -k1n | tail -n 1 | xargs -r echo rm -r"}, {"invocation": "Print out the names of all directories in mydir recursively", "cmd": "find mydir -type d"}, {"invocation": "Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'", "cmd": "find /dev/sd*[a-z] | wc -l"}, {"invocation": "Execute all commands in \"commands-to-execute-remotely.sh\" on server \"blah_server\"", "cmd": "cat commands-to-execute-remotely.sh | ssh blah_server"}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | awk '/inet addr/{sub(/[^0-9]*/,\"\"); print $1}'"}, {"invocation": "Find writable files in the current directory tree", "cmd": "find . -writable"}, {"invocation": "Change to folder where the oracle binary is.", "cmd": "cd \"$(dirname $(which oracle))\""}, {"invocation": "Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line", "cmd": "echo -en \"${line:0:11}\" \"\\t\" $(md5sum \"${line:12}\") \"\\0\""}, {"invocation": "Copy src_dir recursively to dest_dir, but without overwriting existing files.", "cmd": "cp -nr src_dir dest_dir"}, {"invocation": "find all the log files in the file system", "cmd": "find / -name \"*.log\""}, {"invocation": "Recursively removes all files like '.DS_Store' from current folder.", "cmd": "rm `find ./ -name '.DS_Store'` -rf"}, {"invocation": "Find all *.py (case insensitive) files/directories under dir directory ignoring .git path", "cmd": "find dir -not -path '.git' -iname '*.py'"}, {"invocation": "Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories", "cmd": "find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "looks for all files larger than 10 megabytes (10485760 bytes) within /home", "cmd": "find /home -type f -size +10485760c -print"}, {"invocation": "search in the current folder for the file \"myletter.doc\"", "cmd": "find . -name myletter.doc -print"}, {"invocation": "create symbolic links in directory \"/your/dest/dir/\" to all files located in \"/your/source/dir/\" and have filename extension \"txt.mrg\"", "cmd": "find /your/source/dir/ -iname '*.txt.mrg' -exec ln -s '{}' /your/dest/dir/ \\;"}, {"invocation": "find all the files that have the word \"fstab\" in their name in a folder", "cmd": "find /etc -name *fstab*"}, {"invocation": "Search the home directory tree for files matching pattern '*.txt'", "cmd": "find ~ -name *.txt"}, {"invocation": "Print \"new.txt\" with line numbers prepended and lines 3 and 4 deleted", "cmd": "cat new.txt  |  nl |sed  \"3d;4d\""}, {"invocation": "Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one", "cmd": "find -ipath './projects/insanewebproject'| head -n1"}, {"invocation": "Reverse the space separated words in \"35 53 102 342\"", "cmd": "echo 35 53 102 342|tr ' ' '\\n'|tac|tr '\\n' ' '"}, {"invocation": "Find all files/directories named 'top' in the entire filesystem", "cmd": "find / -name top"}, {"invocation": "Find all files/directories under current directory that match the case insensitive regex ./\\(EA\\|FS\\)_.*", "cmd": "find . -iregex './\\(EA\\|FS\\)_.*'"}, {"invocation": "Print numerically sorted list of unique strings from 'ip_addresses' file, with number of occurrences of each string.", "cmd": "sort -n ip_addresses.txt | uniq -c"}, {"invocation": "Find files/directories under current directory without descending into it", "cmd": "find -prune"}, {"invocation": "Find all *fink* files/directories in entire file system", "cmd": "find / \\( -type f -or -type d \\) -name \\*fink\\* -print"}, {"invocation": "display all the files in current folder which have been accessed in the last 15 days", "cmd": "find . -atime -15"}, {"invocation": "Search the current directory recursively for regular files last modified less than 2 days ago", "cmd": "find . type -f -mtime -2"}, {"invocation": "Delete all files/directories in minimum 2 levels down the root directory", "cmd": "find root -mindepth 2 -delete"}, {"invocation": "Split \"complete.out\" into files with at most \"$lines_per_file\" lines each", "cmd": "split --lines $lines_per_file complete.out"}, {"invocation": "find files in the current directory and sub-directories, that changed within last hour", "cmd": "find . -cmin -60"}, {"invocation": "List regular files in current directory with read, write and execute permission for all users and also show the permissions", "cmd": "find . -type f  -perm a=rwx -exec ls -l {} \\;"}, {"invocation": "display all the files in the current directory and do not search in sub directories", "cmd": "find . -maxdepth 1 -print0"}, {"invocation": "Make directories \"mnt\" and \"point\"", "cmd": "mkdir mnt point"}, {"invocation": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories", "cmd": "find . -name foo.mp4 -exec dirname {} \\;"}, {"invocation": "Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list", "cmd": "find \"$front_element\" -maxdepth 1 -type d -not -path \"$front_element\" -printf '%T@ %p\\n' | sort | awk '{print $2}'"}, {"invocation": "Find all hidden (regular) files under /tmp", "cmd": "find /tmp -type f -name \".*\""}, {"invocation": "Find all directories under current directory whose names are 33 characters long", "cmd": "find . -type d -name \"?????????????????????????????????\""}, {"invocation": "Prints name of temporary file but doesn`t create nothing.", "cmd": "mktemp -u"}, {"invocation": "Overwirte file '/path/to/your/file' with zeroes and remove, showing progress while execution.", "cmd": "shred -v -n 0 -z -u /path/to/your/file #overwriting with zeroes and remove the file"}, {"invocation": "Finds the folder where temporary files would be written to.", "cmd": "dirname $(mktemp -u -t tmp.XXXXXXXXXX)"}, {"invocation": "Change the owner to \"root\" and group to \"specialusers\" of \"dir1\"", "cmd": "chown root:specialusers dir1"}, {"invocation": "get a PID of a process with name 'test.sh &'", "cmd": "jobs -l | grep 'test.sh &' | grep -v grep | awk '{print $2}'"}, {"invocation": "create directory testExpress", "cmd": "mkdir testExpress"}, {"invocation": "Print new line separated numbers from \"001\" to \"100\"", "cmd": "yes | nl -ba | tr ' ' 0 | sed 100q | cut -b 4-6"}, {"invocation": "List current user's crontab.", "cmd": "crontab -l"}, {"invocation": "Count the number of .java files in all folders rooted in the current folder", "cmd": "find . -name \"*.java\" | wc -l"}, {"invocation": "search for the directory \"config\" in the current folder and change directory to the first instance of the search", "cmd": "cd $(find . -name config -type d | sed 1q)"}, {"invocation": "Search  in current directory downwards all files whic  have permission 777 .", "cmd": "find . -perm 777 -print"}, {"invocation": "Save the number of records in the system hostname that contain numbers in variable \"server_id\"", "cmd": "server_id=`hostname | tr 'A-Za-z-.' ' ' | tr -d '[[:space:]]' | awk '{print NR}'`"}, {"invocation": "find files in current folder ending with \".c\" or \".h\" or \".ch\" and search for a word in these files and enable color highlighting of the matched text", "cmd": "find . -name \"*.[ch]\" -exec grep --color -aHn \"e\" {} \\;"}, {"invocation": "Change folder to the one where $0 link target file is located.", "cmd": "cd $(dirname $(readlink -f $0))"}, {"invocation": "Find all files/directories containing the case insensitive string something' in their names under current directory tree", "cmd": "find . -iname '*something*'"}, {"invocation": "Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script", "cmd": "find $1 -path /proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;"}, {"invocation": "Print the list of all directories in the /myfiles directory tree", "cmd": "find /myfiles -type d"}, {"invocation": "Creates temporary file and saves path to it in 'fif2' variable.", "cmd": "fif2=$(mktemp -u)"}, {"invocation": "Change permissions to 644 for all regular files under the /path/to/dir/ tree", "cmd": "find /path/to/dir/ -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Removes all empty folders under current folder.", "cmd": "find . -type d -exec rmdir {}\\;"}, {"invocation": "Prints folder path where $mystring file is located.", "cmd": "echo dirname: $(dirname $mystring)"}, {"invocation": "Find files/directories named 'TEST_3' under current directory tree", "cmd": "find -name TEST_3"}, {"invocation": "Search the *.txt files from the current directory tree for \"string\"", "cmd": "find . -name \"*.txt\" -print0 | xargs -0 egrep 'string'"}, {"invocation": "Show who is logged on", "cmd": "who"}, {"invocation": "Change the permission to 644 for all files under current directory", "cmd": "find . -type f | xargs chmod -v 644"}, {"invocation": "Search subdirectory `Linux' in the current directory for file `teste.tex'", "cmd": "find -path './Linux/*' -name teste.tex"}, {"invocation": "Search for all files with same inode NUM", "cmd": "find . -inum NUM"}, {"invocation": "Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree", "cmd": "find -name file -exec echo 'This should print the filename twice if an implicit -print is applied: ' {} +"}, {"invocation": "List the directory paths of all *.ext (case insensitive) files under /path directory", "cmd": "find /path -type f -iname \"*.ext\" -printf \"%h\\n\""}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and \"en\" and \"es\" directories", "cmd": "find . \\( -name en -o -name es \\) -prune , -mtime 0 ! -name \"*.swp\""}, {"invocation": "Print common files of directory \"one\" and \"two\"", "cmd": "comm -12  <(ls one) <(ls two)"}, {"invocation": "Find all files in the current directory recursively with \"linkin park\" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy", "cmd": "find . -type f -iname \"*linkin park*\" | cpio -pvdmu /Users/tommye/Desktop/LP"}, {"invocation": "find all the php files in the current folder", "cmd": "find . -name \\*.php"}, {"invocation": "Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.", "cmd": "find . -name '*.js' | grep -v excludeddir"}, {"invocation": "Search for all files with either \"sitesearch\" or \"demo\" in their path names", "cmd": "find . | grep -i demo | grep -i sitesearch"}, {"invocation": "Print multiline text \"ONBOOT=\\\"YES\\\"\\nIPADDR=10.42.84.168\\nPREFIX=24\" to the terminal, replacing '\\n' with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user.", "cmd": "echo -e \"ONBOOT=\\\"YES\\\"\\nIPADDR=10.42.84.168\\nPREFIX=24\" | sudo tee -a /etc/sysconfig/network-scripts/ifcfg-eth4"}, {"invocation": "find all normal/regular files in current folder and replace a word in all these files", "cmd": "find . -type f -print0 | xargs -0 sed -i '' 's/2013/2012/g'"}, {"invocation": "Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file", "cmd": "find . -name '*.py' -exec grep -n -f search_terms.txt '{}' \\;"}, {"invocation": "Search the current directory recursively for files whose size is between 10 and 50 MB", "cmd": "find . -size +10M -size -50M -print"}, {"invocation": "Get the directory with least access time under current directory", "cmd": "find . -type d -printf \"%A@ %p\\n\" | sort -n | tail -n 1 | cut -d \" \" -f 2-"}, {"invocation": "Compare files in \"/tmp/dir1\" and \"/tmp/dir2\", treating absent files as empty and all files as text", "cmd": "diff -Nar /tmp/dir1 /tmp/dir2/"}, {"invocation": "View manual page of the find command", "cmd": "man find"}, {"invocation": "Create a symbolic link named \"$1/link\" to the existing full and real path of \"$2\"", "cmd": "ln -s \"$(readlink -e \"$2\")\" \"$1/link\""}, {"invocation": "Find recursively all files whose names begin with \"foo\"", "cmd": "find . -name \"foo*\""}, {"invocation": "recall the second argument from a previous command by pressing alt-shift-y", "cmd": "bind '\"\\eY\": \"\\e2\\e.\"'"}, {"invocation": "Search the system for the file 'myfile' ignoring permission denied errors", "cmd": "find . -name myfile |& grep -v 'Permission denied'"}, {"invocation": "Search the .java files from the /Applications/ directory tree for TODO lines", "cmd": "find /Applications/ -name \"*.java\" -exec grep -i TODO {} \\;"}, {"invocation": "Get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2", "cmd": "find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1"}, {"invocation": "Search directories called ' backup ' from /usr directory downwards and print them.", "cmd": "find /usr -type d -name backup -print"}, {"invocation": "Create a symbolic link in target directory \"$tmpdir\" for each file under the current directory", "cmd": "find $PWD -type f -exec ln -st $tmpdir {} +"}, {"invocation": "display all the normal/regular files in a directory", "cmd": "find $dir -type f -name $name -print"}, {"invocation": "Search \"inputfile\" for lines starting with \"t:\" and group the results in files with at most 200 lines each", "cmd": "cat inputfile | grep \"^t\\:\" | split -l 200"}, {"invocation": "find all the normal/regular files in the current directory which have been modified in the last 24 hours", "cmd": "find . -mtime -1 -type f -print"}, {"invocation": "find all the files in the home folder which have been modified in the last 24 hours", "cmd": "find $HOME -mtime -1"}, {"invocation": "Search for the regex \"\\$wp_version =\" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/home/*//public_html/' and show the matched lines along with the file names", "cmd": "find /home/*/public_html/ -type f -iwholename \"*/wp-includes/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}, {"invocation": "Create an archive named newArch from the contents of ./test directory", "cmd": "find ./test -printf \"././%f\\n\"| cpio -o -F newArch"}, {"invocation": "search for the directory \"config\" in the current folder", "cmd": "find . -name config -type d"}, {"invocation": "Find a used disk space of a target directory and files inside of it", "cmd": "du -h your_directory"}, {"invocation": "Clears the terminal screen.", "cmd": "clear"}, {"invocation": "find all the fles that have .ssh in the end and redirect the output to ssh-stuff", "cmd": "find / -name .ssh* -print | tee -a ssh-stuff"}, {"invocation": "Replace all newlines with spaces in the contents of \"file\"", "cmd": "sed -e '{:q;N;s/\\n/ /g;t q}' file"}, {"invocation": "search for the directory with the name aa in the current folder", "cmd": "find . -type d -name aa"}, {"invocation": "Remove all .sh files in the current directory tree whose names begin with \"new\"", "cmd": "find . -name \"new*.sh\" -exec rm -f '{}' \\+"}, {"invocation": "SSH using parameters in $@ in master mode in the background without executing any commands and set the ControlPath to \"$MASTERSOCK\"", "cmd": "ssh -o ControlPath=\"$MASTERSOCK\" -MNf \"$@\""}, {"invocation": "Find all *.php files under current directory and change their permission to 644", "cmd": "find . -type f -name '*.php' -exec chmod 644 {} \\;"}, {"invocation": "Find files and directories owned by xuser1 and change their ownership to user2", "cmd": "find . -user xuser1 -exec chown -R user2 {} \\;"}, {"invocation": "find all files which name contain 'foo' and path is not dir1 or dir2", "cmd": "find ! -path \"dir1\" ! -path \"dir2\" -name \"*foo*\""}, {"invocation": "count lines of C or C++ or Obj-C code under the current directory", "cmd": "find . \\( -name \"*.c\" -or -name \"*.cpp\" -or -name \"*.h\" -or -name \"*.m\" \\) -print0 | xargs -0 wc"}, {"invocation": "Find recursively all regular files in the current directory tree ending in .dll or .exe", "cmd": "find . -type f | grep -P \"\\.dll$|\\.exe$\""}, {"invocation": "List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time", "cmd": "find / -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -printf \"%T+\\t%p\\n\" | sort"}, {"invocation": "Find all files under current directory with 755 permission and change their permission to 644", "cmd": "find . -type f -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "Find all empty directories recursively starting from the current one and delete them", "cmd": "find . -type d -empty -delete"}, {"invocation": "Prints week day of a 31 day in a current month.", "cmd": "cal | awk -v date=31 -v FIELDWIDTHS=\"3 3 3 3 3 3 3 3\" 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}'"}, {"invocation": "Remove files that are less than 1MB in size under current directory", "cmd": "find . -size -1M -exec rm {} \\;"}, {"invocation": "search in all the regular/normal files of the current folder for the word \"word\" and display the matched file name", "cmd": "find . -type f -exec grep -l \"word\" {} +"}, {"invocation": "Perform case insensitive search for *.gif files/directories under downloads directory", "cmd": "find downloads  -iname \"*.gif\""}, {"invocation": "Find all *1234.56789* files/directories under current directory", "cmd": "find . -name '*1234.56789*'"}, {"invocation": "Find the process id of mysql", "cmd": "ps -A|grep mysql"}, {"invocation": "Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE", "cmd": "FILE=\"/tmp/command_cache.`echo -n \"$KEY\" | md5sum | cut -c -10`\""}, {"invocation": "Find the first file/directory under current directory and quit", "cmd": "find . ... -print -quit"}, {"invocation": "List all files in /home/bozo/projects directory tree that were modified within the last day", "cmd": "find /home/bozo/projects -mtime -1"}, {"invocation": "Remove the .jpg files from the current directory whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"", "cmd": "find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\" | xargs rm"}, {"invocation": "Find all TXT files on the system and copy them to /tmp/txt", "cmd": "find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt"}, {"invocation": "find all the files in current directory of size greater than 2GB.", "cmd": "find . -size +2G"}, {"invocation": "Print out every command that is executed in the script", "cmd": "set -x"}, {"invocation": "Prints process tree of the current process with parent processes.", "cmd": "pstree -s $$"}, {"invocation": "Create a rsa key of 2048 bits with comment \"michael\" and store it in file \"key\".", "cmd": "ssh-keygen -b 2048 -t rsa -f key -C michael"}, {"invocation": "Change group ownership to `foo' for files with GID=2000", "cmd": "find / -group 2000 -exec chgrp -h foo {} \\;"}, {"invocation": "Move \"tobecopied/tobeexclude\" to \"tobeexclude\"", "cmd": "mv tobecopied/tobeexclude tobeexclude;"}, {"invocation": "display all the \".c\" files in the current directory", "cmd": "find . -name \\*.c -print"}, {"invocation": "Recursively delete all files/folders named '.svn' in a current folder.", "cmd": "find . -name .svn -delete"}, {"invocation": "Removes 'foo' file.", "cmd": "rm foo"}, {"invocation": "Finds all files like \"mylog*.log\" newer than $2 and archives them with bzip2.", "cmd": "find . -type f -ctime -$2 -name \"mylog*.log\" | xargs bzip2"}, {"invocation": "Write every two lines in \"infile\" on a single line separated by a space", "cmd": "cat infile | paste -sd '  \\n'"}, {"invocation": "Delete all regular files named 'IMAGE1806.jpg' under current directory tree", "cmd": "find . -type f -name 'IMAGE1806.jpg' -delete"}, {"invocation": "list all java file that StringBuff in context.", "cmd": "find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}, {"invocation": "Lists content of compressed text file.", "cmd": "zless MyFile"}, {"invocation": "Get a list of directories owned by group ID 100", "cmd": "find / -type d -gid  100"}, {"invocation": "Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size", "cmd": "find / \\( -name '*.txt' -o -name '*.doc' -o -size +5M \\)"}, {"invocation": "Decompress \"/file/address/file.tar.gz\" to standard output", "cmd": "gzip -dc /file/address/file.tar.gz"}, {"invocation": "Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts", "cmd": "find . -name \\*.java | tr '\\n' '\\0' | xargs -0 wc"}, {"invocation": "Find all *shp* directories under current directory and move their contents to ../shp_all/", "cmd": "mv $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq)/* ../shp_all/"}, {"invocation": "Search the home directory for OGG and MP3 files", "cmd": "find $HOME -iname '*.ogg' -o -iname '*.mp3'"}, {"invocation": "Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.", "cmd": "cnt=`ps -ef| tee log | grep \"cntps\"|grep -v \"grep\" | wc -l`"}, {"invocation": "Search the current directory tree for files whose names are not \"a.txt\"", "cmd": "find . ! -name \"a.txt\" -print"}, {"invocation": "Interactively display all lines containing 'word' in all files whose name ends with .properties in the current directory, waiting for user input after each page.", "cmd": "grep -R 'word' *.properties | more"}, {"invocation": "Changes group ownership of '/var/run/fcgiwrap.socket' to 'forge'.", "cmd": "chgrp forge /var/run/fcgiwrap.socket"}, {"invocation": "Search for '\u201cfoobar\u201d' in all files starting with '\u2018' and ending with '\u2019' and contain '.' in their names in the entire filesystem and display only the matched files", "cmd": "find / -name \u2018*.*\u2019 -exec grep -il \u201cfoobar\u201d {} \\;"}, {"invocation": "Recursively add read and execute permissions to all files and folders in \"directory\"", "cmd": "chmod -R +xr directory"}, {"invocation": "Copy file or directory 'gtest' from directory 'include' in current directory to /usr/include, preserving ownerships and permissions.", "cmd": "sudo cp -a include/gtest /usr/include"}, {"invocation": "find all the files in the current directory whose size is equal to exactly 126MB.", "cmd": "find . -size 126M"}, {"invocation": "Forcibly removes files  '/tmp/stored_exception', '/tmp/stored_exception_line', '/tmp/stored_exception_source'", "cmd": "rm -f /tmp/stored_exception /tmp/stored_exception_line /tmp/stored_exception_source"}, {"invocation": "Find all files under /path/to/dir and change their permission to 644", "cmd": "find /path/to/dir -type f -exec chmod 644 {} +"}, {"invocation": "Remove all \"work\" directories residing in /usr/ports and below", "cmd": "find /usr/ports/ -name work -type d -print -exec rm -rf {} \\;"}, {"invocation": "Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the .yaml files from the current directory tree", "cmd": "find . -type f -name \"*.yaml\" -print0 | xargs -0 sed -i -e \"s/HOGE/MOGA/\""}, {"invocation": "find all the files that have been modified in the last 2 day", "cmd": "find -daystart -mitime -1"}, {"invocation": "Create a ssh key with no passphrase and store it in \"outfile\".", "cmd": "ssh-keygen -f outfile -N ''"}, {"invocation": "searches through the root filesystem (\"/\") for the file named Chapter1, and prints the location", "cmd": "find / -name Chapter1 -type f -print"}, {"invocation": "Remove files that are greater than 1MB in size under current directory", "cmd": "find . -type f -size +1M -exec rm {} +"}, {"invocation": "Compress all \".txt\" files in all sub directories with gzip", "cmd": "gzip */*.txt"}, {"invocation": "Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter", "cmd": "find \"$source_dir\" -name \"*.$input_file_type\" -print0"}, {"invocation": "find all the files in the current folder which have been accessed in the last 24 hours", "cmd": "find . -type f -atime 1"}, {"invocation": "search for the word \"put\" in all the files in the current folder which have the word \"bills\" in their name and display the matched line along with the filename.", "cmd": "find . -name '*bills*' -exec grep -H \"put\" {} \\;"}, {"invocation": "Set 644 permission to all regular files under current directory", "cmd": "chmod 644 `find . -type f`"}, {"invocation": "Search the home directory tree for files modified less than a day ago", "cmd": "find $HOME -mtime -1"}, {"invocation": "Search for command \"tail\" in the maps of the process with PID 2671", "cmd": "cat /proc/2671/maps | grep `which tail`"}, {"invocation": "Find all files/directories under '/usr' directory tree that have not been modified in the last 356 days counting days from today", "cmd": "find /usr -mtime +356 -daystart"}, {"invocation": "Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found", "cmd": "cd $(find . -name Subscription.java | xargs dirname)"}, {"invocation": "Display the contents of file 'filename' excluding lines starting with # or empty/space-only lines, waiting for user interaction after each page.", "cmd": "grep -v '^$\\|^#\\|^\\s*\\#' filename | grep -v \"^[[:space:]]*$\" | more"}, {"invocation": "Prints process tree with command line arguments and process id numbers.", "cmd": "pstree -apl"}, {"invocation": "Create a local SSH tunnel from \"localhost\" port 16379 to \"localhost\" port 6379 using key \"keyfile.rsa\" and disables the interactive shell", "cmd": "ssh -i keyfile.rsa -T -N -L 16379:localhost:6379 someuser@somehost"}, {"invocation": "Find and compress all .pl files in the current directory tree", "cmd": "find . -name \"*.pl\" | xargs tar -zcf pl.tar.gz"}, {"invocation": "find all the \".wma\" files in the folder \"$current_directory\"", "cmd": "find \"${current_directory}\" -type f -iname \"*.wma\""}, {"invocation": "Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree", "cmd": "find /tmp -user me -ls"}, {"invocation": "create directories a b c d e", "cmd": "mkdir a b c d e"}, {"invocation": "Change the permissions of every directory in the current directory and all files and directories within them to 700", "cmd": "find . -maxdepth 1 -type d -exec chmod -R 700 {} \\;"}, {"invocation": "create a tar ball of all pdf files in current folder", "cmd": "find . -name *.pdf | xargs tar czvf /root/Desktop/evidence/pdf.tar"}, {"invocation": "Find all files/directories under current directory with null character as the delimiter and then replace the null characters with :", "cmd": "find -print0 | tr \"\\0\" \":\""}, {"invocation": "Find all Makefile's in the current directory tree and look for line 235 in each of them", "cmd": "find -type f -name \"Makefile\" -exec awk 'FNR==235 {print FILENAME; print}' {} +"}, {"invocation": "Search for 'string_to_find' in all files under current directory", "cmd": "find -type f | sed 's/./\\\\&/g' | xargs grep string_to_find"}, {"invocation": "Find all files on smbfs mounts and print its information and file type", "cmd": "find $(mount -t smbfs | awk '{print $3}') -mount -type f -ls -execdir file {} \\;"}, {"invocation": "find all the files in the current folder and display them in the sorted order of their name", "cmd": "find . | sort"}, {"invocation": "List environment variables and their values whose name matches '^\\w*X\\w*'", "cmd": "set | grep -P '^\\w*X\\w*(?==)'"}, {"invocation": "change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition", "cmd": "find . -xtype f \\! -iname *.html   -exec mv -iv \"{}\"  \"{}.html\"  \\;"}, {"invocation": "Find regular files whose names end in .JPG", "cmd": "find . -type f -name \"*.JPG\""}, {"invocation": "display all directories in the folder \"$ORIG_DIR\"", "cmd": "find \"$ORIG_DIR\" -name \"*\" -type d"}, {"invocation": "Change the ownership of \"/etc/udev/rules.d/51-android.rules\" to \"root\"", "cmd": "sudo chown root. /etc/udev/rules.d/51-android.rules"}, {"invocation": "rename all the text files  in the current folder to html files", "cmd": "find -name \"*.txt\" -exec mv {} `basename {} .htm`.html \\;"}, {"invocation": "Search for files containing string \"PENDWIDTH\" and view the result using the more command", "cmd": "find . -exec grep PENWIDTH {} \\; | more"}, {"invocation": "when using vi-insert keymap bind command \"\\C-v{}\\ei\" to key \"{\"", "cmd": "bind -m vi-insert '\"{\" \"\\C-v{}\\ei\"'"}, {"invocation": "Prints long listing of directories '/tmp', '/tnt' themselves.", "cmd": "ls -ld /tmp /tnt"}, {"invocation": "Find files/directories under current directory and print them", "cmd": "find . -print0 | xargs    -0 echo"}, {"invocation": "Continuously convert \"20131202\" into \"2013 12 02\" and print the result", "cmd": "yes a=\\\"20131202\\\" | sed -e :a -e 's/...\\([0-9]\\{4\\}\\)\\([0-9]\\{2\\}\\)\\([0-9]\\{2\\}\\)./\\1 \\2 \\3/'"}, {"invocation": "For each line in list.txt, output the line adding \"FAIL\" if the same line appears in fail.txt, and \"PASS\" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.", "cmd": "sed 's/$/ FAIL/' fail.txt | join -a 1 -e PASS -j 1 -o 1.1,2.2 list.txt -"}, {"invocation": "Find files ending in \"config\"", "cmd": "find .  -path '*/*config'"}, {"invocation": "find and delete all the files in the entire file system whose size is greater than 100MB.", "cmd": "find / -size +100M -exec rm -rf {} \\;"}, {"invocation": "Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .", "cmd": "find / -type d  -perm 777 -print -exec chmod 755 {} \\;"}, {"invocation": "Save absolute path of \"/home/nohsib/dvc/../bop\" in variable \"absolute_path\"", "cmd": "absolute_path=$(readlink -m /home/nohsib/dvc/../bop)"}, {"invocation": "Find files newer than main.css in ~/src", "cmd": "find ~/src -newer main.css"}, {"invocation": "Archive \"/path/to/files/source\" to \"user@remoteip:/path/to/files/destination\" via ssh on port 2121", "cmd": "rsync -azP -e \"ssh -p 2121\" /path/to/files/source user@remoteip:/path/to/files/destination"}, {"invocation": "Create a compressed archive from \"www\" and split the contents into files of at most 1073741824 bytes and use prefix \"www-backup.tar.\"", "cmd": "tar czf - www|split -b 1073741824 - www-backup.tar."}, {"invocation": "List all regular files under the current directory and below it", "cmd": "find . -type f | xargs ls -l"}, {"invocation": "Remove the regular files from the current directory that were last modified on November, 22", "cmd": "find -maxdepth 1 -type f -newermt \"Nov 22\" \\! -newermt \"Nov 23\" -delete"}, {"invocation": "Copy a large sparse file \"sparse-1\" to \"sparse-1-copy\"", "cmd": "rsync --sparse sparse-1 sparse-1-copy"}, {"invocation": "Display differences between /tmp/test1 and /tmp/test2.", "cmd": "diff /tmp/test1  /tmp/test2"}, {"invocation": "Move all the .c files from the current directory tree to temp/", "cmd": "find . -name \"*.c\" -print0 | xargs -0 -n1  -I '{}' mv '{}' temp"}, {"invocation": "Find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories", "cmd": "find . -exec $0 {} +"}, {"invocation": "Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'", "cmd": "find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar"}, {"invocation": "Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path", "cmd": "find /path -perm 777"}, {"invocation": "Find all files/directories under current directory excluding the paths that match the POSIX extended regex \".*def/incoming.*|.*456/incoming.*\"", "cmd": "find . -regex-type posix-extended -regex \".*def/incoming.*|.*456/incoming.*\" -prune -o -print"}, {"invocation": "Lists all files that matches path pattern with wildcards.", "cmd": "ls -l /lib*/ld-linux*.so.2"}, {"invocation": "Generate the Spanish alphabet and number each character", "cmd": "echo -e {{a..n},\u00f1,{o..z}}\"\\n\" | nl"}, {"invocation": "Remove all empty directories under the current directory and below", "cmd": "find ./ -type d -size 0c -print | xargs rmdir"}, {"invocation": "Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )", "cmd": "find / -type f -printf \"\\n%Ab %p\" | head -n 11 | sort -k1M"}, {"invocation": "Find all xml files under current directory and archive them to .bz2 archives", "cmd": "find -name \\*.xml -print0 | xargs -0 -n 1 -P 3 bzip2"}, {"invocation": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them", "cmd": "find ~/code -type d | sed '/\\/\\\\./d' | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'", "cmd": "find /usr/share/doc -name README\\*"}, {"invocation": "Search the current directory recursively for regular files last accessed less than 2 minutes ago", "cmd": "find . type -f -amin -2"}, {"invocation": "Make a directory in the current working directory with a random 32 alphanumeric character name", "cmd": "cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | xargs mkdir"}, {"invocation": "find all the files in the entire file system that were modified in the last 10 minutes", "cmd": "find / -mmin -10"}, {"invocation": "recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number", "cmd": "find /data/bin/test -type d -mtime +10 -name '[0-9]*' -print | xargs rm -rf ;"}, {"invocation": "Prints a random number between 2000 and 65000", "cmd": "seq 2000 65000 | sort -R | head -n 1"}, {"invocation": "Create all directories in the path specified by variable $tempWork", "cmd": "mkdir -p $tempWork"}, {"invocation": "Read 10 bytes from $0 and print them by replacing the set '\\000-\\377' with '#'", "cmd": "head -c 10 \"$0\" | tr '\\000-\\377' '#'"}, {"invocation": "Search the entire file hierarchy for files larger than 100 megabytes and delete them.", "cmd": "find / -size +100M -exec /bin/rm {} \\;"}, {"invocation": "Count the number of lines in \"/etc/fstab\"", "cmd": "cat /etc/fstab | wc -l"}, {"invocation": "Find the passwd file under the root directory and two levels down", "cmd": "find / -maxdepth 3 -name passwd"}, {"invocation": "Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.", "cmd": "find . -atime +7 -size +20480 -print"}, {"invocation": "Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.", "cmd": "uname -a"}, {"invocation": "Remove all files from the current directory tree whose names contain whitespaces", "cmd": "find . -name \"* *\" -exec rm -f {} \\;"}, {"invocation": "Find only permission field & file name from long listing with find command .", "cmd": "find -type f -iname \"*.txt\" -exec ls -lrt {} \\;|awk -F' ' '{print $1  $9}'"}, {"invocation": "List files greater than 1024KB under /path/to/directory and print the time and size on stdout", "cmd": "find /path/to/directory -type f -size +1024k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}, {"invocation": "Search only for directories", "cmd": "find -type d"}, {"invocation": "Print whether \"$file\" and \"${file/${dir1}/${dir2}}\" differ", "cmd": "diff -q \"$file\" \"${file/${dir1}/${dir2}}\""}, {"invocation": "Prints long listing of top ten most memory using processes in a system.", "cmd": "ps -e -orss=,args= | sort -nr | head"}, {"invocation": "Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.", "cmd": "find ~/dir_data -type f  -exec chmod a-x,u+w {} \\;"}, {"invocation": "Find all the files whose permissions are 777 in the current directory", "cmd": "find . -type f -perm 0777 -print"}, {"invocation": "Create a symbolic link in directory \"/path/to/dir\" for each file and directory under the current directory starting with \".\"", "cmd": "find $PWD -name '.[^.]*' -exec ln -s '{}' /path/to/dir \\;"}, {"invocation": "Print numbers 1 through 10 separated by \":\"", "cmd": "yes | head -n10 | grep -n . | cut -d: -f1 | paste -sd:"}, {"invocation": "Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???'", "cmd": "find . -type f -name \"*.???\" | awk -F. '{print $NF}' | sort -u"}, {"invocation": "search in the current directory for any file named Chapter1.txt", "cmd": "find . -name Chapter1 -type f"}, {"invocation": "list all regular files which path is not dir1 or dir2", "cmd": "find dir -not \\( -path \"dir1\" -o -path \"dir2\" -prune \\) -type f"}, {"invocation": "returns the first 100 bytes in the file", "cmd": "head -c 100 file"}, {"invocation": "Move all files and directories in the current directory to \"/foo\"", "cmd": "mv * /foo"}, {"invocation": "Gets IP addresses of all active network interfaces.", "cmd": "ifconfig | grep -oP \"(?<=inet addr:).*?(?=  Bcast)\""}, {"invocation": "Count number of lines in all files matching \"*R1*.fastq.gz\"", "cmd": "zcat *R1*.fastq.gz | wc -l"}, {"invocation": "Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory", "cmd": "find /home/jassi/ -name \"aliencoders.[0-9]+\""}, {"invocation": "Find all regular files in and below the home directory that have been modified in the last 90 minutes", "cmd": "find ~ -type f -mmin -90"}, {"invocation": "display all the regular files in current folder", "cmd": "find . -type f"}, {"invocation": "Find all files under and below the current working directory with the word California in the file", "cmd": "find . -type f -exec grep California {} \\; -print"}, {"invocation": "Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames", "cmd": "find . -name \u201c*.cc\u201d |xargs grep -n \u201cpattern\u201d"}, {"invocation": "Search for regular files of the grooup 'users' in the file system", "cmd": "find /  -type f -group users"}, {"invocation": "Find all files/directories with space in their names under $1 directory", "cmd": "find $1 -name '* *'"}, {"invocation": "Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.", "cmd": "find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \\;  -exec rm -rf '{}'\\;"}, {"invocation": "List only the non-hidden empty files only in the current directory.", "cmd": "find . -maxdepth 1 -empty -not -name \".*\""}, {"invocation": "Find all *.log files under current directory that contain the string \"Exception\"", "cmd": "find . -name '*.log' -mtime -2 -exec grep -Hc Exception {} \\; | grep -v :0$"}, {"invocation": "Remove all \"core\" regular files in the /tmp/ directory tree", "cmd": "find /tmp -name core -type f -print | xargs /bin/rm -f"}, {"invocation": "Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.", "cmd": "cd -P .."}, {"invocation": "Set the permissions of all directories inside the current directory tree to ug=rwx,o=", "cmd": "find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "Find all files/directories under current directory tree that are newer than backup.tar.gz by modification time", "cmd": "find . -newer  backup.tar.gz"}, {"invocation": "Search for files/directories which are writable by both their owner and their group", "cmd": "find . -perm -220"}, {"invocation": "search for files which are writable by both their owner and their group", "cmd": "find . -perm -220"}, {"invocation": "search for the file, filename.txt in the folder /home", "cmd": "find /home -name filename.txt"}, {"invocation": "Print count of unique lines in all files like 'list_part*'", "cmd": "cat list_part* | sort --unique | wc -l"}, {"invocation": "Save the line number matching \"}]\" in lines starting with \"item_1\" to \"item_2\" in \"itemlist.json\" to variable \"line_to_be_replaced\"", "cmd": "line_to_be_replaced=`cat itemlist.json | nl |  sed -n '/\"item_1\"/,/\"item_2\"/p' | grep -in \"}]\" | awk '{print $2}'`"}, {"invocation": "find all the jpg files in the directory /ftp/dir which are bigger than 500KB", "cmd": "find /ftp/dir/ -size +500k -iname \"*.jpg\""}, {"invocation": "find for a word in all the regular files in the current directory", "cmd": "find . -type f -exec grep -li '/bin/ksh' {} \\;"}, {"invocation": "Remove empty directories from directory tree /srv/${x}", "cmd": "find /srv/${x} -type d -empty -exec rmdir {} \\;"}, {"invocation": "delete all instances of the file \"bad\" if its size is 0 bytes", "cmd": "find . -name bad -empty -delete"}, {"invocation": "Creates temporary folder relative to directory '/path/to/dir'.", "cmd": "mktemp -d -p /path/to/dir"}, {"invocation": "Find files in the /home/user directory tree changed exactly 10 minutes ago", "cmd": "find /home/user/ -cmin 10 -print"}, {"invocation": "Composes full process tree with process id numbers, and prints only those strings that contain 'git'.", "cmd": "pstree -p | grep git"}, {"invocation": "Calculate the md5sum of all the files with name \"MyCProgram.c\", ignoring case", "cmd": "find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}, {"invocation": "Change permissions to 644 of multiple regular files with permissions 755", "cmd": "find . -type f -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago", "cmd": "find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}, {"invocation": "search for MP3 files in the current folder and subfolders except in dir1 subfolder.", "cmd": "find ! -path \"dir1\" -iname \"*.mp3\""}, {"invocation": "Write every two lines in \"infile\" on a single line separated by a comma", "cmd": "cat infile | paste -sd ',\\n'"}, {"invocation": "search for the directory \"mysql\" in the /etc folder", "cmd": "find /etc -name mysql -type d"}, {"invocation": "Find all regular files in the current directory tree, except GIT files", "cmd": "find .  -name .git -prune -o -type f -print"}, {"invocation": "List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest", "cmd": "du -a --max-depth=1 | sort -n"}, {"invocation": "Find all regular files under ${S} directory", "cmd": "find \"${S}\" -type f"}, {"invocation": "find all the mp3 files in the home folder which have been modified today", "cmd": "find ~ -type f -mtime 0 -iname '*.mp3'"}, {"invocation": "Print the contents of \"~/.ssh/config\"", "cmd": "cat ~/.ssh/config"}, {"invocation": "Search the current directory recursively for *.txt files with lines that match regular expression \"^string\"", "cmd": "find . -name \"*.txt\" -exec egrep -l '^string' {} \\;"}, {"invocation": "display all files in the current directory excluding those that are present in the directories whose name starts with \"efence\" and do not search in the sub directories", "cmd": "find * -maxdepth 0 -name \"efence*\" -prune -o -print"}, {"invocation": "Rename \"new\" to \"old\" and make a backup if \"old\" exists", "cmd": "mv new old -b"}, {"invocation": "Find all files that belong to group root", "cmd": "find / -group root"}, {"invocation": "Print either \"one\" or \"two\" randomly three times", "cmd": "yes $'one\\ntwo' | head -10 | nl | sort -R | cut -f2- | head -3"}, {"invocation": "Count the number of total files and folders under current directory tree", "cmd": "find . -print0 | tr -cd '\\0' | wc -c"}, {"invocation": "Delete all empty directories and directories that contain only empty directories under current directory", "cmd": "find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}, {"invocation": "change permission of all the files in the entire file system which have the permissions 777.", "cmd": "find / -type f -perm 0777 -print -exec chmod 644 {} \\;"}, {"invocation": "find all the files in the current folder which have execute permission", "cmd": "find . -executable"}, {"invocation": "Recursively changes group ownership of everything within a current directory to 'repogroup'.", "cmd": "chgrp -R repogroup ."}, {"invocation": "Numerically sort file \"temp.txt\" by the second \"-\" separated value of each line ordered from highest value to least value", "cmd": "tac temp.txt | sort -k2,2 -r -u"}, {"invocation": "Delete all filename* files under /dir directory", "cmd": "find /dir -name \"filename*\" -type f -print | xargs rm"}, {"invocation": "Find and remove the .rhosts file in the /home directory tree", "cmd": "find /home -name .rhosts -print0 | xargs -0 rm"}, {"invocation": "Archive \"path/to/working/copy\" to \"path/to/export\" excluding files or directories named \".svn\"", "cmd": "rsync -a --exclude .svn path/to/working/copy path/to/export"}, {"invocation": "Save hexadecimal byte 9 in binary file \"file.moi\" to variable \"month\"", "cmd": "month=$(od -t x1 --skip-bytes=8 --read-bytes=1 file.moi | head -1 | awk '{print $2}')"}, {"invocation": "Search all .c and .h files in the current directory tree for string \"e\"", "cmd": "find . -name \"*.[ch]\" -exec grep --color -aHn \"e\" {} \\;"}, {"invocation": "display all the files in the file system which belong to the user \"wnj\" and which are modified after the file \"ttt\"", "cmd": "find / -newer ttt -user wnj -print"}, {"invocation": "Search the current directory tree for files containing \"sh\" in their names", "cmd": "find . -name \"*sh*\""}, {"invocation": "Finds strings with text \"text\" in all files named \"string to be searched\" recursively in a current folder.", "cmd": "find . -name \"string to be searched\" -exec grep \"text\" \"{}\" \\;"}, {"invocation": "prints the names of all files in the directory tree rooted in /usr/src whose name ends with \u2018.c\u2019 and that are larger than 100 Kilobytes.", "cmd": "find /usr/src -name '*.c' -size +100k -print"}, {"invocation": "Find all files/directories under current directory and print them with newline as the delimiter", "cmd": "find -print | xargs -d'\\n'"}, {"invocation": "Print a detailed list of all regular files from the current directory tree", "cmd": "find . -type f -ls"}, {"invocation": "replace the word foo to bar in the current folder in all the regular/normal files containing the word \"baz\" in their name (does not update the file)", "cmd": "find . -type f -name \"*baz*\" -exec sed -i 's/foo/bar/g' {} +"}, {"invocation": "Change to directory 'foo' and print to terminal all received on standard input", "cmd": "cd foo | cat"}, {"invocation": "List all files in the current directory tree invoking xargs only once", "cmd": "find . -type f -print | xargs ls -l"}, {"invocation": "Print numbered list of all third-level files under the current directory", "cmd": "ls -d -1 $PWD/**/*/* | cat -n"}, {"invocation": "display all the html files in the folder /var/www", "cmd": "find /var/www -type f -name \"*.html\""}, {"invocation": "Read a single character from standard input with prompt \"Is this a good question (y/n)? \" and timeout of 3 seconds and save the response to variable \"answer\"", "cmd": "read -t 3 -n 1 -p \"Is this a good question (y/n)? \" answer"}, {"invocation": "Shows status of a shell option 'dotglob'.", "cmd": "shopt dotglob"}, {"invocation": "Print the last 10 lines of the file '/var/log/syslog'", "cmd": "tail /var/log/syslog"}, {"invocation": "Search for .pdf files", "cmd": "find / -name '*.pdf'"}, {"invocation": "Find all regular files under $DIR directory tree whose paths match the regex \".*\\.${TYPES_RE}\" where ${TYPES_RE} expands as a variable", "cmd": "find ${DIR} -type f -regex \".*\\.${TYPES_RE}\""}, {"invocation": "Replace all spaces with underscores in directory paths under current directory.", "cmd": "find -name \"* *\" -type d | rename 's/ /_/g'"}, {"invocation": "Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names", "cmd": "find -name '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' -type f"}, {"invocation": "Prefix all files and directories in the current directory with \"unix_\"", "cmd": "ls | xargs -i mv {} unix_{}"}, {"invocation": "Search for 'mystring' in all *.txt files under current directory", "cmd": "find . -name '*.txt' | xargs egrep mystring"}, {"invocation": "find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec)", "cmd": "find . -type f -iname '*.cpp' -exec mv -t ./test/ {} \\+"}, {"invocation": "Calculate the md5 sum of the contents of all files sorted in directory tree \"/path\"", "cmd": "find /path -type f | sort -u | xargs cat | md5sum"}, {"invocation": "Push the directory containing the first existing command found in all arguments to the directory stack.", "cmd": "pushd $(dirname `which $@`)"}, {"invocation": "Print the number of regular files found in the current directory tree", "cmd": "find . -type f | wc -l"}, {"invocation": "ERROR - will overwrite the executable if it's not a symlink.", "cmd": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`"}, {"invocation": "Counts all non-blank lines in the $i file.", "cmd": "sed '/^\\s*$/d' $i | wc -l ## skip blank lines"}, {"invocation": "Search the current directory tree for all .java files newer than the file build.xml", "cmd": "find . -name '*.java' -newer build.xml -print"}, {"invocation": "list files found under the current directory ending in \"txt\" or ending in \"html\"", "cmd": "find . -name '*.txt' -o -name '*.html'"}, {"invocation": "Number each non-blank line of standard input", "cmd": "nl"}, {"invocation": "Force create a hard link named '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3' with target '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3'", "cmd": "ln -f '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3' '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3'"}, {"invocation": "Saves list of logged in users in system together with 'USER' header in the 'a' variable.", "cmd": "a=`w|cut -d' ' -f1`;"}, {"invocation": "Find all php files in the current directory", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "Run .makeall.sh in an empty environment.", "cmd": "env -i ./makeall.sh"}, {"invocation": "search for the folder .dummy and remove it from the folder \"Test folder\"", "cmd": "find \"Test Folder\" -type d -name '.dummy' -delete"}, {"invocation": "Create intermediate directories foo and bar as required and directory foo/bar/baz", "cmd": "mkdir -p foo/bar/baz"}, {"invocation": "Search the current directory recursively for files containing \"needle text\"", "cmd": "find . -type f | xargs grep -I \"needle text\""}, {"invocation": "Search for \"foo\" in every file in the current directory and number the output", "cmd": "grep foo * | nl"}, {"invocation": "change owner of the files into directory \"/mydir\" with \".txt\" extension to user root", "cmd": "find /mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}, {"invocation": "Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day", "cmd": "find /home/bozo/projects -mtime -1"}, {"invocation": "Find every file under the directory /usr ending in \".stat\".", "cmd": "find /usr -name *stat"}, {"invocation": "Compress every file in the current directory that matches \"*cache.html\" and keep the original file", "cmd": "gzip -k *cache.html"}, {"invocation": "Remove all .tmp files in and below /tmp", "cmd": "find /tmp -name \"*.tmp\" | xargs rm"}, {"invocation": "search for files having python in filename", "cmd": "find / -iname '*python*'"}, {"invocation": "Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree", "cmd": "find ./dir1 ./dir2 -name foo.bar -print"}, {"invocation": "Find files with extension .conf in the /etc directory tree", "cmd": "find /etc -name \"*.conf\""}, {"invocation": "Locate world-writable files and directories on the system", "cmd": "find / -path /proc -prune -o -perm -2 ! -type l -ls"}, {"invocation": "Find all the SGID bit files whose permissions set to 644", "cmd": "find / -perm 2644"}, {"invocation": "Find all the files/directories in the entire filesystem that do not belong to user 'wnj' and are not newer than the file/directory 'ttt' by modification time", "cmd": "find / \\! \\( -newer ttt -user wnj \\) -print"}, {"invocation": "Compress all files in directory \"$PATH_TO_LOGS\" that were last modified more than \"$SOME_NUMBER_OF_DAYS\" days ago", "cmd": "find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec gzip -N {} \\;"}, {"invocation": "Print the ping statistics of 4 requests to \"www.google.com\"", "cmd": "ping -c4 www.google.com | awk '/---/,0'"}, {"invocation": "Print the files in the current directory as a list of comma separated values", "cmd": "ls -1 | tr '\\n' ','"}, {"invocation": "delete all the text files in the current folder.", "cmd": "find . -type f -name \"*.txt\" -exec rm -f {} \\;"}, {"invocation": "Copy local file \"$1\" to host \"$2\" into host directory \"$3\"", "cmd": "cat $1 | ssh $2 \"mkdir $3;cat >> $3/$1\""}, {"invocation": "To match only hidden dot directories", "cmd": "find /nas01/backups/home/user/ -type d -name \".*\" -print0 -exec ls -lrt {} \\;"}, {"invocation": "change the ownership of all directories in the current folder", "cmd": "find . -type d -exec chown username {} \\;"}, {"invocation": "Find files with 002 permission in entire file system", "cmd": "find / -type f -perm -002"}, {"invocation": "Print only the line \"foo///\" given two empty directories foo and bar", "cmd": "find foo/// bar/// -name foo -o -name 'bar?*'"}, {"invocation": "search for the file foo.txt in the current folder and open it in vi editor", "cmd": "find -name foo.txt -execdir vim '{}' ';'"}, {"invocation": "Find all empty files under a certain path", "cmd": "find /tmp -type f -empty"}, {"invocation": "Change owner to \"root\" and group to \"wheel\" of \"adbind.bash\"", "cmd": "sudo chown root:wheel adbind.bash"}, {"invocation": "Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.", "cmd": "grep -e TEXT *.log | cut -d' ' --complement -s -f1"}, {"invocation": "find all files that are readable or writable by their owner", "cmd": "find . -perm +600 -print"}, {"invocation": "Search all files in the current directory tree whose names end in \"1\" for string \"1\"", "cmd": "find . -name \"*1\" -exec grep \"1\" {} +"}, {"invocation": "Find all files starting from / that belong to user1", "cmd": "find / -user user1"}, {"invocation": "Generate the obsolete 29 character Spanish alphabet and number each character", "cmd": "echo -e {{a..c},ch,{d..l},ll,{m,n},\u00f1,{o..z}}\"\\n\" | nl"}, {"invocation": "Move all files including hidden files and excluding \"..\" in \"/path/subfolder/\" to \"/path/\"", "cmd": "mv /source/path/{.[!.],}* /destination/path"}, {"invocation": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout", "cmd": "bzip2 file | tee -a logfile"}, {"invocation": "search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours", "cmd": "find /usr/bin -type f -atime +100"}, {"invocation": "Find all files residing in /home/dm/Video or below that were changed less than 7 days ago", "cmd": "find /home/dm/Video -mtime -7"}, {"invocation": "Find all files/directories in 1 level down the current directory", "cmd": "find -mindepth 1 -maxdepth 1"}, {"invocation": "Search everywhere for files changed within the last minute", "cmd": "find / -newerct '1 minute ago' -print"}, {"invocation": "Find all files under $dir", "cmd": "find $dir -type f"}, {"invocation": "Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames", "cmd": "find . -exec grep -H string-to-find {} \\;"}, {"invocation": "Find all files/directories in the paths expanded by the glob pattern '.*'", "cmd": "find .*"}, {"invocation": "Count the occurrence of 2 in the string '1 1 2 2 2 5'", "cmd": "echo \"1 1 2 2 2 5\" | tr ' ' $'\\n' | grep -c 2"}, {"invocation": "Find x* files/directories under /tmp directory whose status was changed less than 1 day ago", "cmd": "find /tmp/ -ctime -1 -name x*"}, {"invocation": "copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.", "cmd": "find /raid -type d -name \".local_sd_customize\" -ok cp /raid/04d/MCAD-apps/I_Custom/SD_custom/site_sd_customize/user_filer_project_dirs {} \\;"}, {"invocation": "Calculate the md5 checksum of the current directory structure and save it in variable SUM", "cmd": "SUM=$(tree | md5sum)"}, {"invocation": "Unhide all hidden files in the current directory", "cmd": "find . -maxdepth 1 -type f -name '\\.*' | sed -e 's,^\\./\\.,,' | sort | xargs -iname mv .name name"}, {"invocation": "List the 10 largest files or directories and their sizes under (and including) \"/var\"", "cmd": "du -a /var | sort -n -r | head -n 10"}, {"invocation": "Change the user and group of all files and directories under /var/www to www-data:www-data", "cmd": "find /var/www -print0 | xargs -0 chown www-data:www-data"}, {"invocation": "Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago", "cmd": "find $INTRANETDESTINATION/weekly -mtime +32 -exec rm {} \\;"}, {"invocation": "Gets IP address of first listed network interface in system.", "cmd": "ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | head -n1 | cut -f2 -d: | cut -f1 -d ' '"}, {"invocation": "find all empty files in the current directory ( empty file = size 0 bytes )", "cmd": "find . -size 0"}, {"invocation": "search for the directory starting with \"ora10\" in the entire file system", "cmd": "find / -type d -name \"ora10*\""}, {"invocation": "Find files owned by the \"shadow\" group", "cmd": "find / -group shadow"}, {"invocation": "Find all directories under current directory and change their permission to 644", "cmd": "find -type d -print0|xargs -0 chmod 644"}, {"invocation": "Find and remove multiple files such as *.mp3 or *.txt", "cmd": "find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}, {"invocation": "create directory /cpuset", "cmd": "mkdir /cpuset"}, {"invocation": "Compress $file file using gzip", "cmd": "gzip \"$file\""}, {"invocation": "Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in \"index.html\"", "cmd": "sed -i 's/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g' index.html"}, {"invocation": "Search the /media/shared directory recursively for MP3 and OGG files", "cmd": "find /media/shared \\( -iname \"*.mp3\" -o -iname \"*.ogg\" \\)"}, {"invocation": "Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days", "cmd": "find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90"}, {"invocation": "Find files under '/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names", "cmd": "find /travelphotos -type f -size +200k -not -iname \"*2015*\""}, {"invocation": "Find an inode and remove", "cmd": "find . -inum 968746 -exec rm -i {} \\;"}, {"invocation": "List all files in the current directory tree that were last modified in March 2007", "cmd": "find ! -newermt \"apr 01 2007\" -newermt \"mar 01 2007\" -ls"}, {"invocation": "Format the contents of \"[file]\" in a neat table", "cmd": "cat file | column -t"}, {"invocation": "Print a minimal set of differences between files in directories \"a\" and \"b\", ignore the first 3 lines of output, and print any line starting with \"-\" with the first character removed", "cmd": "diff -dbU0 a b | tail -n +4 | grep ^- | cut -c2-"}, {"invocation": "Write \"Some console and log file message\" to standard output and \"/dev/fd/3\"", "cmd": "echo \"Some console and log file message\" | tee /dev/fd/3"}, {"invocation": "display all the files in the current folder excluding the files with the name mmm", "cmd": "find . -name mmm -prune -o -print"}, {"invocation": "Create a symbolic link in the current directory to \"../config/init\"", "cmd": "ln -s \"../config/init\""}, {"invocation": "Find all files named 'text.txt' under current directory tree and display their contents", "cmd": "find . -name 'text.txt' -print -exec cat {} \\;"}, {"invocation": "Update the history file in the current session", "cmd": "history -w"}, {"invocation": "Search everywhere for hidden file `.profile'", "cmd": "find / -name .profile"}, {"invocation": "Find all the files/directories under '/usr/local' directory tree which have been modified within the last day", "cmd": "find /usr/local -mtime -1"}, {"invocation": "Print a colon-separated list of all directories from the $root directory tree", "cmd": "find $root -type d | tr '\\n' ':'"}, {"invocation": "display all the regular files in the current folder excluding those that are present in the path \"git\"", "cmd": "find . -path \"*.git*\" -prune -o -type f -print"}, {"invocation": "Set the shell prompt to \"host:pwd>\"", "cmd": "PS1=`hostname`':\\W> '"}, {"invocation": "Print 'huzzah' if /some/dir/ is empty", "cmd": "find /some/dir/ -maxdepth 0 -empty -exec echo \"huzzah\" \\;"}, {"invocation": "Print all files containing \"word1\" and \"word2\" in the current directory tree", "cmd": "comm -12 <(grep -rl word1 . | sort) <(grep -rl word2 . | sort)"}, {"invocation": "Find all hidden files in the current directory", "cmd": "find . -type f -name \".*\""}, {"invocation": "remove all text files from the current folder", "cmd": "find -name \"*.txt\" | xargs rm"}, {"invocation": "Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2", "cmd": "find / -newer /tmp/t1 -and -not -newer /tmp/t2"}, {"invocation": "Start program 'scriptname' with an empty environment.", "cmd": "env - scriptname"}, {"invocation": "display list of all the hidden files in the directory \"/dir/to/search/\"", "cmd": "find /dir/to/search/ -name \".*\" -ls"}, {"invocation": "Print \"*Checking Partition Permission* Hostname=$(hostname) LastChecked=\" followed by the current date", "cmd": "echo -n *Checking Partition Permission* Hostname=$(hostname) LastChecked=$(date)"}, {"invocation": "Output lines 16224 to 16482 of 'file', not recommended with large files that contain many lines after the ones needed.", "cmd": "awk 'NR==16224, NR==16482' file"}, {"invocation": "find all js files which path neither ./dir1 nor ./dir2", "cmd": "find . -name '*.js' -not \\( -path \"./dir1\" -o -path \"./dir2/*\" \\)"}, {"invocation": "Rename all *.html files under and below the current directory to *.var", "cmd": "find -name '*.html' -print0 | xargs -0 rename 's/\\.html$/.var/'"}, {"invocation": "Exclude directory from find . command", "cmd": "find build -not \\( -path build/external -prune \\) -name \\*.js"}, {"invocation": "Numerically sort IPv4 addresses specified on standard input with presedence to first, second, third, then fourth octet", "cmd": "tr '.' ' ' | sort -nu -t ' ' -k 1 -k 2 -k 3 -k 4 | tr ' ' '.'"}, {"invocation": "Print absolute path of \"PATH\"", "cmd": "readlink -f PATH"}, {"invocation": "search for a file \"file\" in current folder and if the file is found quit !", "cmd": "find -name file -quit"}, {"invocation": "List all regular files in /var/www and below that have changed in the last 10 minutes", "cmd": "find /var/www -cmin -10 -type f -printf \"%c %pn\""}, {"invocation": "Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place", "cmd": "find . -type f -exec sed -i \u2018s/.*abc.*/#&/\u2019 {} \\;"}, {"invocation": "Find all empty directories under current directory", "cmd": "find . -type d -empty"}, {"invocation": "filter output of bind -p by regex", "cmd": "bind -p | grep -a forward"}, {"invocation": "Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in \"file1\"", "cmd": "find lpi104-6 research/lpi104-6 -lname \"*file1\""}, {"invocation": "Gets all IP addresses from host network configuration and prints first one.", "cmd": "ifconfig | grep \"inet addr:\" | grep -v \"127.0.0.1\" | grep -Eo '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}'  | head -1"}, {"invocation": "Find all files in /tmp whose names begin with the current user's name followed by \".\"", "cmd": "find /tmp -maxdepth 1 -name \"$USER.*\""}, {"invocation": "Make a copy of file.txt in all directories in current directory - names may not contain spaces.", "cmd": "ls -d */ | xargs -iA cp file.txt A"}, {"invocation": "run ls command on files found", "cmd": "find . -name \"*.pl\" -exec ls -ld {} \\;"}, {"invocation": "Join columns in \"file1\" and \"file2\" if their first field matches and format the output as a table", "cmd": "join file1 file2 | column -t"}, {"invocation": "Search the entire system for SUID or SGID files", "cmd": "find / -path /proc -prune -o -type f -perm +6000 -ls"}, {"invocation": "Print the $N'th line from file by replacing commas (',') with newlines", "cmd": "head -$N file | tail -1 | tr ',' '\\n'"}, {"invocation": "Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3", "cmd": "find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \\;"}, {"invocation": "Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory", "cmd": "find {} -name 'upvoter-*' -type f -or -type l -maxdepth 1 -perm +111"}, {"invocation": "Sets 'extglob' shell variable.", "cmd": "shopt -s extglob"}, {"invocation": "Print \"#include\" statements found in \"file2\" that are not in \"file1\"", "cmd": "comm -13 <(grep '#include' file1 | sort) <(grep '#include' file2 | sort)"}, {"invocation": "find all regular/normal files in the folder \"myfiles\" which have read and write permission to the other users", "cmd": "find /myfiles -type f -perm -o+rw"}, {"invocation": "display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits", "cmd": "find . -regextype sed -regex '.*myfile[0-9]\\{1,2\\}'"}, {"invocation": "display all the files in the entire file system which begin with \"apache-tomcat\"", "cmd": "find / -name \"apache-tomcat*\""}, {"invocation": "Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory", "cmd": "find /etc -name \"*.txt\" | xargs -I {} mv {} {}.bak"}, {"invocation": "change owner of the files into directory \"/mydir\" with \".txt\" extension to user root", "cmd": "find /mydir -type f -name \"*.txt\" -print0 | xargs -0 chown root $(mktemp)"}, {"invocation": "find all the files in home folder which have been modified in the last 24 hours", "cmd": "find $HOME -mtime -1"}, {"invocation": "Fix files to default permissions 644", "cmd": "find . -type f -exec chmod 644 {} \\;"}, {"invocation": "Remove all files with the .c extension in the current directory tree", "cmd": "find . -name \"*.c\" -print0 | xargs -0 rm -rf"}, {"invocation": "Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory", "cmd": "find . -name text.txt | sed 's|.*/\\(.*\\)/.*|sed -i \"s@^@\\1 @\" & |' | sh"}, {"invocation": "Find all .txt files under the current directory and below", "cmd": "find -name \\*.txt"}, {"invocation": "Search for 'mystring' in all *.txt files under current directory", "cmd": "find . -name *.txt | xargs egrep mystring"}, {"invocation": "Print all files on the system owned by group `name_of_group'", "cmd": "find / -group name_of_group"}, {"invocation": "Output the system host name and date to the console", "cmd": "echo Hostname=$(hostname) LastChecked=$(date)"}, {"invocation": "Decompress \"path/to/test/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 line limit", "cmd": "gzip -dc path/to/test/file.gz | grep -P --regexp='my regex' | split -l1000000"}, {"invocation": "Check if \"~/mnt/sdc1\" is mounted", "cmd": "mount | grep -q ~/mnt/sdc1"}, {"invocation": "Print working directory separated by newlines instead of forward slashes", "cmd": "pwd | tr '/' '\\n'"}, {"invocation": "Remove empty folder, and skip error message if one is not empty.", "cmd": "rmdir --ignore-fail-on-non-empty newBaseDir/Data/NewDataCopy"}, {"invocation": "List all *.c files in entire file system", "cmd": "find / \\! -name \"*.c\" -print"}, {"invocation": "Print content of 'a' file, showing all non-printing characters including TAB characters, and displaying $ at the end of each line.", "cmd": "cat -vet a"}, {"invocation": "search for the file, filename.txt in the current folder", "cmd": "find . -name filename.txt"}, {"invocation": "find all the files in the file system whcih have been modified in the last 1 day", "cmd": "find / -mtime -1"}, {"invocation": "Represent the UTC date given in time string \"1970.01.01-$string1\" as number of seconds since the epoch and save it in 't1' variable", "cmd": "t1=$(date -u -d \"1970.01.01-$string1\" +\"%s\")"}, {"invocation": "search for the file \"file\" in current folder and save the output to the same file", "cmd": "find -name file -fprint file"}, {"invocation": "Rename \"old\" to \"tmp\"", "cmd": "mv old tmp"}, {"invocation": "Use the output of \"ping google.com\" as input to awk script \"packet_loss.awk\"", "cmd": "ping google.com | awk -f packet_loss.awk"}, {"invocation": "Prints logged in users in sorted order.", "cmd": "w | sort"}, {"invocation": "display all instances of the .profile file in the entire file system", "cmd": "find / -name .profile -print"}, {"invocation": "display all the regular/normal files in the current folder which are modified after a file", "cmd": "find . -type f -newer \"$FILE\""}, {"invocation": "Take a file path from standard input and remove it.", "cmd": "xargs -I '{}' rm '{}'"}, {"invocation": "Remove all .tmp files in and below /tmp", "cmd": "find /tmp -name \"*.tmp\" -print0 | xargs -0 rm"}, {"invocation": "List all *.java files/directories under /home/bluher with their full paths", "cmd": "find /home/bluher -name \\*.java"}, {"invocation": "rename all the png files to jpg files in the current fodler", "cmd": "find . -name \"*.png\" -print0 | sed 'p;s/\\.png/\\.jpg/' | xargs -0 -n2 mv"}, {"invocation": "display all file in the folder /dir/to/search except \".c\" files", "cmd": "find /dir/to/search/ \\! -name \"*.c\" print"}, {"invocation": "recursively look for files ending in either .py or .py.server", "cmd": "find . -type f -regex \".*\\.\\(py\\|py\\.server\\)\""}, {"invocation": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character", "cmd": "find . -regex \".*/my.*p.$\""}, {"invocation": "Copy a file xyz.c to all directories or over all files matching the letter 'c' at the end of their names under current directory tree", "cmd": "find . -name \"*c\" -print0 | xargs -0 -n1 cp xyz.c"}, {"invocation": "Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string \"99966\" in their names", "cmd": "find YOUR_STARTING_DIRECTORY -type d -name \"*99966*\" -print"}, {"invocation": "Find all the files that end with the extension \u201c.java\u201d in the current directoy tree", "cmd": "find . -name \"*.java\""}, {"invocation": "Searches the manual page names and descriptions by 'disk' keyword.", "cmd": "apropos disk"}, {"invocation": "Change permissions for all PHP files under the current directory tree to 755", "cmd": "find . -name \"*.php\" -exec chmod 755 {} \\;"}, {"invocation": "Save actual working directory in variable \"target_PWD\"", "cmd": "target_PWD=$(readlink -f .)"}, {"invocation": "Archive \"/usr/local/\" to \"/BackUp/usr/local/\" on host \"XXX.XXX.XXX.XXX\" via ssh and show progress", "cmd": "rsync --progress -avhe ssh /usr/local/  XXX.XXX.XXX.XXX:/BackUp/usr/local/"}, {"invocation": "split file abc.txt into pieces per 1500000000 bytes named as \"abc.NNN\"", "cmd": "split --bytes=1500000000 abc.txt abc"}, {"invocation": "Find all sample*_1.txt files/directories under current directory", "cmd": "find . -name \"sample*_1.txt\""}, {"invocation": "display all the files in the entire file system which are bigger than 10MB", "cmd": "find / -size +10000k"}, {"invocation": "recursively change owner of the directory /Users/xxx/Library/Developer/Xcode/Templates and all files to user xxx", "cmd": "sudo chown -R xxx /Users/xxx/Library/Developer/Xcode/Templates"}, {"invocation": "Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)", "cmd": "touch -a UEDP0{1..5}_20120821.csv"}, {"invocation": "Find all directories under /directory-path and change their permission to 2755", "cmd": "find /directory-path  -type d -exec sudo chmod 2775 {} +"}, {"invocation": "Find all *.ext files/directories under current directory and print their path and parent directory path", "cmd": "find /path -type f -name \"*.ext\" -printf \"%p:%h\\n\""}, {"invocation": "find all the files in the current folder and display adding quotations to each file and replace spaces with new line", "cmd": "find $PWD | sed -e 's/^/\"/g' -e 's/$/\"/g' | tr '\\n' ' '"}, {"invocation": "display all the files in the folder \"/home/mywebsite\" which have been changed in the last 7*24 horus", "cmd": "find /home/mywebsite -type f -ctime -7"}, {"invocation": "Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\".", "cmd": "find . -name \"*_test.rb\" | xargs rename s/_test/_spec/"}, {"invocation": "List all files in maximum 2 levels down the current directory", "cmd": "find . -maxdepth 2  -type f -exec ls -l {} \\;"}, {"invocation": "Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC'", "cmd": "find /usr/ports/ -name Makefile\\* -exec grep -l QMAKESPEC '{}' '+' | wc -l"}, {"invocation": "delete all the log files in the current folder", "cmd": "find -name '*.log' -delete"}, {"invocation": "Prevent ssh from reading from standard input and execute \"touch /home/user/file_name.txt\" on \"$R_HOST\" as \"$R_USER\"", "cmd": "ssh -n $R_USER@$R_HOST 'touch /home/user/file_name.txt'"}, {"invocation": "Find all directories under present working directory", "cmd": "find $PWD -type d"}, {"invocation": "Change all \"JPG\" filename suffixes in current directory to \"jpeg\".", "cmd": "rename -v 's/\\.JPG/\\.jpeg/' *.JPG"}, {"invocation": "Make directory and parents as needed to \"$FINALPATH\"", "cmd": "mkdir -p \"$FINALPATH\""}, {"invocation": "Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames", "cmd": "find \"/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/\" -iname \"log4j*.xml\" | xargs -I % grep -ilr \"CONSOLE\" \"%\" | xargs -I % grep -H \"ASYNC\" %"}, {"invocation": "Replace all occurrences of word \"foo\" with \"bar\" in *.c and *.h files from the current directory tree", "cmd": "find -name '*.[ch]' -exec sed -i 's/\\<foo\\>/bar/g' {} +"}, {"invocation": "show the disk use of all the regular/normal files in the file system which are bigger than 100MB", "cmd": "find / -type f -size +100M | xargs du -sh"}, {"invocation": "search in current directory downwards all files whose size is less then 10 bytes", "cmd": "find .  -size -10c -print"}, {"invocation": "Locate OGG files under the home directory larger than 100 megabytes", "cmd": "find $HOME -iname '*.ogg' -size +100M"}, {"invocation": "Output the base name of first argument to script or function, that is the part following the last slash.", "cmd": "echo $(basename \"$1\")"}, {"invocation": "Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic", "cmd": "find arch etc lib module usr xpic -type f | xargs chmod -x"}, {"invocation": "List all directories under current directory", "cmd": "find . -type d -exec ls -dlrt {} \\;"}, {"invocation": "display all files in the directory \"dir\" which have been accessed in the last 60 minutes", "cmd": "find /dir -amin -60"}, {"invocation": "Save the canonical filename of \"$BASH_SOURCE\" in variable \"me\"", "cmd": "me=$(readlink --canonicalize --no-newline $BASH_SOURCE)"}, {"invocation": "Read the history file and append the contents to the history list", "cmd": "history -r"}, {"invocation": "Find all files on the system whose names are 'drush'", "cmd": "find / -name drush"}, {"invocation": "Look for files whose names begin with letters a-j", "cmd": "find  / -name \"[a-j]*\" -print"}, {"invocation": "Gets IP addresses of all active network interfaces.", "cmd": "ifconfig | grep -oP \"(?<=inet addr:).*?(?=Bcast)\""}, {"invocation": "Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.", "cmd": "find . -iname foo"}, {"invocation": "Search the current directory recursively for regular files with the extension given as variable $extension", "cmd": "find . -type f -name \"*.$extension\""}, {"invocation": "Print lines in the sorted contents of \"file1\" that are not in the sorted contents of \"file2\"", "cmd": "comm -23 <(sort file1) <(sort file2)"}, {"invocation": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character, ignoring path names containing \"test\"", "cmd": "find . -regex \".*/my.*p.$\" -a -not -regex \".*test.*\""}, {"invocation": "Save the md5 sum of $twofish to variable 'twofish'", "cmd": "twofish=`echo -n $twofish | md5sum | tr -d \"  -\"`"}, {"invocation": "Recursively removes all files like '*.xyz' in a current folder.", "cmd": "find . -name \\*.xyz -exec rm {} \\;"}, {"invocation": "Print a frequency count of column two for every file in the current directory", "cmd": "awk -F '\\t' '{print $2}' * | sort | uniq -c | sort -nr"}, {"invocation": "Save in QUEUE_PIDS variable only pid numbers that stored in $NEW_PIDS variable", "cmd": "QUEUE_PIDS=$(comm -23 <(echo \"$NEW_PIDS\" | sort -u) <(echo \"$LIMITED_PIDS\" | sort -u) | grep -v '^$')"}, {"invocation": "Lists all files in a current folder, separating names with comma.", "cmd": "ls | xargs -I {} echo {}, | xargs echo"}, {"invocation": "Delete all 'restore.php' files in /var/www and 3 levels below", "cmd": "find /var/www -maxdepth 4 -name 'restore.php' -exec rm -r {} \\;"}, {"invocation": "Finds string beginning with 'IFS' in a 'set' output.", "cmd": "set | grep ^IFS="}, {"invocation": "Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz", "cmd": "tar -czf /fss/fi/outfile.tar.gz `find /fss/fin -d 1 -type d -name \"*\" -print`"}, {"invocation": "Display differences between files \"a.txt\" and \"b.txt\" side-by-side and do not output common lines.", "cmd": "diff -a --suppress-common-lines -y a.txt b.txt"}, {"invocation": "find all normal/regular files in the current directory", "cmd": "find . -type f -print"}, {"invocation": "Print the ping time of a single request to \"8.8.8.8\"", "cmd": "ping -c 1 8.8.8.8 |  awk 'FNR == 2 { print $(NF-1) }'"}, {"invocation": "extract \"passwd.tar.gz\" with verbose output", "cmd": "tar -xvzf passwd.tar.gz"}, {"invocation": "Find all files whose filename does not end with *.html.", "cmd": "find . -type f -not -name \"*.html\""}, {"invocation": "Display the number of lines in all regular files under current directory tree and also show the total count", "cmd": "find . -type f -exec wc -l {} +"}, {"invocation": "Saves list of currently logged in users in 'userlist' variable.", "cmd": "userlist=$(w|awk 'BEGIN{ORS=\",\"}NR>2{print $1}'|sed 's/,$//' )"}, {"invocation": "Exclude directory from find . command", "cmd": "find -name \"*.js\" -not -path \"./directory/*\""}, {"invocation": "Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.", "cmd": "find ~/ -type f -exec grep -H 'text-to-find-here' {} \\;"}, {"invocation": "find all PDFs owned by user \u201cseamstress\u201d", "cmd": "find / -user seamstress -iname \u201c*.pdf\u201d"}, {"invocation": "Find files/directories named 'document' in the entire filesystem and in the directory tree '/usr' even if it's in a different partition without traversing to other devices/partitions", "cmd": "find / /usr -xdev -name document -print"}, {"invocation": "Remount \"/dev/stl12\" on \"/system\" as read and write", "cmd": "mount -o rw,remount /dev/stl12 /system"}, {"invocation": "Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree", "cmd": "find . -name '*`$VERSION`*'"}, {"invocation": "search for all the directories in the current directory and do not search in sub directories", "cmd": "find . -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "Print linux group names on multiple lines instead of single line output", "cmd": "groups | tr \\  \\\\n"}, {"invocation": "Print list of disk and mountpoint of disks matching \"/dev/sd*\"", "cmd": "mount | awk '/\\/dev\\/sd/ {print NR, $1, $3}'"}, {"invocation": "Split \"file.txt\" excluding the first line into files with at most 20 lines each and a prefix \"split_\"", "cmd": "tail -n +2 file.txt | split -l 20 - split_"}, {"invocation": "create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~)", "cmd": "find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\) | cpio -pmd0 /dest-dir"}, {"invocation": "find all the empty directories in the current folder", "cmd": "find . -type d -empty"}, {"invocation": "Print the percentage of packets lost of the 5 packets sent to \"$host\"", "cmd": "ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)'"}, {"invocation": "Find all *.ini files", "cmd": "find . -name *.ini"}, {"invocation": "Find all *gz files under asia and emea directory", "cmd": "find asia emea -type f -name \"*gz\""}, {"invocation": "Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree", "cmd": "find /mnt/zip -name \"*prefs copy\" -print | xargs rm"}, {"invocation": "Create a tar file containing all the files in ~/Library folder that contain spaces in their names", "cmd": "find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar"}, {"invocation": "Remove trailing white spaces from all *.rb files under current directory", "cmd": "find . -name '*.rb' | xargs -I{} sed -i '' 's/[[:space:]]*$//g' {}"}, {"invocation": "display all the files in the home folder that have been modified in the last 7*24 hours", "cmd": "find $HOME -mtime -7"}, {"invocation": "Prints long listing of \"$dir/$file\" file.", "cmd": "ls -l -- \"$dir/$file\""}, {"invocation": "Find all regular files under current directory", "cmd": "find . -depth -type f -print"}, {"invocation": "Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\\n'", "cmd": "find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\\n'"}, {"invocation": "Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.", "cmd": "find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \\;"}, {"invocation": "Print summary of new/missing files, and which files differ between /path/to/folder1 and /path/to/folder2, sorted alphabetically.", "cmd": "diff -rq /path/to/folder1 /path/to/folder2"}, {"invocation": "Display a list of files with sizes in decreasing order of size of all the regular files under '/your/dir' directory tree that are bigger than 5 MB in size", "cmd": "find /your/dir -type f -size +5M -print0 | xargs -0 ls -1Ssh"}, {"invocation": "Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep", "cmd": "find / -type l -print0 | xargs -0 file | grep broken"}, {"invocation": "Delete all .svn subdirectories under current directory", "cmd": "rm -rf `find . -type d -name \".svn\"`"}, {"invocation": "List all cron jobs for current user.", "cmd": "crontab -l"}, {"invocation": "Print each line in \"set1\" and \"set2\" that does not exist in the other", "cmd": "sort set1 set2 | uniq"}, {"invocation": "Count the number of lines in all \".txt\" files", "cmd": "cat *.txt | wc -l"}, {"invocation": "Calculate md5 sums for each files matching 'main.cpp*'", "cmd": "md5sum main.cpp*"}, {"invocation": "Split the output of \"ls\" into files of at most 500 lines each with prefix \"outputXYZ.\"", "cmd": "ls | split -l 500 - outputXYZ."}, {"invocation": "List all *.txt files/directories under /etc", "cmd": "ls -l $(find /etc -name \"*.txt\" )"}, {"invocation": "Change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w'", "cmd": "find ~/dir_data -type f -exec chmod a-x,u+w {} \\;"}, {"invocation": "Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output", "cmd": "find . -type f -exec grep California {} \\; -print | wc -l"}, {"invocation": "Find all *.jpg files and copy them to /", "cmd": "find / -type f -name *.jpg  -exec cp {} . \\;"}, {"invocation": "Set variable 'rav' to the contents of 'var' spelled backwards.", "cmd": "rav=$(echo $var | rev)"}, {"invocation": "find all the files ending with \"~\" in current folder and move them to temp folder", "cmd": "find -name '*~' -print0 | xargs -0 -I _ mv _ /tmp/"}, {"invocation": "change owner of the file /home/bob to user root", "cmd": "sudo chown root /home/bob"}, {"invocation": "Remount \"/mnt/mountpoint\" with read and write permission", "cmd": "mount /mnt/mountpoint -oremount,rw"}, {"invocation": "Ping all hosts in file \"ips\" twice", "cmd": "cat ips | xargs -i% ping -c 2 %"}, {"invocation": "List all non-hidden files in ~/junk", "cmd": "find ~/junk   -name \"*\" -exec ls -l {} \\;"}, {"invocation": "Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.", "cmd": "find . -mindepth 1 -maxdepth 1 -type d| grep \\/a |xargs -n 1 cp -i index.html"}, {"invocation": "Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755", "cmd": "find /data -type f -perm 400 -exec echo Modifying {} \\; -exec chmod 755 {} \\;"}, {"invocation": "Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory", "cmd": "find . -name \"$1\" -type f -exec grep -i \"$2\" '{}' \\;"}, {"invocation": "Replace all occurrences of \"StringA\" with \"StringB\" in the *.php and *.html files residing in the current directory tree", "cmd": "find . \\( -name \"*.php\" -or -name \"*.html\" \\) | xargs grep -l StringA | xargs sed -i -e 's/StringA/StringB/g'"}, {"invocation": "Creates temporary file name and saves path to it in 'TMP_FILE' variable.", "cmd": "TMP_FILE=\"$(mktemp -t)\""}, {"invocation": "Remove lines matching \"kpt#\" from \"data.txt\" and add left-justified line numbers", "cmd": "grep -v 'kpt#' data.txt | nl -nln"}, {"invocation": "Change to location of '$TARGET_FILE' file.", "cmd": "cd `dirname $TARGET_FILE`"}, {"invocation": "Find all the Sticky Bit set files whose permission are 551 in the file system", "cmd": "find / -perm 1551"}, {"invocation": "Search the /etc directory tree for files accessed within the last 24 hours", "cmd": "find /etc -atime -1"}, {"invocation": "find the ten biggest files", "cmd": "find /home -type f -exec du -s {} \\; | sort -r -k1,1n | head"}, {"invocation": "create directory log into home directory", "cmd": "mkdir ~/log"}, {"invocation": "Get domain name with 'google' from address $IP", "cmd": "dig -x $IP | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}, {"invocation": "Add a date time stamp to every line of output in \"ping google.com\"", "cmd": "ping google.com | xargs -L 1 -I '{}' date '+%c: {}'"}, {"invocation": "find all the files in the entire file system that have been modified between 50 to 100 days and display ten files", "cmd": "find / -mtime +50 -mtime -100 | head"}, {"invocation": "List all regular file owned by root with permissions 4000", "cmd": "find / -type f -user root -perm -4000 -exec ls -l {} \\;"}, {"invocation": "find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.", "cmd": "find $HOME -type f -atime +30 -size 100k"}, {"invocation": "find the oldest normal file in the current directory", "cmd": "find -type f -printf '%T+ %p\\n' | sort | head -n 1"}, {"invocation": "Find all files starting from the current directory which are exactly 100MB in size", "cmd": "find . -size 100M"}, {"invocation": "Find all files under /path/to/Dir and set their permission to 644", "cmd": "sudo find /path/to/Dir -type f -print0 | xargs -0 sudo chmod 644"}, {"invocation": "Print summary of new/missing files, and which files differ between folder1 and folder2.", "cmd": "diff -arq folder1 folder2"}, {"invocation": "List all files bigger than 10000 blocks", "cmd": "find . -type f -size +10000 -exec ls -al {} \\;"}, {"invocation": "Find all .sh files in or below the current directory and move them to folder ~/back.scripts", "cmd": "find . -name \"*.sh\" -print0 | xargs -0 -I file mv file ~/back.scripts"}, {"invocation": "Log in as \"middleuser\" with key \"./middle_id.pem\" and forward port 22 on host \"middle.example.org\" to port 2222 on localhost", "cmd": "ssh -i ./middle_id.pem -R 22:localhost:2222 middleuser@middle.example.org"}, {"invocation": "Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents", "cmd": "find /data/SpoolIn -name job.history | xargs grep -l FAIL | wc -l"}, {"invocation": "display top 11 files along with the last access date for all the files in the file system", "cmd": "find / -type f -printf \"\\n%AD %AT %p\" | head -n 11"}, {"invocation": "Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory", "cmd": "find ~/Books -type f -name Waldo"}, {"invocation": "Search the current directory recursively for regular files last accessed more than 2 days ago", "cmd": "find . type -f -atime +2"}, {"invocation": "Remove everything within parentheses and substitute all non digit characters with a space from \"1/2 [3] (27/03/2012 19:32:54) word word word word 4/5\" and format the output as a table", "cmd": "echo '1/2 [3] (27/03/2012 19:32:54) word word word word 4/5' | sed -e 's/(.*)//' -e 's/[^0-9]/ /g' | column -t"}, {"invocation": "Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.", "cmd": "scp -rp \"DAILY_TEST_FOLDER\" \"root@${IPADDRESS}:/home/root/\""}, {"invocation": "Find files/directories under /tmp smaller than 100 bytes", "cmd": "find /tmp -size -100c"}, {"invocation": "Print common lines in sorted files \"ignore.txt\" and \"input.txt\"", "cmd": "comm -12 ignore.txt input.txt"}, {"invocation": "Dump \"testscript.sh\" as 2 byte hexadecimale, printable characters, and octal values", "cmd": "od -xcb testscript.sh"}, {"invocation": "For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format.", "cmd": "join -11 -21 -o1.1,1.2,1.3,2.3 file1 file2"}, {"invocation": "Move all files that contain \"Subject: \\[SPAM\\]\" to \"DIR\"", "cmd": "grep -l 'Subject: \\[SPAM\\]' | xargs -I '{}' mv '{}' DIR"}, {"invocation": "Find all HTML files starting with letter 'a' in the current directory and below", "cmd": "find . -name a\\*.html"}, {"invocation": "Find all files under /home that belong to user tecmint", "cmd": "find /home -user tecmint"}, {"invocation": "Find all files/directories with execute permission by group or others", "cmd": "find /path -perm /011"}, {"invocation": "copy all the regular/normal files from temp folder which have been modified in the last 30*24 hours to /tmp/backup", "cmd": "find /tmp -type f -mtime -30 -exec cp {} /tmp/backup \\;"}, {"invocation": "Find all files under /home/username/public_html/sites/default/files and set their permission to 660", "cmd": "find /home/username/public_html/sites/default/files -type f -exec chmod 660 {} +"}, {"invocation": "Move all files/directories under current directory to ~/play", "cmd": "find . -exec mv '{}' ~/play/ \\;"}, {"invocation": "find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"/p/\".", "cmd": "find -mindepth 3 -type d ! -path '*/p/*' -name c -print"}, {"invocation": "Find all files under current directory and set their permission to 775", "cmd": "find -type f | xargs chmod 775"}, {"invocation": "Find all symlinks under current directory", "cmd": "find ./ -type l"}, {"invocation": "Write \"foo\" to the real path of the current command's standard input", "cmd": "echo foo | readlink /proc/self/fd/1"}, {"invocation": "Find all regular files under and below /home/admin/public_html/, and change their permissions to 644", "cmd": "find . /home/admin/public_html/ -type f -exec chmod 644 {} \\;"}, {"invocation": "Find all files in the current directory tree with size bigger than 5 MB and sort them by size", "cmd": "find ./ -size +5M -type f | xargs -r ls -Ssh"}, {"invocation": "Display the file size of file '/data/sflow_log' in bytes", "cmd": "du -sb /data/sflow_log | cut -f1"}, {"invocation": "Run \"command\" on server \"host\" as user \"user\"", "cmd": "echo \"command\" | ssh user@host"}, {"invocation": "Adds %Pathname% to the dirs stack (Windows format).", "cmd": "pushd %Pathname%"}, {"invocation": "Find all files/directories under current directory that were modified exactly 30 minutes ago", "cmd": "find . -mmin 30"}, {"invocation": "find all the config(.conf files) files in the folder /home/pat", "cmd": "find /home/pat -iname \"*.conf\""}, {"invocation": "Print the current shell", "cmd": "ps | tail -n 4 | sed -E '2,$d;s/.* (.*)/\\1/'"}, {"invocation": "Find all files/directories with 644 permission in entire file system", "cmd": "find / -perm 644"}, {"invocation": "Give the location of every hard link to file1 in the /home directory tree", "cmd": "find /home -xdev -samefile file1 | xargs ls -l"}, {"invocation": "split file /usr/bin/gcc into pieces per 100000 lines", "cmd": "split -n 100000 /usr/bin/gcc"}, {"invocation": "Delete all *.zip files under current directory that are older than 2 days", "cmd": "find . -name \"*.zip\" -mtime +2 orint0 | xargs -0 rm"}, {"invocation": "Display a binary file as a sequence of hex codes", "cmd": "od -t x1 file|cut -c8-"}, {"invocation": "Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts", "cmd": "wc `find . -name '*.[h|c|cpp|php|cc]'`"}, {"invocation": "Source executable \"virtualenvwrapper.sh\" found in $PATH", "cmd": "source `which virtualenvwrapper.sh`"}, {"invocation": "list all the drectories present in the current directory and do not search in the sub directories.", "cmd": "find -maxdepth 1 -type d"}, {"invocation": "Print yesterday's date as yyy:mm:dd", "cmd": "date +%Y:%m:%d -d \"yesterday\""}, {"invocation": "Write contents of \"/sys/kernel/debug/tracing/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user", "cmd": "sudo cat /sys/kernel/debug/tracing/trace_pipe | tee tracelog.txt"}, {"invocation": "Find all files under foldername directory and set their permission to 644", "cmd": "sudo find foldername -type f -exec chmod 644 {} \";\""}, {"invocation": "display all the file in the folder /home/david/ which start with the word \"index\" ( case insensitive search)", "cmd": "find /home/david -iname 'index*'"}, {"invocation": "Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'", "cmd": "find /usr/local/games -name \"*xpilot*\""}, {"invocation": "Create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable 'tmpfile'", "cmd": "tmpfile=$(mktemp $(dirname \"$file1\")/XXXXXX)"}, {"invocation": "Print second section of space-separated data from text file \"a\".", "cmd": "cut \"-d \" -f2 a"}, {"invocation": "Delete files in the DIR directory tree whose names begin with \"2015\" and contain \"album\" or \"picture\"", "cmd": "find DIR \\( -name 2015\\* -a \\( -name \\*album\\* -o -name \\*picture\\* \\) \\) -delete"}, {"invocation": "Search the /home/sdt5z/tmp directory tree for files named \"accepted_hits.bam\"", "cmd": "find /home/sdt5z/tmp -name \"accepted_hits.bam\""}, {"invocation": "Prints name of a current shell binary file.", "cmd": "ls -l /proc/$$/exe | sed 's%.*/%%'"}, {"invocation": "Search all files and   directories either of the directory /home/oracle and  /home/databse which  contain the \"zip\"  anywhere in the files or directory name .", "cmd": "find /home/oracle /home/database -name '*zip*'"}, {"invocation": "Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names", "cmd": "find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \\; -print"}, {"invocation": "display the number of lines in all the \".c\" files in the current folder", "cmd": "find . -name \"*.c\" -print | xargs wc -l"}, {"invocation": "List all leaf directories of the current directory tree", "cmd": "find . -type d | sort | awk '$0 !~ last \"/\" {print last} {last=$0} END {print last}'"}, {"invocation": "Compare files \"A1\" and \"A2\" with 3 lines of unified context and print lines beginning with \"+\"", "cmd": "diff -u A1 A2 | grep -E \"^\\+\""}, {"invocation": "Find all files/directories in entire file system more than 700 Megabytes", "cmd": "find / -size +700M"}, {"invocation": "Remove all \"core\" files that were last changed more than 4 days ago from the current directory tree", "cmd": "find . -name core -ctime +4 -exec /bin/rm -f {} \\;"}, {"invocation": "get the root access", "cmd": "sudo su -"}, {"invocation": "use find -exec with multiple commands", "cmd": "find . -name \"*.txt\" -exec echo {} \\; -exec grep banana {} \\;"}, {"invocation": "Find all files under /path and below writable by `group' and `other'", "cmd": "find /path -perm -go+w"}, {"invocation": "Pipe the output of ls into \"read var\" in its separate process", "cmd": "ls | read var"}, {"invocation": "Find files bigger than 20 megabytes in the home directory tree", "cmd": "find ~ -size +20M"}, {"invocation": "Search the regular files of the current directory tree for string \"stringYouWannaFind\", ignoring the case", "cmd": "find ./ -type f -print -exec grep -n -i \"stringYouWannaFind\" {} \\;"}, {"invocation": "Print the name of \"file1\" if this file is newer than \"file2\"", "cmd": "find file1 -prune -newer file2"}, {"invocation": "display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )", "cmd": "find ~/ -daystart -type f -mtime 1"}, {"invocation": "search for all the files in current folder and display all the file names separated by space", "cmd": "find . | paste -sd \" \""}, {"invocation": "Change user ownership to `foo' for files with UID=1005", "cmd": "find / -user 1005 -exec chown -h foo {} \\;"}, {"invocation": "display all directories in the folder \"PROD\" and do not search in the sub directories", "cmd": "find /PROD -maxdepth 1 -type d"}, {"invocation": "find all empty files in home directory", "cmd": "find ~ -empty"}, {"invocation": "print the line containing TERMINATE and everything after in 'file'", "cmd": "tail -n \"+$(grep -n 'TERMINATE' file | head -n 1 | cut -d \":\" -f 1)\" file"}, {"invocation": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy", "cmd": "find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"}, {"invocation": "Recursively finds all files containing text 'OPEN' and prints folder where they are placed.", "cmd": "grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"}, {"invocation": "Report file systems disk usage in 1GB blocks.", "cmd": "df -BG"}, {"invocation": "Save the first three octets of the host name's IP address to variable \"subnet\"", "cmd": "subnet=$(hostname -i | cut -d. -f1,2,3)"}, {"invocation": "create a symbolic link in current directory named \"my_db\" to file \"/media/public/xampp/mysql/data/my_db\"", "cmd": "ln /media/public/xampp/mysql/data/my_db -s"}, {"invocation": "Show what content owned by root has been modified within the last day", "cmd": "find /etc/ -user root -mtime 1"}, {"invocation": "Sort \"some_data\" by the first and second \";\" delimited entries, outputing unique lines and stabilizing the sort", "cmd": "sort -k1,1 -k2,2 -t';' --stable --unique some_data"}, {"invocation": "Display file.txt with lines numbered, and page interactively through the result.", "cmd": "less -N file.txt"}, {"invocation": "display list of all the C files ( fuiles with \".c\" extension ) in current folder", "cmd": "find . -name '*.c' -ls"}, {"invocation": "Search the current directory tree for regular files omitting directory `omit-directory'", "cmd": "find . -name omit-directory -prune -o -type f"}, {"invocation": "generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.", "cmd": "find . -type f -not -name \"*.html\""}, {"invocation": "Find which ruby files under current directory contain the string 'jump'", "cmd": "find . -name '*.rb' -exec grep -H jump {} \\;"}, {"invocation": "Find all files/directories named 'myfile' under your home directory", "cmd": "find ~ -name myfile"}, {"invocation": "display all the C, CPP, Header files in the kat folder", "cmd": "find kat -type f \\( -name \"*.c\" -o -name \"*.cpp\" -o -name \"*.h\" \\)"}, {"invocation": "Identify CMS version/releases accross all your Drupal websites", "cmd": "find /var/www/vhosts/*/httpdocs/ -type f -iwholename \"*/modules/system/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}, {"invocation": "find all java files in the current folder and search for the pattern REGEX", "cmd": "find . -name '*.java' -exec grep REGEX {} \\;"}, {"invocation": "Get a detailed listing of all symbolic links in /usr/bin starting with \"z\"", "cmd": "find /usr/bin  -type l  -name \"z*\" -exec ls  -l {} \\;"}, {"invocation": "list directories owned by group ID 100 in the file system", "cmd": "find / -type d -gid  100"}, {"invocation": "Find all 400 permission files under /data directory", "cmd": "find /data -type f -perm 400 -print"}, {"invocation": "Create 1000 files each file having a number from 1 to 1000 named \"file000\" to \"file999\"", "cmd": "seq 1 1000 | split -l 1 -a 3 -d - file"}, {"invocation": "Recursively copy \"old/\" to \"new/\" as a dry run skipping files that have matching checksums and output the name only", "cmd": "rsync -rcn --out-format=\"%n\" old/ new/"}, {"invocation": "Remove junk files modified more than 31 days ago recursively", "cmd": "find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \\;"}, {"invocation": "Repeat \"image.png\" 10 times on a single line", "cmd": "yes image.png | head -n10 | xargs echo"}, {"invocation": "Find all directories under media/ directory and change their permission to 700", "cmd": "find media/ -type d -exec chmod 700 {} \\;"}, {"invocation": "Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names", "cmd": "find /usr/tom | egrep '*.pl| *.pm'"}, {"invocation": "Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/views directory", "cmd": "find ./cms/djangoapps/contentstore/views -iname *.css | xargs sed -i s/[Ee][Dd][Xx]/gurukul/g"}, {"invocation": "Prints process tree of a current process with id numbers and parent processes.", "cmd": "pstree -sp $$"}, {"invocation": "Run perl -V (displays informations about perl's setup) in an empty environment.", "cmd": "env -i perl -V"}, {"invocation": "Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.", "cmd": "find . -not -empty -type f -exec ls -s {} \\; | sort -n  | head -5"}, {"invocation": "Recursively finds all '*.pdf' files in a current folder and removes them.", "cmd": "find . -name '*.pdf' -exec rm {} +"}, {"invocation": "Create a symolic link in \"/usr/local/\" to \"/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\"", "cmd": "ln -s /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/"}, {"invocation": "Find all files/directories named 'foo' under current directory tree without descending into directories named 'foo'", "cmd": "find . -name foo -type d -prune -o -name foo"}, {"invocation": "Prints strings with MAC address configuration of each network interface in system.", "cmd": "ifconfig | grep HW"}, {"invocation": "Archive \"fileToCopy\" to \"/some/nonExisting/dirToCopyTO\" on host \"ssh.myhost.net\" via ssh", "cmd": "rsync -ave ssh fileToCopy ssh.myhost.net:/some/nonExisting/dirToCopyTO"}, {"invocation": "Read a single character from standard input into variable \"key\" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y/n) : ' and default value $'Y'", "cmd": "read -rp $'Are you sure (Y/n) : ' -ei $'Y' key"}, {"invocation": "Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.", "cmd": "TMPDIR=`dirname $(mktemp -u -t tmp.XXXXXXXXXX)`"}, {"invocation": "List all environment variables whose name contains 'ipo', showing only the names of the variables and not their values.", "cmd": "env | grep ipo | awk 'BEGIN {FS=\"=\"} ; { print $1 } '"}, {"invocation": "Find all files starting from the current directory that match regular expression '.*Message.*\\.java'", "cmd": "find . -print | grep '.*Message.*\\.java'"}, {"invocation": "Search all the regular files in the current directory for \"example\"", "cmd": "find -maxdepth 1 -type f | xargs grep -F 'example'"}, {"invocation": "Unzip all files matching \"test1/*/*.gz\"", "cmd": "gunzip test1/*/*.gz"}, {"invocation": "Find the largest 10 directories under current directory", "cmd": "find . -type d -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}"}, {"invocation": "Delete all files under $INTRANETDESTINATION/monthly directory tree that were modified more than 366 days ago", "cmd": "find $INTRANETDESTINATION/monthly -mtime +366 -exec rm {} \\;"}, {"invocation": "Request changing the passphrase of key file \"private.key\"", "cmd": "ssh-keygen -pf private.key"}, {"invocation": "List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt", "cmd": "find . -type f -fprintf /tmp/files.txt \"%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\\n\""}, {"invocation": "Find all files modified on the 7th of June, 2007, starting from the current directory", "cmd": "find . -type f -newermt 2007-06-07 ! -newermt 2007-06-08"}, {"invocation": "Delete history entry at offset, defined in first argument of executed script", "cmd": "history -d \"$1\""}, {"invocation": "Print how many files are inside each directory under the current one", "cmd": "find */ | cut -d/ -f1 | uniq -c"}, {"invocation": "display all normal/regular files in a folder", "cmd": "find /home/the_peasant -type f"}, {"invocation": "Collapse double slashes in variable \"dir\" into a single one.", "cmd": "dir=\"`echo $dir | sed s,//,/,g`\""}, {"invocation": "Print IP addresses of the host name", "cmd": "hostname  -i"}, {"invocation": "List all regular files in and below the home directory that were modified more than 5 years ago", "cmd": "find ~ -type f -mtime +1825 |xargs ls -l"}, {"invocation": "display all the files in current folder which have been changed in the last 2-6 days", "cmd": "find . -cmin +2 -cmin -6"}, {"invocation": "Find all *bar files/directories under current directory", "cmd": "find -name *bar"}, {"invocation": "Find and print the names of all files found in the current directory and all of its sub-directories.", "cmd": "find . -print"}, {"invocation": "find all files in the file system which have not been accessed in the last 2 days", "cmd": "find / -atime +2"}, {"invocation": "Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree", "cmd": "find /usr/ -lname *javaplugin*"}, {"invocation": "Modify interval to 0.1 seconds for the watch command", "cmd": "watch -n 0.1"}, {"invocation": "Limit each line in \"your_file\" to 80 characters and view via \"more\"", "cmd": "fold -80 your_file | more"}, {"invocation": "Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix \"temp_file_ and numeric suffixes", "cmd": "split -l20 ADDRESSS_FILE temp_file_"}, {"invocation": "Find all files recursively starting from / that have been modified in the past 30 minutes and list them", "cmd": "find / -mmin -30 -ls"}, {"invocation": "Removes all empty folders under path '/foo/bar' and the path itself.", "cmd": "find /foo/bar -type d -depth -exec rmdir -p {} +"}, {"invocation": "Print a sorted list of regular files from directory tree /folder/of/stuff", "cmd": "find /folder/of/stuff -type f | sort"}, {"invocation": "Find files and directories that are at least seven levels of nesting in the directory /usr/src", "cmd": "find /usr/src -name CVS -prune -o -mindepth 7 -print"}, {"invocation": "Search the current directory recursively for regular files last accessed more than 2 minutes ago", "cmd": "find . type -f -amin +2"}, {"invocation": "Eliminates partially duplicate lines by column, keeping the last occurrence", "cmd": "tac temp.txt | sort -k2,2 -r -u"}, {"invocation": "Recursively removes all files like '._*' from current folder.", "cmd": "find . -name \"._*\" -print0 | xargs -0 rm -rf"}, {"invocation": "Find all files in the current directory tree and count them", "cmd": "find | wc -l"}, {"invocation": "find all regular file and create jw-htmlfiles.tar", "cmd": "find . -type f -name \"*html\" | xargs tar cvf jw-htmlfiles.tar -"}, {"invocation": "list all running jobs", "cmd": "jobs"}, {"invocation": "display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with \".git\"", "cmd": "find . \\! -path \"./.git*\" -a \\! -name states_to_csv.pl"}, {"invocation": "Prints list of user 'myuser' groups in a format: 'groups: [comma-separated groups list]'.", "cmd": "echo \"groups: [ $(groups myuser | sed -e 's/.\\+\\s\\+:\\s\\+\\(.\\+\\)/\\1/g' -e 's/\\(\\s\\+\\)/, /g') ]\""}, {"invocation": "Find all *.[ch] files under current directory", "cmd": "find . -name '*.[ch]'"}, {"invocation": "find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled", "cmd": "find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f"}, {"invocation": "find all the files that have been modified in the last 1 day", "cmd": "find . -type f -daystart -mtime -1"}, {"invocation": "find all the files in the filesystem which do not belong to any group", "cmd": "find / -nogroup -print"}, {"invocation": "Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents", "cmd": "find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'"}, {"invocation": "find  files which full path name is foo/bar under foo directory and print", "cmd": "find foo -path foo/bar -print"}, {"invocation": "Search for all files in the current directory recursively whose names contain \"linkin\", ignoring the case", "cmd": "find . -iname *linkin*"}, {"invocation": "Print the first two bytes of \"my_driver\" in octal", "cmd": "od --read-bytes=2 my_driver"}, {"invocation": "display all the jars in the current folder", "cmd": "find . -iname '*.jar'"}, {"invocation": "Print your/dir if it's empty", "cmd": "find your/dir -prune -empty"}, {"invocation": "Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE", "cmd": "find . -name '*.ISOLATE.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./ISOLATE"}, {"invocation": "Count total number of lines in all *txt files  in current directory", "cmd": "wc -l `find . -type f -name '*.txt' `"}, {"invocation": "Print a line of 3 '%' characters", "cmd": "seq -s % 4|tr -d '[:digit:]'"}, {"invocation": "change the owner of all the files in the current directory", "cmd": "find . -exec chown myuser:a-common-group-name {} +"}, {"invocation": "Search for 'text' in all regular files under current directory tree", "cmd": "find . -type f -exec grep \"text\" {} /dev/null \\;"}, {"invocation": "Find all *.jpg files in */201111 paths", "cmd": "find */201111 -name \"*.jpg\""}, {"invocation": "Make directory \"/path/to/destination\"", "cmd": "mkdir /path/to/destination"}, {"invocation": "find all executable files in /home directory.", "cmd": "find  /home -type f -perm /a=x"}, {"invocation": "Recursively finds strings with\"text string to search\u201d in any file within the 'directory-path', following symlinks, and prints found strings with file names.", "cmd": "grep -r -H \"text string to search\u201d directory-path"}, {"invocation": "Find all regular files that start with stat", "cmd": "find . -type f \u2013iname stat*"}, {"invocation": "Counts all files in a current folder and subfolders.", "cmd": "find `pwd` -type f -exec ls -l {} \\; | wc -l"}, {"invocation": "Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder", "cmd": "find . -size +1M -exec mv {} files \\+"}, {"invocation": "change user and group of the file \"/var/run/docker.sock\" to user root and group dockerroot", "cmd": "sudo chown root:dockerroot /var/run/docker.sock"}, {"invocation": "Remove duplicates in variable \"variable\" and preserve the order", "cmd": "variable=$(echo \"$variable\" | tr ' ' '\\n' | nl | sort -u -k2 | sort -n | cut -f2-)"}, {"invocation": "split content of the file file.txt started from second line into pieces per 4 lines named as split_NNN", "cmd": "tail -n +2 file.txt | split -l 4 - split_"}, {"invocation": "Find files modified at least 5 days in the future", "cmd": "find . -newermt \"5 days\""}, {"invocation": "Archive \"/source\" and all files under \"folder/\" to \"/dstfolder/\" on host \"remoteserver\" as user \"user\" without copying files that already exist", "cmd": "rsync -avz --ignore-existing /source folder/* user@remoteserver:/dstfolder/"}, {"invocation": "Request that the master ssh connection \"otherHosttunnel\" exits", "cmd": "ssh -O exit otherHosttunnel"}, {"invocation": "Sort tab separated file \"file\" using a version sort for field 6 and a numeric sort for field 7", "cmd": "sort -t$'\\t' -k6V -k7n file"}, {"invocation": "Find all files under $d directory (no sub-directories) that are executable by owner and print only their names", "cmd": "find $d -maxdepth 1 -perm -100 -type f | sed 's#.*/##'"}, {"invocation": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces", "cmd": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}, {"invocation": "find all c, cpp files in current folder", "cmd": "find -name \"*.cpp\" -o -name \"*.c\""}, {"invocation": "Find all files/directories under current directory that match the case insensitive regex .*/\\(EA\\|FS\\)_.*", "cmd": "find . -iregex '.*/\\(EA\\|FS\\)_.*'"}, {"invocation": "search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.", "cmd": "find /nas/projects/mgmt/scripts/perl -mtime 8 -mtime -10 -daystart -iname \"*.pl\""}, {"invocation": "Find all *.mp3 files under current directory", "cmd": "find . -name *.mp3"}, {"invocation": "Prints the day of last Friday in a current month.", "cmd": "cal | awk '$6{date=$6}END{print date}'"}, {"invocation": "Find all the SGID bit files whose permissions set to 644 in the file system", "cmd": "find / -perm 2644"}, {"invocation": "Open gcc info manual and select \"option index\" menu entry.", "cmd": "info gcc \"option index\""}, {"invocation": "show all directories in the current folder excluding those that are present in the sub directories of media, images and backups", "cmd": "find . -type d \\( -name media -o -name images -o -name backups \\) -prune -o -print"}, {"invocation": "Puts the job 1 in the background.", "cmd": "bg %1 [puts the job in the background]"}, {"invocation": "Save all directories under the current directory as a comma separated list in variable \"FOLDERS\"", "cmd": "FOLDERS=$(find . -type d | paste -d, -s)"}, {"invocation": "Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.", "cmd": "find /tmp/*/* -mtime +7 -type d -exec rmdir {} \\;"}, {"invocation": "search for the word \"foo\" in all the regular/normal files in the directory \"/path/to/dir\"", "cmd": "find /path/to/dir -type f | xargs grep -l \"foo\""}, {"invocation": "Merge each non-blank line of standard input into a single comma separated line", "cmd": "grep -v '^$' | paste -s -d\",\" -"}, {"invocation": "update the permissions of the directories in the folder folder_name to 775", "cmd": "find folder_name -type d -exec chmod 775 \u2018{}\u2019 \\;"}, {"invocation": "display files ending with \".ext\" in current folder which are present in the file \"foo\"", "cmd": "find . -type f -name \\*.ext | xargs grep foo"}, {"invocation": "Find the file in the current directory tree with inode number $inum and delete it", "cmd": "find . -inum $inum -exec rm {} \\;"}, {"invocation": "search for the regular/normal file \"Dateiname\" in the entire file system", "cmd": "find / -type f -iname \"Dateiname\""}, {"invocation": "Get from file 'File1.txt' strings starting with 'Q', extract only part of them following after '=' sign, and print which ones are not found in 'File2.txt'", "cmd": "grep ^Q File1.txt | cut -d= -f2- | sort | comm -23 - <(sort File2.txt)"}, {"invocation": "display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders", "cmd": "find . \\( -name skipdir1 -prune , -name skipdir2 -prune -o -name \"*.txt\" \\) -print"}, {"invocation": "Find all directories in /path/to/dir/ without going into sub-directories", "cmd": "find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "Keep the last 4 ASCII characters (bytes) of a string.", "cmd": "echo \"0a.00.1 usb controller some text device 4dc9\" | rev | cut -b1-4 | rev"}, {"invocation": "Remove containing directories from variable 'path' ie. \"/some/specific/directory\" becomes \"directory\".", "cmd": "path=$(basename $path)"}, {"invocation": "find all symbolic links in the current folder", "cmd": "find -type l"}, {"invocation": "list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo'", "cmd": "find . \\( -name '*.mp3' -o -name '*.jpg' \\) -name 'foo*' -print"}, {"invocation": "Enables shell options 'extglob' and 'progcomp'", "cmd": "shopt -s extglob progcomp"}, {"invocation": "find all the files in the root folder which have been modified in the last 24 hours and print them", "cmd": "find / -mtime -1 -print"}, {"invocation": "Move files older than 1 day to directory TMP", "cmd": "find . -atime +1 -type f -exec mv {} TMP \\;"}, {"invocation": "Print lines of 'file' reverted order, and reverted characterwise", "cmd": "tac file | rev"}, {"invocation": "Copy all *.data files under /source_path to /target_path", "cmd": "find /source_path -name *.data -exec cp {} /target_path \\;"}, {"invocation": "Print the current date followed by ' doing stuff'", "cmd": "echo $(date) doing stuff"}, {"invocation": "display all the text files and pdf files in the current folder", "cmd": "find . \\( -name \"*.txt\" -o -name \"*.pdf\" \\)"}, {"invocation": "Recursively finds and compresses all files in the directory '/path/to/dir'", "cmd": "find /path/to/dir -type f -exec bzip2 {} \\;"}, {"invocation": "Grab the output of \"basename\" (in this case \"stuff\") and echo it to stdout, which basename would do by default anyway.", "cmd": "echo $(basename /foo/bar/stuff)"}, {"invocation": "Print the directory name of the physical current working directory", "cmd": "dirname `pwd -P`"}, {"invocation": "display all the files in the current folder which are present in the path \"./src/emacs\"", "cmd": "find . -path './src/emacs' -prune -o -print"}, {"invocation": "Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.", "cmd": "find ./ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\\ *//;'"}, {"invocation": "Get the current shell's executable name from the output of 'ps'.", "cmd": "ps | grep `echo $$` | awk '{ print $4 }'"}, {"invocation": "find all the text files in the current folder and do not  search in the sub directories", "cmd": "find -maxdepth 1 -iname \"*.txt\""}, {"invocation": "Find all files called \"file1.txt\" that reside under and below /home/wsuNID/", "cmd": "find /home/wsuNID/ -name file1.txt"}, {"invocation": "Print all business days in the current month without column titles", "cmd": "cal -h | cut -c 4-17 | tail -n +3"}, {"invocation": "Create a symbolic link in the current directory for each .jpg file under \"dir\"", "cmd": "ln -s \"$(find dir -name '*.jpg')\" ."}, {"invocation": "Find all files under directory tree /path/to/dir whose permissions are not 644", "cmd": "find /path/to/dir ! -perm 644"}, {"invocation": "display all the files in the current folder which end with \".bash\"", "cmd": "find . -name \"*.bash\""}, {"invocation": "Search the current directory tree for files whose names do not end in \".exe\" and \".dll\"", "cmd": "find . -not -name \"*.exe\" -not -name \"*.dll\" -not -type d"}, {"invocation": "Change directory to the current user's home directory", "cmd": "cd /home/`whoami`"}, {"invocation": "Find all files/directories named orm.properties under  /eserver6 directory", "cmd": "find /eserver6 -name \"orm.properties\""}, {"invocation": "Recursively copy all files matching \"*.sh\" in \"$from\" to \"root@$host:/home/tmp/\" compressing data during transmission", "cmd": "rsync -zvr --exclude=\"*\" --include=\"*.sh\" --include=\"*/\" \"$from\" root@$host:/home/tmp/"}, {"invocation": "Print linker search path using gcc formatted on new lines", "cmd": "gcc -print-search-dirs | sed '/^lib/b 1;d;:1;s,/[^/.][^/]*/\\.\\./,/,;t 1;s,:[^=]*=,:;,;s,;,;  ,g' | tr \\; \\\\012"}, {"invocation": "Search for files whose size is between 100 kilobytes and 500 kilobytes", "cmd": "find . -size +100k -a -size -500k"}, {"invocation": "Saves file sctipt.sh size in 'size' variable.", "cmd": "size=`cat script.sh | wc -c`"}, {"invocation": "Format and print the time string @133986838 according to the default time format", "cmd": "date --date @120024000"}, {"invocation": "search for a word in all the php files in the current folder and display the count of all matching lines.", "cmd": "find . -name \\*.php -type f -exec grep -Hn '$test' {} \\; | wc -l"}, {"invocation": "display a long listing of all the xls or csv files in the entire file system", "cmd": "find / -type f \\( -name \"*.xls\" -o -name \"*.csv\" \\) -exec ls -l {} \\;"}, {"invocation": "Read a line from standard input into variable \"response\" without backslash escapes using the prompt \"About to delete all items from history that match \\\"$param\\\". Are you sure? [y/N] \"", "cmd": "read -r -p \"About to delete all items from history that match \\\"$param\\\". Are you sure? [y/N] \" response"}, {"invocation": "display all the .sh scripts in the folder /usr", "cmd": "find /usr -name \\*.sh"}, {"invocation": "search for files which are writable by either their owner or their group", "cmd": "find . -perm /u=w,g=w"}, {"invocation": "Send two ping requests to \"www.google.com\"", "cmd": "ping -c 2 www.google.com"}, {"invocation": "Find user daniel's files of type jpeg", "cmd": "find . -user daniel -type f -name *.jpg"}, {"invocation": "Counts lines in each *.cpp, *.c, *.h file.", "cmd": "wc -l `find . -type f \\( -name \"*.cpp\" -o -name \"*.c\" -o -name \"*.h\" \\) -print`"}, {"invocation": "Split a file \"file.tar.gz\" into pieces with size 1024 MB", "cmd": "split -b 1024m file.tar.gz"}, {"invocation": "Find files starting with the word \"file\" in the current directory tree, ignoring the case", "cmd": "find . -iname \"file*\""}, {"invocation": "Copy all files below the current directory whose names contain \"FooBar\" to directory foo/bar/ in user's home directory.", "cmd": "find . | grep FooBar | xargs -I{} cp {} ~/foo/bar"}, {"invocation": "find all files in the current folder which have been accessed in the last 30 minutes", "cmd": "find . -amin -30"}, {"invocation": "Print 2 lines of \"123456789\"", "cmd": "yes 123456789 | head -2"}, {"invocation": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names", "cmd": "find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\" -print0 | xargs -0 -n 1 ls"}, {"invocation": "Wrap each line in \"yourfile\" to fit in 79 characters and right pad any lines shorter with spaces", "cmd": "fold -w79 yourfile | sed -e :a -e 's/^.\\{0,78\\}$/& /;ta'"}, {"invocation": "Search the current directory for files whose names start with \"messages.\" ignoring SVN and CVS files", "cmd": "find \\( -name 'messages.*' ! -path \"*/.svn/*\" ! -path \"*/CVS/*\" \\) -exec grep -Iw uint {} +"}, {"invocation": "Login to \"$HOST\" and create file \"$FILE_PATH\" if it does not exist", "cmd": "ssh -q $HOST \"[[ ! -f $FILE_PATH ]] && touch $FILE_PATH\""}, {"invocation": "Count the number of regular files in the current directory that contain a vowel in their names", "cmd": "find . -maxdepth 1 -type f -iname '*[aeiouy]*' -printf \".\\n\" | wc -l"}, {"invocation": "Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields", "cmd": "rev input | uniq -f1 | rev"}, {"invocation": "Enables shell option 'cmdhist'.", "cmd": "shopt -s cmdhist"}, {"invocation": "show all the mp3 files in the folder /home", "cmd": "find /home -type f -name '*.mp3'"}, {"invocation": "List file contents of compressed file $i", "cmd": "gzip -l $i"}, {"invocation": "Find all files/directores under '/usr/local' directory tree that contain the word 'blast' in their names", "cmd": "find /usr/local -name \"*blast*\""}, {"invocation": "copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory", "cmd": "find . | cpio -pdumv /path/to/destination/dir"}, {"invocation": "Save Java home in variable \"JAVA_HOME\"", "cmd": "JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin/.*$::\" )\""}, {"invocation": "Find one file or directory in the current directory whose name matches the pattern given as a variable $a", "cmd": "find . -maxdepth 1 -name \"$a\" -print -quit"}, {"invocation": "Find all *.foo files under current directory and print their contents", "cmd": "cat `find . -name '*.foo' -print`"}, {"invocation": "Force create a hard link named \"non_secret_file.txt\" to \"secret_file.txt\"", "cmd": "ln -f secret_file.txt non_secret_file.txt"}, {"invocation": "Search the current directory tree for files containing \"needle\" in their names", "cmd": "find . -iname \"*needle*\""}, {"invocation": "Find all files/directories under current directory and print their paths", "cmd": "find . -exec echo {} +"}, {"invocation": "search  all block spacial files called backup from /usr directory downwards and print them .", "cmd": "find /usr -type b -name backup -print"}, {"invocation": "Print the first 10 files or directories found in the current directory tree by `find'", "cmd": "find | head"}, {"invocation": "Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.", "cmd": "sudo rm /var/lib/mongodb/mongod.lock"}, {"invocation": "list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.", "cmd": "find $HOME -type f -atime +30 -size 100k"}, {"invocation": "search for all the regular files in the folder /home which have the permission 077", "cmd": "find /home -type f -perm 0777 -print"}, {"invocation": "File \"files.txt\" contains a list of files, copy all files listed to host \"remote\", connecting as ssh user \"user\", and copying the files to this user's home directory - this will not work with files/directory names containing spaces.", "cmd": "cat files.txt | xargs scp user@remote:"}, {"invocation": "Search the current directory for all files with no 'read' privilege for 'others'", "cmd": "find . -maxdepth 1 ! -perm  -o=r"}, {"invocation": "print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable", "cmd": "find /usr/local -type f -perm /a=x | xargs file |  grep 'not stripped' | cut -d: -f1"}, {"invocation": "delete all empty files in the current directory ( empty file = size 0 bytes )", "cmd": "find . -empty -exec rm '{}' \\;"}, {"invocation": "Search for files/directories with a case insensitive .txt extension in entire file system", "cmd": "find / -iname '*.txt'"}, {"invocation": "Calculate md5 sum of file $ecriv", "cmd": "md5sum \"$ecriv\""}, {"invocation": "Print a count of duplicate lines in \"filename\"", "cmd": "sort filename | uniq -c"}, {"invocation": "Find regular files in the current directory tree that have any executable bits set", "cmd": "find -L . -type f \\( -perm -u=x -o -perm -g=x -o -perm -o=x \\)"}, {"invocation": "Print file system disk space usage with sizes in powers of 1000", "cmd": "a=$( df -H )"}, {"invocation": "find all the files in the current folder which have the name net or comm in them", "cmd": "find . -regex '.*\\(net\\|comm\\).*'"}, {"invocation": "download contents of a website \"https://get.scoop.sh\"", "cmd": "curl -L https://get.scoop.sh"}, {"invocation": "display all the directories in the current folder excluding those that are present in the aa directory tree", "cmd": "find . -type d -name aa -prune"}, {"invocation": "Remove the last file extension from standard input", "cmd": "sed 's/^/./' | rev | cut -d. -f2- | rev | cut -c2-"}, {"invocation": "Find all the files which are changed in last 1 hour", "cmd": "find / -cmin -60"}, {"invocation": "Find all files under current directory and count the output line number", "cmd": "find . -type f | wc -l"}, {"invocation": "Count number of A records of domain '$domain' on nameserver '$server' and save value in 'result' variable", "cmd": "result=\"$(dig +short @\"$server\" \"$domain\" | wc -l)\""}, {"invocation": "Numerically sort file \"file.dat\" by the second word of each line and output from greatest value to least value", "cmd": "sort -nrk 2,2 file.dat"}, {"invocation": "Print the current default full path of the \"java\" executable", "cmd": "echo \"The current default java is $(readlink --canonicalize `which java`)\""}, {"invocation": "Remove gitlab.site.org from root's known hosts file.", "cmd": "ssh-keygen -f \"/root/.ssh/known_hosts\" -R gitlab.site.org"}, {"invocation": "Take a file path from standard input and remove it.", "cmd": "xargs -i rm '{}'"}, {"invocation": "Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the files from the current directory tree", "cmd": "find . -type f -print0 | xargs -0 sed -i -e \"s/HOGE/MOGA/\""}, {"invocation": "Search the home directory tree for files owned by sam", "cmd": "find /home -user sam"}, {"invocation": "Recursively copy \"source\", \"dir\", and \"target\" to \"dir\" as a dry run", "cmd": "rsync -rvc --delete --size-only --dry-run source dir target dir"}, {"invocation": "Save absolute path of the script filename in variable \"SCRIPT\"", "cmd": "SCRIPT=\"$(readlink --canonicalize-existing \"$0\")\""}, {"invocation": "Find all files that belongs to user Tecmint under /home directory", "cmd": "find /home -user tecmint"}, {"invocation": "Recursively change the owner of all files in \"upload_directory\" to \"nobody\"", "cmd": "chown -R nobody upload_directory"}, {"invocation": "Create an empty file in each directory named \"mydir\" under current directory.", "cmd": "find . -type d -name \"mydir\" -exec touch '{}/abc.txt' \\;"}, {"invocation": "Update the timestamp of '/tmp/$$' to the current month and day", "cmd": "touch -t `date +%m%d0000` /tmp/$$"}, {"invocation": "Unzip \"file.gz\" to standard output and execute in bash with arguments \"-n wordpress\"", "cmd": "gzip -d --stdout file.gz | bash -s -- \"-n wordpress localhost\""}, {"invocation": "Creates temporary folder within TMPDIR, with name like current shell name and 10-letter suffix.", "cmd": "mktemp -dt \"$(basename $0).XXXXXXXXXX\""}, {"invocation": "list symbolic links under the directory \"$directory\"", "cmd": "find $directory -type l"}, {"invocation": "display all regular files in current folder excluding search in the directories that are ending with \"git,svn\"", "cmd": "find . \\( -type d -regex '^.*/\\.\\(git\\|svn\\)$' -prune -false \\) -o -type f -print0"}, {"invocation": "Page through the contents of 'file', but excess from lines that don't fit within the screen/window width is cut.", "cmd": "less -S file"}, {"invocation": "Recursively prints all files in a current folders, and searches \"stringYouWannaFind\" in file content ignoring case differences, and preceding found string with its number in file.", "cmd": "find ./ -type f -print -exec grep -n -i \"stringYouWannaFind\" {} \\;"}, {"invocation": "Move \"tobecopied/tobeexcluded\" to the current directory", "cmd": "mv tobecopied/tobeexcluded ."}, {"invocation": "Find all directories under $root and replace all newlines with : (colon) in the output", "cmd": "find $root -type d | tr '\\n' ':'"}, {"invocation": "Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell", "cmd": "find . -print | grep \"/${prefix}${ypatt}\""}, {"invocation": "Make directory \"/cpuset\"", "cmd": "mkdir /cpuset"}, {"invocation": "List characters from standard input showing backslash escapes for non-displayables", "cmd": "od -cvAnone -w1"}, {"invocation": "Find regular non-hidden files containing `some text' in their names with hidden directories optimization", "cmd": "find . -type d -path '*/\\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print"}, {"invocation": "display all the \".c\" files in the current folder excluding those that are present in the .svn sub folder", "cmd": "find .  -name .svn -prune -o -name \"*.c\" -print"}, {"invocation": "Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\\*' and update their timestamps", "cmd": "find \"/proc/$pid/fd\" -ignore_readdir_race -lname \"$save_path/sess_\\*\" -exec touch -c {}"}, {"invocation": "Checks that 'monit' user is in 'www-data' group.", "cmd": "groups monit |grep www-data"}, {"invocation": "find dirctory files which modification time is  7 days ago", "cmd": "find . -mtime -7 -type d"}, {"invocation": "Prints full path to files in a current folder.", "cmd": "ls -d $PWD/*"}, {"invocation": "Find all index.* files/directories under current directory", "cmd": "find -name 'index.*'"}, {"invocation": "Find all files under current directory and change their permission to 644", "cmd": "find . -type f -exec chmod 644 {} \\;"}, {"invocation": "Find all files ignoring hidden files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files", "cmd": "find . -not -path '*/\\.*' -type f -print0 | xargs -0 sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g'"}, {"invocation": "Recursively counts non-blank, non-comment lines in all *.c files in a current folder.", "cmd": "find . -type f -name '*.c' -exec cat {} \\; | sed '/^\\s*#/d;/^\\s*$/d;/^\\s*\\/\\//d' | wc -l"}, {"invocation": "search for the host \"slc02oxm.us.oracle.com\" in all the xml files in the current folder and display the files which has the matched content", "cmd": "find -name \u201c*.xml\u201d -exec grep -l \u201cslc02oxm.us.oracle.com\u201d {} \\;"}, {"invocation": "Display permissions, user, group, and full path for each file in the current directory tree as a list", "cmd": "tree -p -u -g -f -i"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn | xargs rm -fr"}, {"invocation": "Sort file1 and file2 then display differences between them.", "cmd": "diff <(sort file1 -u) <(sort file2 -u)"}, {"invocation": "Calculate the md5 sum of hex byte 61", "cmd": "echo -n -e '\\x61' | md5sum"}, {"invocation": "reverse input with comma deliminators", "cmd": "echo \"a,b,c\" | tr '\\n' ',' | tac -s \",\" | sed 's/,$/\\n/'"}, {"invocation": "display the version of find command", "cmd": "find -version"}, {"invocation": "Find all files in the directory $directory or below with the permissions specificed by $permissions.", "cmd": "find \"$directory\" -perm \"$permissions\""}, {"invocation": "List each unique character in \"file\" prefixed by number of occurrences", "cmd": "grep -o . file | sort | uniq -c"}, {"invocation": "delete all the files in the file system which belong to the user edwarda after user confirmation", "cmd": "find / -user edwarda -ok rm \"{}\" \\;"}, {"invocation": "Print the basename from a colon separated path 'a:b:c:d:e'", "cmd": "basename $(echo \"a:b:c:d:e\" | tr ':' '/')"}, {"invocation": "Print a listing of the `other' directory", "cmd": "find other -maxdepth 1 -printf \"%P\\n\""}, {"invocation": "Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them", "cmd": "find \"$DIR\" -type f -mtime +15 -exec rm {} \\;"}, {"invocation": "Find all .sh files in the current directory tree and remove them", "cmd": "find . -name \"*.sh\" -exec rm -rf '{}' \\"}, {"invocation": "Print 10 space separated \"x\"s with at most 4 per line", "cmd": "yes x | head -10 | awk 'BEGIN { RS = \"%%%%%%%\" } { split($0,a,\"\\n\"); for (i=1; i<length(a); i+=4) print a[i], a[i+1], a[i+2], a[i+3] }'"}, {"invocation": "Find *.txt files in the current directory tree, ignoring paths ./Movies/*, ./Downloads/*, and ./Music/*", "cmd": "find . -type f -name \"*.txt\" ! -path \"./Movies/*\" ! -path \"./Downloads/*\" ! -path \"./Music/*\""}, {"invocation": "Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way", "cmd": "find -d MyApp.app -name Headers -type d -exec rm -rf {} +"}, {"invocation": "Save the short host name appended with \".mysqldb\" in variable \"DBPREFIX\"", "cmd": "DBPREFIX=\"$(hostname -s).mysqldb\""}, {"invocation": "search for regular/normal file with the name \"myfile\" in the entire file system", "cmd": "find / -name myfile -type f -print"}, {"invocation": "Delete interactively all the files/directories with inode number 782263 under current directory tree", "cmd": "find . -inum 782263 -exec rm -i {} \\;"}, {"invocation": "Find all regular files in the current directory tree that have been modified within the last 10 minutes", "cmd": "find . \u2013type f -mmin -10"}, {"invocation": "Find SGID files", "cmd": "find / -perm +g=s"}, {"invocation": "List all directories of the $topdir directory tree that contain a Makefile and at least one .py file", "cmd": "find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u"}, {"invocation": "Recursively removes all files and folders named '.svn' in a current folder.", "cmd": "find . -name .svn | xargs rm -fr"}, {"invocation": "display ten files in the tmp directory", "cmd": "find /tmp  | head"}, {"invocation": "Disable jobs running in their own process group in the shell", "cmd": "set +m"}, {"invocation": "Search the current directory tree for *.c and *.sh files", "cmd": "find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}, {"invocation": "display all files in the folder /usr/src excluding those ending with \",v\"", "cmd": "find /usr/src ! \\( -name '*,v' -o -name '.*,v' \\) '{}' \\; -print"}, {"invocation": "delete all the files in the current folder", "cmd": "find . -print0 | xargs -0 rm"}, {"invocation": "Copy directory tree preserving UID and GID and leaving user files alone", "cmd": "find . -depth -print | cpio -o -O /target/directory"}, {"invocation": "Searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased 'png' pattern.", "cmd": "apropos postscript | grep -i png"}, {"invocation": "force remove all the regular/normal files which begin with sess in the temp folder", "cmd": "find /tmp -type f -name sess* -exec rm -f {} \\;"}, {"invocation": "Compare text \"hello\" and \"goodbye\" line by line", "cmd": "diff <(echo hello) <(echo goodbye)"}, {"invocation": "Find all the files which are accessed 50 days back", "cmd": "find / -atime 50"}, {"invocation": "Display the last 3 characters of variable foo.", "cmd": "echo $foo | rev | cut -c1-3 | rev"}, {"invocation": "Delete all in the current directory tree", "cmd": "find . -delete"}, {"invocation": "Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video", "cmd": "find ~ -type f -exec file -i {} + | grep video"}, {"invocation": "Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago", "cmd": "find $backup_path/* -mtime +30 -exec rm {} \\;"}, {"invocation": "Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace", "cmd": "find ./music -name \"*.mp3\" -print0 | xargs -0 ls"}, {"invocation": "Save the canonical path of \"/usr/bin/java\" with \"/bin/java\" removed to variable \"JAVA_HOME\"", "cmd": "JAVA_HOME=$(readlink -f /usr/bin/java | sed \"s:/bin/java::\")"}, {"invocation": "List all available commands in Mac OS", "cmd": "echo $PATH | tr ':' '\\n' | xargs -I {} find {} -maxdepth 1 -type f -perm '++x'"}, {"invocation": "Recursively changes group ownership of every folder in a current directory to the name of that folder.", "cmd": "find . -type d | sed -e 's/^\\.\\///g' -e 's/^\\./avoid/g' | grep -v avoid | awk '{print $1\"\\t\"$1}' | xargs chgrp"}, {"invocation": "Search the current directory tree for regular files modified within the past 24 hours whose names do not end with \".DS_Store\"", "cmd": "find . -mtime -1 ! -name '.DS_Store' -type f -exec basename {} \\;"}, {"invocation": "Force decompress all files into '/etc'", "cmd": "gzip -d --force * /etc"}, {"invocation": "Search for 'class Pool' in all *.java (case insensitive) files under current directory", "cmd": "find -iname '*.java'|xargs grep 'class Pool'"}, {"invocation": "Remove the line matching \"pattern to match\" in \"./infile\" and print to standard output", "cmd": "sed '/pattern to match/d' ./infile"}, {"invocation": "Save the absolute path of the current script to variable \"SELF\"", "cmd": "actual_path=$(readlink -f \"${BASH_SOURCE[0]}\")"}, {"invocation": "Find all *.gz files/directories under asia and emea directory", "cmd": "find asia emea -name \\*.gz -print0 | xargs -0"}, {"invocation": "change the permission of all the php files in the folder /var/www/ to 700", "cmd": "find /var/www/ -type f -iname \"*.php\" -exec chmod 700 {} \\;"}, {"invocation": "Create links for all files in the current directory tree that are more than 1000 days old in \"/home/user/archives\"", "cmd": "find . -type f -mtime +1000 -print0 | cpio -dumpl0 /home/user/archives"}, {"invocation": "Search the files from the current directory tree for \"foo\"", "cmd": "find . -exec grep foo {} \\;"}, {"invocation": "Print ls output for all non-empty files under under current directory", "cmd": "find . -type f ! -size 0 -exec ls -l '{}' \\;"}, {"invocation": "Display differences between a and b side-by-side", "cmd": "diff -y a b"}, {"invocation": "Display a dump of standard input as floating point values of double size", "cmd": "od -t fD"}, {"invocation": "show all files in the current directory and all subdirectories", "cmd": "find . -print"}, {"invocation": "Write \"127.0.0.1 ad.doubleclick.net\" to the console and append to \"/etc/hosts\" as root", "cmd": "echo 127.0.0.1 ad.doubleclick.net | sudo tee -a /etc/hosts"}, {"invocation": "Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names", "cmd": "find ${DIRECTORY} -type f -print | sed -e 's@^.*/@@' | grep '[aeiouyAEIOUY]' | wc -l"}, {"invocation": "Find files/directories under current directory excluding the path ./src/emacs", "cmd": "find . -path ./src/emacs -prune -o -print"}, {"invocation": "Search for all files not newer than file /tmp/t", "cmd": "find / -not -newer /tmp/t"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 7 days ago", "cmd": "find . -type f -mtime +7"}, {"invocation": "Find all image.pdf files/directories under ./polkadots with null character as the delimiter", "cmd": "find ./polkadots -name \"image.pdf\" -print0"}, {"invocation": "Print amount of space available on the file system containing path to the current working directory.", "cmd": "df $PWD | awk '/[0-9]%/{print $(NF-2)}'"}, {"invocation": "Print login name and full name of all users currently logged in", "cmd": "finger -l | awk '/^Login/'"}, {"invocation": "find out what group a given user has", "cmd": "groups user"}, {"invocation": "Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.", "cmd": "kill -0 1"}, {"invocation": "display all the ip addresses in all the files that are present in /etc folder", "cmd": "find /etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}, {"invocation": "display all the text files in a folder", "cmd": "find $1 -type f -name '*'$n'.txt'"}, {"invocation": "List all crons in the environment", "cmd": "cat /etc/passwd | sed 's/^\\([^:]*\\):.*$/crontab -u \\1 -l 2>\\&1/' | grep -v \"no crontab for\" | sh"}, {"invocation": "Find all files with extension .aac in the /home directory tree", "cmd": "find /home -type f -name '*.aac'"}, {"invocation": "Write standard input to standard output and file \"/tmp/arjhaiX4\"", "cmd": "tee /tmp/arjhaiX4"}, {"invocation": "Follow symbolic links for the full path of \"lshw\"", "cmd": "readlink -f $(which lshw)"}, {"invocation": "get md5sum of an iso file without displaying the filename, save value to 'md5' variable", "cmd": "md5=`md5sum ${my_iso_file} | awk '{ print $1 }'`"}, {"invocation": "forcibly change owner to all files and directories in current directory to user www-data", "cmd": "sudo chown -Rf www-data *"}, {"invocation": "Find files in the \"dir\" directory tree whose names are 33 characters in length", "cmd": "find dir -name '?????????????????????????????????'"}, {"invocation": "Find all directories under /home/username/tmp and set their permission to 770", "cmd": "find /home/username/tmp -type d -exec chmod 770 {} +"}, {"invocation": "Find files under current directory that contains the string '/bin/ksh'", "cmd": "find . -type f -print | xargs    grep -il 'bin/ksh'"}, {"invocation": "Gets MAC address of eth0 network interface.", "cmd": "ifconfig | grep -i hwaddr | cut -d ' ' -f9"}, {"invocation": "Find all files/directories under current directory and print their paths", "cmd": "find . -exec echo {} ';'"}, {"invocation": "Read a line from an interactive shell's standard input into variable \"message\" without backslash escapes and prompt $'Please Enter a Message:\\n'", "cmd": "read -rep $'Please Enter a Message:\\n' message"}, {"invocation": "Reverse the space separated words in \"aaaa eeee bbbb ffff cccc\"", "cmd": "echo \"aaaa eeee bbbb ffff cccc\"|tr ' ' '\\n'|tac|tr '\\n' ' '"}, {"invocation": "Change owner to \"bob\" and group to \"sftponly\" of \"/home/bob/writable\"", "cmd": "sudo chown bob:sftponly /home/bob/writable"}, {"invocation": "find all files with the first letter \u201ce\u201d or \u201cf\u201d and last one x in /usr/bin directory:", "cmd": "find /usr/bin -name [ef]*x"}, {"invocation": "Search the current directory tree for regular files changed on the 10th of September", "cmd": "find ./ -type f -ls |grep '10 Sep'"}, {"invocation": "Look for *.jpg files on the system", "cmd": "find / -name \u201c*.jpg\u201d"}, {"invocation": "Replace all newlines from standard input except the last with spaces", "cmd": "sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n/ /g'"}, {"invocation": "Find all files/directories under current directory", "cmd": "find ./"}, {"invocation": "search for directories in the folder \"test\" which end with 5 digits using regular expressions", "cmd": "find ./test -regextype posix-egrep -type d -regex '.*/[0-9]{5}$'"}, {"invocation": "Force create a symbolic link as a file named \"/usr/lib/jvm/default-java\" to \"$default_java_dir\" with verbose output", "cmd": "sudo ln -sTfv \"$default_java_dir\" \"/usr/lib/jvm/default-java\""}, {"invocation": "List all files under current directory with their sizes and paths", "cmd": "find . -type f -printf '%s %p\\n'"}, {"invocation": "Search for files whose name is \"filename\" and whose permissions are 777", "cmd": "find / -perm 777 -iname \"filename\""}, {"invocation": "List all non-empty files under under current directory", "cmd": "find . -type f ! -size 0"}, {"invocation": "Run \"./configure\" with a new environment variable CC set to the full path of the command 'cc'", "cmd": "CC=$(which cc) ./configure"}, {"invocation": "Print lines in \"file1\" that exist in \"file2\"", "cmd": "join -t \" \" -j 1 <(sort file1) <(sort file2)"}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -delete"}, {"invocation": "Recursively change the owner of all \"*.txt\" files under \"/mydir\" to \"root\"", "cmd": "find /mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}, {"invocation": "Replace all the mathes to regex '<script type=\"text\\/javascript\" charset=\"utf-8\" src=\"file.js\"><\\/script>.*' with '<script type=\"text\\/javascript\" charset=\"utf-8\" src=\"file2.js\"><\\/script>' in all HTML files under $DIR directory tree modifying the files in-place", "cmd": "find $DIR -type f -name '*.html' -exec sed -i 's/.*<script type=\"text\\/javascript\" charset=\"utf-8\" src=\"file.js\"><\\/script>.*/<script type=\"text\\/javascript\" charset=\"utf-8\" src=\"file2.js\"><\\/script>/g' {} \\;"}, {"invocation": "Find every JavaScript file in the wordpress directory", "cmd": "find wordpress -maxdepth 1 -name '*js'"}, {"invocation": "display all the directories in the current folder which are atleast one level deep", "cmd": "find . -mindepth 1 -type d -print0"}, {"invocation": "Find all .txt files under the current directory and below", "cmd": "find . -name \"*.txt\""}, {"invocation": "Find all file.ext files/directories under current directory with \"FooBar\" in their paths and copy them into the current directory", "cmd": "find . -name \"file.ext\"| grep \"FooBar\" | xargs -i cp -p \"{}\" ."}, {"invocation": "Create a symbolic lnk named \"$1/link\" to \"$dir\"", "cmd": "ln -s \"$dir\" \"$1/link\""}, {"invocation": "Change directory to \"$dir1\" and resolve any symlinks in the resulting path", "cmd": "cd -P \"$dir1\""}, {"invocation": "Print a space separated list of numbers from 1 to 10", "cmd": "seq 10 | xargs"}, {"invocation": "Find all subdirectories of the current directory except hidden ones", "cmd": "find -maxdepth 1 -type d ! -name \".*\""}, {"invocation": "force delete all the files which have not been accessed in the last 240 hours in the temp folder", "cmd": "find /tmp/* -atime +10 -exec rm -f {} \\;"}, {"invocation": "find all the files in the file system which have been modified in the last 30*24 hours", "cmd": "find / -mtime -30 -print"}, {"invocation": "Print the base name of the current working directory", "cmd": "basename `pwd`"}, {"invocation": "Go into the first directory whose name contains 1670", "cmd": "cd `ls -d */ | grep 1670`"}, {"invocation": "create directory certs", "cmd": "mkdir certs/"}, {"invocation": "Find root's Ruby files accessed in the last two minutes", "cmd": "find /apps/ -user root -type f -amin -2 -name *.rb"}, {"invocation": "find the type & description of all the regular/normal files in the home folder", "cmd": "find /home -type f -print0 | xargs -0 file"}, {"invocation": "Make directories \"~/foo/bar/baz\", \"~/foo/bar/bif\", and \"~/foo/boo/bang\" as needed", "cmd": "mkdir -p ~/foo/bar/baz ~/foo/bar/bif ~/foo/boo/bang"}, {"invocation": "Read a line from standard input with prompt \"Is this a good question (y/n)? \" and save the response to variable \"answer\"", "cmd": "read -p \"Is this a good question (y/n)? \" answer"}, {"invocation": "Search the system for files named \"findcommandexamples.txt\", ignoring the case", "cmd": "find  / -iname findcommandexamples.txt"}, {"invocation": "Find all files/directories named 'document' in the entire filesystem", "cmd": "find / -name document -print"}, {"invocation": "Number each line in \"/etc/passwd\" as right-justified zero padded to a width of 9", "cmd": "nl -nrz -w9  /etc/passwd"}, {"invocation": "Print the first line of \"filename\" as a hex dump of characters", "cmd": "head -n 1 filename | od -c"}, {"invocation": "Find all *.rpm files/directories under current directory", "cmd": "find . -name '*.rpm'"}, {"invocation": "Find all .txt files in the current directory tree and edit them with `vim'", "cmd": "find . -name \"*.txt\" | xargs vim"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f | xargs ls -ltr | tail -n 1"}, {"invocation": "List all files under current directory matching the regex '.*(c|h|cpp)$'", "cmd": "find -E . -type f -regex '.*(c|h|cpp)$' -exec ls {} \\;"}, {"invocation": "Finds users with X session in system and puts the result into USERS variable", "cmd": "USERS=$(awk '/\\/X/ {print $1}' <(w))"}, {"invocation": "extract 'archive.tar.gz' to /destination", "cmd": "tar xzf archive.tar.gz -C /destination"}, {"invocation": "remove all files that's older than 30 days in '/tmp'", "cmd": "find /tmp -type f -mtime +30 -exec rm -f {} \\;"}, {"invocation": "See the word count of every *.txt file in the home directory", "cmd": "find ~/ -name '*.txt' -print0 | xargs -0 wc -w"}, {"invocation": "search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir", "cmd": "find . -type f -iname \u2018HSTD*\u2019 -daystart -mtime 1 -exec cp {} /path/to new/dir/ \\;"}, {"invocation": "Save system information appended with the current date in 'filename' variable", "cmd": "filename=\"$(uname -a)$(date)\""}, {"invocation": "Search the /path directory tree for files lacking the group writable bit", "cmd": "find /path ! -perm /g+w"}, {"invocation": "Find all files under current directory that were modified more than 1 day ago", "cmd": "find -mtime +1"}, {"invocation": "Find all files named `file1' on the system", "cmd": "find / -name file1"}, {"invocation": "Prints string \"0 1 * * * /root/test.sh\" to the terminal, and append it to file '/var/spool/cron/root'", "cmd": "echo \"0 1 * * * /root/test.sh\" | tee -a /var/spool/cron/root"}, {"invocation": "Print a list of each file with the full path prefix in the current directory tree excluding symbolic links", "cmd": "tree -fi |grep -v \\>"}, {"invocation": "Display differences between file1 and file2 side-by-side.", "cmd": "diff -y file1 file2"}, {"invocation": "Change permissions to 644 recursively only for files", "cmd": "find . -type f -exec chmod 644 {} \\;"}, {"invocation": "Find all directories under current directory and set their permission to 755", "cmd": "find -type d exec chmod 755 {} +"}, {"invocation": "Read a line from standard input and save each word in the bash array variable \"arr\"", "cmd": "read -a arr"}, {"invocation": "Print standard input to standard output line by line, discarding any adjascent duplicate lines.", "cmd": "uniq"}, {"invocation": "find all the files in the folder Musica and display them in a single line null separated", "cmd": "find M\u00fasica/* | egrep -Z \\/\\\\. | xargs -0 echo"}, {"invocation": "Print unique lines of sorted \"File 1\" compared with sorted \"File 2\"", "cmd": "comm -23 \"File 1\" \"File 2\""}, {"invocation": "Search the current directory and all of its sub-directory for any PDF files.", "cmd": "find . -name \"*.pdf\" -print"}, {"invocation": "Extract any line in \"file1\" or \"file2\" which does not appear in the other", "cmd": "comm -3 <(sort file1) <(sort file2)"}, {"invocation": "Counts lines in each *.php file.", "cmd": "wc -l `tree -if --noreport | grep -e'\\.php$'`"}, {"invocation": "show all the \".acc\" files in the folder /home", "cmd": "find /home -type f -name '*.aac'"}, {"invocation": "show all the directories in the current folder", "cmd": "find . -type d"}, {"invocation": "Ping all hosts in file \"ips\" twice", "cmd": "cat ips | xargs -n1 ping -c 2"}, {"invocation": "Read a line of standard input with prompt \"Enter the path to the file: \" and suggestion \"/usr/local/etc/\" and save the response to variable \"FILEPATH\"", "cmd": "read -e -p \"Enter the path to the file: \" -i \"/usr/local/etc/\" FILEPATH"}, {"invocation": "Display all lines containing UTRACE in the current kernel's compile-time config file.", "cmd": "grep UTRACE /boot/config-$(uname -r)"}, {"invocation": "Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.", "cmd": "find . -name tests -prune -o -type f -name '*.php' | xargs wc -l"}, {"invocation": "Recursively set all permissions under \"../tools\" to 777", "cmd": "chmod -R 777 ../tools"}, {"invocation": "Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way", "cmd": "find -d MyApp.app -name Headers -type d -print0 | xargs -0 rm -rf"}, {"invocation": "Create a symbolic link named \"temp\" to \"newtarget\"", "cmd": "ln -s newtarget temp"}, {"invocation": "Print each logged in user's full name", "cmd": "finger | awk 'NR>1{print $2,$3}'"}, {"invocation": "find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in /tmp and /var/tmp folder home folders", "cmd": "find /tmp /var/tmp ~ -type f -size +10M -mtime +60 -ctime -100 -exec file -N -i -- {} + | sed -n 's!: video/[^:]*$!!p'"}, {"invocation": "Finds out what groups a current user has.", "cmd": "groups"}, {"invocation": "Search the current directory tree for executable regular files", "cmd": "find . -type f -executable -exec file {} \\; | grep -wE \"executable|shared object|ELF|script|a\\.out\""}, {"invocation": "ssh into localhost on port 10022", "cmd": "ssh -p 10022 localhost"}, {"invocation": "Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories", "cmd": "find $1 -perm -u+x -exec chmod g+x {} \\;"}, {"invocation": "Find all files and directories whose names end in \".rpm\" and change their permissions to 755", "cmd": "find / -name *.rpm -exec chmod 755 '{}' \\;"}, {"invocation": "Archive \"/home/abc/*\" to \"/mnt/windowsabc\" with human readable output", "cmd": "rsync -avh /home/abc/* /mnt/windowsabc"}, {"invocation": "Create a symbolic link in \"/bar/tmp/\" for each file in directory \"/foo\" that does not start with \"runscript\"", "cmd": "find /foo -maxdepth 1 -type f ! -name 'runscript*' -exec ln -s {} /bar/tmp/ \\;"}, {"invocation": "Find all test1.h files under current directory", "cmd": "sudo find . -name test1.h"}, {"invocation": "Find all directories under /path/to/Dir and set their permission to 755", "cmd": "sudo find /path/to/Dir -type d -print0 | xargs -0 sudo chmod 755"}, {"invocation": "find all the files that have been modified exactly 1 day ago", "cmd": "find -mtime 1"}, {"invocation": "Search the current directory for HTML files whose names begin with \"a\"", "cmd": "find . -maxdepth 1 -name a\\*.html"}, {"invocation": "Gets a job with defined number back to the foreground.", "cmd": "fg 1"}, {"invocation": "Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.", "cmd": "cat -vet file | less"}, {"invocation": "count all the html files having a specifc word in a folder.", "cmd": "find /usr/src -name \"*.html\" -exec grep -l foo '{}' ';' | wc -l"}, {"invocation": "Returns exit code 1 and terminates shell if 'set -e' was applied.", "cmd": "a=$(false)"}, {"invocation": "find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them", "cmd": "find . -type f -atime -1 -exec ls -l {} \\;"}, {"invocation": "Delete all regular files named 'FindCommandExamples.txt' under current directory tree", "cmd": "find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}, {"invocation": "Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"", "cmd": "find . -name \\*.exe -o -name \\*.dll -o -print"}, {"invocation": "Find all regular files under ${path} without following symlinks", "cmd": "find ${path} -P -type f"}, {"invocation": "Print each line in \"file\", \"file2\", and \"file3\" and replace any tabs with spaces", "cmd": "paste file file2 file3 | sed 's/\\t/ /'"}, {"invocation": "delete all files in the home directory which ahve the name core in them", "cmd": "find ~/ -name 'core*' -exec rm {} \\;"}, {"invocation": "find all executable files", "cmd": "find / -executable"}, {"invocation": "Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.", "cmd": "find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"}, {"invocation": "Change permissions to 755 for all subdirectories of the current directory", "cmd": "find . -type d -print | sed -e 's/^/\"/' -e 's/$/\"/' | xargs chmod 755"}, {"invocation": "Find all directories whose name is Tecmint in / directory", "cmd": "find / -type d -name Tecmint"}, {"invocation": "Search all the regular files from the current directory tree for \"search string\"", "cmd": "find . -type f -print -exec grep --color=auto --no-messages -nH \"search string\" \"{}\" \\;"}, {"invocation": "Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c", "cmd": "find b -type f -cmin -5 -exec cp '{}' c \\;"}, {"invocation": "Archive \"/media/10001/music/\" on host \"server\" to local directory \"/media/incoming/music/\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission", "cmd": "rsync -avzru --delete-excluded server:/media/10001/music/ /media/Incoming/music/"}, {"invocation": "print all files in the file system excluding those ending with \".c\"", "cmd": "find / \\! -name \"*.c\" -print"}, {"invocation": "Append the current date to variable 'LBUFFER'", "cmd": "LBUFFER+=\"$(date)\""}, {"invocation": "search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder", "cmd": "find ./ -type f -exec sed -i '' 's#NEEDLE#REPLACEMENT#' *.php {} \\;"}, {"invocation": "search for all the log files in the folder /apps which have not been modified in the last 60 days and which are present in the same file system as that of /apps and delete them", "cmd": "find /apps -xdev -name \"*.log\" -type f -mtime +60 | xargs rm"}, {"invocation": "Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory", "cmd": "find /etc -print0 -name \"*.txt\" | xargs -I {} -0 mv {} {}.bak"}, {"invocation": "search for the word \"nutshell\" or \"Nutshell\" in all the files in the folder book", "cmd": "find /book -print | xargs grep '[Nn] utshell'"}, {"invocation": "delete all the text files from the current folder after user confirmation", "cmd": "find . -name \"*.txt\" -ok rm {} \\;"}, {"invocation": "Find all *.texi files in /usr/local/doc", "cmd": "find /usr/local/doc -name '*.texi'"}, {"invocation": "Find files/directories that are newer than 'foo.txt' under current directory tree", "cmd": "find -newer foo.txt"}, {"invocation": "Find all *.p[lm] files/directories under current directory", "cmd": "find -name '*.p[lm]'"}, {"invocation": "find all files in the current folder which start with pro", "cmd": "find . -name pro\\*"}, {"invocation": "Find files/directories containing 'test' in their names and display the directory contents before the directories themselves", "cmd": "find -name \"*test*\" -depth"}, {"invocation": "Save the canonical filename of the script in variable \"me\"", "cmd": "me=$(readlink --canonicalize --no-newline $0)"}, {"invocation": "print readline bindings that use key code '\\\\e\\\\C-k'", "cmd": "bind -P | grep '\\\\e\\\\C-k'"}, {"invocation": "find a specfic video file in the current directory", "cmd": "find ./ -name \"foo.mp4\" -exec echo {} \\;"}, {"invocation": "find all the files in the current folder and display adding quotations to each file", "cmd": "find . -exec echo -n '\"{}\" ' \\;"}, {"invocation": "Search the current directory tree for files containing \"bash\" in their names", "cmd": "find . -name \"*bash*\" | xargs"}, {"invocation": "Find all files in the current directory tree whose names end with the suffix \".keep.$1\", where $1 is the first command line argument, and remove that suffix", "cmd": "find . -type f -name \"*.keep.$1\" -print0 | xargs -0 rename \"s/\\.keep\\.$1$//\""}, {"invocation": "create directories bravo_dir and alpha_dir", "cmd": "mkdir bravo_dir alpha_dir"}, {"invocation": "find all the files in the folder ./machbook and change the owner of them to the user with id \"184\"", "cmd": "find ./machbook -exec chown 184 {} \\;"}, {"invocation": "Create a report of the contents of a USB drive mounted at find /path/to/drive", "cmd": "find /path/to/drive -type f -exec file -b '{}' \\; -printf '%s\\n' | awk -F , 'NR%2 {i=$1} NR%2==0 {a[i]+=$1} END {for (i in a) printf(\"%12u %s\\n\",a[i],i)}' | sort -nr"}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find . -xtype l"}, {"invocation": "create a list of all files in all subdirectories", "cmd": "find . -type f -exec md5 {} \\;"}, {"invocation": "Search the current directory tree for all regular files matching pattern \"*.rb\"", "cmd": "find . -name \"*.rb\" -type f"}, {"invocation": "Exit the shell immediately if an error is encountered, treat references to unset variables as errors, disable overwriting existing files, and use the first non-zero exit code of a set of piped commands as the exit code of the full set of commands", "cmd": "set -o errexit -o nounset -o noclobber -o pipefail"}, {"invocation": "Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com", "cmd": "dig TXT +short o-o.myaddr.l.google.com @ns1.google.com"}, {"invocation": "Calculate md5 sum of file $item and save it to variable 'md5'", "cmd": "md5=$(md5sum $item | cut -f1 -d\\ )"}, {"invocation": "Exit the shell immediately if an error is encountered", "cmd": "set -e"}, {"invocation": "search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).", "cmd": "find . -size +10000c -size -32000c -print"}, {"invocation": "Finds all the log* files recursively in /myDir that are more than 7 days older and compresses them.", "cmd": "find /myDir -name \"log*\" -ctime +7 -exec bzip2 -zv {} \\;"}, {"invocation": "find all directories that names are 'project.images'", "cmd": "find  / -type d -name \"project.images\""}, {"invocation": "Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths", "cmd": "find $SOURCE -type f -mtime +$KEEP | sed \u2018s#.*/##'"}, {"invocation": "Format space separated fields in \"filename\" as a table", "cmd": "column -t -s' ' filename"}, {"invocation": "Use ANSI escape codes to make \"World\" bold from input \"Hello World!\"", "cmd": "echo 'Hello World!' | sed $'s/World/\\e[1m&\\e[0m/'"}, {"invocation": "Find smallest file in the current directory with find commad", "cmd": "find . -type f -printf \"%s\\t%p\\n\" | sort -n |head -1"}, {"invocation": "split listing of the current directory into pieces per 500 lines named \"outputXYZNNN\"", "cmd": "ls | split -l 500 - outputXYZ."}, {"invocation": "Change permissions to 644 of multiple files with permissions 755", "cmd": "find . -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "find all the files ending with \"rb\" and display the first 10000 lines from these files.", "cmd": "find . -name \"*rb\" -print0 | xargs -0 head -10000"}, {"invocation": "Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.", "cmd": "find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}, {"invocation": "Find the password file between sub-directory level 2 and 4.", "cmd": "find -mindepth 3 -maxdepth 5 -name passw"}, {"invocation": "find all the mp3 files in the current folder and move them to another folder", "cmd": "find . -name \"*.mp3\" -exec mv {} \"/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/\" \\;"}, {"invocation": "Read a single character from standard input into variable \"REPLY\" ignoring backslash escapes and using the prompt \"${1:-Continue?} [y/n]: \"", "cmd": "read -r -n 1 -p \"${1:-Continue?} [y/n]: \" REPLY"}, {"invocation": "display all files in current folder", "cmd": "find ."}, {"invocation": "Delete the line containing \"start\" plus the next 4 lines from standard input", "cmd": "sed '/start/,+4d'"}, {"invocation": "Find all files modified less than 5 minutes ago, and page interactively through the output.", "cmd": "find -cmin -5 | less -R"}, {"invocation": "Prints calendar of $month, $year, and redirects all output to the awk script 'cal.awk', with predefined variable 'day=$day'.", "cmd": "cal $month $year | awk -v day=$day -f cal.awk"}, {"invocation": "Finds strings with text \"searched-string\" recursively in all files of current folder and prints names of files with matched strings.", "cmd": "grep -r -l \"foo\" ."}, {"invocation": "Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory", "cmd": "find /path/to/folders/* -type d  -exec mv {} {}.mbox \\; -exec mkdir {}.mbox/Messages \\; -exec sh -c \"mv {}.mbox/*.emlx {}.mbox/Messages\" \\;"}, {"invocation": "Create a symbolic link named \"$tmpdir/bam\" to the full path of command \"bam2\" found in \"$PATH\"", "cmd": "ln -s \"$(which bam2)\" \"$tmpdir\"/bam"}, {"invocation": "find all the non compressed files in the current directory and compress them.", "cmd": "find . \\! -name \"*.Z\" -exec compress -f {} \\;"}, {"invocation": "list files in /u/bill that were last read from 2 to 6 minutes ago", "cmd": "find /u/bill -amin +2 -amin -6"}, {"invocation": "Count the number of open files for PID \"$PYTHONPID\" every 2 seconds", "cmd": "watch \"ls /proc/$PYTHONPID/fd | wc -l\""}, {"invocation": "Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other", "cmd": "find . -type d -name files -exec chmod ug+rwx,o-rwx {} \\;"}, {"invocation": "Search for files with \"demo\" in their names and \"sitesearch\" in their path names", "cmd": "find . -iname '*demo*' | grep -i sitesearch"}, {"invocation": "Print right aligned numbers from 11 to 24", "cmd": "yes '' | nl -ba | sed -n -e 11,24p -e 24q"}, {"invocation": "Find all files under /var/www directory and set their permission to 644", "cmd": "sudo find /var/www -type f -print0 | xargs -0 chmod 644"}, {"invocation": "See all pages in section 3.", "cmd": "apropos -s 3 ."}, {"invocation": "display all the regular files in the current folder that are bigger than 10KB", "cmd": "find . -type f -size +10k"}, {"invocation": "find all the html files that are acces in the last 24 hours in the current folder", "cmd": "find . -mtime 1 -name \"*.html\" -print"}, {"invocation": "Find all files named 'foo' under your home directory and list them with confirmation prompt", "cmd": "find ~ -type f -name 'foo*' -ok ls -l '{}' ';'"}, {"invocation": "Split \"your_file\" into files with at most 9 lines each", "cmd": "split -l9 your_file"}, {"invocation": "search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them", "cmd": "find . -mtime +180 -exec du -sh {} \\;"}, {"invocation": "Read a single character from standard input with prompt \"Is this a good question (y/n)?\" and save the response to variable \"answer\"", "cmd": "read -n 1 -p \"Is this a good question (y/n)? \" answer"}, {"invocation": "Sort file \"file\" by line", "cmd": "sort file -o !#^"}, {"invocation": "Create new crontab set including $job and only jobs from current crontab that don`t contain $command", "cmd": "cat <(fgrep -i -v \"$command\" <(crontab -l)) <(echo \"$job\") | crontab -"}, {"invocation": "delete all the regular files in the temp folder which have not been modified in the last 24 hours", "cmd": "find /tmp/ -type f -mtime +1 -print0 | xargs -0 -n1 rm"}, {"invocation": "Find all files under current directory and search for 'something' in those files", "cmd": "find . -exec grep something {} +"}, {"invocation": "Set variable GZIP to the full path of command \"gzip\"", "cmd": "GZIP=\"$(which gzip)\""}, {"invocation": "Find all *fink* files/directories under current directory", "cmd": "find . -name \"*fink*\" -print"}, {"invocation": "Search the current directory tree for regular files whose names end in \"log\"", "cmd": "find `pwd` -name \"*log\" -type f"}, {"invocation": "Gets string with MAC addess of network interface eth0.", "cmd": "ifconfig eth0 | grep HWaddr"}, {"invocation": "Check if current system is running in 64-bit addressing.", "cmd": "uname -m | grep '64'"}, {"invocation": "Remove all .mpg files in the /home/luser directory tree", "cmd": "find /home/luser -type f -name '*.mpg' | xargs rm -f"}, {"invocation": "search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago", "cmd": "find /home/you -iname \"*.mp3\" -atime 10 -type -f"}, {"invocation": "finda all the hidden files excluding those having the extension htaccess", "cmd": "find . -type f \\( -iname \".*\" ! -iname \".htaccess\" \\)"}, {"invocation": "Delete all files with indoe number $inum under current directory tree", "cmd": "find . -inum $inum -exec rm {} \\;"}, {"invocation": "Make directory \"backup\"", "cmd": "mkdir backup"}, {"invocation": "Count files accessed more than a month ago", "cmd": "find . -atime +30 -exec ls \\; | wc -l"}, {"invocation": "Search the files from the current directory tree for \"foo\"", "cmd": "find . -exec grep -l foo {} \\;"}, {"invocation": "display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins", "cmd": "find . -prune -name \"*.dat\"  -type f -cmin +60 |xargs -i basename {} \\;"}, {"invocation": "sleep for 5 seconds", "cmd": "sleep 5"}, {"invocation": "Removes 'folderName', and removes all content within if 'folderName' is folder.", "cmd": "rm -rf folderName"}, {"invocation": "Find files/directories that does not have write permssion for group", "cmd": "find /path ! -perm /020"}, {"invocation": "display all directories in the entire file system", "cmd": "find / -type d -print"}, {"invocation": "Calculate the md5 sum of all files in \"/your/dir\" including content and filenames and following symbolic links", "cmd": "grep -aR -e . /your/dir | md5sum | cut -c-32"}, {"invocation": "Find recursively regular files in the current directory tree", "cmd": "find . -type f -print"}, {"invocation": "Calculates process depth of process with id $processid, and stores it in a 'depth' variable.", "cmd": "depth=$(pstree -sA $processid | head -n1 | sed -e 's#-+-.*#---foobar#' -e 's#---*#\\n#g' -eq | wc -l)"}, {"invocation": "Display the mimetype of \"filename\"", "cmd": "file -i filename"}, {"invocation": "Find all files/directories matching the regex pattern \".*\\\\.rb$\" under current directory", "cmd": "find . -regex \".*\\\\.rb$\""}, {"invocation": "Print the terminal file of the users who are logged in with \"admin\" in their name", "cmd": "who |grep -i admin |cut -c10-20"}, {"invocation": "Find the top 5 small files", "cmd": "find . -type f -exec ls -s {} \\; | sort -n  | head -5"}, {"invocation": "Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago", "cmd": "find $OUTPUTDIR -type f -mtime +7 -delete"}, {"invocation": "find all headers file *.h in /nas/projects directory", "cmd": "find /nas/projects -name \"*.h\""}, {"invocation": "Print unique lines of sorted file \"f1\" compared to sorted file \"f2\"", "cmd": "comm -2 -3 f1 f2"}, {"invocation": "Make directories to file \"/full/path/to/file.txt\" as needed", "cmd": "mkdir -p `dirname /full/path/to/file.txt`"}, {"invocation": "Print the icmp sequence number and ping time of each request to \"127.0.0.1\"", "cmd": "ping -c 2 -n 127.0.0.1 | awk -F'[ =]' -v OFS='\\t' 'NR>1 { print $6, $10 }'"}, {"invocation": "Set the bash prompt to \"username@hostname\"", "cmd": "PS1=\"`whoami`@`hostname | sed 's/\\..*//'`\""}, {"invocation": "Unzip all files matching \"/homes/ndeklein/mzml/*.gz\"", "cmd": "ls /homes/ndeklein/mzml/*.gz | xargs -I {} gunzip {}"}, {"invocation": "Print only unique lines in files 'set1' and 'set2'", "cmd": "cat set1 set2 | sort -u"}, {"invocation": "change owner of the file \"file\" to user user_name", "cmd": "chown user_name file"}, {"invocation": "Recursively lists all files in a current folder in long format, sorting by modification time.", "cmd": "ls -ldt $(find .)"}, {"invocation": "display all the regular files in the folder \"$(FOLDER)\" which are modified in the last $(RETENTION)*24 hours and excluding hidden files", "cmd": "find ${FOLDER} -type f ! -name \\\".*\\\" -mtime -${RETENTION}"}, {"invocation": "Save full path of command \"tr\" to variable \"TR\"", "cmd": "TR=`which tr`"}, {"invocation": "download content from \"http://127.0.0.1:8000\" and output to \"index.html\"", "cmd": "curl http://127.0.0.1:8000 -o index.html"}, {"invocation": "List empty directories in the current directory tree", "cmd": "find . -depth -empty -type d"}, {"invocation": "Print \"$PATH\" variable as input to awk script \"rem_dup.awk\" and concatenate the result with \":\"", "cmd": "echo $PATH | awk -F: -f rem_dup.awk | paste -sd:"}, {"invocation": "Display the contents of /var/log/syslog one page at a time, pausing for user interaction between each.", "cmd": "more /var/log/syslog"}, {"invocation": "Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields", "cmd": "cat log | tr -s [:blank:] |cut -d' ' -f 3-"}, {"invocation": "Find all the .c files in the current directory tree that contain the string \u2018stdlib.h\u2019", "cmd": "find . -name \u2018*.c\u2019 | xargs egrep stdlib.h"}, {"invocation": "Remove files modified at least five days ago in directory trees /path/to/files*", "cmd": "find /path/to/files* -mtime +5 -exec rm {} \\;"}, {"invocation": "Print A record for domain 'domain.' from 'ns1.newnameserver' nameserver", "cmd": "dig @ns1.newnameserver domain. a"}, {"invocation": "search for all the files in the current folder and sort them in the order of their depth and display the file names", "cmd": "find -type d -printf '%d\\t%P\\n' | sort -r -nk1 | cut -f2-"}, {"invocation": "Find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning", "cmd": "find / -user root -iname \"*.txt\" | head"}, {"invocation": "Find files modified in last 7 days", "cmd": "find . -mtime -7 -type f"}, {"invocation": "Find *.html files in the current directory tree that were modified 7 days ago", "cmd": "find . -mtime 7 -name \"*.html\" -print"}, {"invocation": "Find all regular .abc files under and below /the/path and rename them prefixing their names with \"version_1\"", "cmd": "find /the/path -type f -name '*.abc' -execdir rename 's/\\.\\/(.+)\\.abc$/version1_$1.abc/' {} \\;"}, {"invocation": "SSH with parameters specified in \"$@\" using key file \"~/.ssh/gitkey_rsa\"", "cmd": "ssh -i ~/.ssh/gitkey_rsa \"$@\""}, {"invocation": "Move all files from \"src/test/\" to \"dest\" displaying progress", "cmd": "rsync -a --progress --remove-source-files src/test/ dest"}, {"invocation": "Replace the leading spaces in the output of \"history\" with periods", "cmd": "history | sed 's/^ */&\\n/; :a; s/ \\(.*\\n\\)/.\\1/; ta; s/\\n//'"}, {"invocation": "set variable \"uname_m\" to machine architecture, ie. x86_64", "cmd": "uname_m=`uname -m`"}, {"invocation": "Find all files in the current directory recursively with \"linkin park\" in their names and copy them to /Users/tommye/Desktop/LP", "cmd": "find . -type f -iname \"*linkin park*\" -exec cp -r {} /Users/tommye/Desktop/LP \\;"}, {"invocation": "Print \"I am USER and the program named ls is in LS_PATH\" where \"USER\" is the current user's user name and \"LS_PATH\" is the full path of the command \"ls\"", "cmd": "echo I am $(whoami) and the program named ls is in $(which ls)."}, {"invocation": "find all the php files in current folder and search for multiple patterns in these files", "cmd": "find -name '*.php' -exec grep -li \"fincken\" {} + | xargs grep -l \"TODO\""}, {"invocation": "remove all the files in the folder \"myfiiles\" which have not been accessed in the last 30*24 hours", "cmd": "find /myfiles -atime +30 -exec rm {} ;"}, {"invocation": "display all the details of empty files in current folder", "cmd": "find . -size 0 -printf '%M %n %u %g %s %Tb\\n \\b%Td %Tk:%TM %p\\n'"}, {"invocation": "Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.", "cmd": "find . -atime +7 -o -size +20480 -print"}, {"invocation": "display all the regular/normal files in a folder", "cmd": "find ./subdirectory/ -type f"}, {"invocation": "display all the files in the current directory excluding the paths \"targert\", \"tools\", \"git\"", "cmd": "find . \\( ! -path \"*target*\" -a ! -path \"*tools*\" -a ! -path \"*.git*\" -print \\)"}, {"invocation": "Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters.", "cmd": "kill -s WINCH $$"}, {"invocation": "find all the files in the entire file system which belong to the group \"staff\"", "cmd": "find / -group staff -print"}, {"invocation": "search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.", "cmd": "var=\"$(find . -name 'gen*.bt2')\""}, {"invocation": "Recursively change all permissions under \"theDirectory/\" to 777(read,write,execute for all users)", "cmd": "sudo chmod -R 777 theDirectory/"}, {"invocation": "Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"1\" [1]=\"2\")", "cmd": "false | true"}, {"invocation": "Print the last file extension from standard input", "cmd": "sed 's/^/./' | rev | cut -d. -f1  | rev"}, {"invocation": "Search the /root directory recursively for the regular file named \"myfile\" ignoring /root/work/", "cmd": "find /root/ -path '/root/work' -prune -o -name myfile -type f -print"}, {"invocation": "find  case-insensitive StringBuffer in all *.java files", "cmd": "find . -type f -name \"*.java\" -exec grep -il string {} \\;"}, {"invocation": "Print onlt last slash-separated field from $PATH value", "cmd": "echo \"$PATH\" | rev | cut -d\"/\" -f1 | rev"}, {"invocation": "find all the directories with the name \"DIRNAME\" in the current folder and force delete them", "cmd": "find . -type d -name \u201cDIRNAME\u201d -exec rm -rf {} \\;"}, {"invocation": "Find recursively all files under current directory tree that contain a colon in the filename", "cmd": "find . -name \\*\\:\\*"}, {"invocation": "Archive \"/local/path/some_file\" to \"/some/path\" on host \"server.com\" authenticating as user \"usr\", compress data during transmission, show progress details.", "cmd": "rsync -avz --progress local/path/some_file usr@server.com:\"/some/path/\""}, {"invocation": "Read a line of standard input into variable \"_command\" with the prompt as the current working directory followed by \"$\"", "cmd": "read -p \"`pwd -P`\\$ \" _command"}, {"invocation": "Find all files/directories named 'articles.jpg' under current directory tree", "cmd": "find . -name \"articles.jpg\""}, {"invocation": "Find all files/directories under current directory", "cmd": "find -print0 | xargs -0"}, {"invocation": "Change the owner to \"owner\" and group to \"nobody\" of \"public_html\"", "cmd": "chown owner:nobody public_html"}, {"invocation": "Archive \"/path/to/files\" to \"/path\" on host \"user@targethost\" with elevated permission on the remote host", "cmd": "rsync -av --rsync-path=\"sudo rsync\" /path/to/files user@targethost:/path"}, {"invocation": "Archive \"_vimrc\" to \"~/.vimrc\" suppressing non-error messages and compressing data during transmission", "cmd": "rsync -aqz _vimrc ~/.vimrc"}, {"invocation": "display all directories in current folder", "cmd": "find . -type d -print0"}, {"invocation": "Move \"$PHANTOM_JS\" to \"/usr/local/share\" directory", "cmd": "sudo mv $PHANTOM_JS /usr/local/share"}, {"invocation": "Change directory to \"/lib/modules/\" of the current kernel release", "cmd": "cd /lib/modules/$(uname -r)/"}, {"invocation": "Search for the regex ... in the manual of the find command", "cmd": "man find | grep ..."}, {"invocation": "Gets IP address of 'eth0' network interface.", "cmd": "ifconfig eth0 | awk '/inet /{sub(/[^0-9]*/,\"\"); print $1}'"}, {"invocation": "Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names", "cmd": "find /home/folder1/*.txt -type f | awk -F '.txt' '{printf \"ln -s %s %s_CUSTOM_TEXT.txt\\n\", $0, $1}'"}, {"invocation": "Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.", "cmd": "x=$(grep \"$(dirname \"$path\")\" file)"}, {"invocation": "Print all files that exceed 1000 blocks and were modified at least a month ago", "cmd": "find / -size +1000 -mtime +30 -exec ls -l {} \\;"}, {"invocation": "Save the system load average for the past 1 minute of the currently logged in user to variable 'proc_load_average'", "cmd": "proc_load_average=$(w | head -1 | cut -d\" \" -f12 | cut -d\",\" -f1-2 | tr ',' '.')"}, {"invocation": "Delete all the files found in the current directory tree whose names begin with \"heapdump\"", "cmd": "find . -name heapdump* -exec rm {} \\ ;"}, {"invocation": "find regular/normal files in the current folder", "cmd": "find -type f"}, {"invocation": "Counts lines in file fileName ignoring empty lines and lines with spaces only.", "cmd": "awk '!/^[[:space:]]*$/{++x} END{print x}' filename"}, {"invocation": "recursively finds all files newer than a date", "cmd": "find . -type f -newermt \"$(date '+%Y-%m-%d %H:%M:%S' -d @1494500000)\""}, {"invocation": "find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces", "cmd": "find . -type f -name \"*.pl\" -print0"}, {"invocation": "Counts lines of /dir/file.txt file.", "cmd": "cat /dir/file.txt | wc -l"}, {"invocation": "Creates temporary file in TMPDIR folder or /tmp/ if TMPDIR is not defined, named by template ${tempname}.XXXXXX, and saves path to new file in  a TMPPS_PREFIX variable.", "cmd": "TMPPS_PREFIX=$(mktemp \"${TMPDIR:-/tmp/}${tempname}.XXXXXX\")"}, {"invocation": "Search the current directory tree for files and directories whose names begin with \"pro\"", "cmd": "find . -name pro\\*"}, {"invocation": "Print absolute path of java executable", "cmd": "readlink -f $(which java)"}, {"invocation": "display all files ending with \".ext\" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items", "cmd": "find . -name \\*.ext | cat - list.txt | sort | uniq -u"}, {"invocation": "create a symbolic link named \"www\" to file \"www1\"", "cmd": "ln -s www1 www"}, {"invocation": "Change the permission to 755 for all directories under current directory", "cmd": "find . -type d | xargs chmod -v 755"}, {"invocation": "Find all files/directories under current directory and print their paths", "cmd": "find . -exec echo {} \\+"}, {"invocation": "Find all 100MB+ files and delete them", "cmd": "find / -size +100M -exec rm -rf {} \\;"}, {"invocation": "Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*'", "cmd": "find -name '.?*' -prune -o \\( -type f -print0 \\)"}, {"invocation": "Execute \"awk -F, '$1 ~ /F$/'\" on contents of \"file.gz\"", "cmd": "zcat file.gz | awk -F, '$1 ~ /F$/'"}, {"invocation": "Print a colon-separated list of all directories from the $root directory tree, except those matching pattern \".[a-z]*\"", "cmd": "find \"$root\" -name \".[a-z]*\" -prune -o -type d -printf '%p:'"}, {"invocation": "Find all files/directories under current directory and print their paths", "cmd": "find . -exec echo {} \";\""}, {"invocation": "Disables shell option 'nullglob'.", "cmd": "shopt -u nullglob"}, {"invocation": "Gets IP addresses of all active network interfaces on host.", "cmd": "ifconfig | awk -F':' '/inet addr/&&!/127.0.0.1/{split($2,_,\" \");print _[1]}'"}, {"invocation": "Find regular files under / that contain \"stringtofind\" and clear out their contents", "cmd": "find / -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '/./d' {} \\;"}, {"invocation": "Gets IP address of first listed network interface in system.", "cmd": "ifconfig | grep -E \"([0-9]{1,3}\\.){3}[0-9]{1,3}\" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d:"}, {"invocation": "Recursively change the user and group of all files in \"/var/lib/jenkins\" to \"root\"", "cmd": "chown -R root:root /var/lib/jenkins"}, {"invocation": "Save all directories under the current directory as a comma separated list in variable \"FOLDERS\"", "cmd": "FOLDERS=$(find $PWD -type d | paste -d, -s)"}, {"invocation": "search for text files in the current folder which do not have write access to others", "cmd": "find . -type f \\( -iname \"*.txt\" ! -perm -o=w \\)"}, {"invocation": "Change all file permissions to 664 and all directory permissions to 775 in directory tree \"htdocs\"", "cmd": "find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +"}, {"invocation": "Find regular files with permissions less than 111", "cmd": "find -perm -111 -type f"}, {"invocation": "Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones", "cmd": "comm <(sort f1.txt) <(sort f2.txt)"}, {"invocation": "Search the directory tree /tmp for regular files using zero delimiter for output", "cmd": "find /tmp -type f -print0"}, {"invocation": "Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.", "cmd": "find . -mtime -1 -prin"}, {"invocation": "To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:", "cmd": "find .  -maxdepth 1 -type d -iname \".[^.]*\" -print0 | xargs -I {} -0 rm -rvf \"{}\""}, {"invocation": "find regular  file named foo.txt under root / directory.", "cmd": "find / -name foo.txt -type f"}, {"invocation": "display all the files in the current folder which have been modified after the files \"/bin/sh\"", "cmd": "find . -newer /bin/sh"}, {"invocation": "Find files which were changed in the past 1 hour", "cmd": "find . -cmin -60"}, {"invocation": "Compose filepath as folder path where file $f is located, and lowercase filename of $f file, and save it in 'g' variable", "cmd": "g=`dirname \"$f\"`/`basename \"$f\" | tr '[A-Z]' '[a-z]'`"}, {"invocation": "Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.", "cmd": "find / -fstype ext3 -name zsh -ls"}, {"invocation": "Print full date of yesterday", "cmd": "echo `date -v-1d +%F`"}, {"invocation": "Set permissions to ug=rw,o= for files under the $d directory tree", "cmd": "find $d -type f -exec chmod ug=rw,o= '{}' \\;"}, {"invocation": "Find all files/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory", "cmd": "find -mindepth 10 -iname $TARGET"}, {"invocation": "Read a line from standard input and save each word in the bash array variable \"first\"", "cmd": "read -a first"}, {"invocation": "Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded", "cmd": "find \"${searchpath}\" -type f -print0 | xargs -0 grep -l -E \"${string1}.*${string2}.*${string3}\""}, {"invocation": "Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt", "cmd": "find . -type f ! -regex \".*/\\(textfile.txt\\|backup.tar.gz\\|script.php\\|database.sql\\|info.txt\\)\" -delete"}, {"invocation": "Change permissions of all regular files from the current directory tree to 644", "cmd": "find . -type f -exec chmod 644 {} +"}, {"invocation": "Find all *.ogg (case insensitive) files/directories under your home directory", "cmd": "find $HOME -iname '*.ogg'"}, {"invocation": "beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line", "cmd": "tac error.log | awk '{if(/2012/)print;else exit}'"}, {"invocation": "search for the file \"process.txt\" in the current directory", "cmd": "find . -name \"process.txt\""}, {"invocation": "Write the output of \"false\" to standard output and to \"/dev/null\"", "cmd": "false | tee /dev/null"}, {"invocation": "search for files starting with memo and which belong to the user ann in the folder /work", "cmd": "find /work -name 'memo*' -user ann -print"}, {"invocation": "Print 3 newline separated \"y\"s", "cmd": "yes | head -3"}, {"invocation": "Print the current user name associated with standard input", "cmd": "who -m | awk '{print $1;}'"}, {"invocation": "Remove \"_dbg\" from all file or directory names under the current directory", "cmd": "rename _dbg.txt .txt **/*dbg*"}, {"invocation": "Find .jpg files owned by user daniel in the current directory and its sub-directories.", "cmd": "find . -user daniel -type f -name *.jpg"}, {"invocation": "Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree", "cmd": "find . -type f -name '*.txt' | xargs --replace=FILE sed --in-place 's/foo/baz/' FILE"}, {"invocation": "find all the text files in the current folder", "cmd": "find . \u2014 name \"*.txt\" \u2014 print"}, {"invocation": "Print second section of line <line> where sections are separated by one or more whitespace.", "cmd": "echo -e \"<line>\" | sed 's:\\s\\+:\\t:g' | cut -f2"}, {"invocation": "Print the contents of \"n\"", "cmd": "cat n"}, {"invocation": "Copy file linked to by \"bar.pdf\" to \"bar.pdf\"", "cmd": "cp --remove-destination `readlink bar.pdf` bar.pdf"}, {"invocation": "search for all the c files in the current folder", "cmd": "find . -name \\*.c -print"}, {"invocation": "Change owner and group of \"script.sh\" to \"root\"", "cmd": "chown root:root script.sh"}, {"invocation": "Print only printable characters from \"/dev/urandom\"", "cmd": "cat /dev/urandom | tr -dC '[:graph:]'"}, {"invocation": "Remove all files from the current directory tree whose names end in \"~\"", "cmd": "find -iname '*~' | xargs rm"}, {"invocation": "Recursively copy all files and directories matching \"*ela*L1*TE*\" in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user \"dalvarado\", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.", "cmd": "scp -Bpqr /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/*ela*L1*TE* dalvarado@localhost:/var/www/html/sbo/2010/teacher/ela/level1"}, {"invocation": "Split the first 100 lines of \"datafile\" into files with at most 1700 bytes each preserving lines", "cmd": "sed 100q datafile | split -C 1700 -"}, {"invocation": "Reports count of characters in the value of ${FOO_NO_EXTERNAL_SPACE} variable as follows:  \"length(FOO_NO_EXTERNAL_SPACE)==<counted number of characters>\"", "cmd": "echo -e \"length(FOO_NO_EXTERNAL_SPACE)==$(echo -ne \"${FOO_NO_EXTERNAL_SPACE}\" | wc -m)\""}, {"invocation": "Keep only the last two hyphen-separated sections of \"abc-def-ghi-jkl\"", "cmd": "echo \"abc-def-ghi-jkl\" | rev | cut -d- -f-2 | rev"}, {"invocation": "display all the regular files in current folder excluding all the directories and all the sub directories having \"normal\" in their name", "cmd": "find . \\( \\( -path \"\\.?.*\" -type d \\) -o -path \"*normal*\" \\) -prune -o \\( -type f \\) -print"}, {"invocation": "Find all *.plist files/directories under current directory", "cmd": "find . -name \\*.plist"}, {"invocation": "Prints path to the target of symbolic link 'relative/path/to/file'", "cmd": "dirname `readlink -e relative/path/to/file`"}, {"invocation": "Remove trailing white spaces from all files under dir directory and keep backups of the originals", "cmd": "find dir -type f -print0 | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\""}, {"invocation": "Read a line from standard input into variable \"text\" with the prompt \" Enter Here: \"", "cmd": "read -p \" Enter Here : \" text"}, {"invocation": "List the names of the directories in current directory without going into sub-directories", "cmd": "find . -maxdepth 1 -mindepth 1 -type d -printf '%f\\n'"}, {"invocation": "Report file system containing the current directory disk usage in kilobytes.", "cmd": "df -k ."}, {"invocation": "Grab the output of \"basename\" (the last slash-separated section of variable \"filename\") and echo it to stdout, which basename would do by default anyway.", "cmd": "echo `basename \"$filename\"`"}, {"invocation": "Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output", "cmd": "find /var/www/ -type f -name \"*\" -size +100M -exec du -h '{}' \\;|grep -v /download/"}, {"invocation": "Display the 'bash' manpage, going to the first occurence of \\' sequence of characters.", "cmd": "man bash | less -Ip \"\\\\\\'\""}, {"invocation": "kill all active jobs", "cmd": "jobs -p | xargs kill -9"}, {"invocation": "display all the normal/regular files in the current folder", "cmd": "find . -type f"}, {"invocation": "Numerically sort each line in file \"bb\" and output the result to console from greatest value to least value", "cmd": "sort -nr bb"}, {"invocation": "Find files/directories not changed in two weeks under /dev/shm", "cmd": "find /dev/shm /tmp -type f -ctime +14"}, {"invocation": "removes last N lines from file.txt", "cmd": "head --lines=-N file.txt"}, {"invocation": "Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.", "cmd": "info bash 'Basic Shell Features' 'Shell Expansions' 'Filename Expansion' 'Pattern Matching'"}, {"invocation": "find all files in the current folder which end with macs", "cmd": "find -name '*macs'"}, {"invocation": "Prints day of first Tuesday in a month.", "cmd": "cal | awk 'NR>2 && NF>4 {printf \"%02d\\n\",$(NF-4);exit}'"}, {"invocation": "Delete all files/directories under current directory tree excluding '.gitignore' files/directories and files/directories matching the patterns '.git' or '.git/*' in their paths", "cmd": "find . ! -name '.gitignore' ! -path '.git' ! -path '.git/*' -exec rm -rf {} \\;"}, {"invocation": "Copy \"source\" recursively to \"destination\" excluding \"path1/to/exclude\" and \"path2/to/exclude\"", "cmd": "rsync -av --exclude='path1/to/exclude' --exclude='path2/to/exclude' source destination"}, {"invocation": "List all .jpg files in the home directory tree", "cmd": "find . -name \"*.jpg\" -exec ls {} \\;"}, {"invocation": "find  files which full path name is /tmpfoo/bar under foo directory and print", "cmd": "find foo -path /tmp/foo/bar -print"}, {"invocation": "Find files and directories whose owner is daniel", "cmd": "find . -user daniel"}, {"invocation": "Make directory \"subdirectory\"", "cmd": "mkdir subdirectory"}, {"invocation": "find  files which  full path name is /tmp/foo/bar under foo directory and print", "cmd": "find foo -path /tmp/foo/bar -print"}, {"invocation": "Print every two lines in \"file\" on a single line separated by a space", "cmd": "cat file | paste -d\\ - - -"}, {"invocation": "search for a word in all the regular files in the current folder.", "cmd": "find -type f -print0 | xargs -r0 grep -F 'example'"}, {"invocation": "Find all files under /somefolder matching the pattern expanded by $FILE_PATTERN in thier names", "cmd": "find /somefolder -type f -name $FILE_PATTERN"}, {"invocation": "Log in using key file \"./device_id.pem\" as user \"deviceuser\" on host \"middle.example.org\" and port 2222", "cmd": "ssh -i ./device_id.pem -p 2222 deviceuser@middle.example.org"}, {"invocation": "Find recursively the files named \"file\" in the current directory ignoring all .git directories", "cmd": "find . -name .git  -prune -o -name file  -print"}, {"invocation": "display all directories in current folder excluding those that are present in .git folder", "cmd": "find . -iregex '.*/.git/.*' -prune -o -type d -name 'CVS'"}, {"invocation": "Counts non-empty lines in file fileName.", "cmd": "cat fileName | grep -v ^$ | wc -l"}, {"invocation": "Remove all files from the system whose path names contain \"GUI\"", "cmd": "find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}, {"invocation": "Find recursively all files changed within the last 5 minutes starting from directory b", "cmd": "find b -cmin -5"}, {"invocation": "Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes.", "cmd": "find /usr -type d -name My\\ Files -exec rsync -avR '{}' /iscsi \\;"}, {"invocation": "Change the owner to \"user\" and group to \"group\" of files \"file ...\"", "cmd": "chown user:group file ..."}, {"invocation": "Prints directory where the executing script ($0) is located.", "cmd": "`dirname $0`"}, {"invocation": "Find all files in \"/home/\" which contain \"string1\", \"string2\" or the host name in its filename", "cmd": "find /home/ -type f -regextype posix-extended -regex \".*(string1|string2|$(hostname)).*\""}, {"invocation": "find all the perl files in the current folder", "cmd": "find . -type f -name \"*.pl\""}, {"invocation": "Split \"file.txt\" into files of at most 20 lines each with a prefix \"new\"", "cmd": "split -l 20 file.txt new"}, {"invocation": "Change permissions of \"/dvtcolorconvert.rb\" to 755", "cmd": "sudo chmod 755 /dvtcolorconvert.rb"}, {"invocation": "List all files under current directory that are greater than 10MB in size", "cmd": "find . -size +10M -exec ls -ld {} \\;"}, {"invocation": "find all the files in the file system which belong to the groep \"users\" and with the name \"dateiname\"", "cmd": "find / -group users -iname \"Dateiname\""}, {"invocation": "Find all files/directories under current directory", "cmd": "find ."}, {"invocation": "display all the files in the home folder which end with \".xbm\"", "cmd": "find ~ -name '*.xbm'"}, {"invocation": "Split \"filename\" into files of at most 200000 lines each", "cmd": "split -l 200000 filename"}, {"invocation": "Delete all regular files under $DIR directory tree that have been modified before file $a", "cmd": "find \"$DIR\" -type f \\! -newer \"$a\" -exec rm {} +"}, {"invocation": "find all the files in current directory of size smaller than 10KB.", "cmd": "find . -size -10k"}, {"invocation": "Search the files from the current directory tree for \"chrome\"", "cmd": "find . | xargs grep 'chrome'"}, {"invocation": "Search for \"www.athabasca\" in all files under current directory", "cmd": "find . -exec grep \"www.athabasca\" '{}' \\; -print"}, {"invocation": "replaces the last occurrence of 'a' with 'c' in file", "cmd": "tac file | awk '/a/ && !seen {sub(/a/, \"c\"); seen=1} 1' | tac"}, {"invocation": "Find & calculate total number of worlds in all .txt file from current directory", "cmd": "find .  -type f  -name '*.txt' -exec wc -w {} \\; | awk '{total += $1} END{print total}'"}, {"invocation": "Sets shell options 'globstar', 'dotglob' and 'nullglob'.", "cmd": "shopt -s globstar nullglob dotglob"}, {"invocation": "search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours", "cmd": "find /etc/ -type f -mtime -1"}, {"invocation": "Search for line number 111 in file \"active_record.rb\"", "cmd": "nl -ba  -nln  active_record.rb  | grep '^111 '"}, {"invocation": "List all *.png files/directories under /home/kibab directory", "cmd": "find /home/kibab -name '*.png' -exec echo '{}' ';'"}, {"invocation": "Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths", "cmd": "find . -type f -ctime -3 -printf \"%C@ %p\\n\" | sort | tail -n 5 | sed 's/[^ ]* \\(.*\\)/\\1/'"}, {"invocation": "search for multiple files in the current folder", "cmd": "find . -name photoA.jpg photoB.jpg photoC.jpg"}, {"invocation": "Find all the files which are accessed in last 1 hour", "cmd": "find / -amin -60"}, {"invocation": "Archive \"/my/dir\" on host \"server\" as user \"user\" to the current local directory excluding files ending in \".svn\"", "cmd": "rsync -av --exclude '*.svn' user@server:/my/dir ."}, {"invocation": "Request that the master ssh connection \"officefirewall\" exits", "cmd": "ssh -O exit officefirewall"}, {"invocation": "Delete all hidden files under $some_directory", "cmd": "find \"$some_directory\" -type f -name '.*' -delete"}, {"invocation": "Go into the first directory whose name contains 1670", "cmd": "cd $(ls -d */ | grep 1670)"}, {"invocation": "display all the files in the current folder in a single line separated by null command", "cmd": "sudo find . -print0"}, {"invocation": "Print the ping time number only of a single request to \"8.8.8.8\"", "cmd": "ping -c 1 8.8.8.8 |  awk 'FNR == 2 { print $(NF-1) }' | cut -d'=' -f2"}, {"invocation": "find all text files in the current folder", "cmd": "find -name \"*.txt\""}, {"invocation": "Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.", "cmd": "find \"$1\" -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"}, {"invocation": "Find and delete all core files in the user's home directory and below.", "cmd": "find ~/ -name 'core*' -exec rm {} \\"}, {"invocation": "Find all files under /path and below writable by `group' and `other'", "cmd": "find /path -perm -022"}, {"invocation": "Create intermediate directories \"x\" and \"p\" as required and create \"q\"", "cmd": "mkdir -p x/p/q"}, {"invocation": "Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them", "cmd": "find . -name \"sample*_1.txt\" | sed -n 's/_1\\..*$//;h;s/$/_out/p;g;s/$/_1.txt/p;g;s/$/_2.txt/p' | xargs -L 3 echo program"}, {"invocation": "Find all files starting from / whose names end with \".rpm\" and change their permissions to 755", "cmd": "find / -name *.rpm -exec chmod 755 '{}' \\;"}, {"invocation": "Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter", "cmd": "find /mnt/naspath -name .snapshot -prune -o \\( -type f -mtime 0 -print0 \\)"}, {"invocation": "Print number of bytes in $file.", "cmd": "cat $file | wc -c"}, {"invocation": "Print which files differ in \"folder1\" and \"folder2\" excluding \"node_modules\" recursively, output in two columns, and paginate the output", "cmd": "diff -rqyl folder1 folder2 --exclude=node_modules"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn -exec rm -rf {} \\;"}, {"invocation": "Compress all \".txt\" files in the current directory tree with gzip", "cmd": "find . -type f -name \"*.txt\" -exec gzip {} \\;"}, {"invocation": "Search for first match of the case insensitive regex 're' in all *.coffee files under current directory", "cmd": "find . -name \\*.coffee -exec grep -m1 -i 're' {} \\;"}, {"invocation": "Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000", "cmd": "find /var/tmp -uid 1000"}, {"invocation": "Remove all files and directories in the current directory by answering with \"y\" to all prompts", "cmd": "yes | /bin/rm -i *"}, {"invocation": "ssh into localhost on port 4444", "cmd": "ssh -p 4444 localhost"}, {"invocation": "Read a line from standard input and save response in variable \"VARNAME\"", "cmd": "read VARNAME"}, {"invocation": "Find recursively all regular files in the current directory whose names contain \".\"", "cmd": "find . -type f -a -name '*.*'"}, {"invocation": "find files with pattern` '*.h' and print comparison between file and /tmp/master directory", "cmd": "find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'"}, {"invocation": "Find all files/directories containing 'foo' in their names under current directory tree", "cmd": "find . -name '*foo*'"}, {"invocation": "Find all .* files excluding list_files (case insensitive) under current directory", "cmd": "find . -iname \".*\" \\! -iname 'list_files'"}, {"invocation": "Search the regular files of the current directory tree for string \"whatever\"", "cmd": "find . -type f | xargs -L 100 grep whatever"}, {"invocation": "find all the files in the entire file system which belong to the user \"roger\"", "cmd": "find / -user roger -print"}, {"invocation": "Delete all files named '-F' under current directory tree", "cmd": "find . -name \"-F\" -exec rm {} \\;"}, {"invocation": "Print a line of 100 random characters either \".\" or \" \"", "cmd": "cat /dev/urandom | tr -dc '. ' | fold -w 100 | head -1"}, {"invocation": "split file \"your_file\" into pieces per 9 lines", "cmd": "split -l9 your_file"}, {"invocation": "Find all the files on the system that have been accessed within the last hour", "cmd": "find / -amin -60"}, {"invocation": "Print the path composed of the current working directory and the directory containing \"$0\"", "cmd": "echo `pwd`/`dirname $0`"}, {"invocation": "Find files in entire file system with at least 644 permissions", "cmd": "find / -perm -u+rw,g+r,o+r"}, {"invocation": "Search the ~/Books directory recursively for regular files named \"Waldo\"", "cmd": "find ~/Books -type f -name Waldo"}, {"invocation": "Show file type information for files in /usr/bin", "cmd": "find /usr/bin | xargs file"}, {"invocation": "Create a symbolc link in the current directory to \"target\"", "cmd": "ln -s target"}, {"invocation": "Print A record for domain 'domain.' from 8.8.8.8 nameserver", "cmd": "dig @8.8.8.8 domain. a"}, {"invocation": "Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format", "cmd": "find  / -type d -iname \"project.images\" -ls"}, {"invocation": "Unzip and extract \"userAgent=[^=]*'\" from \"input.gz\"", "cmd": "zcat input.gz | grep -o 'userAgent=[^=]*' | sed 's/ [^ ]*$//'"}, {"invocation": "Remove all files in and below the current directory whose names begin with \"not\"", "cmd": "find . -name not\\* | tr \\\\n \\\\0 | xargs -0 rm"}, {"invocation": "Find all directories whose status were changed $FTIME days ago", "cmd": "find . -type d -ctime $FTIME"}, {"invocation": "Recursively change the owner and group of \"subdir3\" to \"user3\"", "cmd": "chown user3:user3 -R subdir3"}, {"invocation": "Save the numerically greater value of \"$kf\" and \"$mp\" into variable \"gv\"", "cmd": "gv=$(echo -e $kf'\\n'$mp | sort -t'.' -g | tail -n 1)"}, {"invocation": "Answer \"n\" to any prompts in the interactive recursive removal of \"dir1\", \"dir2\", and \"dir3\"", "cmd": "yes n | rm -ir dir1 dir2 dir3"}, {"invocation": "Remove all *.log files from the current directory tree", "cmd": "find ./ -name '*.log' | xargs rm"}, {"invocation": "change the extension of all the \".lst\" files in the current folder to \"a.lst\"", "cmd": "find -name \u2018*.lst\u2019 -exec rename .lst a.lst {} \\;"}, {"invocation": "removes the 4th-from to 6th-from last lines in file", "cmd": "tac filename | sed 4,6d | tac"}, {"invocation": "Unzip and extract \"*\\(userAgent=[^=]*\\) [^ =]\\+=.*\" from \"input.gz\"", "cmd": "zcat input.gz | sed -n 's/.*\\(userAgent=[^=]*\\) [^ =]\\+=.*/\\1/p'"}, {"invocation": "find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1", "cmd": "find . -name \\? -mtime -1"}, {"invocation": "Find files that have a modification time of a day ago", "cmd": "find / -mtime 1"}, {"invocation": "lines.txt contains a list of line numbers, one entry per line - output only these lines from text.txt omitting the rest of the file.", "cmd": "cat -n text.txt | join -o2.2 lines.txt -"}, {"invocation": "long list al the files in the current directory which have read permission to the group", "cmd": "find . -perm -g=r -type f -exec ls -l {} \\;"}, {"invocation": "Find all the files without permission 777 in the file system", "cmd": "find / -type f ! -perm 777"}, {"invocation": "find all the word press configuration php files in the folder /var/www and do not search beyond two levels", "cmd": "find /var/www/ -name wp-config.php -maxdepth 2"}, {"invocation": "Recursively change the owner and group of all files in the current directory to \"apache\"", "cmd": "ls | xargs chown -R apache:apache"}, {"invocation": "Find all the files which are accessed in last 1 hour in entire file system", "cmd": "find / -amin -60"}, {"invocation": "Find directories modified in last 7 days", "cmd": "find . -mtime -7 -type d"}, {"invocation": "split processed content of the file inout_file into pieces per 2000000 named as \"out-prefix-NNN\"", "cmd": "sed 's/\\(.....\\)\\(.....\\)/\\1\\n\\2/' input_file | split -l 2000000 - out-prefix-"}, {"invocation": "Gets the groups these users belong to.", "cmd": "groups a b c d"}, {"invocation": "Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.", "cmd": "echo \"$COMMANDS\"$'\\n'\"$ALIASES\" | sort -u"}, {"invocation": "find all the files that have been modified in the last 2 days", "cmd": "find . -type f -daystart -mtime -2"}, {"invocation": "Find all php files whose name is tecmint.php in the current directory", "cmd": "find . -type f -name tecmint.php"}, {"invocation": "find all the files in the current directory which have been modified in the last 24 hours", "cmd": "find . -mtime 0"}, {"invocation": "Go to directory /some/where/long", "cmd": "cd /some/where/long"}, {"invocation": "delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days", "cmd": "find . ( -name '*.bak' -o -name *.backup ) -type f -atime +30 -exec rm '{}' ;"}, {"invocation": "Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name", "cmd": "find . -type f ! \\( -name \"*gz\" -o -name \"*tmp\" -o -name \"*xftp\" \\) -exec gzip -n '{}' \\;"}, {"invocation": "Count all the lines of all files with names ending with 'php' in current directory recursively", "cmd": "find -name '*php' | xargs cat | wc -l"}, {"invocation": "Replace \"foo\" with \"bar\" in all PHP files in the current directory tree", "cmd": "find . -name \"*.php\" -print | xargs sed -i 's/foo/bar/g'"}, {"invocation": "dispaly a long listing of all the files in the current folder which have been modified in the last 14 days", "cmd": "find . -mtime -14 -ls"}, {"invocation": "Compress files excluding *.Z files", "cmd": "find . \\! -name \"*.Z\" -exec compress -f {} \\;"}, {"invocation": "Print the second space separated fields from standard input", "cmd": "tr -s ' ' | cut -d ' ' -f 2"}, {"invocation": "Search the current directory tree for files whose names end in \"rb\" or \"js\"", "cmd": "find . -name \"*js\" -o -name \"*rb\""}, {"invocation": "Search for all .mp3 files in the /mnt/usb directory tree", "cmd": "find /mnt/usb -name  \"*.mp3\" -print"}, {"invocation": "Copy \"./export\" recursively to \"/path/to/webroot\" preserving permissions", "cmd": "rsync -pr ./export /path/to/webroot"}, {"invocation": "Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.", "cmd": "find /       \\( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\\n' \\) , \\( -size +100M -fprintf /root/big.txt  '%-10s %p\\n' \\)"}, {"invocation": "replaces the second to last line of file", "cmd": "tac file | sed '2 s/,$//' | tac"}, {"invocation": "Forcefully remove files *~important-file", "cmd": "rm -rf *~important-file"}, {"invocation": "Print only name and login columns of the currently logged in users", "cmd": "finger -s | awk '{printf(\"%s %s\\n\", $1, $2);}'"}, {"invocation": "create directory destdir", "cmd": "mkdir destdir"}, {"invocation": "Search the current directory tree for files and directories called \"test\"", "cmd": "find . -name test -print"}, {"invocation": "Archive directory \"symdir\" to \"symdir_output\" preserving symbolic links.", "cmd": "rsync symdir/ symdir_output/ -a --copy-links -v"}, {"invocation": "Count md5sum of all '*.py' files in a current folder with subfolders.", "cmd": "find /path/to/dir/ -type f -name \"*.py\" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}, {"invocation": "display the version of find", "cmd": "find --version"}, {"invocation": "Find files in the current directory tree whose size is less than 24000 bytes", "cmd": "find . -size -24000c"}, {"invocation": "Find all files in the current directory tree, except GIT files", "cmd": "find -type f -name .git -prune -o -print"}, {"invocation": "Search through the /usr/local directory for files that end with the extension .html, and print the file locations.", "cmd": "find /usr/local -name \"*.html\" -type f"}, {"invocation": "Find all OGG files in the home directory that are at most 20 megabytes in size", "cmd": "find $HOME -iname '*.ogg' ! -size +20M"}, {"invocation": "create a symbolic link named \"/usr/bin/my-editor\" to file \"/usr/share/my-ditor/my-editor-executable\"", "cmd": "ln -s /usr/share/my-ditor/my-editor-executable /usr/bin/my-editor"}, {"invocation": "Print all distinct characters in input \"He likes cats, really?\"", "cmd": "echo \"He likes cats, really?\" | fold -w1 | sort -u"}, {"invocation": "Find all read-only files", "cmd": "find / -perm /u=r"}, {"invocation": "Find all files under and below /dir that were accessed less than 60 minutes ago", "cmd": "find /dir -amin -60"}, {"invocation": "Recursively copy directory \"/path/to/data/myappdata\" to \"user@host:/remote/path/to/data/newdirname\"", "cmd": "rsync -rvv --recursive /path/to/data/myappdata user@host:/remote/path/to/data/newdirname"}, {"invocation": "search for pattern matched files in the current folder and subfolders exclude \"excluded path\"", "cmd": "find ./ -type f -name \"pattern\" ! -path \"excluded path\" ! -path \"excluded path\""}, {"invocation": "display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder", "cmd": "find . -xdev -printf \u2018%s %p\\n\u2019 |sort -nr|head -20"}, {"invocation": "find all the files in the entire file system whose size is exactly 15MB", "cmd": "find / -size 15M"}, {"invocation": "Find all files in the /home/ directory tree that were last modified less than 7 days ago", "cmd": "find /home -mtime -7"}, {"invocation": "remove all the core files in the temp file after user confirmation", "cmd": "find /tmp -name core -type f -print0 | xargs -0 /bin/rm -i"}, {"invocation": "Print which files differ in \"dir1\" and \"dir2\" recursively", "cmd": "diff -rq dir1 dir2"}, {"invocation": "Kill all processes which were executed in background by the current shell.", "cmd": "jobs -p | xargs kill -9"}, {"invocation": "Print the help message for tree", "cmd": "tree --help"}, {"invocation": "Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in file \"index.html\" and make a backup with suffix \".bak\"", "cmd": "sed -i.bak s/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g index.html"}, {"invocation": "Find broken symlinks", "cmd": "find ./ -follow -lname \"*\""}, {"invocation": "Find all empty files starting from the current directory and delete them", "cmd": "find . -type f -empty -print0 | xargs -0 /bin/rm"}, {"invocation": "Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.", "cmd": "cp \"${FILE}\" \"COLLECT/$(mktemp job_XXXXXXXXX)\""}, {"invocation": "Find all the files which are modified more than 50 days back and less than 100 days", "cmd": "find / -mtime +50 \u2013mtime -100"}, {"invocation": "Serach for all the files containing grep in man pages", "cmd": "find /usr/share/man/ -regex .*grep*"}, {"invocation": "Find files in the current directory and below that are newer than /bin/sh", "cmd": "find . -newer /bin/sh"}, {"invocation": "Print every file's type, name, and inode", "cmd": "find -printf \"%y %i %prn\""}, {"invocation": "Copy all files that match 'FooBar' in their paths under current directory tree to the '~/foo/bar' directory", "cmd": "find . | grep \"FooBar\" | tr \\\\n \\\\0 | xargs -0 -I{} cp \"{}\" ~/foo/bar"}, {"invocation": "Find out if there are any files on the system owned by user `account'", "cmd": "find / -path /proc -prune -o -user account -ls"}, {"invocation": "Find all directories under /fss/fin", "cmd": "find /fss/fin -type d"}, {"invocation": "Look for files with wide open permissions", "cmd": "find . -type f  -perm a=rwx -exec ls -l {} \\;"}, {"invocation": "Find all .rpm files and change their permissions to 755", "cmd": "find / -name *.rpm -exec chmod 755 '{}' \\;"}, {"invocation": "Find all files and directories that have been modified in the last seven days.", "cmd": "find . -mtime -7"}, {"invocation": "Search for \"whatever\" in all files under /dir directory ensuring white space safety in filenames", "cmd": "find /dir -type f -print0 | xargs -0i cat {} | grep whatever"}, {"invocation": "Find all files/directories under current directory tree that are owned by 'root'", "cmd": "find . -uid 0 -print"}, {"invocation": "create a gzip of all the files in the current folder excluding the already gzipped files", "cmd": "gzip `find . \\! -name '*.gz' -print`"}, {"invocation": "Find all files/directories owned by user 'michel' under current directory", "cmd": "find -user michel"}, {"invocation": "Search all the regular files in the current directory tree for \"example\"", "cmd": "find -type f -print0 | xargs -r0 grep -F 'example'"}, {"invocation": "Recursively copies all files in the current directory but ones that names match pattern \"dirToExclude|targetDir\" to the 'targetDir' directory, printing info message on each operation.", "cmd": "cp -rv `ls -A | grep -vE \"dirToExclude|targetDir\"` targetDir"}, {"invocation": "Dump \"input_file\" as a 2 byte hexadecimal, character, and octal value and view the contents in \"less\"", "cmd": "od -xcb input_file_name | less"}, {"invocation": "delete all the backup files in current directory", "cmd": "find . -name \"*.bak\" -delete"}, {"invocation": "display all regular/normal files in the folder Symfony", "cmd": "find Symfony -type f"}, {"invocation": "display all the regular/normal files in the current directory which are atleast 2 levels deep", "cmd": "find . -mindepth 2 -type f"}, {"invocation": "download file  \"https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh\" and execute it", "cmd": "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash"}, {"invocation": "Copy all regular files whose names end in \"~\" from the /path directory tree to ~/backups/", "cmd": "find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ~/backups"}, {"invocation": "Merge lines from files \"file1\", \"file2\", \"file3\", \"file4\", \"file5\", replace \"\\t\" with \" \\t\", and format the \"\\t\" delimited result as a table", "cmd": "paste file{1,2,3,4} | sed -e 's/\\t/ \\t/g' | column -t -s$'\\t'"}, {"invocation": "Prints help on 'cp' utility.", "cmd": "cp --help"}, {"invocation": "Save the FQDN host name of the system in variable \"fhost\"", "cmd": "fhost=`hostname -f`"}, {"invocation": "Print file information of command \"bash\"", "cmd": "echo $(ls -l $(which bash))"}, {"invocation": "list all javascipts file which whole name does not contain \"directory\"", "cmd": "find . -name '*.js' -and -not -path directory"}, {"invocation": "find all the files in the current folder which have been modified in the last one minute", "cmd": "find . -type f -mmin 0"}, {"invocation": "run ls command on *.pl files", "cmd": "find . -name \"*.pl\" -exec ls -ld {} \\;"}, {"invocation": "display a long listing of all the files in the current folder", "cmd": "find . \u2014 type f -exec ls -1 {} \\;"}, {"invocation": "Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree", "cmd": "find /etc -iregex '.*xt.*'"}, {"invocation": "Make directories \"bravo_dir\" and \"alpha_dir\"", "cmd": "mkdir bravo_dir alpha_dir"}, {"invocation": "Report file system containing /tmp disk usage in kilobytes.", "cmd": "df -k /tmp"}, {"invocation": "display a long listing of all the files in the current directory", "cmd": "find . -name  * -exec ls -a {} \\;"}, {"invocation": "Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf", "cmd": "find / -name httpd.conf -newer /etc/apache-perl/httpd.conf"}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -print | xargs /bin/rm"}, {"invocation": "List all processes with detailed information", "cmd": "ps -ef"}, {"invocation": "Recursively change the owner and group of \"/var/antoniod-data/\" to \"antoniod\"", "cmd": "chown -R antoniod:antoniod /var/antoniod-data/"}, {"invocation": "Search the current directory tree for file \"a.txt\"", "cmd": "find . -name \"a.txt\" -print"}, {"invocation": "find not case sensitive all directories that names are 'apt'", "cmd": "find  / -type d -iname \"apt\""}, {"invocation": "Recursively changes group ownership of everything in 'files' to 'apache_user'.", "cmd": "chgrp -R apache_user files"}, {"invocation": "Search /usr, /home, /tmp for *.jar files", "cmd": "find /usr /home  /tmp -name \"*.jar\""}, {"invocation": "Print a sorted list of all .jpg files in the current directory and below", "cmd": "find -name '*.jpg' | sort -n"}, {"invocation": "Print second field from semicolon-seprated line $string.", "cmd": "echo $string | cut -d';' -f2"}, {"invocation": "split all files in directory \"/dev/shm/split/\" into pieces per 1000 lines", "cmd": "find /dev/shm/split/ -type f -exec split -l 1000 {} {} \\;"}, {"invocation": "Print percentage of the space used on the $FILESYSTEM.", "cmd": "df -k $FILESYSTEM | tail -1 | awk '{print $5}'"}, {"invocation": "List the files/directories under /PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers", "cmd": "find /PATH_to_SEARCH -ls | sort -n | awk '!seen[$1]++'"}, {"invocation": "Print \"on\" to standard output and to files matching \"/sys/bus/usb/devices/usb*/power/level\"", "cmd": "echo \"on\" | tee /sys/bus/usb/devices/usb*/power/level"}, {"invocation": "Print file name without the last two extensions assuming the file name doesn't contain any other dots.", "cmd": "echo \"$FILE\" | cut -d'.' --complement -f2-"}, {"invocation": "Display \"/tmp/file\" as a table of width 30 with columns filled before rows", "cmd": "column -x -c 30 /tmp/file"}, {"invocation": "Recursively changes group ownership of everything in '/home/secondacc/public_html/community/' to 'fancyhomepage'.", "cmd": "chgrp -R fancyhomepage /home/secondacc/public_html/community/"}, {"invocation": "Executes 'cd /' in a subshell created by a pipeline of built-in function 'true'.", "cmd": "true | cd /"}, {"invocation": "Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt", "cmd": "join -t':' <(sort LN.txt) <(sort PH.txt) | join -t':'  - <(sort AD.txt)"}, {"invocation": "Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory", "cmd": "find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -ls"}, {"invocation": "Replace the spaces after line number in the output of history with \"..\"", "cmd": "history | sed 's/^\\( *[0-9]*\\) */\\1../'"}, {"invocation": "Print joined strings from 'file', using space symbol as separator.", "cmd": "cat file | xargs"}, {"invocation": "Print file type of the executable file of command \"file\"", "cmd": "which file | file -f -"}, {"invocation": "Print the characters in $b that match with any character in $a without printing any whitespace in-between", "cmd": "echo \"$b\" | grep --only-matching \"[$a]\" | xargs | tr --delete ' '"}, {"invocation": "Find all PHP files under current directory that contain only one line", "cmd": "find . -type f -name '*.php' -exec grep -Hcm2 $ {} + | sed -n '/:1$/{s///;p}'"}, {"invocation": "Search the XML files from directories /res/values-en-rUS and /res/xml for string \"hovering_msg\"", "cmd": "find /res/values-en-rUS /res/xml -iname '*.xml' -print0 | xargs -0 -d '\\n' -- grep -i \"hovering_msg\" --"}, {"invocation": "Display detailed usage help of the 'cp' (copy) command.", "cmd": "cp --help"}, {"invocation": "Search for filenames matching \"android\" in the current directory and number the output", "cmd": "ls | grep android | nl"}, {"invocation": "Tmux configuration to enable mouse support within tmux", "cmd": "set -g mouse on"}, {"invocation": "Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file", "cmd": "find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,/STRING/d' {} \\;"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda* in /var/log", "cmd": "find /var/log/ -iname anaconda*"}, {"invocation": "Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files", "cmd": "find /home/my_dir -name '*.txt' | xargs grep -c ^.*"}, {"invocation": "Find all files excluding *.gz files in the current directory tree and compress them with gzip", "cmd": "find . -type f ! -name '*.gz' -exec gzip \"{}\" \\;"}, {"invocation": "Silently read a line into variable \"passwd\" with prompt \"Enter your password: \"", "cmd": "read -s -p \"Enter your password: \" passwd"}, {"invocation": "find all files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime -1 -print"}, {"invocation": "Find all directories named 'mydir' under 'local' and '/tmp' directory tree", "cmd": "find local /tmp -name mydir -type d -print"}, {"invocation": "Get current directory name without full path, ie. the part after the last /", "cmd": "pwd | awk -F / '{print $NF}'"}, {"invocation": "Find files owned by nonexistent users", "cmd": "find / -nouser -print"}, {"invocation": "find all the files with the name \"datainame\" in the file system which are bigger than 50MB", "cmd": "find / -size +50M -iname \"Dateiname\""}, {"invocation": "Remove all files on the system that have been changed within the last minute", "cmd": "find / -newerct '1 minute ago' -print | xargs rm"}, {"invocation": "Find all *.* files not within .git directory and run $SED_CMD -i \"s/$1/$2/g\" on each of them", "cmd": "find . -type f -name \"*.*\" -not -path \"*/.git/*\" -print0 | xargs -0 $SED_CMD -i \"s/$1/$2/g\""}, {"invocation": "Find all *.rb and *.py files/directories under current directory", "cmd": "find . -name \"*.rb\" -or -name \"*.py\""}, {"invocation": "search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.", "cmd": "find . -group staff -perm -2000 -print"}, {"invocation": "Change permissions to 0755 for all directories in the /path directory tree", "cmd": "find /path -type d | xargs chmod 0755"}, {"invocation": "Convert the contents of 'var1' variable to lowercase", "cmd": "var1=`echo $var1 | tr '[A-Z]' '[a-z]'`"}, {"invocation": "Display all variables with names starting with \"derby\" in a Window's command line", "cmd": "set derby"}, {"invocation": "find all the files in the current folder that have been modified in the last 7 days", "cmd": "find -mtime -7 -daystart"}, {"invocation": "List all your files including everything in sub-directories", "cmd": "find ~"}, {"invocation": "show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups", "cmd": "find . -path './media' -prune -o -path './images' -prune -o -path './backups' -prune -o -print"}, {"invocation": "find file named foo.txt under root / directory.", "cmd": "find / -name foo.txt"}, {"invocation": "get a PID of a process", "cmd": "jobs -x echo %1"}, {"invocation": "Print the path to the pipe created for process substitution", "cmd": "echo <(true)"}, {"invocation": "Execute \"ls -l\" every 0.5 seconds", "cmd": "watch -n 0.5 ls -l"}, {"invocation": "Gets MAC address of eth0 network interface.", "cmd": "ifconfig eth0 | awk '/HWaddr/ {print $5}'"}, {"invocation": "Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier, host name, and trailing slash, of the form http://example.com/", "cmd": "sed -n 's;\\(http://[^/]*/\\).*;\\1;p'"}, {"invocation": "set variable r to currently running kernel release, ie. 4.4.0-81-generic", "cmd": "r=\"$(uname -r)\""}, {"invocation": "Write output of \"ls -lR /\" to standard output and to \"output.file\"", "cmd": "ls -lR / | tee output.file"}, {"invocation": "display all the configuration files in \"/etc\" folder along with their last access and modified timestamps", "cmd": "find /etc -name \"*.conf\" -printf \"%f accessed %AF %Ar, modified %TF %Tr\\n\""}, {"invocation": "change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command", "cmd": "find . -name \"*.php\" -exec chmod 755 {} +"}, {"invocation": "Find all files and directories on the system whose name is `filedir'", "cmd": "find / -name filedir"}, {"invocation": "Search all files from the /tmp directory tree for the string \"search string\"", "cmd": "find /tmp -type f -exec grep 'search string' '{}' /dev/null \\+"}, {"invocation": "For each line which has a common first field in test.1 and test.2, output the first 2 fields of test.2 and the field 2 and 3 of test.1", "cmd": "join -j1 -o 2.1,2.2,1.2,1.3  <(sort test.1) <(sort test.2)"}, {"invocation": "Print lines in the sorted contents of \"a.txt\" that are not in the sorted contents of \"b.txt\"", "cmd": "comm -23 <(sort a.txt) <(sort b.txt)"}, {"invocation": "Display all symlinks and their targets in the current directory tree", "cmd": "find -P . -type l -exec echo -n \"{} -> \" \\; -exec readlink {} \\;"}, {"invocation": "Count lines that are neither blanks nor comments in a file 'foo.pl'", "cmd": "cat foo.pl | sed '/^\\s*#/d;/^\\s*$/d' | wc -l"}, {"invocation": "display a long listing of all the java files in the current folder in sorted order", "cmd": "find . -type f -name '*.java' -ls | sort -k +7 -r"}, {"invocation": "Find files in the current directory tree whose status was changed within the last 60 minutes", "cmd": "find . -cmin -60"}, {"invocation": "Clear the in-memory history and read from the current history file", "cmd": "history -cr"}, {"invocation": "Find a hostname that resolves to IP '173.194.33.71'", "cmd": "dig +short -x 173.194.33.71"}, {"invocation": "Search for all files in the current directory recursively whose names end with \"Linkin Park\"", "cmd": "find . -name \"*Linkin Park\""}, {"invocation": "Find all files whose owner is `user1'", "cmd": "find / -user user1"}, {"invocation": "Look for *.jpg files", "cmd": "find . -name \u201c*.jpg\u201d"}, {"invocation": "search for a word in all the fies in the current folder", "cmd": "find . -type f -exec grep some_string {} \\;"}, {"invocation": "Make directory named in variable \"archive\" with \".tar*\" stripped from the end", "cmd": "mkdir ${archive%.tar*}"}, {"invocation": "Find all files/directories under current directory tree wihout descending into './src/emacs' directory", "cmd": "find . -path './src/emacs' -prune -o -print"}, {"invocation": "Set the 'verbose' shell option causing bash to print shell input lines as they are read", "cmd": "set -o verbose"}, {"invocation": "Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory", "cmd": "find ~/Journalism  -name '*.txt' -print0 | xargs -0 wc -w | awk '$1 < 2000 {v += $1; c++} END {print v/c}'"}, {"invocation": "Find all loadable modules for current kernel, whose name includes \"perf\"", "cmd": "find /lib/modules/`uname -r` -regex .*perf.*"}, {"invocation": "display all the files in the current folder which have been modified in the last 5*24 hours", "cmd": "find . -mtime -5"}, {"invocation": "find directory which case-insensitive name is foo in current directory.", "cmd": "find . -iname foo -type d"}, {"invocation": "Find files and directories that are at least seven levels of nesting in the directory /usr/src excluding CVS directory", "cmd": "find /usr/src -name CVS -prune -o -depth +6 -print"}, {"invocation": "search for the word foo in all the js files in the current folder", "cmd": "grep -iH foo `find . -name \"*.js\"`"}, {"invocation": "Print the filenames taken by the glob pattern * with null character as the delimiter", "cmd": "find * -maxdepth 0 -type d -print0"}, {"invocation": "Add '.avi' extension to all files/directories with '.mkv' extension under '/volume1/uploads' directory tree", "cmd": "find /volume1/uploads -name \"*.mkv\" -exec mv \\{\\} \\{\\}.avi \\;"}, {"invocation": "Print reverse lookup for IP address 72.51.34.34", "cmd": "dig -x 72.51.34.34"}, {"invocation": "display all the files ending with \".foo\" including those that are in the directory \".snapshot\", this is the wrong way of using prune.", "cmd": "find . \\( -name .snapshot -prune -o -name '*.foo' \\) -print"}, {"invocation": "Find all *.java files under current directory", "cmd": "find . -name \"*.java\""}, {"invocation": "split file /usr/bin/firefox into pieces per 1000 lines", "cmd": "split -n 1000 /usr/bin/firefox"}, {"invocation": "Save the UTC date represented by time string $sting2 as the seconds since epoch to variable 'FinalDate'", "cmd": "FinalDate=$(date -u -d \"$string2\" +\"%s\")"}, {"invocation": "grep for the last occurrence of text between two tags", "cmd": "tac a | grep -m1 -oP '(?<=tag>).*(?=</tag>)'"}, {"invocation": "display all the files in the current folder for the files which have been accessed in the last 24 hours", "cmd": "find . -type f -atime -1"}, {"invocation": "Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND", "cmd": "read XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND"}, {"invocation": "Print IP addresses of the host name", "cmd": "hostname -I | awk '{print $1}'"}, {"invocation": "Remove everything in the current directory except files matching regular expression \"exclude these\"", "cmd": "find . -maxdepth 1 | grep -v \"exclude these\" | xargs rm -r"}, {"invocation": "Unsets 'history' shell option.", "cmd": "shopt -u -o history"}, {"invocation": "Delete files \"*doc copoy\" in directory tree /mnt/zip", "cmd": "find /mnt/zip -name \"*doc copy\" -execdir rm \"{}\" \\;"}, {"invocation": "Count the number of times each person is logged in on the system", "cmd": "who | awk '{print $1}' | sort | uniq -c | sort -n"}, {"invocation": "Remove all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"", "cmd": "find . -name FOLDER1 -prune -o -name filename -delete"}, {"invocation": "Search the files from the current directory tree for \"chrome\"", "cmd": "find . | xargs grep 'chrome' -ls"}, {"invocation": "List all regular files from the current directory tree that were modified less than 60 minutes ago", "cmd": "find . -mmin -60 -type f -exec ls -l {} \\;"}, {"invocation": "Change permissions to 755 recursively only for directories", "cmd": "find . -type d -exec chmod 755 {} \\;"}, {"invocation": "Scan every file in /etc for IPV4 addresses while trying to elminate false positives.", "cmd": "find /etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}, {"invocation": "Give all files in the /path/to/base/dir tree read privileges", "cmd": "find /path/to/base/dir -type f -exec chmod 644 {} +"}, {"invocation": "Execute the file utility for each file found under /etc or below that contains \"test\" in its pathname", "cmd": "find /etc -print0 | grep -azZ test | xargs -0 file"}, {"invocation": "Find all files/directories in entire file system with 644 permission", "cmd": "find / -perm 644"}, {"invocation": "finda ll the files in the current folder that are modified today.", "cmd": "find ~ -type f -mtime 0 -ls"}, {"invocation": "Find all thumb.png files in the temps/ directory tree", "cmd": "find temps/ -name \"thumb.png\""}, {"invocation": "Change permissions to 644 for all files in the current directory tree", "cmd": "find . -type f | xargs -I{} chmod -v 644 {}"}, {"invocation": "Remove all .mpg files in the /home/luser directory tree", "cmd": "find /home/luser -type f -name '*.mpg' -print0 | xargs -0 rm -f"}, {"invocation": "Extract any line in \"f1\" or \"f2\" which does not appear in the other", "cmd": "comm -3 <(sort -un f1) <(sort -un f2)"}, {"invocation": "find and image in current folder (case insensitive search)", "cmd": "find . -iname \"Articles.jpg\""}, {"invocation": "Print the lines of file \"strings\" not specified in file \"index\"", "cmd": "join -v 2 index <(nl strings)"}, {"invocation": "split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes", "cmd": "split -C 100m -d data.tsv data.tsv."}, {"invocation": "Save list of groups which user $line belongs to and not matching pattern \"_unknown|sciences|everyone|netaccounts\" in 'results' variable", "cmd": "results=$(groups \"$line\" | tr ' ' '\\n' | egrep -v \"_unknown|sciences|everyone|netaccounts\")"}, {"invocation": "Recursively finds string with text \"foo\" in all files of a current folder.", "cmd": "find ./ -type f | xargs grep \"foo\""}, {"invocation": "Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .", "cmd": "find . -type f -exec ls -s {} \\; sort -n |head -5"}, {"invocation": "Execute /usr/bin/find with $* arguments where current directory is the first argument", "cmd": "/usr/bin/find ./ $*"}, {"invocation": "display all the files ending with \".user\" in /var/adm/logs/morelogs/ and excluding all regular files", "cmd": "find /var/adm/logs/morelogs/* -type f -prune -name \"*.user\" -print"}, {"invocation": "Open all .c files in the current directory tree in the vim editor", "cmd": "find . -name \"*.c\" -print | vim -"}, {"invocation": "display a long listing of all images with the name \"articles\" in the current folder ( print0 is used to preserve file names with new line in their name )", "cmd": "find . -iname \"Articles.jpg\" -print0 | xargs -0 ls -l"}, {"invocation": "Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH", "cmd": "find \"$SEARCH_PATH\" -name 'pattern' | rev | cut -d'/' -f3- | rev"}, {"invocation": "Make directory \"dir1\"", "cmd": "mkdir dir1"}, {"invocation": "Insert \"insert\" every 3 lines for the output of \"seq 1 10\"", "cmd": "seq 1 10 | sed $': loop; n; n; a insert\\nn; b loop'"}, {"invocation": "same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command", "cmd": "find . -name core -ok rm {} \\;"}, {"invocation": "Find all files in and below the home directory that have been modified in the last 90 minutes", "cmd": "find ~ -mmin -90"}, {"invocation": "Force create a symbolic link named \"$pdir\" to \"$pluginpath\" with verbose output", "cmd": "sudo ln --symbolic --verbose --force \"$pluginpath\" \"$pdir\""}, {"invocation": "find all the shell scripts or perl files in the current directory", "cmd": "find . -type f \\( -name \"*.sh\" -o -name \"*.pl\" \\)"}, {"invocation": "Print the day 1 day ago", "cmd": "date --date='1 days ago' '+%a'"}, {"invocation": "Find symbolic links under /etc/", "cmd": "find /etc -type l"}, {"invocation": "Prints last modified file in a current folder with modification time.", "cmd": "find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}, {"invocation": "List files larger than 10MB in the /var directory recursively", "cmd": "find /var/ -size +10M -exec ls -lh {} \\;"}, {"invocation": "Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.", "cmd": "dig +trace +additional dragon-architect.com | awk 'NR==3' RS=\"\\n\\n\""}, {"invocation": "Find and list all files on your current directory and show a few lines of output from the beginning", "cmd": "find | head"}, {"invocation": "Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'.", "cmd": "grep -v \"#\" -R  /var/spool/cron/tabs"}, {"invocation": "Search the current directory tree for hidden files skipping .htaccess", "cmd": "find . -type f \\( -iname \".*\" ! -iname \".htaccess\" \\)"}, {"invocation": "Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory", "cmd": "find ./ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'"}, {"invocation": "Find all filenames ending with .c in the current directory tree, case insensitive", "cmd": "find -iname \"*.c\""}, {"invocation": "Find all text files in the home directory", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "Print info about all mounted file systems", "cmd": "df"}, {"invocation": "find all the text files in the home folder", "cmd": "find ~ -name \"*.txt\" \u2014 print"}, {"invocation": "change group of the file /var/lib/php/session  to group lighttpd", "cmd": "chown -R :lighttpd /var/lib/php/session"}, {"invocation": "Find all files/directories under current directory tree that belong to the group 'compta'", "cmd": "find -group compta"}, {"invocation": "Replace each new line in \"INPUT.txt\" with \":\"", "cmd": "paste -sd: INPUT.txt"}, {"invocation": "Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them", "cmd": "find . -name SCCS -prune -o -print"}, {"invocation": "Print the current user's mail file in \"/var/spool/mail\"", "cmd": "cat /var/spool/mail/`whoami`"}, {"invocation": "split file t.txt into pieces per 30000000 lines named as \"t.NN\" with numeric suffix", "cmd": "split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t"}, {"invocation": "find all files and directories that have been modified in the last seven days", "cmd": "find . -mtime -7"}, {"invocation": "Changes group ownership of 'target_directory' to 'target_group'.", "cmd": "chgrp target_group target_directory"}, {"invocation": "Calculate the md5 sum of all files in the current directory with the filename printed first", "cmd": "find -maxdepth 1 -type f -exec md5sum {} \\; | awk '{s=$2; $2=$1; $1=s;}1'"}, {"invocation": "Read a single character from standard input and do not allow backslash to escape characters", "cmd": "read -rn1"}, {"invocation": "remove all the log files which have not been modified in the last 5 days", "cmd": "find /logs -type f -mtime +5 -exec rm {} \\;"}, {"invocation": "Find directory \"your/dir\" if it is empty", "cmd": "find your/dir -prune -empty -type d"}, {"invocation": "Print information of the root mount point", "cmd": "mount -v | grep \" on / \""}, {"invocation": "List all files except for those in directory SCCS", "cmd": "find . -print -o -name SCCS -prune"}, {"invocation": "Rename \"svnlog.py\" to \"svnlog\"", "cmd": "mv svnlog.py svnlog"}, {"invocation": "find the biggest files only (but not directories)", "cmd": "find . -type f -exec du -Sh {} + | sort -rh | head -n 15"}, {"invocation": "Find all files with '.db' extension (case insensitive) that belong to user 'exampleuser' and were modified exactly 7 days ago under '/home' directory tree", "cmd": "find /home -user exampleuser -mtime 7 -iname \".db\""}, {"invocation": "Find all files starting from the current directory which are smaller than 100MB", "cmd": "find . -size -100M"}, {"invocation": "find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension", "cmd": "find . -iregex \"./[^/]+\\.dat\" -type f -cmin +60 -exec basename {} \\;"}, {"invocation": "display a long listing of all the files in the current folder that have been accessed in today from the start of the day", "cmd": "find -daystart   -atime 0 -ls"}, {"invocation": "Find all *shp* files/directories under current directory and move them to ../shp_all/", "cmd": "find . -name \"*shp*\" -exec mv {} ../shp_all/ \\;"}, {"invocation": "create a symbolic link with absolute path \"/cygdrive/c/Program Files\" to file \"/cygdrive/c/ProgramFiles\"", "cmd": "ln -s \"/cygdrive/c/Program Files\" /cygdrive/c/ProgramFiles"}, {"invocation": "Search the /path directory tree for files matching pattern '*.foo'", "cmd": "find /path -name '*.foo'"}, {"invocation": "Disables shell option 'nocasematch'.", "cmd": "shopt -u nocasematch"}, {"invocation": "Immediately terminate all processes whose command or arguments match \"myProcessName\"", "cmd": "ps -ef | grep myProcessName | grep -v grep | awk '{print $2}' | xargs kill -9"}, {"invocation": "Find all .svn directories under current directory and delete them", "cmd": "find . -type d -name \".svn\" -print | xargs    rm -rf"}, {"invocation": "Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"", "cmd": "find . -name \\*.c -print | xargs grep wait_event_interruptible /dev/null"}, {"invocation": "Print 'file' content, formatting output as 29-symbol wide column", "cmd": "cat file | fold -w29"}, {"invocation": "Rename \"blah2\" to \"blah2-new\"", "cmd": "mv blah2 blah2-new"}, {"invocation": "Find all files/directories under current directory appending a null character at the end of each file name/path", "cmd": "find -print0"}, {"invocation": "Find files/directories in entire file system that had their meta information changed more than 3 days ago", "cmd": "find / -ctime +3"}, {"invocation": "change the owner of all the files in the file system which belong to the user with the uid 999", "cmd": "find / -user 999 -exec chown NEWUSER {} \\;"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn -exec rm -rf '{}' \\;"}, {"invocation": "Save the current user name in variable \"myvariable\"", "cmd": "myvariable=$(whoami)"}, {"invocation": "Finds all folders that contain 'ssh' file and have 'bin' in path.", "cmd": "find / -name ssh|grep bin|xargs dirname"}, {"invocation": "Find all file.ext files/directories under /home/kibab directory and print . for each of them", "cmd": "find /home/kibab -name file.ext -exec echo . ';'"}, {"invocation": "Find all files under var/ directory and change their permission to 600", "cmd": "find var/ -type f -exec chmod 600 {} \\;"}, {"invocation": "List all cron jobs which contain \"word\".", "cmd": "crontab -l | grep 'word'"}, {"invocation": "Search the current directory tree for files whose names contain \"TextForRename\"", "cmd": "find ./ -name \"*TextForRename*\""}, {"invocation": "Display a named character dump of \"test.sh\"", "cmd": "od -a test.sh"}, {"invocation": "Recursively change the owner and group of \"/workspace\" and \"775\" to \"your_user_name\"", "cmd": "chown -R your_user_name.your_user_name 775 /workspace"}, {"invocation": "Archive directory specified by variable \"myFolder\" to current directory.", "cmd": "rsync -av $myFolder ."}, {"invocation": "Move all files/directories under current directory to destDir", "cmd": "find sourceDir -print0 | xargs -0 mv -t destDir"}, {"invocation": "Find all .sh files in the current directory tree and remove them", "cmd": "find . -name \"*.sh\"| xargs rm -rf"}, {"invocation": "Find all *.xml.bz2 files under current directory", "cmd": "find . | grep \".xml.bz2$\""}, {"invocation": "find all the text files in the current folder starting with \"somefiles-\"  and prepend the first line", "cmd": "find . -name \"somefiles-*-.txt\" -type f -exec sed -i 'iText that gets prepended (dont remove the i)' -- '{}' \\;"}, {"invocation": "Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command", "cmd": "find /somefolder -type f '(' \"${ARGS[@]}\" ')'"}, {"invocation": "Get the disk space used by all *.txt (case insensitive) files/directories under current directory", "cmd": "find . -iname \"*.txt\" -exec du -b {} + | awk '{total += $1} END {print total}'"}, {"invocation": "Print all filenames under /proc and below", "cmd": "find /proc -exec ls '{}' \\;"}, {"invocation": "Recursively copies \"$1\" to \"$2\".", "cmd": "cp -R \"$1\" \"$2\""}, {"invocation": "add read permission to others for the files in the current folder having the name \"rc.conf\" in their name.", "cmd": "find . -name \"*rc.conf\" -exec chmod o+r '{}' \\;"}, {"invocation": "find all the files in the entire file system which have been modified in the last 120 hours", "cmd": "find / -mtime -5 -print"}, {"invocation": "Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree", "cmd": "find xargstest/ -name 'file?B' | sort | xargs head -n1"}, {"invocation": "Force create a symbolic link named \"$lines\" to \"$c\" without dereferencing \"$lines\"", "cmd": "ln -sfn \"$c\" \"$lines\""}, {"invocation": "Gets IP address of 'en1' network interface.", "cmd": "ifconfig en1 | awk '{ print $2}' | grep -E -o \"([0-9]{1,3}[\\.]){3}[0-9]{1,3}\""}, {"invocation": "Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree", "cmd": "find /path/to/look/in/ -type d -name '.texturedata' -prune -print0 | xargs -0 chmod 000"}, {"invocation": "find files in current folder using name patterns and sort the display the file names in the sorted order", "cmd": "find . -name \"S1A*1S*SAFE\" | rev | awk -F '/' '{print $1}' | rev | sort -t _ -k 5"}, {"invocation": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines", "cmd": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'"}, {"invocation": "Read a line of standard input in an interactive shell", "cmd": "read -e"}, {"invocation": "change the permissions of all the regular files in the folder root_dir to 444", "cmd": "find root_dir -type f -exec chmod 444 {} \\;"}, {"invocation": "Print the IP address of your SSH session", "cmd": "who am i|awk '{ print $5}'"}, {"invocation": "Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories", "cmd": "find . -maxdepth 1 -name \"*.jpg\" -size -50k -exec rm {} \\;"}, {"invocation": "Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size", "cmd": "find $dir -type -f size +$size -print0 | xargs -0 ls -1hsS"}, {"invocation": "find .gif files in /var/www and below that were last changed between 90 and 180 days ago", "cmd": "find /var/www -name *.gif -ctime +90 -ctime -180"}, {"invocation": "Write current directory listing to standard output and to \"files.txt\"", "cmd": "ls |& tee files.txt"}, {"invocation": "Open a local SSH port on 1080 for application-level port forwarding", "cmd": "ssh -D1080 root@localhost -g"}, {"invocation": "Make directory \"/tmp/imaginary/\" on remote host before archiving \"file\" to \"user@remote:/tmp/imaginary/\"", "cmd": "rsync -aq --rsync-path='mkdir -p /tmp/imaginary/ && rsync' file user@remote:/tmp/imaginary/"}, {"invocation": "display the number of lines in all the files in the current folder", "cmd": "find . -exec wc -l {} \\;"}, {"invocation": "Make directories \"$@\" and replace \"mkdir: created directory \" with \"$USER created folder \" in the output", "cmd": "mkdir \"$@\" |sed -e\"s/mkdir: created directory /$USER created folder /\""}, {"invocation": "Count all the lines of code in all php files in current directory recursively", "cmd": "find . -name \"*.php\" | xargs grep -v -c '^$' | awk 'BEGIN {FS=\":\"} { $cnt = $cnt + $2} END {print $cnt}'"}, {"invocation": "Decompress and extract 'libxml2-sources-2.7.7.tar.gz'", "cmd": "gzip -dc libxml2-sources-2.7.7.tar.gz | tar xvf -"}, {"invocation": "Prints process tree of a process having id $mypid, with command options and process id number.", "cmd": "pstree -aAp $(ps -ejH | awk -v v1=$mypid '$1==v1 {print $3}')"}, {"invocation": "display all the configuration files in the etc folder", "cmd": "find /etc -name '*.conf'"}, {"invocation": "Find all directories under current directory and replace all null delimiters with : in the output then remove the last :", "cmd": "find -type d -print0 | sed -e \"y/\\d0/:/;s/:$//;\""}, {"invocation": "sleep for 1 second", "cmd": "sleep 1"}, {"invocation": "Print a sorted list of the extensions of the regular files from the current directory tree", "cmd": "find . -type f -name \"*.*\" | awk -F. '{print $NF}' | sort -u"}, {"invocation": "Remove all \\*~ files under dir", "cmd": "find dir -name \\\\*~ -exec rm {} +"}, {"invocation": "Remove all *.doc files from the current directory tree", "cmd": "find . -name '*.doc' -exec rm \"{}\" \\;"}, {"invocation": "Join comma-separated information in 4 files - files must be sorted.", "cmd": "join -t, test.1 test.2 | join -t, - test.3 | join -t, - test.4"}, {"invocation": "Find all 664 permission files/drectories under current directory tree", "cmd": "find . -perm -664"}, {"invocation": "Find all *.java files under current directory containing the string 'String'", "cmd": "find . -name \"*.java\" -exec grep \"String\" {} \\;"}, {"invocation": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"", "cmd": "read -r -p \"${1:-Are you sure? [y/N]} \" response"}, {"invocation": "Prints hierarchical process tree.", "cmd": "pstree"}, {"invocation": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found", "cmd": "tar -cvf file.tar `find var/log/ -iname \"anaconda.*\"`"}, {"invocation": "List (in long list format with inode number) the file under the current directory that has the oldest modification time", "cmd": "find . -type f -ls | sort +7 | head -1"}, {"invocation": "Enables shell option 'nocasematch'.", "cmd": "shopt -s nocasematch"}, {"invocation": "List all files in maximum 2 levels down the current directory", "cmd": "find . -maxdepth 2  -type f -print0 | xargs -0 -n1 ls -l"}, {"invocation": "compress all the non-compressed  files in the current directory.", "cmd": "find . \\! -name \"*.Z\" -exec compress -f {} \\;"}, {"invocation": "Print each line in \"file1\" and file2\" separated by tabs and \"file3\" separated by a space", "cmd": "paste -d\" \" file1 file2 | paste -d'|' - file3 | sed 's,|, ,g'"}, {"invocation": "Replace \"firstWord\" with \"newFirstWord\", \"secondWord\" with \"newSecondWord\", \"thirdWord\" with \"newThirdWord\" in all XML files in the current directory tree", "cmd": "find -name \"*.xml\" -exec sed -s --in-place=.bak -e 's/firstWord/newFirstWord/g;s/secondWord/newSecondWord/g;s/thirdWord/newThirdWord/g' {} \\;"}, {"invocation": "List the last entry of the numerically sorted list of all files and folders under \"/foldername\"", "cmd": "find /foldername | sort -n | tail -1"}, {"invocation": "Remove all files and directories in the /home directory tree whose names are \"Trash\"", "cmd": "find /home -name Trash -exec rm {} \\;"}, {"invocation": "Read hexadecimal bytes from device \"/dev/midi1\"", "cmd": "od -vtx1 /dev/midi1"}, {"invocation": "find all CSS files under currenty directory and use sed to edit them", "cmd": "find . -name \"*.css\" -exec sed -i -r 's/#(FF0000|F00)\\b/#0F0/' {} \\;"}, {"invocation": "Find all files and directories whose names end in \".rpm\", ignoring removable media, such as cdrom, floppy, etc.", "cmd": "find / -xdev -name \\*.rpm"}, {"invocation": "Print canonical filename of \"/path/there/../../\" even if it does not exist", "cmd": "readlink -m /path/there/../../"}, {"invocation": "Recursively set all permissions under \"/directory\" to 755", "cmd": "chmod -R 755 /directory"}, {"invocation": "Find all regular files in the current directory tree and count them", "cmd": "find -type f | wc -l"}, {"invocation": "Find all *.txt files under the current directory whose names are not \"File.txt\"", "cmd": "find . -maxdepth 1 -type f -name '*.txt' -not -name File.txt"}, {"invocation": "display all regular/normal files in a directory", "cmd": "find $directory -type f"}, {"invocation": "Compress a file named '{}' in the current directory", "cmd": "gzip \"{}\""}, {"invocation": "Display machine architecture, ie. x86_64", "cmd": "uname -m"}, {"invocation": "Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals", "cmd": "find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\""}, {"invocation": "Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names", "cmd": "find / -name '<name_pattern>' -type d | sort | uniq"}, {"invocation": "display all files in current folder excluding current folder (.)", "cmd": "find . \\! -name '.'"}, {"invocation": "Search for \"LOG\" in jsmith's home directory tree", "cmd": "find ~jsmith -exec grep LOG '{}' /dev/null \\; -print"}, {"invocation": "Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories", "cmd": "find /var/www -type d \\( ! -wholename \"/var/www/web-release-data/*\"  ! -wholename \"/var/www/web-development-data/*\" \\)"}, {"invocation": "Searches the manual page names and descriptions", "cmd": "apropos"}, {"invocation": "Save the current time formatted according to the format string \"%Y-%m-%d %H:%M:%S\" to the variable 'CDATE'", "cmd": "CDATE=$(date \"+%Y-%m-%d %H:%M:%S\")"}, {"invocation": "find all directories in the current directory", "cmd": "find . -type d -name \"*\""}, {"invocation": "Search for .bam files anywhere in the current directory recursively", "cmd": "find . -name \"*.bam\""}, {"invocation": "Print a NULL-separated list of all directories of the current directory tree", "cmd": "find . -type d -print0"}, {"invocation": "Convert all characters in standard input to lower case", "cmd": "sed 's/.*/\\L&/'"}, {"invocation": "search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order", "cmd": "find . -name '*.cpp' | sed -e 's/\\/[^/]*$//' | sort | uniq"}, {"invocation": "Print space separated list of numbers from \"$start\" to \"$end\"", "cmd": "echo `seq $start $end`"}, {"invocation": "Delete files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -print0 | xargs -0 /bin/rm"}, {"invocation": "Remove the \"123_\" prefix from all filenames of .txt files in current directory.", "cmd": "find -name \"123*.txt\" -exec rename 's/^123_//' {} \";\""}, {"invocation": "Run 'join' on file1 and file2, using a literal tab character as field separator.", "cmd": "join -t $'\\t' file1 file2"}, {"invocation": "Display a detailed listing of the current directory, pausing for user input after each page.", "cmd": "ls -l | more"}, {"invocation": "Recursively search for \"string here\" and write the output to the console followed by the number of matched lines", "cmd": "grep -r \"string here\" * | tee >(wc -l)"}, {"invocation": "View the bash manpage, starting with the view positioned at the first occurrence of the expression \"BASH_SOURCE\".", "cmd": "man bash | less -p BASH_SOURCE"}, {"invocation": "Make directory \"~/log\"", "cmd": "mkdir ~/log"}, {"invocation": "print bindings for \"p\" and \"e\" with no case sensitivity", "cmd": "bind -p|grep -i '\"[pE]\"'"}, {"invocation": "Find files/directories named 'foo' in the current partition of the root filesystem", "cmd": "find -x / -name foo"}, {"invocation": "Measure the disk space taken up by all *.txt files in directory tree /home/d", "cmd": "find /home/d -type f -name \"*.txt\" -printf \"%s\\n\" | awk '{s+=$0}END{print \"total: \"s\" bytes\"}'"}, {"invocation": "Find files in the current directory tree whose pathnames contain \"sub\"", "cmd": "find ./ | grep \"sub\""}, {"invocation": "Output all lines in 'file' which contain a tab character.", "cmd": "awk -F\"\\t\" 'NF>1' file"}, {"invocation": "display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours", "cmd": "find /mydir1 /mydir2 -size +2000 -atime +30 -print"}, {"invocation": "Execute \"ps -C java -o pcpu,state,cputime,etimes\" every second", "cmd": "watch -n 1 ps -C java -o pcpu,state,cputime,etimes"}, {"invocation": "create symbolic links in directory \"/usr/local/symlinks \" to all files located in directiry \"incoming\" and that have been modified earlier then 5 days and owned by user \"nr\"", "cmd": "find /incoming -mtime -5 -user nr -exec ln -s '{}' /usr/local/symlinks ';'"}, {"invocation": "Search for files \"file1\" or \"file9\"", "cmd": "find . -name file1 -or -name file9"}, {"invocation": "Search the current directory tree for files whose names end in \"rb\" or \"js\" and which contain string \"matchNameHere\"", "cmd": "find . -regextype posix-ergep -regex \".*(rb|js)$\" -exec grep -l matchNameHere {} \\;"}, {"invocation": "change the group of all the files in the file system which belong to the group with the gid 999", "cmd": "find / -group 999 -exec chgrp NEWGROUP {} \\;"}, {"invocation": "Resolve all symlinks in path to \"firefox\" binary if it exists in path, resulting in absolute path with no symlinks.", "cmd": "readlink -f $(which firefox)"}, {"invocation": "Locate all passwd files on the system", "cmd": "find / -name passwd"}, {"invocation": "Find all files/directories under '/home/user/' directory tree whose status was changed exactly 10 minitues ago", "cmd": "find /home/user/ -cmin 10 -print"}, {"invocation": "Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory.", "cmd": "top -b -d 1 | grep myprocess.exe | tee output.log"}, {"invocation": "Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file '", "cmd": "find \"$somedir\" -type f -exec echo Found unexpected file {} \\;"}, {"invocation": "Change the ownership to the user daisy for all directories under current directory that are owned by harry", "cmd": "find . -type d -user harry -exec chown daisy {} \\;"}, {"invocation": "Decompress 'file.gz' to standard output and execute the output in bash", "cmd": "gzip -d --stdout file.gz | bash"}, {"invocation": "Show the list of files that are owned by user wnj or are newer than file `ttt'", "cmd": "find / \\( -newer ttt -or -user wnj \\) -print"}, {"invocation": "Print all filenames under /proc and below", "cmd": "find /proc -print0 | xargs -0"}, {"invocation": "Show all running processes with a name matching \"postgres\"", "cmd": "ps -ef | grep postgres"}, {"invocation": "Search for *pattern* in and below current directory", "cmd": "find -name \"*pattern*\""}, {"invocation": "find all the files in the entire file system that start with top", "cmd": "find / -name 'top*'"}, {"invocation": "Change directory to the basename of \"$1\" with \".tar.gz\" removed", "cmd": "cd $(basename $1 .tar.gz)"}, {"invocation": "display all the files in the folder \"$ORIG_DIR\"", "cmd": "find \"$ORIG_DIR\""}, {"invocation": "Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*'", "cmd": "find . -name '[mM][yY][fF][iI][lL][eE]*'"}, {"invocation": "search all mp3 files in the folder \"/home/you\" which have been modified yesterday (from the start of day 00:00 to 23:59)", "cmd": "find /home/you -iname \"*.mp3\" -daystart -type f -mtime 1"}, {"invocation": "display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno", "cmd": "find /home -type f -name \"*.sxw\" -atime -3 -user bruno"}, {"invocation": "Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'", "cmd": "find /usr/ports/ -name pkg-plist\\* -exec grep 'unexec.rmdir %D' '{}' '+' | wc -l"}, {"invocation": "List all files with name \"someFile\" and their modification time under the current directory sorted by oldest modified to newest modified", "cmd": "find . -name \"someFile\" -printf \"%p:%T@\\n\" | sort -t : -k2"}, {"invocation": "Save the first 3 lines output by 'yes' to 'file', and log the rest through 'more' which simply waits for user interaction at each page.", "cmd": "yes | awk 'FNR<4 {print >>\"file\"; close(\"file\")}  1' | more"}, {"invocation": "Recursively change the owner and group of all files in \"/your/directory/to/fuel/\" to \"nginx\"", "cmd": "chown nginx:nginx /your/directory/to/fuel/ -R"}, {"invocation": "Search the current directory tree for files named 'Subscription.java'", "cmd": "find . -name 'Subscription.java'"}, {"invocation": "Archive directory \"tata\" to directory \"tata2\", compressing data during copy.", "cmd": "rsync -avz tata/ tata2/"}, {"invocation": "Starts new tmux session, assuming the terminal supports 256 colours.", "cmd": "tmux -2"}, {"invocation": "Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents", "cmd": "find . -name \"*.pdf\" -print | grep -v \"^\\./pdfs/\""}, {"invocation": "Copy all files unconditionally and directories in directory tree \"myfiles\" to \"target-dir\" preserving directory hierarchy and modification time", "cmd": "find myfiles | cpio -pmud target-dir"}, {"invocation": "Search the /Applications directory tree for *.app directories", "cmd": "find /Applications -type d -name \"*.app\""}, {"invocation": "Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place", "cmd": "find ./ -type f -name \\*.php -exec sed -i \u2019s/^.*iframe bla bla bla.*$//g\u2019 {} \\;"}, {"invocation": "Test if a file named 'file' in the current directory is more than 1 hour old", "cmd": "find file -prune -cmin +60 -print | grep -q ."}, {"invocation": "find all files in the current directory and sub-directories that were accessed after modifying /etc/hosts", "cmd": "find -anewer /etc/hosts"}, {"invocation": "Find all directories in the current directory tree", "cmd": "find -type d"}, {"invocation": "Find all directories in the current one recursively which have the write bit set for \"other\"", "cmd": "find . -type d -perm -o=w"}, {"invocation": "Find directories named `build'", "cmd": "find . -type d -name build"}, {"invocation": "Unzip and untar \"4.56_release.tar.gz\" to standard output", "cmd": "gunzip -c 4.56_release.tar.gz | tar xvf -"}, {"invocation": "Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension", "cmd": "find -type f -print0 | xargs -0 sed -i .bakup 's/company/newcompany/g'"}, {"invocation": "Print the home directory of \"$username\"", "cmd": "finger $username | awk '/^Directory/ {print $2}'"}, {"invocation": "Delete all empty files/directories under test directory", "cmd": "find test -depth -empty -delete"}, {"invocation": "Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files", "cmd": "find [directory] -name \"pattern_to_exclude\" -prune -o -name \"another_pattern_to_exclude\" -prune -o -name \"pattern_to_INCLUDE\" -print0 | xargs -0 -I FILENAME grep -IR \"pattern\" FILENAME"}, {"invocation": "Print login name and full name of all users currently logged in and delete instances of \"of group.*\"", "cmd": "finger -l | awk '/^Login/' | sed 's/of group.*//g'"}, {"invocation": "Find all files/directories under current directory and print them", "cmd": "find . -print0 | xargs -I{} -0 echo {}"}, {"invocation": "display all normal/regular files in a folder", "cmd": "find teste1 -type f"}, {"invocation": "Saves location of file $1 in 'dir' variable.", "cmd": "dir=$(dirname -- \"$1\")"}, {"invocation": "Set permissions to 660 for all regular files in the current directory tree", "cmd": "find . -type f -exec chmod 0660 {} +"}, {"invocation": "find all the files in the file system that start with \"win\" and searched only in the mounted file systems", "cmd": "find / -mount -name 'win*'"}, {"invocation": "Find all directories under and below /home/admin/public_html/, and change their permissions to 755", "cmd": "find /home/admin/public_html/ -type d -exec chmod 755 {} \\;"}, {"invocation": "Mount partition with label \"WHITE\" on \"/mnt/WHITE\"", "cmd": "mount -L WHITE /mnt/WHITE"}, {"invocation": "Search the current directory tree for regular files whose names match pattern $x", "cmd": "find . -type f -name $x"}, {"invocation": "Find largest file in linux with find command", "cmd": "find . -type f -printf \"%s\\t%p\\n\" | sort -n | tail -1"}, {"invocation": "Count the number of the regular files residing under and below ./randfiles/", "cmd": "find ./randfiles/ -type f | wc -l"}, {"invocation": "List all environment variables", "cmd": "set"}, {"invocation": "List all *.txt files/directories under /etc", "cmd": "find /etc -name \"*.txt\" -ls"}, {"invocation": "display all the files in the current folder which have been modified in the last 24 hours", "cmd": "find . -mtime -1 -print"}, {"invocation": "Find all *.plist files/directories under current directory", "cmd": "find ./ -name \"*.plist\""}, {"invocation": "search for files in current folder using name patterns", "cmd": "find . -name \"S1A*1S*SAFE\""}, {"invocation": "find files under the current directory ending in \"txt\" and list them, or ending in  \"html\" but do nothing.", "cmd": "find . -name '*.txt' -print -o -name '*.html'"}, {"invocation": "Find all files that belongs to group Developer under /home directory", "cmd": "find /home -group developer"}, {"invocation": "Execute /usr/bin/find with $* arguments", "cmd": "/usr/bin/find $*"}, {"invocation": "Search the current directory and directories below for .sql files", "cmd": "find . -name \\*.sql"}, {"invocation": "find all the text files in the current folder starting with \"somefiles-\"", "cmd": "find . -name \"somefiles-*-.txt\" -type f"}, {"invocation": "Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script2' variable.", "cmd": "script2=`mktemp /tmp/.script.XXXXXX`;"}, {"invocation": "Format file \"list-of-entries.txt\" with no column delimiter", "cmd": "column -t -s '' list-of-entries.txt"}, {"invocation": "Copy all \".xml\" files in the current directory tree to \"/new/parent/dir\" preserving the directory hierarchy", "cmd": "find . -name \\*.xml -print0 | cpio -pamvd0 /new/parent/dir"}, {"invocation": "Show all of the .conf files in Pat's user folder and subdirectories using the less pager", "cmd": "find /home/pat -iname \"*.conf\" | less"}, {"invocation": "find all the files ending with \".foo\" in the folder /usr", "cmd": "find /usr -name '*.foo' -print"}, {"invocation": "Open a ssh connection to \"user@host\" with a control socket \"/tmp/%r@%h:%p\"", "cmd": "ssh user@host -S /tmp/%r@%h:%p"}, {"invocation": "Find all files and directories starting from the current directory", "cmd": "find ."}, {"invocation": "Search the current directory recursively for regular files last modified more than 2 days ago", "cmd": "find . type -f -mtime +2"}, {"invocation": "List in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago", "cmd": "find /somelocation/log_output -type f -ctime +40 -exec ls -l {} \\;"}, {"invocation": "recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user", "cmd": "chown \"dev_user\".\"dev_user\" -R ~/.ssh/"}, {"invocation": "Search for the string 'foo' in *.html files under /usr/src/linux directory", "cmd": "grep foo `find /usr/src/linux -name \"*.html\"`"}, {"invocation": "Search  in current directory downwards all files which  have not been accessed since last 7 days", "cmd": "find . -atime +7 -print"}, {"invocation": "Copy a whole directory tree skipping files residing on other files systems to destination_dir", "cmd": "find ./ -mount -depth -print | cpio -pdm /destination_dir"}, {"invocation": "display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB", "cmd": "find . -type f -size +50000k -exec ls -lh {} \\; | awk '{ print $9 \": \" $5 }'"}, {"invocation": "List subdirectories in the current directory", "cmd": "find . -maxdepth 1 -type d -print0 | xargs -0 ls -d"}, {"invocation": "Report total file systems disk usage in 1T blocks.", "cmd": "df --total -BT | tail -n 1"}, {"invocation": "Add \"execute\" to the permissions of all directories in the home directory tree", "cmd": "find ~ -type d -exec chmod +x {} \\;"}, {"invocation": "List all .c and .h files in the current directory tree that contain \"thing\"", "cmd": "find . -name '*.[ch]' | xargs grep -l thing"}, {"invocation": "create a symbolic link in current directory named \"environments\" to file \"../config/environments\"", "cmd": "ln -s \"../config/environments\""}, {"invocation": "create directory new_dir", "cmd": "mkdir new_dir"}, {"invocation": "Find files containing string \"#!/bin/ksh\" and append their names and matching strings to /tmp/allfiles", "cmd": "find . -type f -print | xargs /usr/bin/grep -il 'bin/ksh' | tee /tmp/allfiles"}, {"invocation": "Duplicate directory tree under /mnt/usr/lib to /usr but creating symlinks to files instead of copying them.", "cmd": "cp -rs /mnt/usr/lib /usr/"}, {"invocation": "Retrieve only build number of current kernel, ie. #104", "cmd": "uname -v | grep -o '#[0-9]\\+'"}, {"invocation": "Recursively from current folder searches only files that names match \".*xxx\" pattern, ignores binary files and prints file name before every string that contains \"my Text to grep\".", "cmd": "grep --include=\"*.xxx\" -nRHI \"my Text to grep\" *"}, {"invocation": "Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.", "cmd": "which -a rename | xargs readlink -f | xargs file"}, {"invocation": "Forward all connections to client localhost 3307 via the SSH tunnel to gateway and then connect to host 1.2.3.4 to port 3306", "cmd": "ssh -f user@gateway -L 3307:1.2.3.4:3306 -N"}, {"invocation": "Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.", "cmd": "sudo find . -xdev -type f | cut -d \"/\" -f 2 | sort | uniq -c | sort -n"}, {"invocation": "Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem", "cmd": "find / -type f -user bluher -exec ls -ls {}  \\;"}, {"invocation": "Search *.x files from the current directory tree for string \"fred\"", "cmd": "find . -name \u2018*.x\u2019 -print0 | xargs -0 grep fred"}, {"invocation": "Add executable permission to \"pretty-print\"", "cmd": "chmod +x pretty-print"}, {"invocation": "Find recursively all empty directories in the current directory", "cmd": "find -type d -empty"}, {"invocation": "Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths", "cmd": "find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90 -printf \"%h\\n\" | sort | uniq"}, {"invocation": "Find the directories whose pathnames contain \"New Parts\" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views", "cmd": "find -mindepth 3 -maxdepth 3 -type d | grep \"New Parts\" | tr '\\012' '\\000' | xargs -0 ln -s -t /cygdrive/c/Views"}, {"invocation": "Find all files and directories last modified less than a day ago and copy to \"../changeset\" creating directories as needed", "cmd": "find * -mtime -1 -daystart -print0 | cpio -pd0 ../changeset"}, {"invocation": "display a long listing of all regular files  in current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60 -type f -ls"}, {"invocation": "Store N symbols of input into variable 'buffer'", "cmd": "read -N $BUFSIZE buffer"}, {"invocation": "Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory", "cmd": "find . \\( ! -regex '.*/\\..*' \\) -type f -name \"whatever\""}, {"invocation": "find all the html files in the current folder", "cmd": "find . -name \"*.html\""}, {"invocation": "search for the word \"slrn\" in all the files in the current folder", "cmd": "find ./ -exec grep -q 'slrn' '{}' \\; -print"}, {"invocation": "Split \"file.tar.gz\" into files of size 1024 MB with a prefix of \"file.tar.gz.part-\"", "cmd": "split -b 1024m \"file.tar.gz\" \"file.tar.gz.part-\""}, {"invocation": "Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex \".*\\.$FILES_TO_PROCES\" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline", "cmd": "find \"$DIRECTORY_TO_PROCESS\" -type f -iregex \".*\\.$FILES_TO_PROCES\" ! -name \"$find_excludes\" -print0"}, {"invocation": "Make directory \"/tmp/new\"", "cmd": "mkdir /tmp/new"}, {"invocation": "display all the files in the current folder which start with either \"fileA_\" or \"fileB_\"", "cmd": "find . -name 'fileA_*' -o -name 'fileB_*'"}, {"invocation": "Print your/dir if it's an empty directory", "cmd": "find your/dir -prune -empty -type d"}, {"invocation": "display all the files in the file system which belong to the user \"wnj\" or which are modified after the file \"ttt\"", "cmd": "find / \\( -newer ttt -or -user wnj \\) -print"}, {"invocation": "Insert \"|\" every 30 characters in file \"longline\"", "cmd": "fold -w30 longline | tr '\\n' '|' | sed 's/|$/\\n/'"}, {"invocation": "Calculate the md5 sum of \"a\"", "cmd": "echo \"a\" | md5sum"}, {"invocation": "Recursively removes all empty folders from the X folder.", "cmd": "find X -depth -type d -exec rmdir {} \\;"}, {"invocation": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".", "cmd": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats"}, {"invocation": "Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.", "cmd": "find . -group X_GNAME -exec chgrp Y_GNAME {} +"}, {"invocation": "Find all $tofind* files/directories under $parentdir", "cmd": "find $parentdir -name $tofind*"}, {"invocation": "search for all the foo.txt files in the current folder and move them to another location", "cmd": "find . -name foo.txt -print0 | xargs -0  -I{} mv {} /some/new/location/{}"}, {"invocation": "find all the text files in the file system and search only in the disk partition of the root.", "cmd": "find / -xdev -name \"*.txt\""}, {"invocation": "Find all hidden regular files under /tmp and below", "cmd": "find /tmp -type f -name \".*\""}, {"invocation": "display all the directories in the folder /path/to/dest except tmp directory", "cmd": "find /path/to/dest -type d \\( ! -name tmp \\) -print"}, {"invocation": "Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under /home/www and below", "cmd": "find /home/www/ -type f -exec sed -i 's/subdomainA\\.example.com/subdomainB.example.com/g' {} +"}, {"invocation": "Read yesterday's date with format \"%a %d/%m/%Y\" into variable \"dt\" in a subshell", "cmd": "date --date yesterday \"+%a %d/%m/%Y\" | read dt"}, {"invocation": "Find all directories under the current directory that is on the same filesystem, execute \"/tmp/count_em_$$\" with the directory as an argument, sort the result numerically from least value to greatest value", "cmd": "find . -mount -type d -print0 | xargs -0 -n1 /tmp/count_em_$$ | sort -n"}, {"invocation": "get all the files that have been modified within the last 30 days", "cmd": "find . -mtime -30 -print"}, {"invocation": "force remove all the directories with the name logs in the folder /var/www", "cmd": "find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \\;"}, {"invocation": "find all the files in the file system which have been modified in the last 10 minutes", "cmd": "find / -mmin -10"}, {"invocation": "Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'", "cmd": "find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u"}, {"invocation": "List all environment variables (name and value) whose name either equals PATH or starts with GOBIN", "cmd": "env | grep '^\\(GOBIN\\|PATH=\\)'"}, {"invocation": "display all directories in a folder", "cmd": "find /etc -type d -print"}, {"invocation": "Display the entire file system in a tree-like format", "cmd": "tree /"}, {"invocation": "Find how many files are in a path", "cmd": "find . -type f -exec basename {} \\; | wc -l"}, {"invocation": "Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree", "cmd": "find . -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Find all regular files under '/usr/bin' directory tree that are less than 50 bytes in size", "cmd": "find /usr/bin -type f -size -50c"}, {"invocation": "Takes path list from '.exportfiles.text' file, cuts off first two path segments and last one.", "cmd": "cut -d / -f 4- .exportfiles.text | xargs -n 1 dirname"}, {"invocation": "Find a single file called FindCommandExamples.txt under current directory and remove it", "cmd": "find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}, {"invocation": "Find all executable files", "cmd": "find / -perm /a=x"}, {"invocation": "List all files in the /myfiles directory tree", "cmd": "find /myfiles -exec ls -l {} ;"}, {"invocation": "display all the .sh scripts and perl files in the current folder", "cmd": "find . -type f \\( -name \"*.[sS][hH]\" -o -name \"*.[pP][lL]\" \\)"}, {"invocation": "find all the text files in the home directory", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "Print the sizes and names of all TXT files from the current directory tree", "cmd": "find . -iname \"*.txt\" -exec du -b {} +"}, {"invocation": "Save the list of all .py files under and below the current directory that contain \"something\" in their pathnames to output.txt", "cmd": "find . -name '*.py' | tee output.txt | xargs grep 'something'"}, {"invocation": "Show the subdirectories of the current directory", "cmd": "find . -maxdepth 1 -type d -print | xargs -I {} echo Directory: {}"}, {"invocation": "Print which files differ between \"dir1/\" and \"dir2/\"", "cmd": "diff --brief -r dir1/ dir2/"}, {"invocation": "Compare \"$source_file\" and \"$dest_file\" line by line", "cmd": "diff \"$source_file\" \"$dest_file\""}, {"invocation": "Find all files and directories under current directory without crossing over to other partitions", "cmd": "find . -xdev -print0"}, {"invocation": "Correct permissions for directories in the web directory", "cmd": "find /your/webdir/ -type d -print0 | xargs -0 chmod 755"}, {"invocation": "Determine if /full/path exists on a mounted file system.", "cmd": "df /full/path | grep -q /full/path"}, {"invocation": "Find all regular files that were modified $FTIME days ago under current directory tree", "cmd": "find . -type f -mtime $FTIME"}, {"invocation": "Search the /path tree for all executables", "cmd": "find /path -perm /ugo+x"}, {"invocation": "Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories", "cmd": "find . -maxdepth 1 -name 'onlyme*'"}, {"invocation": "find all files in the current folder which are bigger than 10MB and less than 50 MB", "cmd": "find . -size +10M -size -50M -print"}, {"invocation": "Save IP addresses of the host name in variable \"ip\"", "cmd": "ip=$(hostname -I)"}, {"invocation": "Case-insensitive search for \"error\" in file report.txt, display one page at a time, waiting for user interaction between each.", "cmd": "cat report.txt | grep -i error | more"}, {"invocation": "Print name of the block device containing the file system containing $path.", "cmd": "df -P \"$path\" | awk 'BEGIN {FS=\"[ ]*[0-9]+%?[ ]+\"}; NR==2 {print $1}'"}, {"invocation": "Gets MAC address of eth0 network interface.", "cmd": "ifconfig eth0 | grep -Eoi [:0-9A-F:]{2}\\(\\:[:0-9A-F:]{2}\\){5}"}, {"invocation": "Print the average time of 4 ping requests to \"www.stackoverflow.com\"", "cmd": "ping -c 4 www.stackoverflow.com | awk -F '/' 'END {print $5}'"}, {"invocation": "display long listing of all the regular hidden files in the folder Musica", "cmd": "find M\u00fasica/* -type f -name \".*\" -exec ls -l {} \\;"}, {"invocation": "Split \"/tmp/files\" into files of at most 1000 lines each", "cmd": "split /tmp/files"}, {"invocation": "Output all lines that have a common first colon-separated field in files 'selection2.txt' and 'selection1.txt' by displaying the common (first) field of each line, followed by the extra fields in both lines.", "cmd": "join -t: selection2.txt selection1.txt"}, {"invocation": "search for a word in all the normal/regular files in the current folder", "cmd": "find . -type f | xargs grep \"text\""}, {"invocation": "display the filenames which do not have begin with dot (.)", "cmd": "find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}, {"invocation": "Delete all files under $DESTINATION directory tree that were modified more than 7 days ago", "cmd": "find $DESTINATION -mtime +7 -exec rm {} \\;"}, {"invocation": "search for the files \"foo.txt\" in the current folder", "cmd": "find . -name foo.txt"}, {"invocation": "Search for 'example' in all regular files from the current directory", "cmd": "find -maxdepth 1 -type f | xargs grep -F 'example'"}, {"invocation": "Set permissions to ug=rw,o= for files inside the ./default/files tree", "cmd": "find ./default/files -type f -exec chmod ug=rw,o= '{}' \\;"}, {"invocation": "Find files in the current directory and its sub-directories that begin with 'f'.", "cmd": "find . -name f* -print"}, {"invocation": "Delete all .svn files/directories under current directory", "cmd": "find . -name .svn -exec rm -rf {} +"}, {"invocation": "Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\\n(.*)/\\2 \\1/' on the output", "cmd": "find . -iname \"$srch1*\" -exec grep \"It took\" {} \\; -print |sed -r 'N;s/(.*)\\n(.*)/\\2 \\1/'"}, {"invocation": "display all empty files(files with sisze 0 bytes) in home folder", "cmd": "find ~ -empty"}, {"invocation": "find all files with pattern` '*.mp3'", "cmd": "find / -name *.mp3"}, {"invocation": "find all the files in the home folder which have been modified today", "cmd": "find ~ -type f -mtime 0"}, {"invocation": "find all the php/javascript files in current folder using regular expressions", "cmd": "find . -regex '.+\\.\\(php|js\\)'"}, {"invocation": "view the manual page of find", "cmd": "man find"}, {"invocation": "Find files/directories named 'foo' under current directory tree without descending into directories named 'foo'", "cmd": "find . -name foo -type d -prune -o -name foo -print"}, {"invocation": "list all files in /home/bozo/projects directory tree that were modified exactly one day ago.", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Search /path/to/your/directory for *.avi and *.flv files", "cmd": "find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)'"}, {"invocation": "Calculate the md5 sum of the md5 sum of all the files sorted under \"$path\"", "cmd": "find \"$path\" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"}, {"invocation": "Search all regular files in the current directory for \"example\"", "cmd": "find -maxdepth 1 -type f | xargs grep -F 'example'"}, {"invocation": "Creates temporary file with name formatted like 'emacs-manager.XXXXXX' in '/tmp/' folder and saves path to it in 'tmp_file' variable.", "cmd": "tmp_file=`mktemp --tmpdir=/tmp emacs-manager.XXXXXX`"}, {"invocation": "List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*", "cmd": "find . -type f -name \"*.txt\" ! -path \"./Movies/*\" ! -path \"./Downloads/*\" ! -path \"./Music/*\" -ls"}, {"invocation": "Get a recursive file list of directory $dir", "cmd": "find \"$dir\" -type f"}, {"invocation": "Remove all \"CVS\" directories from the current directory tree, ignoring the case", "cmd": "find . -iname CVS -type d | xargs rm -rf"}, {"invocation": "Change the owner and group of \"uid_demo\" to \"root\"", "cmd": "sudo chown root:root uid_demo"}, {"invocation": "For each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2.", "cmd": "join -j1 file2 file1"}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find . -name test -type d -exec rm -r {} \\;"}, {"invocation": "Search in current directory downwards all files whose size is 10 bytes ( Characters ) .", "cmd": "find . -size 10c -print"}, {"invocation": "find all the regular/normal files in the current folder", "cmd": "find -type f"}, {"invocation": "Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar", "cmd": "find . -name '*FoooBar*' | sed 's/.*/\"&\"/' | xargs cp ~/foo/bar"}, {"invocation": "Find directories named `doc' in /usr and below", "cmd": "find /usr -name doc -type d"}, {"invocation": "Delete all files/directories under current directory", "cmd": "find -delete"}, {"invocation": "Archive \"foo/bar/baz.c\" to \"remote:/tmp/\" preserving the relative path of \"foo/bar/baz.c\"", "cmd": "rsync -avR foo/bar/baz.c remote:/tmp/"}, {"invocation": "Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"", "cmd": "find . -type f | egrep '\\.(shtml|css)$'"}, {"invocation": "Perform case-insensitive search for file `TeSt123.txt' on the system", "cmd": "find / -iname TeSt123.txt"}, {"invocation": "Copy the directory structure in \"src/\" to \"dest/\" with empty files", "cmd": "find src/ -type d -exec mkdir -p dest/{} \\; -o -type f -exec touch dest/{} \\;"}, {"invocation": "Print the last 1000 lines of all files matching \"/var/spool/cron/*\"", "cmd": "tail -n 1000 /var/spool/cron/*"}, {"invocation": "create directory dir1", "cmd": "mkdir dir1"}, {"invocation": "Print the full path of command \"gcc\"", "cmd": "which gcc"}, {"invocation": "search for the ip \"192.168.1.5\" in all the files in /etc folder", "cmd": "find /etc/ -iname \"*\" | xargs grep '192.168.1.5'"}, {"invocation": "Save number of lines in '/some/big/file' to 'LINES' variable", "cmd": "LINES=$(cat /some/big/file | wc -l)"}, {"invocation": "Change owner to \"root\" and group to \"dockerroot\" of \"/var/run/docker.sock\"", "cmd": "sudo chown root:dockerroot /var/run/docker.sock"}, {"invocation": "Print the input \"hello world\" to the console followed by a swap of the first two awk fields", "cmd": "echo hello world | tee /dev/tty | awk '{print $2, $1}'"}, {"invocation": "Search the ~/Books directory recursively for files named \"Waldo\"", "cmd": "find ~/Books -name Waldo"}, {"invocation": "Print the list of files and directories of the /etc directory", "cmd": "find /etc   ! -name /etc"}, {"invocation": "get year-month-day from date", "cmd": "date +%Y-%m-%d"}, {"invocation": "Save absolute path of \"$path\" that may not exist to variable \"abspath\"", "cmd": "abspath=$(readlink -m $path)"}, {"invocation": "Verbosely compresses all files on fifth and sixth depth level keeping original files in place.", "cmd": "bzip2 -kv */*/*/*/*/*"}, {"invocation": "Find files/directories named blah under current directory", "cmd": "find ./ -name blah"}, {"invocation": "Change the owner and group of \"testfile.txt\" to \"root\"", "cmd": "sudo chown root:root testfile.txt"}, {"invocation": "Find all 50MB files in file system", "cmd": "find / -size 50M"}, {"invocation": "Update the timestamp of 'filename', or create an empty file if it doesn't exist.", "cmd": "touch filename"}, {"invocation": "Answer \"y\" to all prompts of \"rm -rf foo\"", "cmd": "yes | rm -ri foo"}, {"invocation": "Find all php files under current directory", "cmd": "find . -type f -name \"*.php\""}, {"invocation": "display the list of all the text files present in the current directory excluding the search in certain paths.", "cmd": "find . -type f -name \"*.txt\" ! -path \"./Movies/*\" ! -path \"./Downloads/*\" ! -path \"./Music/*\" -ls"}, {"invocation": "Execute awk command '{ ...}' on compressed file \"FILE\"", "cmd": "zcat FILE | awk '{ ...}'"}, {"invocation": "find all the files in the present directory which have the group staff and check if is a symbolic link and display it.", "cmd": "find `pwd` -group staff -exec find {} -type l -print ;"}, {"invocation": "Remove all broken symlinks from the /usr/ports/packages directory tree", "cmd": "find -L /usr/ports/packages -type l -delete"}, {"invocation": "Open a session-less connection to 'host' as user 'user' in master mode with a socket \"/tmp/%r@%h:%p\" to enable connection sharing", "cmd": "ssh user@host -M -S /tmp/%r@%h:%p -N"}, {"invocation": "find all the files in the current directory ending with \".i\"", "cmd": "find . -name \".*\\.i\""}, {"invocation": "Search the current directory tree for symlinks whose contents match pattern \"*sysdep.c\"", "cmd": "find . -lname '*sysdep.c'"}, {"invocation": "Find files under /usr that are newer than the first file `FirstFile'", "cmd": "find /usr -newer /usr/FirstFile -print"}, {"invocation": "show the sum of disk used by all the files that belong to the user \"test1\" in the entire file system", "cmd": "find / -user test1 -exec du -sm {} \\;|awk '{s+=$1}END{print s}'"}, {"invocation": "Print the base name via grep of the current working directory", "cmd": "pwd | grep -o '[^/]*$'"}, {"invocation": "Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir", "cmd": "find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir"}, {"invocation": "display all the symbolic links in the current folder", "cmd": "find ./ -type l"}, {"invocation": "Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables", "cmd": "od -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20"}, {"invocation": "Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in", "cmd": "find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}, {"invocation": "split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes", "cmd": "split -a4 -d -l100000 hugefile.txt part."}, {"invocation": "List the unique second \"/\" delimited field of every line from standard input prefixed by the number of occurrences", "cmd": "cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c"}, {"invocation": "Find all files/directories named 'file_name' under current directory tree", "cmd": "find . -name file_name"}, {"invocation": "Archive \"myfile\" to \"/foo/bar/\" and create directory \"/foo/bar/\" if \"/foo/\" exists", "cmd": "rsync -a myfile /foo/bar/"}, {"invocation": "Close the master SSH control socket \"my-ctrl-socket\" to \"jm@sampledomain.com\"", "cmd": "ssh -S my-ctrl-socket -O exit jm@sampledomain.com"}, {"invocation": "Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*", "cmd": "find . -mtime 0 | grep -v '^\\./en' | grep -v '^\\./es'"}, {"invocation": "Find all empty regular files in the current directory tree", "cmd": "find . -size 0c -type f"}, {"invocation": "Remove the \"123_\" prefix from all filenames of .txt files in current directory.", "cmd": "rename 's/^123_//' *.txt"}, {"invocation": "Find all regular files starting from / that have permissions 777", "cmd": "find / -type f -perm 0777"}, {"invocation": "Find all *.pdf files under ./polkadots", "cmd": "find ./polkadots -type f -name \"*.pdf\""}, {"invocation": "Show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.", "cmd": "uname -a"}, {"invocation": "Open all .java files in the current directory tree in the vim editor", "cmd": "find . -name '*.java' -exec vim {} +"}, {"invocation": "Show the list of files that are not owned by user wnj or are not newer than file `ttt'", "cmd": "find / \\! \\( -newer ttt -user wnj \\) -print"}, {"invocation": "Print the line with most consecutive repeats prefixed with its count from standard input", "cmd": "uniq -c | sort -n | tail -n1"}, {"invocation": "Change all files with no user under \"/var/www\" to have owner \"root\" and group \"apache\"", "cmd": "sudo find /var/www -nouser -exec chown root:apache {} \\;"}, {"invocation": "find all the files that have been modified in the last 12 hours", "cmd": "find ./ -mtime -0.5"}, {"invocation": "Numerically sort standard input by the second word of each line and output from greatest value to least value", "cmd": "sort -nrk 2,2"}, {"invocation": "Copy directory hierarchy from the current working directory to \"/path/to/backup/\"", "cmd": "find . -type d -exec mkdir -p -- /path/to/backup/{} \\;"}, {"invocation": "Replace all '\u7f6e\u63db\u524d' with '\u7f6e\u63db\u5f8c' in all regular files under current directory tree and modify them in-place", "cmd": "sudo find . -type f -exec sed -i 's/\u7f6e\u63db\u524d/\u7f6e\u63db\u5f8c/g' {} \\;"}, {"invocation": "Find files and directories modified in last 24 hours", "cmd": "find . -mtime 1"}, {"invocation": "Delete all files with inode number 804180", "cmd": "find -inum 804180 -exec rm {} \\"}, {"invocation": "remove top-level domain (.com, .org) from URL's in urllist.txt", "cmd": "rev urllist.txt | cut -d. -f 2- | rev"}, {"invocation": "Find all files/directories named 'pattern' under current directory tree", "cmd": "find . -name \"pattern\" -print"}, {"invocation": "show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything", "cmd": "find * -prune -type f -size +0c -print"}, {"invocation": "Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.", "cmd": "find /apps/ -user root -type f -amin -2 -name *.rb"}, {"invocation": "Make directories to \"/my/other/path/here\" as needed", "cmd": "mkdir -p /my/other/path/here"}, {"invocation": "Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension", "cmd": "find . -type f | sed -e 's/.*\\.//' | sed -e 's/.*\\///' | sort | uniq -c | sort -rn"}, {"invocation": "Replace each non-blank line in \"YOURFILE\" preceded with \"pX=\" where \"X\" is the line number", "cmd": "grep -v '^$' YOURFILE | nl -s= -w99 | tr -s ' ' p"}, {"invocation": "Calculate the md5 sum of \"logdir\" and print only the hash", "cmd": "echo -n \"logdir\" | md5sum - | awk '{print $1}'"}, {"invocation": "display all the php files in the entire file system", "cmd": "find / -name \"*.php\""}, {"invocation": "Find files in the current directory tree that match pattern \"*sub*\"", "cmd": "find ./ -name \"*sub*\""}, {"invocation": "delete all the tmp files ( files with the extension tmp ) in the /tmp folder", "cmd": "find /tmp -name \"*.tmp\" | xargs rm"}, {"invocation": "Find regular files in the current directory tree that have executable bits set for the user and group but not for the other", "cmd": "find -L . -type f -perm -u=x,g=x  \\! -perm -o=x"}, {"invocation": "search all the files in the current folder using regex excluding those that are present in the folder test", "cmd": "find . -name test -prune -o -regex \".*/my.*p.$\""}, {"invocation": "Send each byte in \"/home/cscape/Desktop/file\" to awk script \"x.awk\"", "cmd": "fold -1 /home/cscape/Desktop/file  | awk -f x.awk"}, {"invocation": "Print a summary of the command-line usage of find", "cmd": "find --help"}, {"invocation": "Display compter's hostname", "cmd": "echo `uname -a | awk '{print $2}'`"}, {"invocation": "display all files in the entire file system excluding those that are in the transfer directory", "cmd": "find / -name /transfer -prune -o -print"}, {"invocation": "Search the current directory and all of its sub-directories for the file 'file1'.", "cmd": "find . -name file1 -print"}, {"invocation": "Grab a gzipped text file from the web and display its decompressed content, interactively paging through the output.", "cmd": "curl -s 'http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz' | gunzip -dc | less"}, {"invocation": "find the most recently changed files under current directory", "cmd": "find . -type f -printf '%TY-%Tm-%Td %TT   %p\\n' | sort"}, {"invocation": "Recursively change owner to \"www-data\" of \"/var/www/.gnome2\", \"/var/www/.config\", and \"/var/www/.config/inkscape\"", "cmd": "chown -R www-data /var/www/.gnome2 /var/www/.config /var/www/.config/inkscape"}, {"invocation": "Find all files/directories named 'photoA.jpg' under current directory tree", "cmd": "find . -name photoA.jpg"}, {"invocation": "Print the day at 1 day ago in 2 months from now", "cmd": "date -d \"$(date -d \"2 months\" +%Y-%m-1) -1 day\" +%a"}, {"invocation": "display all the \".c\" files in the current folder excluding those that are present in all the sub directories", "cmd": "find . \\( ! -name . -prune \\) -name \"*.c\" -print"}, {"invocation": "Prints directory where the executing script ($0) is located.", "cmd": "$(dirname $0)"}, {"invocation": "find a 'fool.scala' named regular file under /opt /usr /var those directories.", "cmd": "find /opt /usr /var -name foo.scala -type f"}, {"invocation": "Pass a wildcard to scp by escaping it: copy all files with names starting with \"files\" in directory \"/location\" on host \"server\" to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files.", "cmd": "scp -vp me@server:/location/files\\*"}, {"invocation": "Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names", "cmd": "find . -iname '*blah*' \\( -type d -o -type f \\) -mtime -2"}, {"invocation": "Save the first word of the first difference in \".dir_list_2\" compared to \".dir_list_1\" into variable \"extract_dir\"", "cmd": "extract_dir=$(diff .dir_list_1 .dir_list_2 | grep '>' | head -1 | cut -d' ' -f2)"}, {"invocation": "delete all the empty files in the current directory", "cmd": "find . -empty -exec rm {}\\;"}, {"invocation": "find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.", "cmd": "find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}, {"invocation": "search for a cpp directory in current folder and display all its files", "cmd": "find . -type d -name \"cpp\" -exec find {} -type f \\;"}, {"invocation": "Enables shell option 'direxpand'.", "cmd": "shopt -s direxpand"}, {"invocation": "Serach in current directory downwards all files which  have not been modified since last 7 days", "cmd": "find .  -mtime +7 -print"}, {"invocation": "search for all the files in the folder /home which have sticky bit set and have the permissions 553", "cmd": "find /home -perm 1553"}, {"invocation": "change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin", "cmd": "find . /home/admin/data/ -type f -exec chown admin.admin {} \\;"}, {"invocation": "Save full path of command \"cat\" to variable \"CAT\"", "cmd": "CAT=`which cat`"}, {"invocation": "download a file \"http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip\" using cookies \"oraclelicense=accept-securebackup-cookie\"", "cmd": "curl -L -C - -b \"oraclelicense=accept-securebackup-cookie\" -O http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip"}, {"invocation": "Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line", "cmd": "find . -name \"*.rb\" -type f -print0 | xargs -0 -n 2 echo"}, {"invocation": "find all the files in the current directory with the name \"wagoneer\" which are in the current device.", "cmd": "find . -xdev -name \"wagoneer*\" -print"}, {"invocation": "Locate all files in the current directory and below that have \"testfile\" in their names", "cmd": "find -name \"*testfile*\""}, {"invocation": "Find all regular files on the system whose size is greater than 20000k", "cmd": "find / -type f -size +20000k"}, {"invocation": "Find all directories under and below directory \"folder_name\", and change their permissions to 775", "cmd": "find folder_name -type d -exec chmod 775 \u2018{}\u2019 \\;"}, {"invocation": "Remove each unique item listed on standard input and do nothing if empty", "cmd": "sort | uniq -u | xargs -r rm"}, {"invocation": "Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.", "cmd": "path=$(basename $(pwd) | tr 'A-Z' 'a-z' )"}, {"invocation": "Remove \"\\n\" from \"test1\\ntest2\\ntest3\" and search for \"test1.*test3\"", "cmd": "echo -e \"test1\\ntest2\\ntest3\" |tr -d '\\n' |grep \"test1.*test3\""}, {"invocation": "Find all files/directories named 'findcommandexamples.txt' (case insensitive) in the entire filesystem", "cmd": "find  / -iname findcommandexamples.txt"}, {"invocation": "Search the files from the current directory tree for \"foo\"", "cmd": "find . -exec grep foo {} +"}, {"invocation": "Delete all empty subdirectories in and below directory/", "cmd": "find directory -mindepth 1 -type d -empty -delete"}, {"invocation": "Read a line from standard input with prompt \"Are you alright? (y/n) \" and save the response to variable \"RESP\"", "cmd": "read -p \"Are you alright? (y/n) \" RESP"}, {"invocation": "ERROR - this is for DOS", "cmd": "ping -n 1 %ip% | find \"TTL\""}, {"invocation": "Changes group ownership of 'myprog' to 'groupb'.", "cmd": "chgrp groupb myprog"}, {"invocation": "display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.", "cmd": "find . -maxdepth 1 -type f | xargs -I \u2018{}\u2019 sudo mv {} /directory1/directory2"}, {"invocation": "Find all the files which are modified 50 days back", "cmd": "find / -mtime 50"}, {"invocation": "Save the current date to 'DATE' variable", "cmd": "DATE=$(echo `date`)"}, {"invocation": "Delete all regular files named 'FILE-TO-FIND' under current directory tree", "cmd": "find . -type f -name \"FILE-TO-FIND\" -exec rm -f {} \\;"}, {"invocation": "Find all directories that have been accessed $FTIME days ago under current directory tree", "cmd": "find . -type d -atime $FTIME"}, {"invocation": "Search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named 'instr.txt'", "cmd": "find /usr/share/doc /usr/doc /usr/locale/doc -name instr.txt"}, {"invocation": "find all the files starting with \"config\" in the folder Symfony", "cmd": "find Symfony -name '*config*';"}, {"invocation": "Find all files under /myfiles with read-write access for others", "cmd": "find /myfiles -type f -perm -o+rw"}, {"invocation": "archive all the normal/regular files in the current directory which have been modified in the last 24 hours.", "cmd": "find . -mtime -1 -type f -exec tar rvf \"$archive.tar\" '{}' \\;"}, {"invocation": "Print numbers from 1 to 30 with equalized 0 padding", "cmd": "seq -w 30"}, {"invocation": "display all files in the entire file system", "cmd": "find /"}, {"invocation": "find all the files in current folder which have been updated in the last 60 minutes", "cmd": "find . -mmin -60"}, {"invocation": "find all files in etc which have been changed in the last 25 hours", "cmd": "find /etc -ctime -1"}, {"invocation": "Set variable \"b\" to the first word of \"a\" converted to uppercase.", "cmd": "b=`echo \"$a\" | awk '{ print toupper($1) }'`"}, {"invocation": "Print all non-hidden files in the current directory and its subdirectories", "cmd": "find . -not -path '*/\\.*'"}, {"invocation": "Recursively copies 'src' to 'dest' preserving overwriting the existing files.", "cmd": "cp -nr src_dir dest_dir"}, {"invocation": "Recursively changes group ownership of everything within a current folder to 'admin'.", "cmd": "chgrp -R admin *"}, {"invocation": "Change the permissions of the current directory and all its subdirectories to 755.", "cmd": "find . -type d -exec chmod 755 {} \\;"}, {"invocation": "Find files on the system modified more than 90 minutes ago", "cmd": "find / -mmin +90"}, {"invocation": "Saves number of lines of current directory listing in 'n_max' variable.", "cmd": "n_max=`ls . | wc -l`"}, {"invocation": "search for the file, filename.txt in the current folder ( case insensitive search )", "cmd": "find . -iname filename.txt"}, {"invocation": "Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.", "cmd": "echo $b|grep -q $a"}, {"invocation": "Archive any files changed in the last day from \"remote_host\" to \"local_dir\"", "cmd": "rsync -av remote_host:'$(find logs -type f -ctime -1)' local_dir"}, {"invocation": "find all the cpp files in the current folder and move them to another folder", "cmd": "find . -type f -iname '*.cpp' -exec mv {} ./test/ \\;"}, {"invocation": "change the permissions of all the directories to 755 in the folder \"/home/nobody/public_html\"", "cmd": "find /home/nobody/public_html -type d -exec chmod 755 {} \\;"}, {"invocation": "remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names", "cmd": "find -name \"*.txt\" -print0 | xargs -0 rm"}, {"invocation": "Remove duplicate phrases and keep the original order of lines in \"$infile\"", "cmd": "nl -w 8 \"$infile\" | sort -k2 -u | sort -n | cut -f2"}, {"invocation": "find all the files in the entire file system whose size is between 50Mb to 100MB", "cmd": "find / -size +50M -size -100M"}, {"invocation": "Find all empty files in /tmp", "cmd": "find /tmp -type f -empty"}, {"invocation": "Recursively change ownership of \"/usr/local/lib\" to the current user", "cmd": "sudo chown -R `whoami` /usr/local/lib"}, {"invocation": "Find all regular files in the entire filesystem that belong to the group 'users'", "cmd": "find /  -type f -group users"}, {"invocation": "find all the links in the current folder which are broken", "cmd": "find /target -type l -xtype l"}, {"invocation": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case", "cmd": "find . -maxdepth 1 -not -iname file.txt"}, {"invocation": "Write \"[some repository]\" to standard output and append to \"/etc/apt/sources.list\" as root", "cmd": "echo \"[some repository]\" | sudo tee -a /etc/apt/sources.list"}, {"invocation": "Display all symlinks and their targets in the current directory", "cmd": "find -P .  -maxdepth 1 -type l -exec echo -n \"{} -> \" \\; -exec readlink {} \\;"}, {"invocation": "remove all the files in current folder which have the extension \"DS_Store\"", "cmd": "find . -name \".DS_Store\" -exec rm {} \\;"}, {"invocation": "find all files in the current folder which are of size 0 bytes.", "cmd": "find . -type f -empty"}, {"invocation": "Write a random list of numbers to /tmp/lst and stdout.", "cmd": "seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo '-------') **...**"}, {"invocation": "Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.", "cmd": "VAR=`dig axfr @dc1.localdomain.com localdomain.com | grep -i Lawler | awk '{ getline ; $1=substr($1,1,length($1)-1); print $1 ; exit }'`"}, {"invocation": "Find all files named \"file.ext\" within the current folder and print the path where each one is located", "cmd": "find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}, {"invocation": "Prints current month calendar, without highlighting of a current date.", "cmd": "cal -h"}, {"invocation": "Prints year-month-date format for given time", "cmd": "date -d \"yesterday 13:00\" '+%Y-%m-%d'"}, {"invocation": "Find all directories by the name `httpdocs' on the system", "cmd": "find / -type d -name 'httpdocs'"}, {"invocation": "Get the number of regular files in the directory given as the bash script argument $1", "cmd": "find $1 -type f | wc -l"}, {"invocation": "Search the /Path/bar* directories recursively for files matching pattern \"file_name*\"", "cmd": "find /Path/bar* -name \"file_name*\""}, {"invocation": "Split \"infile\" into 2 files of about equal size", "cmd": "split -n2 infile"}, {"invocation": "Find regular files named \"expression -or expression\" under and below /dir/to/search/", "cmd": "find /dir/to/search/ -type f -name 'expression -or expression' -print"}, {"invocation": "find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with \"_ocr.pdf\"", "cmd": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0"}, {"invocation": "delete all text files from current folder", "cmd": "find . -type f ! -iname \"*.txt\" -delete"}, {"invocation": "find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group", "cmd": "find / -path /proc -prune -o -nouser -o -nogroup"}, {"invocation": "Reports count of processors in system.", "cmd": "grep \"^core id\" /proc/cpuinfo | sort -u | wc -l"}, {"invocation": "Find all *.rb (regular) files under current directory and count their line numbers", "cmd": "find . -name \"*.rb\" -type f | xargs wc -l"}, {"invocation": "Read a line from standard input", "cmd": "read"}, {"invocation": "display the sum of disk used by all the access.log files in /var/www folder", "cmd": "find /var/www/ -type f -name \u00abaccess.log*\u00bb -exec du -k {} \\;|awk '{s+=$1}END{print s}'"}, {"invocation": "display all files in current folder excluding text files", "cmd": "find . ! -name \"*.txt\""}, {"invocation": "Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.", "cmd": "find . -atime +30 -print"}, {"invocation": "search for all the files in the current directory which have the name a.out or core or which end with .o and delete them.", "cmd": "find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}, {"invocation": "search for the word \"methodNameHere\" in all the python files in the folder \"/mycool/project/\" and display color on the matched lines in the output", "cmd": "find /mycool/project/ -type f -name \"*.py\" -print0 | xargs -I {} -0 grep -H --color \"methodNameHere\" \"{}\""}, {"invocation": "Reformat date \"Sat Aug 09 13:37:14 2014 +1100\" according to format string \"%a %b %d %H:%M:%S %Y %z\"", "cmd": "date -j -f \"%a %b %d %H:%M:%S %Y %z\" \"Sat Aug 09 13:37:14 2014 +1100\""}, {"invocation": "Remount \"/\" with read and write permission", "cmd": "mount / -o remount,rw"}, {"invocation": "display a long listing of all the files in the home folder which are bigger than 200MB", "cmd": "find /home -size +200M -exec ls -sh {} \\;"}, {"invocation": "Find all *.c files under /home", "cmd": "find /home -name \"*.c\""}, {"invocation": "Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'", "cmd": "ssh -f -N -L localhost:12345:otherHost:12345   otherUser@otherHost"}, {"invocation": "display all the files in the home folder that have been modified in the last 24 hours", "cmd": "find $HOME -mtime -1"}, {"invocation": "find all the mp3 files in the file system", "cmd": "find / -iname \"*.mp3\" -print"}, {"invocation": "Find files named 'core' in or below the directory /tmp and delete them", "cmd": "find /tmp -depth -name core -type f -delete"}, {"invocation": "Remove from the current directory tree all the regular files which have a dot in their names and contain string \"<img-name>-<width:integer>x<height:integer>.<file-ext> syntax\"", "cmd": "find . -name \"*.*\" -type f -exec grep -l '<img-name>-<width:integer>x<height:integer>.<file-ext> syntax' {} \\; | xargs rm -f"}, {"invocation": "Locate all *.mov files in the current directory tree", "cmd": "find . -name '*.mov'"}, {"invocation": "Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories", "cmd": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -exec sed -i 's/[:space:]+$//' \\{} \\;  -exec sed -i 's/\\r\\n$/\\n/' \\{} \\;"}, {"invocation": "Add group write permission to all files matching \"*\" or \"...*\"", "cmd": "chmod g+w * ...*"}, {"invocation": "Search for all files owned by user www-data that are not larger than 100kb", "cmd": "find -user www-data -not -size +100k"}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 1 day ago", "cmd": "find . -type f -mtime +1"}, {"invocation": "Search for \"facebook\\|xing\\|linkedin\\|googleplus\" in \"access-log.txt\" and print a count of the unique entries", "cmd": "grep -ioh \"facebook\\|xing\\|linkedin\\|googleplus\" access-log.txt | sort | uniq -c | sort -n"}, {"invocation": "Make directories \"Labs/lab4a/folder1\", \"Labs/lab4a/myfolder\", and \"Labs/lab4a/foofolder\"", "cmd": "mkdir Labs/lab4a/{folder1,myfolder,foofolder}"}, {"invocation": "Find files matching an exact set of permissions", "cmd": "find / -perm 644"}, {"invocation": "find all the html files in the current folder which have been modified exactly 7 days ago", "cmd": "find . -mtime 7 -name \"*.html\" -print"}, {"invocation": "Print file type information of the \"java\" executable", "cmd": "cat `which java` | file -"}, {"invocation": "Search the current directory tree for a regular file named \"file_name\"", "cmd": "find . -type f -name file_name"}, {"invocation": "Remove all files with '.js' extension from the 'js' directory tree", "cmd": "find ./js/ -type f -name \"*.js\" | xargs rm -f"}, {"invocation": "change user and group of the file bin to user and group root:wheel", "cmd": "sudo chown root:wheel bin"}, {"invocation": "Print extended file information for regular files found under the home directory whose names start with my", "cmd": "find . -name 'my*' -type f -ls"}, {"invocation": "Locate files that reside in the home directory and have not been accessed in the past 30 days", "cmd": "find $HOME -atime +30"}, {"invocation": "Search the directory $path recursively for regular files with the given $extension", "cmd": "find $path -type f -name \"*.$extension\""}, {"invocation": "search for a word in all the shell scripts in the current folder and display the matched files.", "cmd": "find . -type f -name \"*.sh\" -exec grep -l landoflinux {} \\;"}, {"invocation": "Print a colon-separated list of all directories from the ~/code directory tree", "cmd": "find ~/code -type d | tr '\\n' ':' | sed 's/:$//'"}, {"invocation": "Find disk used space of only the target directory", "cmd": "du --max-depth=0 ./directory"}, {"invocation": "Rename all files in current directory to lowerase, overwriting any existing files.", "cmd": "rename -f 'y/A-Z/a-z/' *"}, {"invocation": "download contents from \"https://raw.github.com/creationix/nvm/master/install.sh\" and execute", "cmd": "curl https://raw.github.com/creationix/nvm/master/install.sh | sh"}, {"invocation": "Find files in entire file system that are writable by group or other", "cmd": "find / -perm /g+w,o+w"}, {"invocation": "View the contents of \"file.txt\" with line numbers in the pager \"less\"", "cmd": "cat -n file.txt | less"}, {"invocation": "Creates temporary file in $appdir variable with name formatted like expression in variable ${template}, and saves path to it in 'launcherfile' variable.", "cmd": "launcherfile=$(mktemp -p \"$appdir\" \"$template\")"}, {"invocation": "Create a copy of the current working directory structure in the usr/project directory,", "cmd": "find . -type d -print|sed 's@^@/usr/project/@'|xargs mkdir -p"}, {"invocation": "Find all directories under ${1:-.} directory without descending into any sub-directories", "cmd": "find ${1:-.} -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "Request A record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching 'DIG'", "cmd": "dig @$ns $d A | grep $d | grep -v \"DiG\""}, {"invocation": "Show all lines in file2 that don't contain the first field of any line in file1.", "cmd": "awk '{print $1}' file2 | comm -1 -3 file1 - | join file2 -"}, {"invocation": "Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size", "cmd": "find $HOME -iname '*.ogg' -type f -size -100M"}, {"invocation": "Find all files/directories named 'game' under current directory tree", "cmd": "find . -name game"}, {"invocation": "Calculate the md5 sum of \"yourstring\"", "cmd": "echo -n \"yourstring\" |md5sum"}, {"invocation": "Sets shell option 'globstar'.", "cmd": "shopt -s globstar"}, {"invocation": "Print all unique strings in $1.tmp file.", "cmd": "cat $1.tmp | sort -u"}, {"invocation": "Gets MAC address of 'eth0' network interface.", "cmd": "ifconfig eth0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}, {"invocation": "Append history lines from this session to the history list", "cmd": "history -a"}, {"invocation": "Download \"http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz\", unzip it, and view the output in \"less\"", "cmd": "curl -s 'http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz' | gunzip -dc | less"}, {"invocation": "Write \"2-1\" to standard output and to \"/sys/bus/usb/drivers/usb/unbind\"", "cmd": "echo '2-1' |sudo tee /sys/bus/usb/drivers/usb/unbind"}, {"invocation": "Find all files in the current directory tree whose names are \".DS_STORE\"", "cmd": "find . -name \".DS_STORE\""}, {"invocation": "Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string \"debug (\"", "cmd": "find /srv/www/*/htdocs/system/application/ -name \"*.php\" -print0 | xargs -0 grep -H \"debug (\""}, {"invocation": "Set permissions to ug=rwx,o= for directories inside the ./default/files tree", "cmd": "find ./default/files -type d -exec chmod ug=rwx,o= '{}' \\;"}, {"invocation": "Create a symbolic link in the current directory for each file .dbf under the directories matching \"/home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9]\"", "cmd": "find /home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9] -name '*.dbf' -type f -exec ln -s {} \\;"}, {"invocation": "Set permissions for files in `foldername' to 777", "cmd": "find foldername -exec chmod a+rwx {} \";\""}, {"invocation": "Convert the content of variable 'CLEAN' to small letters", "cmd": "CLEAN=`echo -n $CLEAN | tr A-Z a-z`"}, {"invocation": "find all the symbolic links in the current folder", "cmd": "find /etc -type l -print"}, {"invocation": "display all the files in the entire file system", "cmd": "find / -type f -exec echo {} \\;"}, {"invocation": "find all the empty directories in the current folder and all its sub directories too", "cmd": "find . -depth -empty -type d"}, {"invocation": "Save the current working directory and the directory name of the current script to variable \"DIR\"", "cmd": "DIR=`pwd`/`dirname $0`"}, {"invocation": "change owner of the file process to user root", "cmd": "sudo chown root process"}, {"invocation": "Print the output of history without line numbers", "cmd": "history | cut -d' ' -f4- | sed 's/^ \\(.*$\\)/\\1/g'"}, {"invocation": "find all the directories in current folder which start with test", "cmd": "find . -type d -name \"test*\""}, {"invocation": "Remove with prompting all files that have not been accessed in over 100 days", "cmd": "find /mydir -atime +100 -ok rm {} \\;"}, {"invocation": "Find empty files in the test directory", "cmd": "find test -empty"}, {"invocation": "Print the compressed size, uncompressed size, compression ratio, and uncompressed filename of \"file.zip\"", "cmd": "gunzip -l file.zip"}, {"invocation": "Find every file under the directory /var/spool that was modified more than 60 days ago.", "cmd": "find /var/spool -mtime +60"}, {"invocation": "Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.", "cmd": "find . -iname foo -type d"}, {"invocation": "Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"", "cmd": "ping google.com | awk '{ sent=NR-1; received+=/^.*(time=.+ ms).*$/; loss=0; } { if (sent>0) loss=100-((received/sent)*100) } { print $0; printf \"sent:%d received:%d loss:%d%%\\n\", sent, received, loss; }'"}, {"invocation": "Find all symbolic links under the current folder and below", "cmd": "find \u2013L \u2013xtype l"}, {"invocation": "Make directories to \"/some/path\" as needed", "cmd": "mkdir -p ./some/path"}, {"invocation": "Find all files in /dir1 and print only the filenames (not paths)", "cmd": "find /dir1 -type f -printf \"%f\\n\""}, {"invocation": "Print output of script 'trap.sh'", "cmd": "~ $ . trap.sh | cat"}, {"invocation": "check if there any files from the .git folder after excluding it using the prune command", "cmd": "find . -path ./.git -prune -o -print -a \\( -type f -o -type l -o -type d \\) | grep '.git'"}, {"invocation": "force delete all the files that have been modified in the last 3 days", "cmd": "find . -mtime -3 -exec rm -rf {} \\;"}, {"invocation": "change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS", "cmd": "find /usr/lpp/FINANCIALS -print | xargs chown roger.staff"}, {"invocation": "find all the files in the current folder and search for the word \"vps admin\" in them.", "cmd": "find . -exec grep -i \"vds admin\" {} \\;"}, {"invocation": "Recursively changes group ownership of every file in '/var/tmp/jinfo' to 'www-data'.", "cmd": "chgrp -R www-data /var/tmp/jinfo"}, {"invocation": "Remove all files and directories called \"test\" from the current directory tree", "cmd": "find . -name test -exec rm -R \"{}\" \\;"}, {"invocation": "find all files that do not have read permission to all", "cmd": "find . -type f ! -perm -444"}, {"invocation": "Change permissions to 755 for all directories in the current directory tree", "cmd": "find . -type d | xargs chmod -v 755"}, {"invocation": "Display infinite scroll of random ASCII art", "cmd": "yes 'printf \\\\u$[2571+RANDOM%2]'|bash"}, {"invocation": "Request IP address for each domain name received on the command input", "cmd": "dig +short -f - | uniq"}, {"invocation": "Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*'", "cmd": "find /tmp/test/* -mtime -1"}, {"invocation": "list regular file which file name is NOT end with '.html' in current directory in current directory", "cmd": "find . -type f -not -name \"*.html\""}, {"invocation": "Compress all files in the \"$FILE\" directory tree that were last modified 30 days ago and have not already been compressed with gzip", "cmd": "find $FILE -type f -not -name '*.gz' -mtime 30 -exec gzip {} \\;"}, {"invocation": "Recursively prints paths to all text file in folder (ignores binary files).", "cmd": "grep -RIl \"\" ."}, {"invocation": "Counts number of processors and saves in variable NUMCPU.", "cmd": "NUMCPU=$(grep $'^processor\\t*:' /proc/cpuinfo |wc -l)"}, {"invocation": "Search for file \"file\" with minimum depth set to 4", "cmd": "find -mindepth 4 -name file"}, {"invocation": "Save directory \"../../lib\" relative to the executable \"gcc\" to variable \"libdir\"", "cmd": "libdir=$(dirname $(dirname $(which gcc)))/lib"}, {"invocation": "Make a copy of the entire contents of SRCFOLDER called \"DESTFOLDER\", if DESTFOLDER exists, the copy will be placed within it.", "cmd": "cp -R SRCFOLDER DESTFOLDER/"}, {"invocation": "find all files read less than 1 minute ago", "cmd": "find . -amin -1"}, {"invocation": "Find all .java files whose name contains \"Message\"", "cmd": "find . -print | grep '.*Message.*\\.java'"}, {"invocation": "Print the empty directories and files under current directory", "cmd": "find -empty"}, {"invocation": "find all the directories in the file system which begin with \"man\"", "cmd": "find / -type d -name 'man*' -print"}, {"invocation": "Write the lines appended to \"xxxx\" as it appears to the console and append to \"yyyy\" in the background", "cmd": "tail -F xxxx | tee -a yyyy &"}, {"invocation": "find all the files in the folder /home which are exactly of size 10MB", "cmd": "find /home -size 10M"}, {"invocation": "Print the files in the current directory as a list of comma separated values", "cmd": "ls | sed '$!s/$/,/' | tr -d '\\n'"}, {"invocation": "Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string \"debug (\"", "cmd": "find /srv/www/*/htdocs/system/application/ -name \"*.php\" -exec grep \"debug (\" {} \\; -print"}, {"invocation": "Remove all files from the current directory tree whose names do not end with \".tex\" or \".bib\"", "cmd": "find . | egrep -v \"\\.tex|\\.bib\" | xargs rm"}, {"invocation": "Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with \"autumn\".", "cmd": "find . -user daniel -type f -name *.jpg ! -name autumn*"}, {"invocation": "Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory", "cmd": "find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'"}, {"invocation": "Change ownership of \"/vol\" to the current user", "cmd": "sudo chown `whoami` /vol"}, {"invocation": "find all the mp3 files in the entire file system whose size is bigger than 10MB", "cmd": "find / -type f -name *.mp3 -size +10M -exec rm {} \\;"}, {"invocation": "find .bmp or .txt files", "cmd": "find /home/user/Desktop -name '*.bmp' -o -name '*.txt'"}, {"invocation": "Search the current directory tree for all regular non-hidden files except *.o", "cmd": "find ./ -type f -name \"*\" -not -name \"*.o\""}, {"invocation": "Prints long listing of directories \"./my dir\" and \"./anotherdir\" sorted from oldest to newest, with appended indicators.", "cmd": "$ ls -Fltr \"./my dir\" \"./anotherdir\""}, {"invocation": "List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory", "cmd": "find /home/jassi/ -name \"aliencoders.[0-9]+\" | xargs ls -lrt | awk print '$9'"}, {"invocation": "search for the word \"damian\" in all the regular/normal files in the /etc folder and display only the matched file name", "cmd": "find /etc -type f | xargs grep -l -i \"damian\""}, {"invocation": "Print the list of 1st level subdirectories in /fss/fin", "cmd": "find /fss/fin -d 1 -type d -name \"*\" -print"}, {"invocation": "Find command will display top 10 Big files from current directory .", "cmd": "find . -type f -exec ls -s {} \\; |sort -n -r |head"}, {"invocation": "searches through the root filesystem (\"/\") for the file named Chapter1, and prints the location", "cmd": "find / -name Chapter1 -type f"}, {"invocation": "find all the files in the current directory and print them excluding those that have the name SCCS.", "cmd": "find . -print -o -name SCCS -prune"}, {"invocation": "Run 'chmod 0644' on all files in the current directory tree", "cmd": "find . -type f -exec chmod 0644 {} \\;"}, {"invocation": "List all zero-length files", "cmd": "find . -empty -exec ls {} \\;"}, {"invocation": "Creates temporary folder and save path to that in a TMPDIR variable.", "cmd": "TMPDIR=$(mktemp -d)"}, {"invocation": "Find all files under /somefolder matching the case insensitive regex '\\(.*error.*\\)\\|\\(^second.*\\log$\\)\\|\\(.*FFPC\\.log$\\)' in their paths", "cmd": "find /somefolder -type f | grep -i '\\(.*error.*\\)\\|\\(^second.*\\log$\\)\\|\\(.*FFPC\\.log$\\)'"}, {"invocation": "tar all the regular java files to myfile.tar", "cmd": "find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"}, {"invocation": "Search the directory given as variable $d for empty subdirectories", "cmd": "find \"$d\" -mindepth 1 -prune -empty"}, {"invocation": "Mount a partition in \"$IMAGE\" with offset \"$OFFSET\" to \"media/$DEST\" as read only using a loop device", "cmd": "mount -o ro,loop,offset=$OFFSET -t auto $IMAGE /media/$DEST"}, {"invocation": "Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.", "cmd": "ssh-keygen -t rsa -C \"$APP\" -N \"$SSHKEYPASS\" -f ~/.ssh/id_rsa"}, {"invocation": "Join lines in file \"A\" with lines in file \"B\" if the lines share a common first word", "cmd": "join <(sort -n A) <(sort -n B)"}, {"invocation": "Find all files in entire file system which are larger than 20000KB", "cmd": "find / -type f -size +20000k"}, {"invocation": "Search all files in the current directory tree, except *.html and *.svn*, for \"SearchString\"", "cmd": "find . ! -name '*.html' ! -name '*.svn*' -exec grep 'SearchString' {} /dev/null \\;"}, {"invocation": "Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories", "cmd": "find ./ -name \"foo.mp4\" -printf \"%h\\n\""}, {"invocation": "Print the names of all files from the /tmp/dir1 directory tree", "cmd": "find /tmp/dir1 -exec basename {} \\;"}, {"invocation": "only get md5sum of a file", "cmd": "md5 -q file"}, {"invocation": "Search the entire file system for .jpg files.", "cmd": "find / -name \u201c*.jpg\u201d"}, {"invocation": "Set shell option 'histverify'.", "cmd": "shopt -s histverify"}, {"invocation": "Prints total count of lines of all files in a current folder and subfolders.", "cmd": "find . -type f -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}, {"invocation": "Print all unique file paths under \"dir1\" compared to \"dir2\"", "cmd": "comm -23 <(find dir1 -type f | sed 's/dir1/\\//'| sort) <(find dir2 -type f | sed 's/dir2/\\//'| sort) | sed 's/^\\//dir1/'"}, {"invocation": "Find *.tex files in the current directory tree that contain text \"documentclass\"", "cmd": "find . -type f -name *.tex -print0 | xargs -0 grep -l 'documentclass'"}, {"invocation": "Locate logo.gif in the /var/www directory tree", "cmd": "find /var/www -name logo.gif"}, {"invocation": "Remove all non-hidden files in the current directory tree", "cmd": "find -name \"*\" | xargs rm -f"}, {"invocation": "find all text files in user/directory/ which have been modified today and display the last line of these files", "cmd": "find /user/directory/ -name \"*txt\" -mtime 0 -type f -printf '%p: ' -exec tail -1 {} \\;"}, {"invocation": "Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"", "cmd": "find -type f -regex \".*/.*\\.\\(shtml\\|css\\)\""}, {"invocation": "find all the files in the current directory which have the inode number 31246 and remove them.", "cmd": "find . -inum 31246 -exec rm [] ';'"}, {"invocation": "Find all files/directories that are owned by user 'eric' under current directory tree", "cmd": "find -user eric -print"}, {"invocation": "Sets 'extglob' shell option.", "cmd": "shopt -s extglob"}, {"invocation": "Remove the passphrase from ~/.ssh/id_rsa.", "cmd": "ssh-keygen -f ~/.ssh/id_rsa -P \"\""}, {"invocation": "find all regular files in current directory and replace the word searc to replace in them.", "cmd": "find . -type f -exec sed -i 's/searc/replace/g' {} \\;"}, {"invocation": "Find all *-* files under current directory", "cmd": "find . -type f -name '*-*'"}, {"invocation": "List file contents of compressed file 'compressed.tar.gz'", "cmd": "gzip -l compressed.tar.gz"}, {"invocation": "search for all the files in current folder which start with \"file2015-0\" and move them to another folder", "cmd": "find . -name \"file2015-0*\" -exec mv {} .. \\;"}, {"invocation": "Search the current directory recursively for regular files last accessed 2 days ago", "cmd": "find . type -f -atime 2"}, {"invocation": "Find all orm* files/directories under current directory", "cmd": "find . -name 'orm*'"}, {"invocation": "Read a line of standard input with prompt \"Enter your choice: \" in an interactive shell and save the response to variable \"choice\"", "cmd": "read -e -p \"Enter your choice: \" choice"}, {"invocation": "Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.", "cmd": "echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f2"}, {"invocation": "Display all files in a folder", "cmd": "find /usr/X11/man/man5 -print"}, {"invocation": "split a file \"list.txt\" into pieces per 600 lines", "cmd": "split -l 600 list.txt"}, {"invocation": "Prints file.txt without the last N bytes", "cmd": "head -c -N file.txt"}, {"invocation": "Search the regular files of the current directory tree for string \"texthere\"", "cmd": "find -type f -exec grep -Hn \"texthere\" {} +"}, {"invocation": "Set permissions of all directories under \"/opt/lampp/htdocs\" to 711", "cmd": "find /opt/lampp/htdocs -type d -exec chmod 711 {} \\;"}, {"invocation": "List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'", "cmd": "find . -type f -print0 | xargs -0 grep -il '^Subject:.*unique subject'"}, {"invocation": "SSH into user@server and run command ${SSH_COMMAND}", "cmd": "ssh user@server \"${SSH_COMMAND}\""}, {"invocation": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"", "cmd": "find . -name '*bills*' -exec grep -H \"put\" {} \\;"}, {"invocation": "Enables 'dotglob' shell option.", "cmd": "shopt -s dotglob"}, {"invocation": "Print a listing of the `other' directory", "cmd": "$ find other -maxdepth 1"}, {"invocation": "Print the current directory name without full path", "cmd": "echo \"$PWD\" | sed 's!.*/!!'"}, {"invocation": "Finds strings matching pattern '^fields=\\\\\\|^var=' in a 'set' output.", "cmd": "set | grep ^fields=\\\\\\|^var="}, {"invocation": "Saves 'tmux' version in the 'tmux_version' variable.", "cmd": "tmux_version=\"$(tmux -V | cut -c 6-)\""}, {"invocation": "Echo each command before running", "cmd": "set -x"}, {"invocation": "Add cron lists from \"filename\" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.", "cmd": "crontab filename"}, {"invocation": "find all js files which path does not contain ./node_modules/* nor './vendor/*\"", "cmd": "find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'"}, {"invocation": "SSH into \"$NAME\" as user \"${USERNAME}\" using key file \"${KEYDIR}/${KEY}.pem\", automatically add the host to list of known hosts and execute \"${COMMANDS}\"", "cmd": "ssh -o \"StrictHostKeyChecking no\" -i ${KEYDIR}/${KEY}.pem ${USERNAME}@$NAME \"${COMMANDS}\""}, {"invocation": "display all the \".mov\" video files in the current folder in the format filename and folder path", "cmd": "find . -iname \"*.mov\" -printf \"%p %f\\n\""}, {"invocation": "Search the regular files of the current directory tree for string \"stuff\"", "cmd": "find . -type f -exec grep -n \"stuff\" {} \\; -print"}, {"invocation": "List all directories in maximum 1 level down the current directory", "cmd": "find . -type d -maxdepth 1 -exec ls -dlrt {} \\;"}, {"invocation": "remove all core files in the file system", "cmd": "find / -name \"*.core\" -print -exec rm {} \\;"}, {"invocation": "Search the current directory recursively for text files containing at least one character", "cmd": "find -type f -exec grep -Iq . {} \\; -and -print"}, {"invocation": "Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory", "cmd": "find ./ -name \"*\" -printf \"%f\\n\" | xargs grep \"searchName\""}, {"invocation": "Display only mimetype of myfile.txt, without the filename.", "cmd": "file -bi myfile.txt"}, {"invocation": "Calculate the md5 sum of \"password\"", "cmd": "echo \"password\" | md5sum"}, {"invocation": "search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3", "cmd": "find / -iname \"*.mp3\" -type f -print0 | xargs -0 -I '{}' /bin/mv \"{}\" /mnt/mp3/"}, {"invocation": "search for all empty directories in the folder /home", "cmd": "find /home -type d -empty"}, {"invocation": "find all the php files in current folder using regular expressions", "cmd": "find . -regex '.+\\.php'"}, {"invocation": "Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.", "cmd": "cat files | sort -t- -k2,2 -n"}, {"invocation": "Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago", "cmd": "find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print"}, {"invocation": "find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified", "cmd": "find -cnewer /etc/fstab"}, {"invocation": "Search for the regex '->get(\\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames", "cmd": "find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"}, {"invocation": "search all the files in the current folder excluding those that are present in the folder test and using regex", "cmd": "find . -name test -prune -regex \".*/my.*p.$\""}, {"invocation": "Find all directories under current directory whose paths are 5 characters long", "cmd": "find . -regextype posix-extended -type d -regex \".{5}\""}, {"invocation": "Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: \"length(FOO_NO_WHITESPACE)==<counted number of characters>\"", "cmd": "echo -e \"length(FOO_NO_WHITESPACE)==$(echo -ne \"${FOO_NO_WHITESPACE}\" | wc -m)\""}, {"invocation": "Print the last 10 lines of \"great-big-file.log\"", "cmd": "tail great-big-file.log"}, {"invocation": "Search the current directory tree for regular files named `doc.txt' and print \"found\" for each of them", "cmd": "find ./ -type f -name doc.txt -printf \"found\\n\""}, {"invocation": "Find all files that have either a .php or a .js extension", "cmd": "find -regextype posix-egrep -regex '.*(php|js)$'"}, {"invocation": "Numerically sort standard input by the second word of each line", "cmd": "sort -n -k 2"}, {"invocation": "Remove all CVS directories from the current directory tree", "cmd": "find . -name 'CVS' -type d -exec rm -rf {} \\;"}, {"invocation": "Join data in \"file1\" sorted by the second word of each line with data in \"file2\" sorted by the first word of each line, keeping the same order as it is found in \"file1\"", "cmd": "join -1 2 -2 1 <(sort +1 -2 file1) <(sort +0 -1 file2)"}, {"invocation": "Search for 'Processed Files' in all $srch* (case insensitive) files under current directory", "cmd": "find . -iname \"$srch*\" -exec grep \"Processed Files\" {} \\; -print"}, {"invocation": "find all the \"jpg\" file in a folder.", "cmd": "find /win/C -iname *JPG"}, {"invocation": "Find all files that belong to group developer", "cmd": "find /home -group developer"}, {"invocation": "Find a size of only the target directory in MB format", "cmd": "du -s --block-size=M /path/to/your/directory/"}, {"invocation": "Changes group ownership of 'shared' to 'Workers'.", "cmd": "chgrp Workers shared"}, {"invocation": "display all the header files  and cpp files in the current folder", "cmd": "find . -regex '.*\\.\\(cpp\\|h\\)'"}, {"invocation": "search in the current folder for all the regular/normal file with the name \"test\"", "cmd": "find . -type f -name test"}, {"invocation": "Find all empty directories under a certain path", "cmd": "find /tmp -type d -empty"}, {"invocation": "Print the path of all the network mounts", "cmd": "mount | sed -n -e \"s/\\/\\/mynetaddr on \\([^ ]*\\).*$/\\1/p\""}, {"invocation": "Prints path to folder that contains target of the symbolic link ../../../../etc/passwd.", "cmd": "$(dirname $(readlink -e ../../../../etc/passwd))"}, {"invocation": "files all files which expect directories and display count of them", "cmd": "find /usr/share \\! -type d wc -l"}, {"invocation": "find all class files or sh script files  in the current folder", "cmd": "find . -type f \\( -name \"*.class\" -o -name \"*.sh\" \\)"}, {"invocation": "find all the \".sh\" files in the current folder ( case insensitive search)", "cmd": "find -iname *.SH"}, {"invocation": "Print the full real path of \"/dev/disk/by-uuid/$1\" followed by \"is not mounted\"", "cmd": "echo $(readlink -f /dev/disk/by-uuid/$1) is not mounted"}, {"invocation": "Recursively change ownership of \"/usr/local\" to the current user", "cmd": "sudo chown -R `whoami` /usr/local"}, {"invocation": "Replace all occurrences of \"foo_fn\" with \"bar_fn\" in the files named \"foo_fn\" from the current directory tree", "cmd": "find . -name foo_fn exec sed -i s/foo_fn/bar_fn/g '{}' \\;"}, {"invocation": "Lists all top-level files in a '/home/dreftymac/' folder.", "cmd": "ls /home/dreftymac/"}, {"invocation": "Find all .txt files under the current directory and below", "cmd": "find . -name '*.txt' -print0"}, {"invocation": "Delete all filename* files under /dir directory", "cmd": "find /dir -name \"filename*\" -type f -exec rm {} \\;"}, {"invocation": "Read a line from standard input into the variable \"yn\" with the prompt \"Do you wish to install this program?\"", "cmd": "read -p \"Do you wish to install this program?\" yn"}, {"invocation": "Force pseudo tty allocation on connection to \"somehost\" and execute \"~/bashplay/f\"", "cmd": "ssh -t somehost ~/bashplay/f"}, {"invocation": "Save all entries that are wrapped around with opening and closing square brackets in file 'FILENAME' to variable 'var'", "cmd": "var=`egrep -o '\\[.*\\]' FILENAME | tr -d ][`"}, {"invocation": "Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"", "cmd": "find . -name \"*bills*\" -print0 | xargs -0 grep put"}, {"invocation": "Changes the group of defined file.", "cmd": "chgrp"}, {"invocation": "find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.", "cmd": "find . -atime +1 -type f -exec mv {} TMP \\;"}, {"invocation": "Print the first word followed by the rest of the line formatted to fit in 100 characters for every line in \"input\"", "cmd": "sed 's/\\([^ ]*\\) /\\1\\n/' input | fold -w 100"}, {"invocation": "Set prompt to the system host name and history number", "cmd": "PS1=\"`hostname`:\\!>\""}, {"invocation": "search for the folder .dummy and remove it from the folder \"Test folder\"", "cmd": "find \"Test Folder\" -type d -name .dummy -exec rm -rf \\\"{}\\\" \\;"}, {"invocation": "Print 'echo 'hello, world'", "cmd": "echo 'hello, world' | cat"}, {"invocation": "Make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all", "cmd": "find debian/fglrx-amdcccle/usr/lib/fglrx/bin/ -type f | xargs chmod a+x"}, {"invocation": "Compare \"file1\" and \"file2\" line by line with 3 lines of unified context", "cmd": "diff -u file1 file2"}, {"invocation": "Enables shell option 'expand_aliases'.", "cmd": "shopt -s expand_aliases"}, {"invocation": "Find all the files whose name is tecmint.txt", "cmd": "find . -name tecmint.txt"}, {"invocation": "Find all empty files under /tmp and below", "cmd": "find /tmp -type f -empty"}, {"invocation": "sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days", "cmd": "find .  -name \"*.txt\" -type f -daystart -mtime -91 -mtime +2 | xargs cat | sort | uniq"}, {"invocation": "Split \"system.log\" into files of at most 10 MiB in size with a numeric suffix and prefix \"system_split.log\"", "cmd": "split -b 10M -d  system.log system_split.log"}, {"invocation": "Archive \"/path/to/sfolder\" to \"name@remote.server:/path/to/remote/dfolder\" compressing the data during transmission", "cmd": "rsync -avlzp /path/to/sfolder name@remote.server:/path/to/remote/dfolder"}, {"invocation": "Search the regular files of the current directory tree for string \"foo\"", "cmd": "find . -type f -exec grep \"foo\" '{}' \\;"}, {"invocation": "Change permissions of all directories residing under and below ./debian to 755", "cmd": "find ./debian -type d | xargs chmod 755"}, {"invocation": "find all the normal/regular files in the folder \"pathfolder\" excluding all hidden files and display the count", "cmd": "find pathfolder -maxdepth 1 -type f -not -path '*/\\.*' | wc -l"}, {"invocation": "display all the files in the file system which belong to the user with the id 1005", "cmd": "find / -uid 1005"}, {"invocation": "Find all $1 files/directories under current directory and enter into the parent directory of the first one found", "cmd": "cd $(find . -name $1 | xargs dirname)"}, {"invocation": "find case-insentive example.com file, omit ./beta path", "cmd": "find ./ -path ./beta/* -prune -o -iname example.com -print"}, {"invocation": "Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'dir' variable.", "cmd": "dir=$(mktemp -d)"}, {"invocation": "Find all directories under current directory with 755 permission and change their permission to 644", "cmd": "find . -perm 755 -exec chmod 644 {} \\;"}, {"invocation": "Extract files from archive 'archive.tar'", "cmd": "cat archive.tar | tar x"}, {"invocation": "Number each line in \"foobar\" as right-justified zero padded to a width of 9", "cmd": "nl -nrz -w9 foobar"}, {"invocation": "Find all files/directories under '/directory_path' directory tree that have been modified within the last day", "cmd": "find /directory_path -mtime -1 -print"}, {"invocation": "Mount the directory \"/etc\" on \"/tmp/sarnold/mount_point/\"", "cmd": "mount -obind /etc /tmp/sarnold/mount_point/"}, {"invocation": "delete all the files in the current folder  which do not belong to any user", "cmd": "find / -nouser -exec rm {}\\;"}, {"invocation": "Find all Executable files in the file system", "cmd": "find / -perm /a=x"}, {"invocation": "Search the first 300 commands in history containing \"scp\" and ending in \"important\"", "cmd": "history 300 | grep scp | grep important$"}, {"invocation": "Print the IP addresses for the current host name", "cmd": "hostname  -I"}, {"invocation": "cope *.mp3 files to /tmp/MusicFiles", "cmd": "find . -type f -name \"*.mp3\" -exec cp {} /tmp/MusicFiles \\;"}, {"invocation": "Generates temporary file in a '/dev/shm' folder and saves path to it in a 'tFile' variable.", "cmd": "tFile=$(mktemp --tmpdir=/dev/shm)"}, {"invocation": "Format file \"list-of-entries.txt\" as new-line separated columns", "cmd": "column -t -s $'\\n' list-of-entries.txt"}, {"invocation": "Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.", "cmd": "find . -name \"*.pdf\" -print | grep -v \"^\\./pdfs/\""}, {"invocation": "Search the current directory recursively for files containing \"needle text\"", "cmd": "find . -type f -print0 | xargs -0 grep -IZl . | xargs -0 grep \"needle text\""}, {"invocation": "Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .", "cmd": "find . \\( -user aa1 -o -name myfile \\) -print"}, {"invocation": "Search  all directory from /usr downwards for files whose inode number is 1234 and print them .", "cmd": "find /usr -inum 1234 -print"}, {"invocation": "Find all files in the file system with the SUID bit", "cmd": "find / -perm -u+s -print"}, {"invocation": "Find all files/directories named orm.properties in entire file system", "cmd": "sudo find / -name \"orm.properties\""}, {"invocation": "find all the header files in /usr/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files", "cmd": "find usr/include -name '*.h' -mtime -399 | wc"}, {"invocation": "Move *wp-admin/index.php files under /var/www/  to ./index_disabled", "cmd": "find /var/www/ -path '*wp-admin/index.php' -exec mv {} $(dirname {})/index_disabled"}, {"invocation": "Find all the files which were modified more than 50 days but less than 100 days ago", "cmd": "find / -mtime +50 -mtime -100"}, {"invocation": "delete all the files ending with \"~\" in current folder", "cmd": "find -name '*~' -delete"}, {"invocation": "Save the system host name in variable \"HOSTNAME\"", "cmd": "HOSTNAME=\"`hostname`\""}, {"invocation": "In the current shell, interpret 'incl.sh' which is in the directory pointed by variable DIR", "cmd": "source \"$DIR/incl.sh\""}, {"invocation": "Find all files/directories with '.txt' extension that are less than 100 KB in size under '/home' directory tree", "cmd": "find /home -name \"*.txt\" -size -100k"}, {"invocation": "Counts sum of non-empty lines from all .php files in a current folder.", "cmd": "find . -name \"*.php\" | xargs grep -v -c '^$' | awk 'BEGIN {FS=\":\"} { cnt = cnt + $2} END {print cnt}'"}, {"invocation": "Search the current directory recursively for files containing \"needle text\"", "cmd": "find . -type f -exec grep -Iq . {} \\; -and -print0 | xargs -0 grep \"needle text\""}, {"invocation": "Search the Movies folder in the user's home directory for files larger than 1024 megabytes in size.", "cmd": "find ~/Movies/ -size +1024M"}, {"invocation": "Search directory tree $DIR for *.txt files", "cmd": "find \"${DIR}\" -name \"*.txt\""}, {"invocation": "find all the files that have been modified today", "cmd": "find /tmp/test/* -mtime +0"}, {"invocation": "Find directories in the current directory tree whose names are 33 characters in length", "cmd": "find . -type d -name \"?????????????????????????????????\""}, {"invocation": "Counts lines of /etc/fstab file.", "cmd": "cat /etc/fstab | wc -l"}, {"invocation": "Find all directories under and below parent_directory", "cmd": "find parent_directory -type d"}, {"invocation": "create directory es if it is not exist and create direcoty LC_MESSAGES", "cmd": "mkdir -p es/LC_MESSAGES"}, {"invocation": "search for all the regular/normal files with the name \"access.log\" in the folder /var/www which are bigger than 100MB", "cmd": "find /var/www -type f -name \u00abaccess.log*\u00bb -size +100M"}, {"invocation": "Print the most repeated line in \"list2.txt\" that exists in \"list1.txt\" prefixed by the number of occurrences", "cmd": "grep -Ff list1.txt list2.txt | sort | uniq -c | sort -n | tail -n1"}, {"invocation": "Search the .java files from the /Applications/ directory tree for TODO lines", "cmd": "find /Applications/ -name \"*.java\" -print0 | xargs -0 grep -i \"TODO\""}, {"invocation": "Search the current directory recursively for .sh files whose names begin with \"new\"", "cmd": "find . -name \"new*.sh\""}, {"invocation": "Find all files/directories under current /export/home/someone directory and upload them to ftp://somehost/tmp/", "cmd": "find /export/home/someone -exec curl -u someone:password -vT {} ftp://somehost/tmp/"}, {"invocation": "Remove all regular files from the current directory tree whose names do not end with \"txt\"", "cmd": "find . -type f -not -name '*txt' -print0 | xargs -0 rm --"}, {"invocation": "display all the files in the current folder which do not belong to any user", "cmd": "find . -nouser"}, {"invocation": "Go to first directory specified in PATH which contains the command 'oracle'", "cmd": "cd $(which oracle | xargs dirname)"}, {"invocation": "Gets list of IP addresses of all network interfaces.", "cmd": "ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\\.){3}[0-9]*).*/\\2/p'"}, {"invocation": "Print base name of the file name without all extensions.", "cmd": "basename \"$FILE\" | cut -d'.' -f-1"}, {"invocation": "Change directory to the directory containing the \"oracle\" executable", "cmd": "cd $(dirname `which oracle`)"}, {"invocation": "Search the \"katalogi\" directory tree for files named \"wzorzec\"", "cmd": "find katalogi -name wzorzec"}, {"invocation": "Find blabla* files under current directory", "cmd": "find . -depth -name \"blabla*\" -type f | xargs rm -f"}, {"invocation": "Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size", "cmd": "find /home -name \"*.txt\" -size 100k"}, {"invocation": "Find all the files in file system which are modified more than 50 days back and less than 100 days", "cmd": "find / -mtime +50 \u2013mtime -100"}, {"invocation": "List all leaf directories of the current directory tree", "cmd": "find . -type d -links 2"}, {"invocation": "Change permission to 755 of all files/directories under current directory tree that have 777 permission", "cmd": "find -perm 777 | xargs -I@ sudo chmod 755 '@'"}, {"invocation": "Show the epoch in default date/time format", "cmd": "date -ud@0"}, {"invocation": "Display a long listing of all regular files that are less than 50 bytes in size under '/usr/bin' directory tree", "cmd": "find /usr/bin -type f -size -50c -exec ls -l '{}' ';'"}, {"invocation": "find all the patch files in current folder and copy them to separate folder patches", "cmd": "find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/"}, {"invocation": "Counts lines in each of *.php files in a current folder and subfolders and prints total count.", "cmd": "find . -name '*.php' | awk '{gsub(\" \",\"\\\\ \", $0);print $0}' |xargs wc -l"}, {"invocation": "Replace \"_\" with newlines in \"Testing\\r_Tested\" and display the named characters", "cmd": "echo -e \"Testing\\r_Tested\" | awk -v RS=\"_\" '{ print $0; }' | od -a"}, {"invocation": "create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours", "cmd": "find \\( -name \"*.htm\" -o -name \"*.html\" \\) -a -ctime -30 -exec ln {} /var/www/obsolete \\;"}, {"invocation": "Synchronize \"xxx-files\" to \"different-stuff/xxx-files\" recursively preserving metadata with a bandwidth limit of 2000 KiB/s", "cmd": "rsync -pogtEtvr --progress --bwlimit=2000 xxx-files different-stuff"}, {"invocation": "Find all files under $musicdir directory", "cmd": "find \"$musicdir\" -type f -print"}, {"invocation": "List all mounted filesystems", "cmd": "mount"}, {"invocation": "Search the home directory tree for all .txt files", "cmd": "find ~/ -name '*.txt'"}, {"invocation": "Remove all regular files from the current directory tree whose names do not end with \"ignore1\" or \"ignore2\"", "cmd": "find . -type f -not -name '*ignore1' -not -name '*ignore2' | xargs rm"}, {"invocation": "Create tar archive \"dirall.tar\" and copy all files from directory tree /tmp/a1 to it", "cmd": "find /tmp/a1 -exec tar -rvf dirall.tar {} \\;"}, {"invocation": "Archive \"/home/path\" to \"path\" on host \"server\" showing progress and statistics and remove files in the destination not found in the source", "cmd": "rsync -a --stats --progress --delete /home/path server:path"}, {"invocation": "Find files/directories modified within the last day under /etc", "cmd": "find /etc -type f -ctime -1"}, {"invocation": "find all the files in the current folder and display those that are not present in the list \"file.lst\"", "cmd": "find . | grep -vf file.lst"}, {"invocation": "List common files in directories \"1\" and \"2\"", "cmd": "cat <(ls 1 | sort -u) <(ls 2 | sort -u) | uniq -d"}, {"invocation": "Read standard input until a null character is found and save the result in variable \"line\"", "cmd": "read -r -d $'\\0'"}, {"invocation": "search for the file \"myfile\" in the current folder and display all errors apart from permission denied error", "cmd": "find . -name myfile |& grep -v 'Permission denied'"}, {"invocation": "Find all .gz archives in the current directory tree", "cmd": "find . -name '*.gz'"}, {"invocation": "Prints last modified file in a current folder with modification time.", "cmd": "find . -type f | sed 's/.*/\"&\"/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1"}, {"invocation": "Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.", "cmd": "$ ls -Fltr"}, {"invocation": "Show a listing of files not modified in over 20 days or not accessed in over 40 days", "cmd": "find /mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}, {"invocation": "dsisplay all files inthe current folder", "cmd": "find ."}, {"invocation": "Find all image.pdf files/directories under ./polkadots", "cmd": "find ./polkadots -name 'image.pdf'"}, {"invocation": "Print a listing of the /usr/local/etc/rc.d directory tree", "cmd": "find /usr/local/etc/rc.d -type f | awk -F/ '{print $NF}'"}, {"invocation": "find all files ending with \"js.compiled\" in current folder and rename them.", "cmd": "find . -name \"*.js.compiled\" -exec rename -v 's/\\.compiled$//' {} +"}, {"invocation": "find all files in current folder which are more than 300MB", "cmd": "find . -size +300M"}, {"invocation": "Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines", "cmd": "grep -ioh \"facebook\\|xing\\|linkedin\\|googleplus\" access-log.txt | sort | uniq -c | sort -n"}, {"invocation": "List each unique case insensitive character in \"file\" prefixed by number of occurrences and sorted from most frequent to least frequent", "cmd": "grep -o . filename | tr '[:upper:]' '[:lower:]' | sort | uniq -c | sort -nr"}, {"invocation": "Search the current directory tree for files last accessed more than 10 days ago", "cmd": "find . -atime +10"}, {"invocation": "Show the list of all files on the system whose names do not end in \".c\"", "cmd": "find / \\! -name \"*.c\" -print"}, {"invocation": "Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them", "cmd": "find .cache/chromium/Default/Cache/ -mindepth 1 -size +100M -delete"}, {"invocation": "Find files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names", "cmd": "find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\""}, {"invocation": "Recursively change the owner of all files in \"~/tmp\" to \"$USER\"", "cmd": "sudo chown -R $USER ~/tmp"}, {"invocation": "find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )", "cmd": "find ./ -daystart -mtime -3"}, {"invocation": "search for all pdf files in the folder \"/home/pdf\" which have been accessed in the last 60*24 hours", "cmd": "find /home/you -iname \"*.pdf\" -atime -60 -type -f"}, {"invocation": "Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename", "cmd": "find . -exec env f={} somecommand \\;"}, {"invocation": "Print the full path directory name of each \"file.ext\" found under the current directory", "cmd": "find . -name \"file.ext\" -execdir pwd ';'"}, {"invocation": "display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours", "cmd": "find / -size +1000 -mtime +30  -exec ls -l {} \\;"}, {"invocation": "Delete empty regular files", "cmd": "find . -type f -empty -delete"}, {"invocation": "Find every directory under \"0001\" and make new directories replacing \"0001\" with \"0002\" at the beginning of their names.", "cmd": "find 0001 -type d | sed 's/^0001/0002/g' | xargs mkdir"}, {"invocation": "Print mount point of the file system containing $path.", "cmd": "df \"$path\" | tail -1 | awk '{ print $6 }'"}, {"invocation": "Removes first and last parts of path $path and saves the result in 'finalName' variable.", "cmd": "finalName=$(dirname ${path#*/})"}, {"invocation": "display the count of all the normal/ regular files in the current directory", "cmd": "find . -type f |wc -l"}, {"invocation": "Replace all ocurrences of '<title>' with 'sblmtitle\\n<title>' in all the regular files with '.html' extension under current directory tree", "cmd": "find ./ -type f -name '*.html' | xargs sed -i 's/<title>/sblmtitle\\n<title>/g'"}, {"invocation": "find all the \"passwd\" files in the entire file system", "cmd": "find / -iname passwd"}, {"invocation": "Find all directories in 1 level down the current directory", "cmd": "find . -mindepth 1 -maxdepth 1 -type d"}, {"invocation": "find all the html files in the current folder and rename them to .var files", "cmd": "find -name '*.html' -print0 | xargs -0 rename 's/\\.html$/.var/'"}, {"invocation": "find all the text files in the current folder", "cmd": "find . -type f -name '*.txt' -print"}, {"invocation": "Find all files/directories under current directory tree that contain '1' or 'k' in their names", "cmd": "find . -name \"*[1k]*\""}, {"invocation": "Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.", "cmd": "find -type f -name 'header.php' | xargs -n 1 dirname | xargs -n 1 cp -f topscripts.php"}, {"invocation": "Look for any instance of \"ds1337\" in the modules.alias file matching current kernel release", "cmd": "grep ds1337 /lib/modules/`uname -r`/modules.alias"}, {"invocation": "Split \"mybigfile.txt\" into files of at most 200000 lines each", "cmd": "split -l 200000 mybigfile.txt"}, {"invocation": "Find all directories under /path/to/base/dir and change their permission to 755", "cmd": "find /path/to/base/dir -type d -exec chmod 755 {} +"}, {"invocation": "Find all syslog directories under /var/log directory", "cmd": "find /var/log -name \"syslog\" -type d"}, {"invocation": "Find all files/directories under /myfiles that are 2560 bytes in size", "cmd": "find /myfiles -size 5"}, {"invocation": "Find all *.xml.bz2 files under current directory", "cmd": "find . -name \\*.xml.bz2"}, {"invocation": "Pipe output of \"yes\" to \"more\" and append the first 3 lines to \"file\"", "cmd": "yes | awk 'FNR<4 {print >>\"file\"; close(\"file\")}  1' | more"}, {"invocation": "find the md5 sum of all the regular files in multiple folders and display them in sorted order", "cmd": "find teste1 teste2 -type f -exec md5 -r {} \\; | sort"}, {"invocation": "Display a long listing of the oldest file under '/hom/backups' directory tree", "cmd": "find /home/backups -printf \"%T@ %p\\n\" | sort -n | head -1 | cut -d\" \" -f2- | xargs ls -al"}, {"invocation": "remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.", "cmd": "find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}, {"invocation": "delete all the \".doc\" files in the current folder", "cmd": "find . -name '*.doc' -exec rm \"{}\" \\;"}, {"invocation": "Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents", "cmd": "find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \\{\\} \\; -delete"}, {"invocation": "Search the current directory tree for regular files that were modified $FTIME days ago", "cmd": "find . -type f -mtime $FTIME"}, {"invocation": "verbosely create intermediate directoriy tmp as required and directory boostinst", "cmd": "mkdir -pv /tmp/boostinst"}, {"invocation": "Find all *$VERSION* files/directories under current directory where $VERSION is a variable", "cmd": "find . -name \"*$VERSION*\""}, {"invocation": "Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder", "cmd": "find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;"}, {"invocation": "Set variable 'vara' to 3", "cmd": "source <(echo vara=3)"}, {"invocation": "Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.", "cmd": "set -e"}, {"invocation": "Remove all regular files in the current directory", "cmd": "find ./ -type f -exec rm -rf {} \\;"}, {"invocation": "Finds all php processes running in system.", "cmd": "pstree | grep php"}, {"invocation": "Print the date followed by the host name", "cmd": "echo `date` `hostname`"}, {"invocation": "create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)", "cmd": "find . -name '*.log' -mtime +3 -print0 | xargs -0 -n 500 -P 4 bzip2"}, {"invocation": "find foo, Foo, FOo, FOO, etc., but only files", "cmd": "find . -iname foo -type f"}, {"invocation": "View history using \"vim\" in read only mode", "cmd": "history | vim -R -"}, {"invocation": "Locate the httpd.conf file on the system", "cmd": "find / -name httpd.conf"}, {"invocation": "Lookup information of the current user", "cmd": "finger `whoami`"}, {"invocation": "Find things changed today", "cmd": "find /path/to/search -daystart -ctime -1"}, {"invocation": "Give all files in the /path/to/base/dir tree read privileges", "cmd": "find /path/to/base/dir -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Find all files/directories under current directory that match the case insensitive regex ./\\(RT\\|ED\\).* and show several lines of output from the beginning", "cmd": "find . -iregex './\\(RT\\|ED\\).*' | head"}, {"invocation": "Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively", "cmd": "find /parent -maxdepth 1 -type d -print0 | xargs -0 chmod -R 700"}, {"invocation": "Unzip and expand tar archive \"compressFileName\"", "cmd": "zcat compressFileName | tar xvf -"}, {"invocation": "Print common characters in variable \"$a\" and \"$b\"", "cmd": "comm -12 <(echo $a|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}') <(echo $b|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}')|tr -d '\\n'"}, {"invocation": "search for files which are writable by either their owner or their group", "cmd": "find . -perm /u+w,g+w"}, {"invocation": "Find all SGID set files", "cmd": "find / -perm /g=s"}, {"invocation": "Display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing.", "cmd": "uname -i"}, {"invocation": "Prints calendars of July, 2009 and July, 2010 side-by-side.", "cmd": "paste <(cal 6 2009) <(cal 6 2010)"}, {"invocation": "List all *.txt files/directories under current directory", "cmd": "find . -name '*.txt' -exec echo \"{}\" \\;"}, {"invocation": "Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes", "cmd": "find /var/log/crashes -name app-\\*\\.log -mmin -5"}, {"invocation": "list all CSS files under the current directory", "cmd": "find . -type f -name \"*.css\""}, {"invocation": "Print local files without descending non-local directories", "cmd": "find . ! -local -prune -o -print"}, {"invocation": "display all the configuration files in the current folder which are in the current tree structure", "cmd": "find .  -path '*/*config'"}, {"invocation": "Recursively copy all files and folders in the current directory excluding \"exclude_pattern\" to \"/to/where/\"", "cmd": "rsync -r --verbose --exclude 'exclude_pattern' ./* /to/where/"}, {"invocation": "Display the contents of 'your_file' wrapping lines to maximum 80 characters, and waiting for user interaction after each page.", "cmd": "fold -80 your_file | more"}, {"invocation": "Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files", "cmd": "find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g'"}, {"invocation": "display the contents of all the files in the current folder which start with test ( case insensitive search )", "cmd": "find . -iname '*test*' -exec cat {} \\;"}, {"invocation": "For every cron job with a comment \"change-enabled\" at the end of its crontab entry, change the scheduled hour to 7.", "cmd": "crontab -l | sed -re '/# *change-enabled *$/s/^([^ ]+) [^ ]+/\\1 7/' | crontab -"}, {"invocation": "Find all 777 permission regular files and use chmod command to set permissions to 644", "cmd": "find / -type f -perm 0777 -print -exec chmod 644 {} \\;"}, {"invocation": "Search regular files under ~/mail for string \"Linux\"", "cmd": "find ~/mail -type f | xargs grep \"Linux\""}, {"invocation": "Calculate md5 sum of empty string", "cmd": "echo -n \"\" | md5sum"}, {"invocation": "Find all *.gz files in the current directory and decompress them using gunzip", "cmd": "find . -name '*.gz' -print0 | xargs -0 gunzip"}, {"invocation": "Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444", "cmd": "find . \\( -name 1.txt -o -name 2.txt -o -name 3.txt \\) -print|xargs chmod 444"}, {"invocation": "Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.", "cmd": "rsync $OPTS $FIND $BACKUPDIR"}, {"invocation": "List files larger than 9MB residing in the current directory and below", "cmd": "find . -size +9M"}, {"invocation": "find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ).", "cmd": "find $HOME -mtime +365"}, {"invocation": "find all the files that have been modified in the last 24 hours", "cmd": "find . -type f -mtime -1"}, {"invocation": "Print the file system disk space usage for \"/dev/disk0s2\" if exists", "cmd": "df | grep /dev/disk0s2"}, {"invocation": "display all the text files in current folder", "cmd": "find . -name \"*.txt\" -printf \"%f\\n\""}, {"invocation": "Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them", "cmd": "find -d MyApp.app -name Headers -type d -exec rm -rf \"{}\" \\;"}, {"invocation": "display all the files in the home folder which have not been modified in the last 365*24 hours", "cmd": "find $HOME -mtime +365"}, {"invocation": "Compresses all files in a current folder (not recursively).", "cmd": "bzip2 *"}, {"invocation": "Create hard links of all files and directories matching \"test/icecream/cupcake/*\" or \"test/mtndew/livewire/*\" in \"test-keep\" preserving directory hierarchy", "cmd": "find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*' | cpio -padluv test-keep"}, {"invocation": "Find all directories under ~/code without descending into hidden directories and print them appended with : (colon)", "cmd": "find ~/code -name '.*' -prune -o -type d -printf ':%p'"}, {"invocation": "Print second field from semicolon-seprated line <line>.", "cmd": "echo \"<line>\" | cut -d \";\" -f 2"}, {"invocation": "Print NS record for domain 'domain.' from 'some.other.ip.address' nameserver", "cmd": "dig @some.other.ip.address domain. ns"}, {"invocation": "Clean directories and subdirectories of the temporary files generated during normal use", "cmd": "find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}, {"invocation": "Grab \"variable = value\" pairs from a windows style .ini file into the current shell.", "cmd": "source <(grep = file.ini | sed 's/ *= */=/g')"}, {"invocation": "Print every two lines in \"num.txt\" on a single line separated by a space", "cmd": "paste -d' ' <(sed -n 'p;n' num.txt) <(sed -n 'n;p' num.txt)"}, {"invocation": "Find files/directories named blah (case insensitive) under current directory", "cmd": "find ./ -iname blah"}, {"invocation": "Find files in /var/tmp/stuff and below that have not been modified in over 90 days", "cmd": "find /var/tmp/stuff -mtime +90 -print"}, {"invocation": "Compress regular files in the current directory tree that were last modified more than 7 days ago", "cmd": "find . -type f  -mtime +7 | tee compressedP.list | xargs compress"}, {"invocation": "Print the first line of output after alphabetically sorting the file \"set\"", "cmd": "head -1 <(sort set)"}, {"invocation": "Recursively finds file some_file_name.xml file and prints strings with \"PUT_YOUR_STRING_HERE\" preceding each found string with file name.", "cmd": "find . -type f -name some_file_name.xml -exec grep -H PUT_YOUR_STRING_HERE {} \\;"}, {"invocation": "Find files on the system that are bigger than 20 megabytes", "cmd": "find / -type f -size +20M -exec ls -lh {} \\; | awk '{ print $NF \": \" $5 }'"}, {"invocation": "Find all Makefile's in the current directory tree", "cmd": "find -type f -name \"Makefile\""}, {"invocation": "Forcibly removes all files like '*.bak' and '*~'", "cmd": "rm -f *.bak *~"}, {"invocation": "Search for empty files", "cmd": "find . -size 0k"}, {"invocation": "reverse both words and lines in file", "cmd": "tac filename | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); printf(\"%s\\n\",$1)}'"}, {"invocation": "List all leaf directories of the current directory tree", "cmd": "find -depth -type d |sed 'h; :b; $b; N; /^\\(.*\\)\\/.*\\n\\1$/ { g; bb }; $ {x; b}; P; D'"}, {"invocation": "Get directory listing of URL $1 and save them to variable 'header' by deleting '\\r' characters", "cmd": "header=\"$(curl -sI \"$1\" | tr -d '\\r')\""}, {"invocation": "Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time", "cmd": "find . -name '*.[ch]' -exec grep $i {} | less"}, {"invocation": "Join columns in \"file1\" and \"file2\" if their first field matches and format the output as a table", "cmd": "awk 'NR==FNR{m[$1]=$2\" \"$3; next} {print $0, m[$1]}' file2 file1 | column -t"}, {"invocation": "List all files and folders in the current working directory", "cmd": "ls `pwd`/*"}, {"invocation": "Find all files on the system that are world writable", "cmd": "find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \\;"}, {"invocation": "find all the files in the folder \"/u/bill\" which have been accessed in the last 2-6 minutes", "cmd": "find /u/bill -amin +2 -amin -6"}, {"invocation": "Show all files in user's home directory that have read, write and execute permissions set for user, group and others.", "cmd": "find ~ -perm 777"}, {"invocation": "Print all file/directory names with white space safety under the /proc directory", "cmd": "find /proc -print0 | xargs -0"}, {"invocation": "get the root access", "cmd": "sudo su"}, {"invocation": "find all c, cpp files in current folder", "cmd": "find -regex '.*\\.\\(c\\|cpp\\)'"}, {"invocation": "Search all *.c files from the current directory tree for \"hogehoge\"", "cmd": "find . -name \\*.c -exec grep hogehoge {} \\;"}, {"invocation": "Remove all directories called \"test\" from the current directory tree", "cmd": "find -path \"*/test/*\" -delete"}, {"invocation": "Get the total size of all files under dir1 directory", "cmd": "find dir1 ! -type d |xargs wc -c |tail -1"}, {"invocation": "Find absolute path of command with PID \"$pid\"", "cmd": "readlink -f `ls --dereference /proc/$pid/exe`"}, {"invocation": "Report file system inodes usage in human readable format", "cmd": "df -ih"}, {"invocation": "find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB", "cmd": "find /home -size +10M -size -50M"}, {"invocation": "Recursively search current directory for all files with name ending with \".t1\", change this to .t2", "cmd": "find . -name \"*.t1\" -exec rename 's/\\.t1$/.t2/' '{}' \\;"}, {"invocation": "Finds strings like \"texthere\" recursively in all files of a current folder regarding all symlinks.", "cmd": "grep -R \"texthere\" *"}, {"invocation": "Find all the files on the system that have been modified within the last hour", "cmd": "find / -mmin -60"}, {"invocation": "Expand bash array \"myargs\" as arguments to \"mv\"", "cmd": "mv \"${myargs[@]}\""}, {"invocation": "display all the files in the file system which belong to no user", "cmd": "find / -nouser -print"}, {"invocation": "Print common lines in files \"set1\" and \"set2\"", "cmd": "comm -12 <(sort set1) <(sort set2)"}, {"invocation": "display all the files  in the current folder excluding the current folder and do not search in the sub directories", "cmd": "find . -maxdepth 1 -type d \\( ! -name . \\)"}, {"invocation": "Finds all logged in users.", "cmd": "w | awk '{print $1}'"}, {"invocation": "Count the total number of lines in all \"*.gz\" files in the current directory tree after decompression", "cmd": "find . -type f -name '*.gz' | xargs zcat | wc -l"}, {"invocation": "Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found", "cmd": "cd `find . -name Subscription.java | xargs dirname`"}, {"invocation": "Find <fileName> files/directories under current directory", "cmd": "find -name \"<fileName>\""}, {"invocation": "find all javascript files under the current folder", "cmd": "find . -name '*.js'"}, {"invocation": "Find files created in the last minute; works on Mac OS X", "cmd": "find / -newerct '1 minute ago' -print"}, {"invocation": "remote copy all text files from one location to another", "cmd": "find .  -name '*.txt' -exec rsync -R {} path/to/dext \\;"}, {"invocation": "Save the first two letters of the system host name to variable \"DC\"", "cmd": "DC=`hostname | cut -b1,2`"}, {"invocation": "Finds shell options like 'checkjobs' with their state.", "cmd": "shopt -p | grep checkjobs"}, {"invocation": "Find all files/directories named Root under current directory and copy them to newRoot", "cmd": "find . -name Root | xargs cp newRoot"}, {"invocation": "find all the files that have not been modified in the last (24*7) hours.", "cmd": "find . -mtime +7"}, {"invocation": "display all the directories in the folder master-", "cmd": "find master -type d | sort"}, {"invocation": "search for the folder .dummy in the entire directory structure of \"test folder\" and remove it.", "cmd": "find -depth \"Test Folder\" -type d -name .dummy -exec rm -rf \\{\\} \\;"}, {"invocation": "Find all files under current directory and set their permission to 775", "cmd": "find . -type f -exec chmod 775 {} +"}, {"invocation": "Isolate first comma-delimited field of each line in \"file\", discard consecutive duplicates, and search \"file\" for first matching occurrence of that field.", "cmd": "cut -d, -f1 file | uniq | xargs -I{} grep -m 1 \"{}\" file"}, {"invocation": "search for \"some_function\" in all the python files in the current directory", "cmd": "find . -name \\*.py | xargs grep some_function"}, {"invocation": "Print the base name of the current working directory", "cmd": "pwd | xargs basename"}, {"invocation": "Find the \"param1\" string in regular files under and below /var", "cmd": "find /var  -type f -exec grep \"param1\" {} \\; -print"}, {"invocation": "change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner", "cmd": "find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner"}, {"invocation": "Save IP addresses of the host name in variable \"ip\"", "cmd": "ip=$(hostname -I | awk '{print $1}')"}, {"invocation": "Search for files that were accessed less than 5 days ago.", "cmd": "find -atime -5"}, {"invocation": "Make directory \"~/practice\"", "cmd": "mkdir ~/practice"}, {"invocation": "Print the list of files changed within the last minute", "cmd": "find / -newerct '1 minute ago' -print"}, {"invocation": "display the filename and size of all the files in the file system which are bigger than 20MB", "cmd": "find / -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}, {"invocation": "Find all the files under /tmp directory and show a few lines of output from the beginning", "cmd": "find /tmp  | head"}, {"invocation": "Copy all .png files from the home directory tree to imagesdir/", "cmd": "find ~/ -name *.png -exec cp {} imagesdir \\;"}, {"invocation": "Fiind and remove multiple files such as *.mp3 or *.txt", "cmd": "find . -type f -name \"*.txt\" -exec rm -f {} \\;"}, {"invocation": "List all *.txt files/directories under /etc", "cmd": "find /etc -name \"*.txt\" | xargs ls -l"}, {"invocation": "Find every JavaScript file in the wordpress directory tree", "cmd": "find wordpress -name '*js'"}, {"invocation": "find all the swap files (files ending with ~) in the current folder and delete them", "cmd": "find . -name \"*~\" -delete"}, {"invocation": "Exclude directory from find . command", "cmd": "find ! -path \"dir1\" -iname \"*.mp3\""}, {"invocation": "Calculate and show md5 sums for every files under current directory tree", "cmd": "find . -type f -exec md5sum \\{\\} \\;"}, {"invocation": "display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output)", "cmd": "find . -type d -maxdepth 1 -mindepth 1 -exec basename {} \\;"}, {"invocation": "Find all files in maximum 2 levels down the current directory", "cmd": "find . -maxdepth 2  -type f"}, {"invocation": "Archive \"src/bar\" on host \"foo\" to local directory \"/data/tmp\"", "cmd": "rsync -avz foo:src/bar /data/tmp"}, {"invocation": "Read a line from standard input into variable \"ans\" without backslash escapes", "cmd": "read -r ans"}, {"invocation": "Find \"*201512*\" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/", "cmd": "find /home/myhome/data/ARCHIVE/. -name . -o -type d -prune -o -name '*201512*' -print | xargs -i mv {} /home/myhome/ARCHIVE/TempFolder/."}, {"invocation": "Verbosely change ownership of \"$file\" to \"root\"", "cmd": "chown -v root \"$file\""}, {"invocation": "Read one character from standard input into variable \"REPLY\"", "cmd": "read -n 1 -r"}, {"invocation": "Print received input to the terminal", "cmd": "tee"}, {"invocation": "search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory", "cmd": "find /root/ -path '/root/work' -prune -o -name myfile -type f -print"}, {"invocation": "Recursively copies 'SRCFOLDER' to the 'DESTFOLDER/'", "cmd": "cp -R SRCFOLDER DESTFOLDER/"}, {"invocation": "Remove regular files in the current directory tree", "cmd": "find . -type f -print0 | xargs -0 -n1 echo rm | sh -x"}, {"invocation": "Print the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"", "cmd": "ping google.com | awk '{ sent=NR-1; received+=/^.*(time=.+ ms).*$/; loss=0; } { if (sent>0) loss=100-((received/sent)*100) } { printf \"sent:%d received:%d loss:%d%%\\n\", sent, received, loss }'"}, {"invocation": "Print the current working directory without a trailing newline", "cmd": "echo -n $(pwd)"}, {"invocation": "Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself", "cmd": "tar -czvf my_directory.tar.gz -C my_directory ."}, {"invocation": "Find all regular files newer than '/tmp/$$' (where $$ expands to current process id) under '/tmefndr/oravl01' directory tree", "cmd": "find /tmefndr/oravl01 -type f -newer /tmp/$$"}, {"invocation": "Find all files on the system that have been modified in the last 10 minutes", "cmd": "find / -mmin -10"}, {"invocation": "Print the current directory", "cmd": "find -maxdepth 0"}, {"invocation": "find all the regular files in the current folder which start with a \"some text\"", "cmd": "find . -type f -name '*some text*'"}, {"invocation": "move all the files in the current folder  to temp folder and search atleast in one subfolder", "cmd": "find . -mindepth 1 -exec mv -t /tmp {} +"}, {"invocation": "Find all files that belongs to user root under / directory and show a few lines of output from the beginning", "cmd": "find / -user root | head"}, {"invocation": "Delete all files with ' .o' extension in the entire filesystem", "cmd": "find project / src / -name \"* .o\" -exec rm -f {} \\;"}, {"invocation": "Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.", "cmd": "echo 'someletters_12345_moreleters.ext' | cut -d'_' -f 2"}, {"invocation": "Remove all files except the ones listed in \"MANIFEST\"", "cmd": "find -type f -printf %P\\\\n | sort | comm -3 MANIFEST - | xargs rm"}, {"invocation": "For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.", "cmd": "join -v1 <(sort file1) <(sort file2)"}, {"invocation": "List all files under current directory matching the regex '.*\\(c\\|h\\|cpp\\)'", "cmd": "find . -type f -regex '.*\\(c\\|h\\|cpp\\)' -exec ls {} \\;"}, {"invocation": "find all the findme.txt files in the file system", "cmd": "find / -name findme.txt -type f -print"}, {"invocation": "Change to the directory of the executable \"python\"", "cmd": "cd `dirname $(which python)`"}, {"invocation": "Print all files in the current directory as a comma separated list", "cmd": "ls -1 | paste -sd \",\" -"}, {"invocation": "find all files & dircetiry in current directory which  have .tmp extension and delete them .", "cmd": "find . -type f -name \"*.tmp\"  -exec rm -rf {} \\;"}, {"invocation": "Find files that are empty", "cmd": "find -empty -type -f"}, {"invocation": "Write \"Hello, world\" to standard output and to \"/tmp/outfile\"", "cmd": "echo \"Hello, world\" | tee /tmp/outfile"}, {"invocation": "display a long list of all the jpg files in the home folder", "cmd": "find ~ -iname '*.jpg' -exec ls {} \\;"}, {"invocation": "List all IPV4 addresses found in all files under /etc directory", "cmd": "find /etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n'  | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}, {"invocation": "Search the files in the current directory tree for lines containing string \"vds admin\"", "cmd": "find . -exec grep -i \"vds admin\" {} \\;"}, {"invocation": "Read a line from standard input with prompt \"Are you sure you wish to continue?\"", "cmd": "read -p \"Are you sure you wish to continue?\""}, {"invocation": "Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory", "cmd": "find /usr -maxdepth 4 -name document -print"}, {"invocation": "Print the current directory tree with file sizes", "cmd": "tree -s"}, {"invocation": "Mount a read only ntfs filesystem", "cmd": "mount -t ntfs"}, {"invocation": "find all the directories in the current directory which dont have the execute permission.", "cmd": "find -type d ! -perm -111"}, {"invocation": "Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.", "cmd": "find . -mindepth 1 -maxdepth 1 -type d| grep \\/a |xargs -n 1 cp -i index.html"}, {"invocation": "display all the html files in the current folder excluding search in the paths ./foo, ./bar.", "cmd": "find . -path \"./foo\" -prune -o -path \"./bar\" -prune -o -type f -name \"*.html\""}, {"invocation": "split compressed content of the file www into pieces per 1073741824 bytes named as \"backup.tar.NNN\"", "cmd": "tar czf - www|split -b 1073741824 - www-backup.tar."}, {"invocation": "display all the files in current directory with each file name displayed twice in the same row", "cmd": "find . | sed 's/.*/& &/'"}, {"invocation": "Remove files under /mnt/zip matching \"*prets copy\" with confirmation", "cmd": "find /mnt/zip -name \"*prefs copy\" -print0 | xargs -0 -p /bin/rm"}, {"invocation": "Make all the bugzilla subdirectories permission 775", "cmd": "find bugzilla -type d -exec chmod 775 {} \\;"}, {"invocation": "Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'", "cmd": "find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"}, {"invocation": "Find files in the current directory tree of size between 700k and 1000k", "cmd": "find . \\( -size +700k -and -size -1000k \\)"}, {"invocation": "Report file systems disk usage, elide all entries insignificant to available space, and produce a grand total.", "cmd": "df --total"}, {"invocation": "Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files", "cmd": "find /home/www -name \"*.java\" -type f -print0 | xargs -0 sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g'"}, {"invocation": "List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin", "cmd": "find . -name bin -prune -o -name src -prune -o -type f -print | xargs egrep -il '^From:.*unique sender'"}, {"invocation": "Deletes empty folder 'nonsense_dir'.", "cmd": "rmdir nonsense_dir"}, {"invocation": "Delete all .bam files in the current directory tree", "cmd": "find . -name \"*.bam\" | xargs rm"}, {"invocation": "Shows state of 'extglob' shell option.", "cmd": "shopt -o extglob"}, {"invocation": "Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.", "cmd": "find . -name \"*.pdf\" -print0 | xargs -0 rm -rf"}, {"invocation": "Remove trailing white spaces from all *.py files under dir directory (ignoring .git path) and keep backups of the originals", "cmd": "find dir -not -path '.git' -iname '*.py' -print0 | xargs -0 sed --in-place=.bak 's/[[:space:]]*$//'."}, {"invocation": "search for a word in all the regular files in the current folder without traversing the sub directories .", "cmd": "find -maxdepth 1 -type f | xargs grep -F 'example'"}, {"invocation": "Find all files/directories under /home/bozo/projects directory that were modified 1 day ago", "cmd": "find /home/bozo/projects -mtime 1"}, {"invocation": "Print a count of duplicate lines in \"filename\" sorted by most frequent", "cmd": "sort filename | uniq -c | sort -nr"}, {"invocation": "find all the text files in  the current folder and do not search in somedir, bin directories", "cmd": "find . \\( -name somedir -prune \\) , \\( -name bin -prune \\) -o \\( -name \"*.txt\" -print \\)"}, {"invocation": "find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir", "cmd": "find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +"}, {"invocation": "Counts lines in file $file ignoring '//' commented lines, lines with spaces only and empty lines.", "cmd": "cat $file | sed '/\\/\\//d' | sed '/^\\s*$/d' | wc -l"}, {"invocation": "Read a line from standard input into variable \"message\" with escaped prompt \"\\nPlease Enter\\na Message: '\"", "cmd": "read -p \"`echo -e '\\nPlease Enter\\na Message: '`\" message"}, {"invocation": "Locate all *.csv files under the current directory tree separating the file names with zeroes", "cmd": "find . -name \"*.csv\" -print0"}, {"invocation": "find files changed in the last 1 day", "cmd": "find . -mtime -1 -type f"}, {"invocation": "Find all directories named \"D\" in the current directory tree and print their parents", "cmd": "find ./ -type d -name 'D'|sed 's/D$//'"}, {"invocation": "search all jpg,png,jpefg  files in the current folder and calculate the total size of them", "cmd": "find . \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" \\) -ls | awk '{total += $7} END {print total}'"}, {"invocation": "Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them", "cmd": "find /etc -maxdepth 2 -name \"*.conf\" | tail"}, {"invocation": "Move \"phantomjs-1.8.1-linux-x86_64.tar.bz2\" to \"/usr/local/share/\" directory", "cmd": "sudo mv phantomjs-1.8.1-linux-x86_64.tar.bz2 /usr/local/share/."}, {"invocation": "find all directories that names are 'apt' and display details", "cmd": "find  / -type d -name \"apt\" -ls"}, {"invocation": "Read a line from standard input into variable \"foobar\" and suppress showing user input", "cmd": "read -s foobar"}, {"invocation": "Delete all files/directories named test under maximum 2 level down the current directory", "cmd": "find . -maxdepth 2 -name \"test\" -exec rm -rf {} \\;"}, {"invocation": "Unzip \"file.gz\" and print each line with the 5th \" or | separated field greater than 5", "cmd": "zcat file.gz | awk -F'[|\"]' '$5>5'"}, {"invocation": "change the permission of all the normal/regular files to 644 in the current folder", "cmd": "find -type f -exec chmod 644 {} \\;"}, {"invocation": "Archive \"/path/to/application.ini\" on host \"source_host\" to current directory.", "cmd": "rsync -avv source_host:path/to/application.ini ./application.ini"}, {"invocation": "Find all .c and .h files in the current directory tree and search them for \"expr\"", "cmd": "find -name '*.[ch]' | xargs grep -E 'expr'"}, {"invocation": "Search for files that are at least 1.1GB", "cmd": "find / -size +1.1G"}, {"invocation": "find all the php files in current folder and search for multiple patterns in these files and display the file names", "cmd": "find -name '*.php' -exec grep -in \"fincken\" {} + | grep TODO | cut -d: -f1 | uniq"}, {"invocation": "Find files in the current directory and below that are 2000 kB in size", "cmd": "find . -size 2000k -print"}, {"invocation": "display the base name(name without extension) of all the \".flac\" files in the current folder", "cmd": "find . -name \"*.flac\" -exec basename \\{\\} .flac \\;"}, {"invocation": "Print content of all files found regarding seach options '[whatever]'", "cmd": "find [whatever] | xargs cat"}, {"invocation": "Print the largest 20 files under current directory", "cmd": "find . -type f -printf '%k %p\\n' |sort -n |tail -n 20"}, {"invocation": "Read and execute file 'lib/B' that located in the same directory as the current script, will fail if currently running script is not in PATH.", "cmd": "source \"$( dirname \"$( which \"$0\" )\" )/lib/B\""}, {"invocation": "display all the files in the home folder which belong to the suer \"bruno\" and end with \".sxw\" and have been accessed in the last 3*24 hours", "cmd": "find /home -type f -name *.sxw -atime -3 -user bruno"}, {"invocation": "search for version in system.info files.", "cmd": "find /home/*/public_html/ -type f -iwholename \"*/modules/system/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}, {"invocation": "display all sqlite files in the current directory along with their timestamp", "cmd": "find ./ -name \"*.sqlite\" -printf '%Tc %p\\n'"}, {"invocation": "Find all directories under /path/to/dir and change their permission to 755", "cmd": "find /path/to/dir -type d -exec chmod 755 {} +"}, {"invocation": "Show ls's detailed output for all files named \"something\"", "cmd": "find . -name something -exec ls -l {} \\;"}, {"invocation": "find all the files in the current folder which have been modified in the last 60 minutes", "cmd": "find . -mmin -60"}, {"invocation": "Execute awk script \"script.awk\" that exists in \"$PATH\" with argument \"arg1\"", "cmd": "awk -f `which script.awk` arg1"}, {"invocation": "Find writable regular files omitting those that contain sites/default/files in their names", "cmd": "find . -type f -writable | grep -v sites/default/files"}, {"invocation": "Recursively list all files and directories in \"coreutils-8.9\" with \"DIR: \" prepending directory names", "cmd": "tree -F coreutils-8.9 | sed -r 's|\u2500\u2500 (.*)/$|\u2500\u2500 DIR: \\1|'"}, {"invocation": "Print yesterday's date", "cmd": "date -j -v-1d"}, {"invocation": "Gets IP address of eth0 network interface.", "cmd": "ifconfig eth0 | grep addr: | awk '{ print $2 }' | cut -d: -f2"}, {"invocation": "Find all files name passwd in the root directory and all its sub-directories.", "cmd": "find / -name passwd"}, {"invocation": "find all files in the home folder that are modified in the last 24 hours", "cmd": "find $HOME -mtime -1"}, {"invocation": "Search the current directory tree for files without \"test\" in their path names", "cmd": "find . -not -regex \".*test.*\""}, {"invocation": "Search the .c files residing in the Lib/ directory tree for lines beginning with \"PyErr\"", "cmd": "find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr"}, {"invocation": "Search directory foo for files containing \"/tmp/foo/bar\" in their full names", "cmd": "find foo -path /tmp/foo/bar -print"}, {"invocation": "display all the files only in the path \"./sr*sc\"", "cmd": "find . -path \"./sr*sc\""}, {"invocation": "Find all *.txt and *.json files in current directory", "cmd": "find . -type f \\( -name \"*.txt\" -o -name \"*.json\" \\)"}, {"invocation": "Find files accessed at 23:59", "cmd": "find . -atime -1 -print"}, {"invocation": "Find users whose names begin with \"ab\" or whose terminal from which they are logged in ends with \"1\"", "cmd": "who | grep -e '^ab' -e '1$'"}, {"invocation": "find all files in current folder which are bigger than 1 MB and move them to another folder", "cmd": "find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files"}, {"invocation": "find all html or cgi files in current folder", "cmd": "find ./ -type f -iregex \".*\\.html$\" -or -iregex \".*\\.cgi$\""}, {"invocation": "Search for 'magic' in all regular files under current directory tree", "cmd": "find . -type f | xargs grep \"magic\""}, {"invocation": "Create directories \"/tmp/x/y/z/\" on remote host before copying \"$source\" to \"user@remote:/tmp/x/y/z/\"", "cmd": "rsync -a --rsync-path=\"mkdir -p /tmp/x/y/z/ && rsync\" $source user@remote:/tmp/x/y/z/"}, {"invocation": "Find all files/directories owned by the user 'bob' under '/home' directory tree", "cmd": "find /home -user bob"}, {"invocation": "search for the file foo in  the current folder and display a long listing of it in sorted order of modification date", "cmd": "find . -name foo | xargs ls -tl"}, {"invocation": "prints the last occurrence of text between two tags", "cmd": "tac file | sed -n '0,/<tag>\\(.*\\)<\\/tag>/s//\\1/p'"}, {"invocation": "Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files", "cmd": "find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}, {"invocation": "Copy \"/path/to/source\" to '/path/to/dest' in remote \"username@computer\"", "cmd": "rsync -r /path/to/source username@computer:/path/to/dest"}, {"invocation": "find all files in the current folder which are bigger than 10bytes", "cmd": "find . \u2014 size +10 -print"}, {"invocation": "prune all the files in the current directory, only current directory (.) is the output", "cmd": "find . -prune"}, {"invocation": "Print the number of lines in file.txt.", "cmd": "wc -l file.txt | cut -f1 -d\" \""}, {"invocation": "Split \"data.tsv\" into files of at most 5000000 lines each with prefix \"_tmp\"", "cmd": "split -l5000000 data.tsv '_tmp';"}, {"invocation": "Recursively removes all files in a 'path' folder but 'EXPR' files.", "cmd": "find [path] -type f -not -name 'EXPR' | xargs rm"}, {"invocation": "List all files in a current folder, separating names with semicolon", "cmd": "ls -1b | tr '\\n' ';'"}, {"invocation": "find all the files in the current folder which have execute permission to all the users", "cmd": "find . -perm /u=x,g=x,o=x"}, {"invocation": "Find all files/directories under current directory and count the number of lines for the output", "cmd": "find |wc -l"}, {"invocation": "Find all files whose names end with \"~\" in the /home/peter directory tree, following symlinks, and delete them", "cmd": "find -L /home/peter -name *~ |xargs rm"}, {"invocation": "show all the files in the current folder which has the word \"ITM\"", "cmd": "find . -name \u2018*ITM*\u2019"}, {"invocation": "Find files newer than `tmpfile' starting from the current directory", "cmd": "find . -newer tmpfile"}, {"invocation": "display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago", "cmd": "find . -mmin 60 -print0 | xargs -0r ls -l"}, {"invocation": "Find all broken symlinks under current directory", "cmd": "find -type l -xtype l"}, {"invocation": "find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files", "cmd": "find . -name \\*.xml | grep -v /workspace/ | tr '\\n' '\\0' | xargs -0 tar -cf xml.tar"}, {"invocation": "Recursively changes group ownership of everything within '/git/our_repos' to 'shared_group'.", "cmd": "chgrp -R shared_group /git/our_repos"}, {"invocation": "Count the number of unique file extensions in the current directory tree", "cmd": "find . -type f | sed -e 's/.*\\.//' | sed -e 's/.*\\///' | sort | uniq -c | sort -rn"}, {"invocation": "set a crontab to create or update the timestamp of \"washere1\" in the current directory every minute.", "cmd": "echo \"* * * * * touch $(pwd)/washere1\" | crontab"}, {"invocation": "Replace all ' ' with '-' from standard input", "cmd": "tr  ' ' '-'"}, {"invocation": "find all the png files in current folder which are present in the pattern list file \"search.txt\"", "cmd": "find . -name '*.png' | grep -f <(sed 's?.*?/[0-9]_[0-9]_[0-9]_&_?' search.txt)"}, {"invocation": "Find all the .c files in the current directory tree that contain the string \u2018stdlib.h\u2019", "cmd": "find . -name '*.c' | xargs grep 'stdlib.h'"}, {"invocation": "Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree", "cmd": "find /usr/bin -name '*vim*' -type l"}, {"invocation": "Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play", "cmd": "find /tmp/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~/play/"}, {"invocation": "display all the files in the current folder which have been modified between two dates", "cmd": "find . -newermt \u201cSep 1 2006\u201d -and \\! -newermt \u201cSep 10 2006\u201d"}, {"invocation": "Counts all business days in a current month.", "cmd": "cal -h | cut -c 4-17 | tail -n +3  | wc -w"}, {"invocation": "Delete all 1US* (case insensitive) files under current directory", "cmd": "find . -iname \"1US*\" -exec rm {} \\;"}, {"invocation": "Split \"abc.txt\" into files with at most 1500000000 bytes each and use prefix \"abc\"", "cmd": "split --bytes=1500000000 abc.txt abc"}, {"invocation": "Get the total size of all files under dir1 directory", "cmd": "find dir1 ! -type d -printf \"%s\\n\" | awk '{sum += $1} END{print sum}'"}, {"invocation": "Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago", "cmd": "find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete"}, {"invocation": "Search for 'whatIWantToFind' in all files under current directory", "cmd": "find . -exec grep whatIWantToFind {} \\;"}, {"invocation": "Creates path as current folder path and folder that contains $0 file, and saves result in 'script_dir' variable.", "cmd": "set script_dir = `pwd`/`dirname $0`"}, {"invocation": "Sort all files/directories under current directory according to modification time and print only the recent 7 of them", "cmd": "find -mindepth 1 -printf \"%T@ %P\\n\" | sort -n -r | cut -d' ' -f 2- | tail -n +7"}, {"invocation": "Create symlinks to all  /home/folder1/*.txt files with the same name in current directory", "cmd": "find /home/folder1/*.txt -type f -exec ln -s {} \\;"}, {"invocation": "Read lookup requests from text file '1.txt' and uses them to fetch TXT records.", "cmd": "dig TXT -f 1.txt"}, {"invocation": "Remove all files under /myfiles that were accessed more than 30 days ago", "cmd": "find /myfiles -atime +30 -exec rm {} \\;"}, {"invocation": "Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.", "cmd": "find . -name \"FILE-TO-FIND\" -exec rm -rf {} \\;"}, {"invocation": "Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"", "cmd": "find . -type f \\( -name \"*.shtml\" -o -name \"*.css\" \\) -print"}, {"invocation": "Change directory to parent directory and do not resolve any symlinks in the resulting path", "cmd": "cd -L .."}, {"invocation": "Remove the .jpg files from the current directory whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"", "cmd": "find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\" -exec rm -rf {} \\;"}, {"invocation": "Find all IP addresses in /etc directory files", "cmd": "find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}, {"invocation": "search for all files ending with \".mkv\" in current folder", "cmd": "find /volume1/uploads -name \"*.mkv\""}, {"invocation": "List all php files below current directory whose full pathname name does not include \"libs\", \"tmp\", \"tests\", or \"vendor\", sorted by number of lines, letting the user page interactively through the output.", "cmd": "find . -name '*.php' -print0 | xargs -0 wc -l | sort -nr | egrep -v \"libs|tmp|tests|vendor\" | less"}, {"invocation": "Find all directories under current directory", "cmd": "find . -type d"}, {"invocation": "Recursively change the owner to \"$USER\" and group to \"$GROUP\" of \"/var/log/cassandra\"", "cmd": "sudo chown -R  $USER:$GROUP /var/log/cassandra"}, {"invocation": "Execute \"du -s path\" every 300 seconds", "cmd": "watch -n 300 du -s path"}, {"invocation": "Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.", "cmd": "find . -type d -exec touch {}/index.html \\;"}, {"invocation": "Search for directories that contain the phrase \"foo\" but do not end in \".bar\"", "cmd": "find . -name '*foo*' ! -name '*.bar' -type d -print"}, {"invocation": "list files in the directory \"$directory\" with permissions \"$permissions\"", "cmd": "find \"$directory\" -perm \"$permissions\""}, {"invocation": "display all text files in the current folder", "cmd": "find . -type f -name \"*.txt\""}, {"invocation": "search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday", "cmd": "find /nas/projects/mgmt/scripts/perl -mtime 1 -daystart -iname \"*.pl\""}, {"invocation": "Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory", "cmd": "find /eserver6/share/system/config/cluster -name \"orm.properties\""}, {"invocation": "Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed", "cmd": "find . -name \"*.php\" -exec chmod 755 {} \\; -exec /bin/echo {} \\; | wc -l"}, {"invocation": "Connect to port 2222 of example.com as ssh user \"user\", and copy local file \"/absolute_path/source-folder/some-file\" to remote directory \"/absolute_path/destination-folder\"", "cmd": "scp -P 2222 /absolute_path/source-folder/some-file user@example.com:/absolute_path/destination-folder"}, {"invocation": "display all the files in the home folder which have read permission to the user", "cmd": "find /home -perm /u=r"}, {"invocation": "Read a single character from standard input into variable \"runCommand\" with the prompt \"Pick a letter to run a command [A, B, or C for more info] \"", "cmd": "read -n1 -p \"Pick a letter to run a command [A, B, or C for more info] \" runCommand"}, {"invocation": "create and list contents of the archive", "cmd": "tar cf - $PWD|tar tvf -"}, {"invocation": "Compress all files under current directory tree with gzip", "cmd": "find . -type f -print0 | xargs -0r gzip"}, {"invocation": "list all active jobs and its IDs", "cmd": "jobs -l"}, {"invocation": "Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*", "cmd": "find \"$root\" -name \".[a-z]*\" -prune -o -type d -printf '%p:'"}, {"invocation": "Calculate the md5sum of the executable file of command \"cc\"", "cmd": "md5sum $(which cc)"}, {"invocation": "move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link", "cmd": "find . -follow -iname '*.htm' -print0 | xargs -i -0 mv '{}' ~/webhome"}, {"invocation": "View gzip's help documentation", "cmd": "gzip --help | less"}, {"invocation": "Prints total number of lines of all *.c files in a current folder and subfolders.", "cmd": "find . -name '*.c' -print0 |xargs -0 wc -l|grep -v total|awk '{ sum += $1; } END { print \"SUM: \" sum; }'"}, {"invocation": "Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar", "cmd": "find . | grep \"FooBar\" | tr \\\\n \\\\0 | xargs -0 -I{} cp \"{}\" ~/foo/bar"}, {"invocation": "display all text files in the folder /tmp/1 excluding those which do not have spaces in their names", "cmd": "find /tmp/1 -iname '*.txt' -not -iname '[0-9A-Za-z]*.txt'"}, {"invocation": "list *.pdf, *.bmp and *.txt files under the /home/user/Desktop directory.", "cmd": "find /home/user/Desktop -name '*.pdf' -o -name '*.txt' -o -name '*.bmp'"}, {"invocation": "Find all *.old files and move them to directory oldfiles", "cmd": "find . -name \"*.old\" -exec mv {} oldfiles \\;"}, {"invocation": "Gets list of IP addresses of all network interfaces.", "cmd": "ifconfig | awk -F\"[ :]+\" '/inet addr/ && !/127.0/ {print $4}'"}, {"invocation": "Find all files/directories under current directory tree", "cmd": "find | xargs"}, {"invocation": "Set permissions of all directories under \"/opt/lampp/htdocs\" to 755", "cmd": "find /opt/lampp/htdocs -type d -exec chmod 755 {} \\;"}, {"invocation": "Find all *.rb files/directories under current directory", "cmd": "find . -name \"*.rb\""}, {"invocation": "Find all files/directoires that were modified more than 3 days ago under $dir directory tree", "cmd": "find $dir -mtime +3"}, {"invocation": "Find all hard links to file /path/to/file that exist under the current directory tree", "cmd": "find . -samefile /path/to/file"}, {"invocation": "Print only the number of lines in file \"$f\"", "cmd": "wc -l $f | tr -s ' ' | cut -d ' ' -f 1"}, {"invocation": "Save the directory name of the canonical path to the current script in variable \"MY_DIR\"", "cmd": "MY_DIR=$(dirname $(readlink -f $0))"}, {"invocation": "Search directory /path/to/check/ for regular files", "cmd": "find /path/to/check/* -maxdepth 0 -type f"}, {"invocation": "find all the text files in the current folder and display their Permissions and size along with their name", "cmd": "find . -name \"*.txt\" -printf \"%M %f \\t %s bytes \\t%y\\n\""}, {"invocation": "Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\\*\\.html'", "cmd": "find . -regex filename-regex.\\*\\.html"}, {"invocation": "Search the /Path directory tree for files matching pattern \"file_name*\" and containing \"bar\" in their pathnames", "cmd": "find /Path -name \"file_name*\" | grep \"bar\""}, {"invocation": "Find all regular files that reside in the current directory tree and were last modified more than 5 days ago", "cmd": "find . -type f -mtime +5"}, {"invocation": "Remove empty directories", "cmd": "find -type d -exec rmdir --ignore-fail-on-non-empty {} + ;"}, {"invocation": "Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\\*\\.html' in their paths and show the matched lines along with the filenames", "cmd": "find . -regex filename-regex.\\*\\.html -exec grep -H string-to-find {} \\;"}, {"invocation": "Print yesterday's date information in \"%a %d/%m/%Y\" format", "cmd": "date -d \"-1 days\" +\"%a %d/%m/%Y\""}, {"invocation": "Display standard input as a table with \"${tab}\" separators", "cmd": "column -s\"${tab}\" -t"}, {"invocation": "Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days", "cmd": "find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -execdir echo \"It seems that {} wasn't modified during last 30 days\" ';'"}, {"invocation": "change the permissions of all the normal files in a directory", "cmd": "find /path/to/dir/ -type f -print0 | xargs -0 chmod 644"}, {"invocation": "Find recursively the latest modified file in the current directory", "cmd": "find . -type f | sed 's/.*/\"&\"/' | xargs ls -E | awk '{ print $6,\" \",$7,\" \",$9 }' | sort | tail -1"}, {"invocation": "search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.", "cmd": "find / -type f -exec grep -i 'the brown dog' {} +;"}, {"invocation": "Create a symbolic link in the current directory for each hidden file or directory in \"git-stuff/home/\" excluding \".\" and \"..\"", "cmd": "ln -s git-stuff/home/.[!.]* ."}, {"invocation": "create a tar of all png & jpg images in the current folder", "cmd": "find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}, {"invocation": "display all the empty files in the folder /opt (file size 0 bytes)", "cmd": "find /opt -type f -empty"}, {"invocation": "Print file size with the file name", "cmd": "find . -name '*.ear' -exec du -h {} \\;"}, {"invocation": "find all the backup files in the current folder and delete them", "cmd": "find . -type f -name \u201cFILE-TO-FIND\u201d -delete;"}, {"invocation": "Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days", "cmd": "find . -type f -mtime -7 -print -exec cat {} \\; | tar cf - | gzip -9"}, {"invocation": "Count total number of lines in all *.txt file in cuuent directory .", "cmd": "find .  -type f  -name '*.txt' -exec wc -l {} \\; | awk '{total += $1} END{print total}'"}, {"invocation": "display the list of all the normal files excluding hidden files which have been accessed in the last 500 days", "cmd": "find . -type f -not -name \u2018.*\u2019 -mtime +500 -exec ls {} \\;"}, {"invocation": "Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.", "cmd": "$ ls -Fltr *"}, {"invocation": "Find all files named \"something\" in the current folder and below and run them through the ls -l command in a one batch.", "cmd": "find . -name something | xargs -0 ls"}, {"invocation": "Find all files/directories under current directory in maximum 3 levels deep", "cmd": "find -maxdepth 3"}, {"invocation": "Create a symbolic link named \"/usr/bin/my-editor\" to \"/usr/share/my-editor/my-editor-executable\" and attemp to hard link directories", "cmd": "ln -sF /usr/share/my-editor/my-editor-executable   /usr/bin/my-editor"}, {"invocation": "find files in /u/bill directory which are access an 2 to 6 minutes ago", "cmd": "find /u/bill -amin +2 -amin -6"}, {"invocation": "Find all directories under /home/me/target_dir_1", "cmd": "find /home/me/target_dir_1 -type d"}, {"invocation": "Do not mark variables and function which are modified or created for export to the environment of subsequent commands", "cmd": "set +a"}, {"invocation": "find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.", "cmd": "find . -mtime 4 -daystart -exec cp -a {} /home/devnet/fileshare\\$ on\\ X.X.X.X/RECOVER/ \\;"}, {"invocation": "Return all of the .conf files in Pat's user folder and subdirectories", "cmd": "find /home/pat -iname \"*.conf\""}, {"invocation": "Find regular files in the current directory tree that have the user executable bit set", "cmd": "find . -type f -perm -u=x"}, {"invocation": "Print the list of all regular files on the system using \"echo\"", "cmd": "find / -type f -exec echo {} \\;"}, {"invocation": "Decompress \"file2.txt\" and \"file1.txt\" and print lines in \"file1.txt\" that match the 5th tab separated field in \"file2.txt\"", "cmd": "awk -F'\\t' 'NR==FNR{a[$5];next} $5 in a' <(zcat file2.txt) <(zcat file1.txt)"}, {"invocation": "Extract any line in \"file1.txt\" which does not appear as the first \";\" delimited entry in \"file2.txt\"", "cmd": "comm -23 <(sort file1.txt) <(grep -o '^[^;]*' file2.txt | sort)"}, {"invocation": "Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'", "cmd": "find . -not -path \"*git*\" -not -name '*git*' |grep git"}, {"invocation": "Delete files containing whitespaces without recursion", "cmd": "find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}, {"invocation": "List all files that are between 10000 and 32000 bytes in size", "cmd": "find . -size +10000c -size -32000c -print"}, {"invocation": "Split \"$1\" into files of at most \"$2\" or default 10000 using a numeric suffix of length 6", "cmd": "split -l ${2:-10000} -d -a 6 \"$1\""}, {"invocation": "locate large files (> 100 MB) in /home/ for 'cleaning'", "cmd": "find /home -type f -size +100M -delete"}, {"invocation": "Find all *.mp4 files under /foo/bar and move them to /some/path", "cmd": "find /foo/bar -name '*.mp4' -print0 | xargs -I{} -0 mv -t /some/path {}"}, {"invocation": "Print command with PID 11383", "cmd": "ps | egrep 11383 | tr -s ' ' | cut -d ' ' -f 4"}, {"invocation": "list regular file which file name end with '*.c' or '*.sh' in current directory", "cmd": "find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}, {"invocation": "Calculate the md5 sum of all files in the current directory with the filename printed first", "cmd": "ls -p | grep -v / | xargs md5sum | awk '{print $2,$1}'"}, {"invocation": "Find all files in current directory excluding hidden files and put the output into full_backup_dir variable", "cmd": "full_backup_dir=$(find . -depth '(' -wholename './.*' ')' -prune -o -print)"}, {"invocation": "Copy '/path/to/source' from remote \"username@computer\" to local \"/path/to/dest\"", "cmd": "rsync -r username@computer:/path/to/source /path/to/dest"}, {"invocation": "Mount \"/windows\" using /etc/fstab entry", "cmd": "mount /windows"}, {"invocation": "find files in $HOME ending in \"txt\" or \"html\" and case insensitive search for the word \"vpn\"", "cmd": "find $HOME \\( -name \\*txt -o -name \\*html \\) -print0 | xargs -0 grep -li vpn"}, {"invocation": "Setup a local SSH tunnel from port 1234 to \"remote2\" port 22 via connection to \"remote1\" as \"user1\" on port 45678", "cmd": "ssh -L 1234:remote2:22 -p 45678 user1@remote1"}, {"invocation": "Delete the files under the current working directory with inode numbers specified on standard input", "cmd": "xargs -n 1 -I '{}' find \"$(pwd)\" -type f -inum '{}' -delete"}, {"invocation": "list all the files in the current directory which are of size 0 bytes.", "cmd": "find . -empty"}, {"invocation": "Find all files which  begin with 'a' or 'b' from current directory downwards and print them.", "cmd": "find . -name [ab]* -print"}, {"invocation": "List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest", "cmd": "du -h --max-depth=0 * | sort -hr"}, {"invocation": "Print a count of each unique line from standard input sorted from least frequent to most frequent", "cmd": "sort | uniq -c | sort -n"}, {"invocation": "Search the ./bin directory recursively for files called \"cp\"", "cmd": "find ./bin -name \u201ccp\u201d"}, {"invocation": "Find all files/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages", "cmd": "find . -name \"openssl\" | sed '/Permission denied/d;'"}, {"invocation": "Reads content of bzip2 compressed files and processes it with awk utility.", "cmd": "bzip2 -dc input1.vcf.bz2 input2.vcf.bz2 | awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }'"}, {"invocation": "Recursively removes all files like '*.pyc' in a current folder.", "cmd": "find . -name \"*.pyc\" -exec rm -rf {} \\;"}, {"invocation": "change the permission of all the directories to 755 in the current folder", "cmd": "find -type d -exec chmod 755 {} \\;"}, {"invocation": "Force the group stickiness for directories under /var/www", "cmd": "find /var/www -type d -print0 | xargs -0 chmod g+s"}, {"invocation": "Find files that have been modified within the last month and copy them somewhere", "cmd": "find /etc/ -mtime -30 | xargs -0 cp /a/path"}, {"invocation": "Find files with SGID (2000) and SUID(4000) permssions set in the file system", "cmd": "find /  \\( -perm -2000 -o -perm -4000 \\) -ls"}, {"invocation": "Compare \"current.log\" and \"previous.log\" line by line and print lines containing regex pattern \">\\|<\"", "cmd": "diff current.log previous.log | grep \">\\|<\" #comparring users lists"}, {"invocation": "Delete files with inode number specified by [inode-number] under current directory", "cmd": "find . -inum [inode-number] -exec rm -i {} \\;"}, {"invocation": "Find all CSS files", "cmd": "find . -name \"*.css\""}, {"invocation": "Split \"file\" into 10 files of about equal size without splitting lines", "cmd": "split -n l/10 file"}, {"invocation": "Prints process tree of a current process with parents processes and id numbers.", "cmd": "pstree --show-parents -p $$ | head -n 1 | sed 's/\\(.*\\)+.*/\\1/' | less"}, {"invocation": "Find all 2*.data files/directories under jcho directory", "cmd": "find jcho -name 2*.data"}, {"invocation": "Remove everything in a current folder without prompting.", "cmd": "rm -rf *"}, {"invocation": "Find all the Sticky Bit set files whose permission are 551", "cmd": "find / -perm 1551"}, {"invocation": "List all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"", "cmd": "find . -name FOLDER1 -prune -o -name filename -print"}, {"invocation": "Print IP addresses of the host name", "cmd": "hostname -I | cut -d' ' -f1"}, {"invocation": "Save a line of 100 random characters either \".\" or \" \" in variable \"foo\"", "cmd": "foo=$(cat /dev/urandom | tr -dc '. ' | fold -w 100 | head -1)"}, {"invocation": "long list al the files in the current directory which have all the permissions", "cmd": "find . -perm 777 -type f -exec ls -l {} \\;"}, {"invocation": "List all paths to files or directories under \"/data/\" that start with \"command-\" and end with \"-setup\", sort the result by the version number specified between \"command-\" and \"-setup\" (least to greatest)", "cmd": "find /data/ -name 'command-*-setup' | sort -t - -V -k 2,2"}, {"invocation": "Search for files/directories which are writable by somebody (their owner, or their group, or anybody else)", "cmd": "find . -perm /222"}, {"invocation": "Find recursively all Emacs backup files in the current directory and remove them", "cmd": "find . -name '*~' | xargs rm"}, {"invocation": "change the ownership of all regular/normal files in the current directory after users confirmation", "cmd": "find . -type f -ok chown username {} \\;"}, {"invocation": "Get the disk space used by all *.txt (case insensitive) files under /home/d directory", "cmd": "find /home/d -type f -name \"*.txt\" -printf \"%s\\n\" | awk '{s+=$0}END{print \"total: \"s\" bytes\"}'"}, {"invocation": "For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv", "cmd": "join -o 1.1,1.2,1.3,1.4 -t, <(sort file1.csv) <(sort file2.txt)"}, {"invocation": "Search the file system for regular files whose names are shorter than 25 characters", "cmd": "find / -type f|egrep \"/[^/]{0,24}$\""}, {"invocation": "Find all files/directories under current directory tree that belong to the user 'tom'", "cmd": "find ./ -user tom"}, {"invocation": "change the permissions of mp3 files in the folder /var/ftp/mp3 to 644", "cmd": "find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \\;"}, {"invocation": "Display the total count of all the files/directories with '.old' extension under current directory tree", "cmd": "find . -name \u201c*.old\u201d -print | wc -l"}, {"invocation": "Reverse the order of lines in \"dax-weekly.csv\" keeping the first line the same", "cmd": "cat dax-weekly.csv | awk '1 { last = NR; line[last] = $0; } END { print line[1]; for (i = last; i > 1; i--) { print line[i]; } }'"}, {"invocation": "Time stamp every ping request to 8.8.8.8 in Unix epoch format", "cmd": "ping -D -n -O -i1 -W1 8.8.8.8"}, {"invocation": "Print the full path prefix for all files in the current directory tree as a list", "cmd": "tree -fi"}, {"invocation": "search for a word in all the files in the entire filesystem and display the matched fline along with the file name", "cmd": "find / -type f -exec grep -Hi 'the brown dog' {} +"}, {"invocation": "Output all lines from file1 except those present in file2, assuming both files are sorted.", "cmd": "diff file2 file1 | grep '^>' | sed 's/^>\\ //'"}, {"invocation": "search for a shell script in the current folder and display the current folder path but search from the sub directories", "cmd": "find . -name onlyme.sh -execdir pwd \\;"}, {"invocation": "Find all directories with space in their names under current directory and rename them by replacing all spaces with _", "cmd": "find -name \"* *\" -type d | rename 's/ /_/g'"}, {"invocation": "Find all directories under dir whose names are 33 characters long", "cmd": "find dir -name '?????????????????????????????????'"}, {"invocation": "Print the last 10 lines of '/var/log/syslog', printing out any additional data appended to the file", "cmd": "tail -f /var/log/syslog"}, {"invocation": "Find all ES* and FS_* files under current directory", "cmd": "find . -type f \\( -iname \"ES*\" -o -iname \"FS_*\" \\)"}, {"invocation": "List the current directory recursively ignoring the \"dir1\" subdirectory", "cmd": "find . -path ./dir1\\*  -prune -o -print"}, {"invocation": "find any files or directories called \".svn\" under the current directory and run a recursive delete (without prompting) command on each one.", "cmd": "find . -iname .svn -exec bash -c 'rm -rf {}' \\;"}]